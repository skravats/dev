// ethernet_altera_avalon_st_adapter_181_zifr75q.v

// This file was auto-generated from altera_avalon_st_adapter_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 18.1.2 277

`timescale 1 ps / 1 ps
module ethernet_altera_avalon_st_adapter_181_zifr75q #(
		parameter inBitsPerSymbol = 8,
		parameter inUsePackets    = 1,
		parameter inDataWidth     = 256,
		parameter inChannelWidth  = 8,
		parameter inErrorWidth    = 8,
		parameter inUseEmptyPort  = 1,
		parameter inUseValid      = 1,
		parameter inUseReady      = 1,
		parameter inReadyLatency  = 0,
		parameter outDataWidth    = 32,
		parameter outChannelWidth = 0,
		parameter outErrorWidth   = 1,
		parameter outUseEmptyPort = 1,
		parameter outUseValid     = 1,
		parameter outUseReady     = 1,
		parameter outReadyLatency = 0
	) (
		input  wire         in_clk_0_clk,        // in_clk_0.clk
		input  wire         in_rst_0_reset,      // in_rst_0.reset
		input  wire [255:0] in_0_data,           //     in_0.data
		input  wire         in_0_valid,          //         .valid
		output wire         in_0_ready,          //         .ready
		input  wire         in_0_startofpacket,  //         .startofpacket
		input  wire         in_0_endofpacket,    //         .endofpacket
		input  wire [4:0]   in_0_empty,          //         .empty
		input  wire [7:0]   in_0_error,          //         .error
		input  wire [7:0]   in_0_channel,        //         .channel
		output wire [31:0]  out_0_data,          //    out_0.data
		output wire         out_0_valid,         //         .valid
		input  wire         out_0_ready,         //         .ready
		output wire         out_0_startofpacket, //         .startofpacket
		output wire         out_0_endofpacket,   //         .endofpacket
		output wire [1:0]   out_0_empty,         //         .empty
		output wire [0:0]   out_0_error          //         .error
	);

	wire         data_format_adapter_0_out_valid;         // data_format_adapter_0:out_valid -> channel_adapter_0:in_valid
	wire  [31:0] data_format_adapter_0_out_data;          // data_format_adapter_0:out_data -> channel_adapter_0:in_data
	wire         data_format_adapter_0_out_ready;         // channel_adapter_0:in_ready -> data_format_adapter_0:out_ready
	wire   [7:0] data_format_adapter_0_out_channel;       // data_format_adapter_0:out_channel -> channel_adapter_0:in_channel
	wire         data_format_adapter_0_out_startofpacket; // data_format_adapter_0:out_startofpacket -> channel_adapter_0:in_startofpacket
	wire         data_format_adapter_0_out_endofpacket;   // data_format_adapter_0:out_endofpacket -> channel_adapter_0:in_endofpacket
	wire   [7:0] data_format_adapter_0_out_error;         // data_format_adapter_0:out_error -> channel_adapter_0:in_error
	wire   [1:0] data_format_adapter_0_out_empty;         // data_format_adapter_0:out_empty -> channel_adapter_0:in_empty
	wire         channel_adapter_0_out_valid;             // channel_adapter_0:out_valid -> error_adapter_0:in_valid
	wire  [31:0] channel_adapter_0_out_data;              // channel_adapter_0:out_data -> error_adapter_0:in_data
	wire         channel_adapter_0_out_ready;             // error_adapter_0:in_ready -> channel_adapter_0:out_ready
	wire         channel_adapter_0_out_startofpacket;     // channel_adapter_0:out_startofpacket -> error_adapter_0:in_startofpacket
	wire         channel_adapter_0_out_endofpacket;       // channel_adapter_0:out_endofpacket -> error_adapter_0:in_endofpacket
	wire   [7:0] channel_adapter_0_out_error;             // channel_adapter_0:out_error -> error_adapter_0:in_error
	wire   [1:0] channel_adapter_0_out_empty;             // channel_adapter_0:out_empty -> error_adapter_0:in_empty

	generate
		// If any of the display statements (or deliberately broken
		// instantiations) within this generate block triggers then this module
		// has been instantiated this module with a set of parameters different
		// from those it was generated for.  This will usually result in a
		// non-functioning system.
		if (inBitsPerSymbol != 8)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					inbitspersymbol_check ( .error(1'b1) );
		end
		if (inUsePackets != 1)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					inusepackets_check ( .error(1'b1) );
		end
		if (inDataWidth != 256)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					indatawidth_check ( .error(1'b1) );
		end
		if (inChannelWidth != 8)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					inchannelwidth_check ( .error(1'b1) );
		end
		if (inErrorWidth != 8)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					inerrorwidth_check ( .error(1'b1) );
		end
		if (inUseEmptyPort != 1)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					inuseemptyport_check ( .error(1'b1) );
		end
		if (inUseValid != 1)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					inusevalid_check ( .error(1'b1) );
		end
		if (inUseReady != 1)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					inuseready_check ( .error(1'b1) );
		end
		if (inReadyLatency != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					inreadylatency_check ( .error(1'b1) );
		end
		if (outDataWidth != 32)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					outdatawidth_check ( .error(1'b1) );
		end
		if (outChannelWidth != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					outchannelwidth_check ( .error(1'b1) );
		end
		if (outErrorWidth != 1)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					outerrorwidth_check ( .error(1'b1) );
		end
		if (outUseEmptyPort != 1)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					outuseemptyport_check ( .error(1'b1) );
		end
		if (outUseValid != 1)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					outusevalid_check ( .error(1'b1) );
		end
		if (outUseReady != 1)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					outuseready_check ( .error(1'b1) );
		end
		if (outReadyLatency != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					outreadylatency_check ( .error(1'b1) );
		end
	endgenerate

	ethernet_data_format_adapter_181_jumd7li data_format_adapter_0 (
		.clk               (in_clk_0_clk),                            //   input,    width = 1,   clk.clk
		.reset_n           (~in_rst_0_reset),                         //   input,    width = 1, reset.reset_n
		.in_data           (in_0_data),                               //   input,  width = 256,    in.data
		.in_valid          (in_0_valid),                              //   input,    width = 1,      .valid
		.in_ready          (in_0_ready),                              //  output,    width = 1,      .ready
		.in_startofpacket  (in_0_startofpacket),                      //   input,    width = 1,      .startofpacket
		.in_endofpacket    (in_0_endofpacket),                        //   input,    width = 1,      .endofpacket
		.in_empty          (in_0_empty),                              //   input,    width = 5,      .empty
		.in_error          (in_0_error),                              //   input,    width = 8,      .error
		.in_channel        (in_0_channel),                            //   input,    width = 8,      .channel
		.out_data          (data_format_adapter_0_out_data),          //  output,   width = 32,   out.data
		.out_valid         (data_format_adapter_0_out_valid),         //  output,    width = 1,      .valid
		.out_ready         (data_format_adapter_0_out_ready),         //   input,    width = 1,      .ready
		.out_startofpacket (data_format_adapter_0_out_startofpacket), //  output,    width = 1,      .startofpacket
		.out_endofpacket   (data_format_adapter_0_out_endofpacket),   //  output,    width = 1,      .endofpacket
		.out_empty         (data_format_adapter_0_out_empty),         //  output,    width = 2,      .empty
		.out_error         (data_format_adapter_0_out_error),         //  output,    width = 8,      .error
		.out_channel       (data_format_adapter_0_out_channel)        //  output,    width = 8,      .channel
	);

	ethernet_channel_adapter_181_vzs3cmy channel_adapter_0 (
		.clk               (in_clk_0_clk),                            //   input,   width = 1,   clk.clk
		.reset_n           (~in_rst_0_reset),                         //   input,   width = 1, reset.reset_n
		.in_data           (data_format_adapter_0_out_data),          //   input,  width = 32,    in.data
		.in_valid          (data_format_adapter_0_out_valid),         //   input,   width = 1,      .valid
		.in_ready          (data_format_adapter_0_out_ready),         //  output,   width = 1,      .ready
		.in_startofpacket  (data_format_adapter_0_out_startofpacket), //   input,   width = 1,      .startofpacket
		.in_endofpacket    (data_format_adapter_0_out_endofpacket),   //   input,   width = 1,      .endofpacket
		.in_empty          (data_format_adapter_0_out_empty),         //   input,   width = 2,      .empty
		.in_error          (data_format_adapter_0_out_error),         //   input,   width = 8,      .error
		.in_channel        (data_format_adapter_0_out_channel),       //   input,   width = 8,      .channel
		.out_data          (channel_adapter_0_out_data),              //  output,  width = 32,   out.data
		.out_valid         (channel_adapter_0_out_valid),             //  output,   width = 1,      .valid
		.out_ready         (channel_adapter_0_out_ready),             //   input,   width = 1,      .ready
		.out_startofpacket (channel_adapter_0_out_startofpacket),     //  output,   width = 1,      .startofpacket
		.out_endofpacket   (channel_adapter_0_out_endofpacket),       //  output,   width = 1,      .endofpacket
		.out_empty         (channel_adapter_0_out_empty),             //  output,   width = 2,      .empty
		.out_error         (channel_adapter_0_out_error)              //  output,   width = 8,      .error
	);

	ethernet_error_adapter_181_bvz7ctq error_adapter_0 (
		.clk               (in_clk_0_clk),                        //   input,   width = 1,   clk.clk
		.reset_n           (~in_rst_0_reset),                     //   input,   width = 1, reset.reset_n
		.in_data           (channel_adapter_0_out_data),          //   input,  width = 32,    in.data
		.in_valid          (channel_adapter_0_out_valid),         //   input,   width = 1,      .valid
		.in_ready          (channel_adapter_0_out_ready),         //  output,   width = 1,      .ready
		.in_startofpacket  (channel_adapter_0_out_startofpacket), //   input,   width = 1,      .startofpacket
		.in_endofpacket    (channel_adapter_0_out_endofpacket),   //   input,   width = 1,      .endofpacket
		.in_empty          (channel_adapter_0_out_empty),         //   input,   width = 2,      .empty
		.in_error          (channel_adapter_0_out_error),         //   input,   width = 8,      .error
		.out_data          (out_0_data),                          //  output,  width = 32,   out.data
		.out_valid         (out_0_valid),                         //  output,   width = 1,      .valid
		.out_ready         (out_0_ready),                         //   input,   width = 1,      .ready
		.out_startofpacket (out_0_startofpacket),                 //  output,   width = 1,      .startofpacket
		.out_endofpacket   (out_0_endofpacket),                   //  output,   width = 1,      .endofpacket
		.out_empty         (out_0_empty),                         //  output,   width = 2,      .empty
		.out_error         (out_0_error)                          //  output,   width = 1,      .error
	);

endmodule
