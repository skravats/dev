	interlaken_phy_xcvr_data_flow_controller_0 u0 (
		.csr_s0_address           (_connected_to_csr_s0_address_),           //   input,   width = 8,                   csr_s0.address
		.csr_s0_read              (_connected_to_csr_s0_read_),              //   input,   width = 1,                         .read
		.csr_s0_readdata          (_connected_to_csr_s0_readdata_),          //  output,  width = 32,                         .readdata
		.csr_s0_readdatavalid     (_connected_to_csr_s0_readdatavalid_),     //  output,   width = 1,                         .readdatavalid
		.csr_s0_write             (_connected_to_csr_s0_write_),             //   input,   width = 1,                         .write
		.csr_s0_writedata         (_connected_to_csr_s0_writedata_),         //   input,  width = 32,                         .writedata
		.csr_s0_waitrequest       (_connected_to_csr_s0_waitrequest_),       //  output,   width = 1,                         .waitrequest
		.rx_parallel_data         (_connected_to_rx_parallel_data_),         //   input,  width = 64,         rx_parallel_data.rx_parallel_data
		.tx_parallel_data         (_connected_to_tx_parallel_data_),         //  output,  width = 64,         tx_parallel_data.tx_parallel_data
		.rx_enh_fifo_full         (_connected_to_rx_enh_fifo_full_),         //   input,   width = 1,         rx_enh_fifo_full.rx_enh_fifo_full
		.rx_enh_fifo_pfull        (_connected_to_rx_enh_fifo_pfull_),        //   input,   width = 1,        rx_enh_fifo_pfull.rx_enh_fifo_pfull
		.rx_enh_fifo_empty        (_connected_to_rx_enh_fifo_empty_),        //   input,   width = 1,        rx_enh_fifo_empty.rx_enh_fifo_empty
		.rx_enh_fifo_pempty       (_connected_to_rx_enh_fifo_pempty_),       //   input,   width = 1,       rx_enh_fifo_pempty.rx_enh_fifo_pempty
		.tx_enh_fifo_pempty       (_connected_to_tx_enh_fifo_pempty_),       //   input,   width = 1,       tx_enh_fifo_pempty.tx_enh_fifo_pempty
		.tx_enh_fifo_empty        (_connected_to_tx_enh_fifo_empty_),        //   input,   width = 1,        tx_enh_fifo_empty.tx_enh_fifo_empty
		.tx_enh_fifo_pfull        (_connected_to_tx_enh_fifo_pfull_),        //   input,   width = 1,        tx_enh_fifo_pfull.tx_enh_fifo_pfull
		.tx_enh_fifo_full         (_connected_to_tx_enh_fifo_full_),         //   input,   width = 1,         tx_enh_fifo_full.tx_enh_fifo_full
		.avm_m0_address           (_connected_to_avm_m0_address_),           //  output,  width = 32,                   avm_m0.address
		.avm_m0_read              (_connected_to_avm_m0_read_),              //  output,   width = 1,                         .read
		.avm_m0_waitrequest       (_connected_to_avm_m0_waitrequest_),       //   input,   width = 1,                         .waitrequest
		.avm_m0_readdata          (_connected_to_avm_m0_readdata_),          //   input,  width = 32,                         .readdata
		.avm_m0_readdatavalid     (_connected_to_avm_m0_readdatavalid_),     //   input,   width = 1,                         .readdatavalid
		.avm_m0_write             (_connected_to_avm_m0_write_),             //  output,   width = 1,                         .write
		.avm_m0_writedata         (_connected_to_avm_m0_writedata_),         //  output,  width = 32,                         .writedata
		.tx_control               (_connected_to_tx_control_),               //  output,   width = 3,               tx_control.tx_control
		.rx_control               (_connected_to_rx_control_),               //   input,  width = 10,               rx_control.rx_control
		.reset                    (_connected_to_reset_),                    //   input,   width = 1,                      rst.reset
		.clock                    (_connected_to_clock_),                    //   input,   width = 1,                      clk.clk
		.tx_ready                 (_connected_to_tx_ready_),                 //   input,   width = 1,                 tx_ready.tx_ready
		.rx_ready                 (_connected_to_rx_ready_),                 //   input,   width = 1,                 rx_ready.rx_ready
		.rx_irq                   (_connected_to_rx_irq_),                   //  output,   width = 1,                   irq_rx.irq
		.tx_enh_data_valid        (_connected_to_tx_enh_data_valid_),        //  output,   width = 1,        tx_enh_data_valid.tx_enh_data_valid
		.tx_irq                   (_connected_to_tx_irq_),                   //  output,   width = 1,                   irq_tx.irq
		.tx_coreclkin             (_connected_to_tx_coreclkin_),             //   input,   width = 1,             tx_coreclkin.clk
		.rx_coreclkin             (_connected_to_rx_coreclkin_),             //   input,   width = 1,             rx_coreclkin.clk
		.rx_enh_fifo_rd_en        (_connected_to_rx_enh_fifo_rd_en_),        //  output,   width = 1,        rx_enh_fifo_rd_en.rx_enh_fifo_rd_en
		.tx_err_ins               (_connected_to_tx_err_ins_),               //  output,   width = 1,               tx_err_ins.tx_err_ins
		.reset_phy                (_connected_to_reset_phy_),                //  output,   width = 1,                reset_phy.reset
		.pll_locked_out           (_connected_to_pll_locked_out_),           //  output,   width = 1,           pll_locked_out.pll_locked
		.pll_powerdown_input      (_connected_to_pll_powerdown_input_),      //   input,   width = 1,      pll_powerdown_input.pll_powerdown
		.atx_pll_powerdown        (_connected_to_atx_pll_powerdown_),        //  output,   width = 1,        atx_pll_powerdown.pll_powerdown
		.atx_pll_locked           (_connected_to_atx_pll_locked_),           //   input,   width = 1,           atx_pll_locked.pll_locked
		.rx_set_locktodata        (_connected_to_rx_set_locktodata_),        //  output,   width = 1,        rx_set_locktodata.rx_set_locktodata
		.rx_set_locktoref         (_connected_to_rx_set_locktoref_),         //  output,   width = 1,         rx_set_locktoref.rx_set_locktoref
		.tx_enh_frame_burst_en    (_connected_to_tx_enh_frame_burst_en_),    //  output,   width = 1,    tx_enh_frame_burst_en.tx_enh_frame_burst_en
		.tx_enh_frame_diag_status (_connected_to_tx_enh_frame_diag_status_), //  output,   width = 2, tx_enh_frame_diag_status.tx_enh_frame_diag_status
		.unused_tx_control        (_connected_to_unused_tx_control_),        //  output,  width = 14,        unused_tx_control.unused_tx_control
		.unused_tx_parallel_data  (_connected_to_unused_tx_parallel_data_),  //  output,  width = 64,  unused_tx_parallel_data.unused_tx_parallel_data
		.rx_seriallpbken          (_connected_to_rx_seriallpbken_),          //  output,   width = 1,          rx_seriallpbken.rx_seriallpbken
		.pll_select               (_connected_to_pll_select_),               //  output,   width = 1,               pll_select.pll_select
		.rx_enh_frame_diag_status (_connected_to_rx_enh_frame_diag_status_)  //   input,   width = 2, rx_enh_frame_diag_status.rx_enh_frame_diag_status
	);

