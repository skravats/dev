<?xml version="1.0"?>
<device xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.0" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_0.xsd">
<name>i2c</name>
<peripherals>
<peripheral>
      <baseAddress>0x00000000</baseAddress>
      <name>i2c_csr_altera_avalon_i2c</name>
      <description>altera_avalon_i2c</description>
      <registers>
        <register>
          <access>write-only</access>
          <addressOffset>0x0</addressOffset>
          <description>Transfer command FIFO</description>
          <displayName>tfr_cmd</displayName>
          <name>tfr_cmd</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>write-only</access>
              <bitRange>[0:0]</bitRange>
              <description>When transfer is in address phase, this field is used to specify the direction of I2C transfer.</description>
              <name>rw_d</name>
            </field>
            <field>
              <access>write-only</access>
              <bitRange>[7:1]</bitRange>
              <description>When in address phase, these fields act as address bits</description>
              <name>ad</name>
            </field>
            <field>
              <access>write-only</access>
              <bitRange>[8:8]</bitRange>
              <description>Requests a STOP condition to be generated afer current byte transfer</description>
              <name>sto</name>
            </field>
            <field>
              <access>write-only</access>
              <bitRange>[9:9]</bitRange>
              <description>Requests a repeated START condition to be generated before current byte transfer</description>
              <name>sta</name>
            </field>
          </fields>
        </register>
        <register>
          <access>read-only</access>
          <addressOffset>0x1</addressOffset>
          <description>Receive data FIFO</description>
          <displayName>rx_data</displayName>
          <name>rx_data</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>read-only</access>
              <bitRange>[7:0]</bitRange>
              <description>Byte received from I2C transfer</description>
              <name>rx_data</name>
            </field>
          </fields>
        </register>
        <register>
          <access>read-write</access>
          <addressOffset>0x2</addressOffset>
          <description>Control register</description>
          <displayName>ctrl</displayName>
          <name>ctrl</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
        </register>
        <register>
          <access>read-write</access>
          <addressOffset>0x3</addressOffset>
          <description>Interrupt status enable register</description>
          <displayName>iser</displayName>
          <name>iser</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>read-write</access>
              <bitRange>[0:0]</bitRange>
              <description>Enable interrupt for TX_READY condition</description>
              <name>tx_ready_en</name>
            </field>
            <field>
              <access>read-write</access>
              <bitRange>[1:1]</bitRange>
              <description>Enable interrupt for RX_READY condition</description>
              <name>rx_ready_en</name>
            </field>
            <field>
              <access>read-write</access>
              <bitRange>[2:2]</bitRange>
              <description>Enable interrupt for NACK_DET condition</description>
              <name>nack_det_en</name>
            </field>
            <field>
              <access>read-write</access>
              <bitRange>[3:3]</bitRange>
              <description>Enable interrupt for ARBLOST_DET condition</description>
              <name>arblost_det_en</name>
            </field>
            <field>
              <access>read-write</access>
              <bitRange>[4:4]</bitRange>
              <description>Enable interrupt for RX_OVER condition</description>
              <name>rx_over_en</name>
            </field>
          </fields>
        </register>
        <register>
          <access>read-write</access>
          <addressOffset>0x4</addressOffset>
          <description>Interrupt status register</description>
          <displayName>isr</displayName>
          <name>isr</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>read-only</access>
              <bitRange>[0:0]</bitRange>
              <description>Indicates transfer command FIFO is ready for data transmission. This bit is asserted when transfer command FIFO level is equal or less than TFR_CMD FIFO threshold.</description>
              <name>tx_ready</name>
            </field>
            <field>
              <access>read-only</access>
              <bitRange>[1:1]</bitRange>
              <description>Indicates receive data FIFO contains data sent by the remote I2C device. This bit is asserted when RX_DATA FIFO level is equal or more than RX_DATA FIFO threshold.</description>
              <name>rx_ready </name>
            </field>
            <field>
              <access>read-writeOnce</access>
              <bitRange>[2:2]</bitRange>
              <description>Indicates NACK is received by the core</description>
              <name>nack_det</name>
            </field>
            <field>
              <access>read-writeOnce</access>
              <bitRange>[3:3]</bitRange>
              <description>Indicates core has lost the bus arbitration</description>
              <name>arblost_det</name>
            </field>
            <field>
              <access>read-writeOnce</access>
              <bitRange>[4:4]</bitRange>
              <description>Indicates receive data FIFO has overrun condition, new data is lost</description>
              <name>rx_over</name>
            </field>
          </fields>
        </register>
        <register>
          <access>read-only</access>
          <addressOffset>0x5</addressOffset>
          <description>Status register</description>
          <displayName>status</displayName>
          <name>status</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>read-only</access>
              <bitRange>[0:0]</bitRange>
              <description>Status of the core's state machine</description>
              <name>core_status</name>
            </field>
          </fields>
        </register>
        <register>
          <access>read-only</access>
          <addressOffset>0x6</addressOffset>
          <description>TFR_CMD FIFO level register</description>
          <displayName>tfr_cmd_fifo_lvl</displayName>
          <name>tfr_cmd_fifo_lvl</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>read-only</access>
              <bitRange>[${log2_fifo_depth}:0]</bitRange>
              <description>Current level of TFR_CMD FIFO</description>
              <name>lvl</name>
            </field>
          </fields>
        </register>
        <register>
          <access>read-only</access>
          <addressOffset>0x7</addressOffset>
          <description>RX_DATA FIFO level register</description>
          <displayName>rx_data_fifo_lvl</displayName>
          <name>rx_data_fifo_lvl</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>read-only</access>
              <bitRange>[${log2_fifo_depth}:0]</bitRange>
              <description>Current level of RX_DATA FIFO</description>
              <name>lvl</name>
            </field>
          </fields>
        </register>
        <register>
          <access>read-write</access>
          <addressOffset>0x8</addressOffset>
          <description>SCL low count register</description>
          <displayName>scl_low</displayName>
          <name>scl_low</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>read-write</access>
              <bitRange>[15:0]</bitRange>
              <description>Low period of SCL in terms of number of clock cycles</description>
              <name>count_period</name>
            </field>
          </fields>
        </register>
        <register>
          <access>read-write</access>
          <addressOffset>0x9</addressOffset>
          <description>SCL high count register</description>
          <displayName>scl_high</displayName>
          <name>scl_high</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>read-write</access>
              <bitRange>[15:0]</bitRange>
              <description>High period of SCL in term of number of clock cycles</description>
              <name>count_period</name>
            </field>
          </fields>
        </register>
        <register>
          <access>read-write</access>
          <addressOffset>0xA</addressOffset>
          <description>SDA hold count register</description>
          <displayName>sda_hold</displayName>
          <name>sda_hold</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>read-write</access>
              <bitRange>[15:0]</bitRange>
              <description>Hold period of SDA in term of number of clock cycles</description>
              <name>count_period</name>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
  <peripheral>
      <baseAddress>0x00000000</baseAddress>
      <name>i2c_i2c_csr_altera_avalon_i2c</name>
      <description>altera_avalon_i2c</description>
      <registers>
        <register>
          <access>write-only</access>
          <addressOffset>0x0</addressOffset>
          <description>Transfer command FIFO</description>
          <displayName>tfr_cmd</displayName>
          <name>tfr_cmd</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>write-only</access>
              <bitRange>[0:0]</bitRange>
              <description>When transfer is in address phase, this field is used to specify the direction of I2C transfer.</description>
              <name>rw_d</name>
            </field>
            <field>
              <access>write-only</access>
              <bitRange>[7:1]</bitRange>
              <description>When in address phase, these fields act as address bits</description>
              <name>ad</name>
            </field>
            <field>
              <access>write-only</access>
              <bitRange>[8:8]</bitRange>
              <description>Requests a STOP condition to be generated afer current byte transfer</description>
              <name>sto</name>
            </field>
            <field>
              <access>write-only</access>
              <bitRange>[9:9]</bitRange>
              <description>Requests a repeated START condition to be generated before current byte transfer</description>
              <name>sta</name>
            </field>
          </fields>
        </register>
        <register>
          <access>read-only</access>
          <addressOffset>0x1</addressOffset>
          <description>Receive data FIFO</description>
          <displayName>rx_data</displayName>
          <name>rx_data</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>read-only</access>
              <bitRange>[7:0]</bitRange>
              <description>Byte received from I2C transfer</description>
              <name>rx_data</name>
            </field>
          </fields>
        </register>
        <register>
          <access>read-write</access>
          <addressOffset>0x2</addressOffset>
          <description>Control register</description>
          <displayName>ctrl</displayName>
          <name>ctrl</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
        </register>
        <register>
          <access>read-write</access>
          <addressOffset>0x3</addressOffset>
          <description>Interrupt status enable register</description>
          <displayName>iser</displayName>
          <name>iser</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>read-write</access>
              <bitRange>[0:0]</bitRange>
              <description>Enable interrupt for TX_READY condition</description>
              <name>tx_ready_en</name>
            </field>
            <field>
              <access>read-write</access>
              <bitRange>[1:1]</bitRange>
              <description>Enable interrupt for RX_READY condition</description>
              <name>rx_ready_en</name>
            </field>
            <field>
              <access>read-write</access>
              <bitRange>[2:2]</bitRange>
              <description>Enable interrupt for NACK_DET condition</description>
              <name>nack_det_en</name>
            </field>
            <field>
              <access>read-write</access>
              <bitRange>[3:3]</bitRange>
              <description>Enable interrupt for ARBLOST_DET condition</description>
              <name>arblost_det_en</name>
            </field>
            <field>
              <access>read-write</access>
              <bitRange>[4:4]</bitRange>
              <description>Enable interrupt for RX_OVER condition</description>
              <name>rx_over_en</name>
            </field>
          </fields>
        </register>
        <register>
          <access>read-write</access>
          <addressOffset>0x4</addressOffset>
          <description>Interrupt status register</description>
          <displayName>isr</displayName>
          <name>isr</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>read-only</access>
              <bitRange>[0:0]</bitRange>
              <description>Indicates transfer command FIFO is ready for data transmission. This bit is asserted when transfer command FIFO level is equal or less than TFR_CMD FIFO threshold.</description>
              <name>tx_ready</name>
            </field>
            <field>
              <access>read-only</access>
              <bitRange>[1:1]</bitRange>
              <description>Indicates receive data FIFO contains data sent by the remote I2C device. This bit is asserted when RX_DATA FIFO level is equal or more than RX_DATA FIFO threshold.</description>
              <name>rx_ready </name>
            </field>
            <field>
              <access>read-writeOnce</access>
              <bitRange>[2:2]</bitRange>
              <description>Indicates NACK is received by the core</description>
              <name>nack_det</name>
            </field>
            <field>
              <access>read-writeOnce</access>
              <bitRange>[3:3]</bitRange>
              <description>Indicates core has lost the bus arbitration</description>
              <name>arblost_det</name>
            </field>
            <field>
              <access>read-writeOnce</access>
              <bitRange>[4:4]</bitRange>
              <description>Indicates receive data FIFO has overrun condition, new data is lost</description>
              <name>rx_over</name>
            </field>
          </fields>
        </register>
        <register>
          <access>read-only</access>
          <addressOffset>0x5</addressOffset>
          <description>Status register</description>
          <displayName>status</displayName>
          <name>status</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>read-only</access>
              <bitRange>[0:0]</bitRange>
              <description>Status of the core's state machine</description>
              <name>core_status</name>
            </field>
          </fields>
        </register>
        <register>
          <access>read-only</access>
          <addressOffset>0x6</addressOffset>
          <description>TFR_CMD FIFO level register</description>
          <displayName>tfr_cmd_fifo_lvl</displayName>
          <name>tfr_cmd_fifo_lvl</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>read-only</access>
              <bitRange>[${log2_fifo_depth}:0]</bitRange>
              <description>Current level of TFR_CMD FIFO</description>
              <name>lvl</name>
            </field>
          </fields>
        </register>
        <register>
          <access>read-only</access>
          <addressOffset>0x7</addressOffset>
          <description>RX_DATA FIFO level register</description>
          <displayName>rx_data_fifo_lvl</displayName>
          <name>rx_data_fifo_lvl</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>read-only</access>
              <bitRange>[${log2_fifo_depth}:0]</bitRange>
              <description>Current level of RX_DATA FIFO</description>
              <name>lvl</name>
            </field>
          </fields>
        </register>
        <register>
          <access>read-write</access>
          <addressOffset>0x8</addressOffset>
          <description>SCL low count register</description>
          <displayName>scl_low</displayName>
          <name>scl_low</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>read-write</access>
              <bitRange>[15:0]</bitRange>
              <description>Low period of SCL in terms of number of clock cycles</description>
              <name>count_period</name>
            </field>
          </fields>
        </register>
        <register>
          <access>read-write</access>
          <addressOffset>0x9</addressOffset>
          <description>SCL high count register</description>
          <displayName>scl_high</displayName>
          <name>scl_high</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>read-write</access>
              <bitRange>[15:0]</bitRange>
              <description>High period of SCL in term of number of clock cycles</description>
              <name>count_period</name>
            </field>
          </fields>
        </register>
        <register>
          <access>read-write</access>
          <addressOffset>0xA</addressOffset>
          <description>SDA hold count register</description>
          <displayName>sda_hold</displayName>
          <name>sda_hold</name>
          <resetMask>0xffffffff</resetMask>
          <resetValue>0x00000000</resetValue>
          <size>32</size>
          <fields>
            <field>
              <access>read-write</access>
              <bitRange>[15:0]</bitRange>
              <description>Hold period of SDA in term of number of clock cycles</description>
              <name>count_period</name>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
  </peripherals>
</device>