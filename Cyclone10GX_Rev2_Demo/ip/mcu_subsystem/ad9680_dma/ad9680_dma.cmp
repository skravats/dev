	component ad9680_dma is
		port (
			s_axi_aclk         : in  std_logic                      := 'X';             -- clk
			s_axi_aresetn      : in  std_logic                      := 'X';             -- reset_n
			s_axi_awvalid      : in  std_logic                      := 'X';             -- awvalid
			s_axi_awaddr       : in  std_logic_vector(11 downto 0)  := (others => 'X'); -- awaddr
			s_axi_awprot       : in  std_logic_vector(2 downto 0)   := (others => 'X'); -- awprot
			s_axi_awready      : out std_logic;                                         -- awready
			s_axi_wvalid       : in  std_logic                      := 'X';             -- wvalid
			s_axi_wdata        : in  std_logic_vector(31 downto 0)  := (others => 'X'); -- wdata
			s_axi_wstrb        : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- wstrb
			s_axi_wready       : out std_logic;                                         -- wready
			s_axi_bvalid       : out std_logic;                                         -- bvalid
			s_axi_bresp        : out std_logic_vector(1 downto 0);                      -- bresp
			s_axi_bready       : in  std_logic                      := 'X';             -- bready
			s_axi_arvalid      : in  std_logic                      := 'X';             -- arvalid
			s_axi_araddr       : in  std_logic_vector(11 downto 0)  := (others => 'X'); -- araddr
			s_axi_arprot       : in  std_logic_vector(2 downto 0)   := (others => 'X'); -- arprot
			s_axi_arready      : out std_logic;                                         -- arready
			s_axi_rvalid       : out std_logic;                                         -- rvalid
			s_axi_rresp        : out std_logic_vector(1 downto 0);                      -- rresp
			s_axi_rdata        : out std_logic_vector(31 downto 0);                     -- rdata
			s_axi_rready       : in  std_logic                      := 'X';             -- rready
			irq                : out std_logic;                                         -- irq
			m_dest_axi_aclk    : in  std_logic                      := 'X';             -- clk
			m_dest_axi_aresetn : in  std_logic                      := 'X';             -- reset_n
			s_axis_aclk        : in  std_logic                      := 'X';             -- clk
			s_axis_valid       : in  std_logic                      := 'X';             -- valid
			s_axis_data        : in  std_logic_vector(127 downto 0) := (others => 'X'); -- data
			s_axis_ready       : out std_logic;                                         -- ready
			s_axis_xfer_req    : out std_logic;                                         -- xfer_req
			m_dest_axi_awvalid : out std_logic;                                         -- awvalid
			m_dest_axi_awaddr  : out std_logic_vector(31 downto 0);                     -- awaddr
			m_dest_axi_awready : in  std_logic                      := 'X';             -- awready
			m_dest_axi_wvalid  : out std_logic;                                         -- wvalid
			m_dest_axi_wdata   : out std_logic_vector(127 downto 0);                    -- wdata
			m_dest_axi_wstrb   : out std_logic_vector(15 downto 0);                     -- wstrb
			m_dest_axi_wready  : in  std_logic                      := 'X';             -- wready
			m_dest_axi_bvalid  : in  std_logic                      := 'X';             -- bvalid
			m_dest_axi_bresp   : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- bresp
			m_dest_axi_bready  : out std_logic;                                         -- bready
			m_dest_axi_arvalid : out std_logic;                                         -- arvalid
			m_dest_axi_araddr  : out std_logic_vector(31 downto 0);                     -- araddr
			m_dest_axi_arready : in  std_logic                      := 'X';             -- arready
			m_dest_axi_rvalid  : in  std_logic                      := 'X';             -- rvalid
			m_dest_axi_rresp   : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- rresp
			m_dest_axi_rdata   : in  std_logic_vector(127 downto 0) := (others => 'X'); -- rdata
			m_dest_axi_rready  : out std_logic;                                         -- rready
			m_dest_axi_awlen   : out std_logic_vector(7 downto 0);                      -- awlen
			m_dest_axi_awsize  : out std_logic_vector(2 downto 0);                      -- awsize
			m_dest_axi_awburst : out std_logic_vector(1 downto 0);                      -- awburst
			m_dest_axi_awcache : out std_logic_vector(3 downto 0);                      -- awcache
			m_dest_axi_awprot  : out std_logic_vector(2 downto 0);                      -- awprot
			m_dest_axi_wlast   : out std_logic;                                         -- wlast
			m_dest_axi_arlen   : out std_logic_vector(7 downto 0);                      -- arlen
			m_dest_axi_arsize  : out std_logic_vector(2 downto 0);                      -- arsize
			m_dest_axi_arburst : out std_logic_vector(1 downto 0);                      -- arburst
			m_dest_axi_arcache : out std_logic_vector(3 downto 0);                      -- arcache
			m_dest_axi_arprot  : out std_logic_vector(2 downto 0)                       -- arprot
		);
	end component ad9680_dma;

