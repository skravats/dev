	ad9680_dma u0 (
		.s_axi_aclk         (_connected_to_s_axi_aclk_),         //   input,    width = 1,        s_axi_clock.clk
		.s_axi_aresetn      (_connected_to_s_axi_aresetn_),      //   input,    width = 1,        s_axi_reset.reset_n
		.s_axi_awvalid      (_connected_to_s_axi_awvalid_),      //   input,    width = 1,              s_axi.awvalid
		.s_axi_awaddr       (_connected_to_s_axi_awaddr_),       //   input,   width = 12,                   .awaddr
		.s_axi_awprot       (_connected_to_s_axi_awprot_),       //   input,    width = 3,                   .awprot
		.s_axi_awready      (_connected_to_s_axi_awready_),      //  output,    width = 1,                   .awready
		.s_axi_wvalid       (_connected_to_s_axi_wvalid_),       //   input,    width = 1,                   .wvalid
		.s_axi_wdata        (_connected_to_s_axi_wdata_),        //   input,   width = 32,                   .wdata
		.s_axi_wstrb        (_connected_to_s_axi_wstrb_),        //   input,    width = 4,                   .wstrb
		.s_axi_wready       (_connected_to_s_axi_wready_),       //  output,    width = 1,                   .wready
		.s_axi_bvalid       (_connected_to_s_axi_bvalid_),       //  output,    width = 1,                   .bvalid
		.s_axi_bresp        (_connected_to_s_axi_bresp_),        //  output,    width = 2,                   .bresp
		.s_axi_bready       (_connected_to_s_axi_bready_),       //   input,    width = 1,                   .bready
		.s_axi_arvalid      (_connected_to_s_axi_arvalid_),      //   input,    width = 1,                   .arvalid
		.s_axi_araddr       (_connected_to_s_axi_araddr_),       //   input,   width = 12,                   .araddr
		.s_axi_arprot       (_connected_to_s_axi_arprot_),       //   input,    width = 3,                   .arprot
		.s_axi_arready      (_connected_to_s_axi_arready_),      //  output,    width = 1,                   .arready
		.s_axi_rvalid       (_connected_to_s_axi_rvalid_),       //  output,    width = 1,                   .rvalid
		.s_axi_rresp        (_connected_to_s_axi_rresp_),        //  output,    width = 2,                   .rresp
		.s_axi_rdata        (_connected_to_s_axi_rdata_),        //  output,   width = 32,                   .rdata
		.s_axi_rready       (_connected_to_s_axi_rready_),       //   input,    width = 1,                   .rready
		.irq                (_connected_to_irq_),                //  output,    width = 1,   interrupt_sender.irq
		.m_dest_axi_aclk    (_connected_to_m_dest_axi_aclk_),    //   input,    width = 1,   m_dest_axi_clock.clk
		.m_dest_axi_aresetn (_connected_to_m_dest_axi_aresetn_), //   input,    width = 1,   m_dest_axi_reset.reset_n
		.s_axis_aclk        (_connected_to_s_axis_aclk_),        //   input,    width = 1,     if_s_axis_aclk.clk
		.s_axis_valid       (_connected_to_s_axis_valid_),       //   input,    width = 1,    if_s_axis_valid.valid
		.s_axis_data        (_connected_to_s_axis_data_),        //   input,  width = 128,     if_s_axis_data.data
		.s_axis_ready       (_connected_to_s_axis_ready_),       //  output,    width = 1,    if_s_axis_ready.ready
		.s_axis_xfer_req    (_connected_to_s_axis_xfer_req_),    //  output,    width = 1, if_s_axis_xfer_req.xfer_req
		.m_dest_axi_awvalid (_connected_to_m_dest_axi_awvalid_), //  output,    width = 1,         m_dest_axi.awvalid
		.m_dest_axi_awaddr  (_connected_to_m_dest_axi_awaddr_),  //  output,   width = 32,                   .awaddr
		.m_dest_axi_awready (_connected_to_m_dest_axi_awready_), //   input,    width = 1,                   .awready
		.m_dest_axi_wvalid  (_connected_to_m_dest_axi_wvalid_),  //  output,    width = 1,                   .wvalid
		.m_dest_axi_wdata   (_connected_to_m_dest_axi_wdata_),   //  output,  width = 128,                   .wdata
		.m_dest_axi_wstrb   (_connected_to_m_dest_axi_wstrb_),   //  output,   width = 16,                   .wstrb
		.m_dest_axi_wready  (_connected_to_m_dest_axi_wready_),  //   input,    width = 1,                   .wready
		.m_dest_axi_bvalid  (_connected_to_m_dest_axi_bvalid_),  //   input,    width = 1,                   .bvalid
		.m_dest_axi_bresp   (_connected_to_m_dest_axi_bresp_),   //   input,    width = 2,                   .bresp
		.m_dest_axi_bready  (_connected_to_m_dest_axi_bready_),  //  output,    width = 1,                   .bready
		.m_dest_axi_arvalid (_connected_to_m_dest_axi_arvalid_), //  output,    width = 1,                   .arvalid
		.m_dest_axi_araddr  (_connected_to_m_dest_axi_araddr_),  //  output,   width = 32,                   .araddr
		.m_dest_axi_arready (_connected_to_m_dest_axi_arready_), //   input,    width = 1,                   .arready
		.m_dest_axi_rvalid  (_connected_to_m_dest_axi_rvalid_),  //   input,    width = 1,                   .rvalid
		.m_dest_axi_rresp   (_connected_to_m_dest_axi_rresp_),   //   input,    width = 2,                   .rresp
		.m_dest_axi_rdata   (_connected_to_m_dest_axi_rdata_),   //   input,  width = 128,                   .rdata
		.m_dest_axi_rready  (_connected_to_m_dest_axi_rready_),  //  output,    width = 1,                   .rready
		.m_dest_axi_awlen   (_connected_to_m_dest_axi_awlen_),   //  output,    width = 8,                   .awlen
		.m_dest_axi_awsize  (_connected_to_m_dest_axi_awsize_),  //  output,    width = 3,                   .awsize
		.m_dest_axi_awburst (_connected_to_m_dest_axi_awburst_), //  output,    width = 2,                   .awburst
		.m_dest_axi_awcache (_connected_to_m_dest_axi_awcache_), //  output,    width = 4,                   .awcache
		.m_dest_axi_awprot  (_connected_to_m_dest_axi_awprot_),  //  output,    width = 3,                   .awprot
		.m_dest_axi_wlast   (_connected_to_m_dest_axi_wlast_),   //  output,    width = 1,                   .wlast
		.m_dest_axi_arlen   (_connected_to_m_dest_axi_arlen_),   //  output,    width = 8,                   .arlen
		.m_dest_axi_arsize  (_connected_to_m_dest_axi_arsize_),  //  output,    width = 3,                   .arsize
		.m_dest_axi_arburst (_connected_to_m_dest_axi_arburst_), //  output,    width = 2,                   .arburst
		.m_dest_axi_arcache (_connected_to_m_dest_axi_arcache_), //  output,    width = 4,                   .arcache
		.m_dest_axi_arprot  (_connected_to_m_dest_axi_arprot_)   //  output,    width = 3,                   .arprot
	);

