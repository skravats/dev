	component ad9680_core is
		port (
			s_axi_aclk    : in  std_logic                      := 'X';             -- clk
			s_axi_aresetn : in  std_logic                      := 'X';             -- reset_n
			s_axi_awvalid : in  std_logic                      := 'X';             -- awvalid
			s_axi_awaddr  : in  std_logic_vector(15 downto 0)  := (others => 'X'); -- awaddr
			s_axi_awprot  : in  std_logic_vector(2 downto 0)   := (others => 'X'); -- awprot
			s_axi_awready : out std_logic;                                         -- awready
			s_axi_wvalid  : in  std_logic                      := 'X';             -- wvalid
			s_axi_wdata   : in  std_logic_vector(31 downto 0)  := (others => 'X'); -- wdata
			s_axi_wstrb   : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- wstrb
			s_axi_wready  : out std_logic;                                         -- wready
			s_axi_bvalid  : out std_logic;                                         -- bvalid
			s_axi_bresp   : out std_logic_vector(1 downto 0);                      -- bresp
			s_axi_bready  : in  std_logic                      := 'X';             -- bready
			s_axi_arvalid : in  std_logic                      := 'X';             -- arvalid
			s_axi_araddr  : in  std_logic_vector(15 downto 0)  := (others => 'X'); -- araddr
			s_axi_arprot  : in  std_logic_vector(2 downto 0)   := (others => 'X'); -- arprot
			s_axi_arready : out std_logic;                                         -- arready
			s_axi_rvalid  : out std_logic;                                         -- rvalid
			s_axi_rresp   : out std_logic_vector(1 downto 0);                      -- rresp
			s_axi_rdata   : out std_logic_vector(31 downto 0);                     -- rdata
			s_axi_rready  : in  std_logic                      := 'X';             -- rready
			rx_clk        : in  std_logic                      := 'X';             -- clk
			rx_sof        : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- export
			rx_data       : in  std_logic_vector(127 downto 0) := (others => 'X'); -- data
			rx_valid      : in  std_logic                      := 'X';             -- valid
			rx_ready      : out std_logic;                                         -- ready
			adc_clk       : out std_logic;                                         -- clk
			adc_enable_0  : out std_logic;                                         -- enable
			adc_valid_0   : out std_logic;                                         -- valid
			adc_data_0    : out std_logic_vector(63 downto 0);                     -- data
			adc_enable_1  : out std_logic;                                         -- enable
			adc_valid_1   : out std_logic;                                         -- valid
			adc_data_1    : out std_logic_vector(63 downto 0);                     -- data
			adc_dovf      : in  std_logic                      := 'X'              -- ovf
		);
	end component ad9680_core;

