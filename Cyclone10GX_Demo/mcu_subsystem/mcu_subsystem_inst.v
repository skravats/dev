	mcu_subsystem u0 (
		.tx_fifo_bypass_bypass         (_connected_to_tx_fifo_bypass_bypass_),         //   input,   width = 1, tx_fifo_bypass.bypass
		.tx_ref_clk_clk                (_connected_to_tx_ref_clk_clk_),                //   input,   width = 1,     tx_ref_clk.clk
		.tx_serial_data_tx_serial_data (_connected_to_tx_serial_data_tx_serial_data_), //  output,   width = 4, tx_serial_data.tx_serial_data
		.tx_sysref_export              (_connected_to_tx_sysref_export_),              //   input,   width = 1,      tx_sysref.export
		.tx_sync_export                (_connected_to_tx_sync_export_),                //   input,   width = 1,        tx_sync.export
		.rx_ref_clk_clk                (_connected_to_rx_ref_clk_clk_),                //   input,   width = 1,     rx_ref_clk.clk
		.rx_serial_data_rx_serial_data (_connected_to_rx_serial_data_rx_serial_data_), //   input,   width = 4, rx_serial_data.rx_serial_data
		.rx_sysref_export              (_connected_to_rx_sysref_export_),              //   input,   width = 1,      rx_sysref.export
		.rx_sync_export                (_connected_to_rx_sync_export_),                //  output,   width = 1,        rx_sync.export
		.clk100_clk                    (_connected_to_clk100_clk_),                    //   input,   width = 1,         clk100.clk
		.clk_clk                       (_connected_to_clk_clk_),                       //   input,   width = 1,            clk.clk
		.dbg_reset_reset               (_connected_to_dbg_reset_reset_),               //  output,   width = 1,      dbg_reset.reset
		.fmc_gpio_in_port              (_connected_to_fmc_gpio_in_port_),              //   input,  width = 32,       fmc_gpio.in_port
		.fmc_gpio_out_port             (_connected_to_fmc_gpio_out_port_),             //  output,  width = 32,               .out_port
		.i2c_sda_in                    (_connected_to_i2c_sda_in_),                    //   input,   width = 1,            i2c.sda_in
		.i2c_scl_in                    (_connected_to_i2c_scl_in_),                    //   input,   width = 1,               .scl_in
		.i2c_sda_oe                    (_connected_to_i2c_sda_oe_),                    //  output,   width = 1,               .sda_oe
		.i2c_scl_oe                    (_connected_to_i2c_scl_oe_),                    //  output,   width = 1,               .scl_oe
		.spi_MISO                      (_connected_to_spi_MISO_),                      //   input,   width = 1,            spi.MISO
		.spi_MOSI                      (_connected_to_spi_MOSI_),                      //  output,   width = 1,               .MOSI
		.spi_SCLK                      (_connected_to_spi_SCLK_),                      //  output,   width = 1,               .SCLK
		.spi_SS_n                      (_connected_to_spi_SS_n_),                      //  output,   width = 8,               .SS_n
		.iopll_0_locked_export         (_connected_to_iopll_0_locked_export_),         //  output,   width = 1, iopll_0_locked.export
		.qspi_dclk                     (_connected_to_qspi_dclk_),                     //  output,   width = 1,           qspi.dclk
		.qspi_ncs                      (_connected_to_qspi_ncs_),                      //  output,   width = 1,               .ncs
		.qspi_data                     (_connected_to_qspi_data_),                     //   inout,   width = 4,               .data
		.refclk_emif_clk               (_connected_to_refclk_emif_clk_),               //   input,   width = 1,    refclk_emif.clk
		.reset_reset_n                 (_connected_to_reset_reset_n_),                 //   input,   width = 1,          reset.reset_n
		.oct_oct_rzqin                 (_connected_to_oct_oct_rzqin_),                 //   input,   width = 1,            oct.oct_rzqin
		.mem_mem_ck                    (_connected_to_mem_mem_ck_),                    //  output,   width = 1,            mem.mem_ck
		.mem_mem_ck_n                  (_connected_to_mem_mem_ck_n_),                  //  output,   width = 1,               .mem_ck_n
		.mem_mem_a                     (_connected_to_mem_mem_a_),                     //  output,  width = 16,               .mem_a
		.mem_mem_ba                    (_connected_to_mem_mem_ba_),                    //  output,   width = 3,               .mem_ba
		.mem_mem_cke                   (_connected_to_mem_mem_cke_),                   //  output,   width = 1,               .mem_cke
		.mem_mem_cs_n                  (_connected_to_mem_mem_cs_n_),                  //  output,   width = 1,               .mem_cs_n
		.mem_mem_odt                   (_connected_to_mem_mem_odt_),                   //  output,   width = 1,               .mem_odt
		.mem_mem_reset_n               (_connected_to_mem_mem_reset_n_),               //  output,   width = 1,               .mem_reset_n
		.mem_mem_we_n                  (_connected_to_mem_mem_we_n_),                  //  output,   width = 1,               .mem_we_n
		.mem_mem_ras_n                 (_connected_to_mem_mem_ras_n_),                 //  output,   width = 1,               .mem_ras_n
		.mem_mem_cas_n                 (_connected_to_mem_mem_cas_n_),                 //  output,   width = 1,               .mem_cas_n
		.mem_mem_dqs                   (_connected_to_mem_mem_dqs_),                   //   inout,   width = 4,               .mem_dqs
		.mem_mem_dqs_n                 (_connected_to_mem_mem_dqs_n_),                 //   inout,   width = 4,               .mem_dqs_n
		.mem_mem_dq                    (_connected_to_mem_mem_dq_),                    //   inout,  width = 32,               .mem_dq
		.mem_mem_dm                    (_connected_to_mem_mem_dm_),                    //  output,   width = 4,               .mem_dm
		.status_local_cal_success      (_connected_to_status_local_cal_success_),      //  output,   width = 1,         status.local_cal_success
		.status_local_cal_fail         (_connected_to_status_local_cal_fail_),         //  output,   width = 1,               .local_cal_fail
		.tx_0_tx_serial_data           (_connected_to_tx_0_tx_serial_data_),           //  output,   width = 1,           tx_0.tx_serial_data
		.rx_0_rx_serial_data           (_connected_to_rx_0_rx_serial_data_),           //   input,   width = 1,           rx_0.rx_serial_data
		.tx_1_tx_serial_data           (_connected_to_tx_1_tx_serial_data_),           //  output,   width = 1,           tx_1.tx_serial_data
		.rx_1_rx_serial_data           (_connected_to_rx_1_rx_serial_data_)            //   input,   width = 1,           rx_1.rx_serial_data
	);

