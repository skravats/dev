	component mcu_subsystem is
		port (
			tx_fifo_bypass_bypass         : in    std_logic                     := 'X';             -- bypass
			tx_ref_clk_clk                : in    std_logic                     := 'X';             -- clk
			tx_serial_data_tx_serial_data : out   std_logic_vector(3 downto 0);                     -- tx_serial_data
			tx_sysref_export              : in    std_logic                     := 'X';             -- export
			tx_sync_export                : in    std_logic                     := 'X';             -- export
			rx_ref_clk_clk                : in    std_logic                     := 'X';             -- clk
			rx_serial_data_rx_serial_data : in    std_logic_vector(3 downto 0)  := (others => 'X'); -- rx_serial_data
			rx_sysref_export              : in    std_logic                     := 'X';             -- export
			rx_sync_export                : out   std_logic_vector(0 downto 0);                     -- export
			clk100_clk                    : in    std_logic                     := 'X';             -- clk
			clk_clk                       : in    std_logic                     := 'X';             -- clk
			dbg_reset_reset               : out   std_logic;                                        -- reset
			fmc_gpio_in_port              : in    std_logic_vector(31 downto 0) := (others => 'X'); -- in_port
			fmc_gpio_out_port             : out   std_logic_vector(31 downto 0);                    -- out_port
			i2c_sda_in                    : in    std_logic                     := 'X';             -- sda_in
			i2c_scl_in                    : in    std_logic                     := 'X';             -- scl_in
			i2c_sda_oe                    : out   std_logic;                                        -- sda_oe
			i2c_scl_oe                    : out   std_logic;                                        -- scl_oe
			spi_MISO                      : in    std_logic                     := 'X';             -- MISO
			spi_MOSI                      : out   std_logic;                                        -- MOSI
			spi_SCLK                      : out   std_logic;                                        -- SCLK
			spi_SS_n                      : out   std_logic_vector(7 downto 0);                     -- SS_n
			iopll_0_locked_export         : out   std_logic;                                        -- export
			qspi_dclk                     : out   std_logic;                                        -- dclk
			qspi_ncs                      : out   std_logic;                                        -- ncs
			qspi_data                     : inout std_logic_vector(3 downto 0)  := (others => 'X'); -- data
			refclk_emif_clk               : in    std_logic                     := 'X';             -- clk
			reset_reset_n                 : in    std_logic                     := 'X';             -- reset_n
			oct_oct_rzqin                 : in    std_logic                     := 'X';             -- oct_rzqin
			mem_mem_ck                    : out   std_logic_vector(0 downto 0);                     -- mem_ck
			mem_mem_ck_n                  : out   std_logic_vector(0 downto 0);                     -- mem_ck_n
			mem_mem_a                     : out   std_logic_vector(15 downto 0);                    -- mem_a
			mem_mem_ba                    : out   std_logic_vector(2 downto 0);                     -- mem_ba
			mem_mem_cke                   : out   std_logic_vector(0 downto 0);                     -- mem_cke
			mem_mem_cs_n                  : out   std_logic_vector(0 downto 0);                     -- mem_cs_n
			mem_mem_odt                   : out   std_logic_vector(0 downto 0);                     -- mem_odt
			mem_mem_reset_n               : out   std_logic_vector(0 downto 0);                     -- mem_reset_n
			mem_mem_we_n                  : out   std_logic_vector(0 downto 0);                     -- mem_we_n
			mem_mem_ras_n                 : out   std_logic_vector(0 downto 0);                     -- mem_ras_n
			mem_mem_cas_n                 : out   std_logic_vector(0 downto 0);                     -- mem_cas_n
			mem_mem_dqs                   : inout std_logic_vector(3 downto 0)  := (others => 'X'); -- mem_dqs
			mem_mem_dqs_n                 : inout std_logic_vector(3 downto 0)  := (others => 'X'); -- mem_dqs_n
			mem_mem_dq                    : inout std_logic_vector(31 downto 0) := (others => 'X'); -- mem_dq
			mem_mem_dm                    : out   std_logic_vector(3 downto 0);                     -- mem_dm
			status_local_cal_success      : out   std_logic;                                        -- local_cal_success
			status_local_cal_fail         : out   std_logic;                                        -- local_cal_fail
			tx_0_tx_serial_data           : out   std_logic_vector(0 downto 0);                     -- tx_serial_data
			rx_0_rx_serial_data           : in    std_logic_vector(0 downto 0)  := (others => 'X'); -- rx_serial_data
			tx_1_tx_serial_data           : out   std_logic_vector(0 downto 0);                     -- tx_serial_data
			rx_1_rx_serial_data           : in    std_logic_vector(0 downto 0)  := (others => 'X')  -- rx_serial_data
		);
	end component mcu_subsystem;

