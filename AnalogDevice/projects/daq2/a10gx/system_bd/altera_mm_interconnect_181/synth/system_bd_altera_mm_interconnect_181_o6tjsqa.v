// system_bd_altera_mm_interconnect_181_o6tjsqa.v

// This file was auto-generated from altera_mm_interconnect_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 18.1 625

`timescale 1 ps / 1 ps
module system_bd_altera_mm_interconnect_181_o6tjsqa (
		output wire [11:0]  ad9144_jesd204_link_management_awaddr,                                  //                                   ad9144_jesd204_link_management.awaddr
		output wire [2:0]   ad9144_jesd204_link_management_awprot,                                  //                                                                 .awprot
		output wire         ad9144_jesd204_link_management_awvalid,                                 //                                                                 .awvalid
		input  wire         ad9144_jesd204_link_management_awready,                                 //                                                                 .awready
		output wire [31:0]  ad9144_jesd204_link_management_wdata,                                   //                                                                 .wdata
		output wire [3:0]   ad9144_jesd204_link_management_wstrb,                                   //                                                                 .wstrb
		output wire         ad9144_jesd204_link_management_wvalid,                                  //                                                                 .wvalid
		input  wire         ad9144_jesd204_link_management_wready,                                  //                                                                 .wready
		input  wire [1:0]   ad9144_jesd204_link_management_bresp,                                   //                                                                 .bresp
		input  wire         ad9144_jesd204_link_management_bvalid,                                  //                                                                 .bvalid
		output wire         ad9144_jesd204_link_management_bready,                                  //                                                                 .bready
		output wire [11:0]  ad9144_jesd204_link_management_araddr,                                  //                                                                 .araddr
		output wire [2:0]   ad9144_jesd204_link_management_arprot,                                  //                                                                 .arprot
		output wire         ad9144_jesd204_link_management_arvalid,                                 //                                                                 .arvalid
		input  wire         ad9144_jesd204_link_management_arready,                                 //                                                                 .arready
		input  wire [31:0]  ad9144_jesd204_link_management_rdata,                                   //                                                                 .rdata
		input  wire [1:0]   ad9144_jesd204_link_management_rresp,                                   //                                                                 .rresp
		input  wire         ad9144_jesd204_link_management_rvalid,                                  //                                                                 .rvalid
		output wire         ad9144_jesd204_link_management_rready,                                  //                                                                 .rready
		output wire [13:0]  ad9144_jesd204_link_reconfig_awaddr,                                    //                                     ad9144_jesd204_link_reconfig.awaddr
		output wire [2:0]   ad9144_jesd204_link_reconfig_awprot,                                    //                                                                 .awprot
		output wire         ad9144_jesd204_link_reconfig_awvalid,                                   //                                                                 .awvalid
		input  wire         ad9144_jesd204_link_reconfig_awready,                                   //                                                                 .awready
		output wire [31:0]  ad9144_jesd204_link_reconfig_wdata,                                     //                                                                 .wdata
		output wire [3:0]   ad9144_jesd204_link_reconfig_wstrb,                                     //                                                                 .wstrb
		output wire         ad9144_jesd204_link_reconfig_wvalid,                                    //                                                                 .wvalid
		input  wire         ad9144_jesd204_link_reconfig_wready,                                    //                                                                 .wready
		input  wire [1:0]   ad9144_jesd204_link_reconfig_bresp,                                     //                                                                 .bresp
		input  wire         ad9144_jesd204_link_reconfig_bvalid,                                    //                                                                 .bvalid
		output wire         ad9144_jesd204_link_reconfig_bready,                                    //                                                                 .bready
		output wire [13:0]  ad9144_jesd204_link_reconfig_araddr,                                    //                                                                 .araddr
		output wire [2:0]   ad9144_jesd204_link_reconfig_arprot,                                    //                                                                 .arprot
		output wire         ad9144_jesd204_link_reconfig_arvalid,                                   //                                                                 .arvalid
		input  wire         ad9144_jesd204_link_reconfig_arready,                                   //                                                                 .arready
		input  wire [31:0]  ad9144_jesd204_link_reconfig_rdata,                                     //                                                                 .rdata
		input  wire [1:0]   ad9144_jesd204_link_reconfig_rresp,                                     //                                                                 .rresp
		input  wire         ad9144_jesd204_link_reconfig_rvalid,                                    //                                                                 .rvalid
		output wire         ad9144_jesd204_link_reconfig_rready,                                    //                                                                 .rready
		output wire [11:0]  ad9680_jesd204_link_management_awaddr,                                  //                                   ad9680_jesd204_link_management.awaddr
		output wire [2:0]   ad9680_jesd204_link_management_awprot,                                  //                                                                 .awprot
		output wire         ad9680_jesd204_link_management_awvalid,                                 //                                                                 .awvalid
		input  wire         ad9680_jesd204_link_management_awready,                                 //                                                                 .awready
		output wire [31:0]  ad9680_jesd204_link_management_wdata,                                   //                                                                 .wdata
		output wire [3:0]   ad9680_jesd204_link_management_wstrb,                                   //                                                                 .wstrb
		output wire         ad9680_jesd204_link_management_wvalid,                                  //                                                                 .wvalid
		input  wire         ad9680_jesd204_link_management_wready,                                  //                                                                 .wready
		input  wire [1:0]   ad9680_jesd204_link_management_bresp,                                   //                                                                 .bresp
		input  wire         ad9680_jesd204_link_management_bvalid,                                  //                                                                 .bvalid
		output wire         ad9680_jesd204_link_management_bready,                                  //                                                                 .bready
		output wire [11:0]  ad9680_jesd204_link_management_araddr,                                  //                                                                 .araddr
		output wire [2:0]   ad9680_jesd204_link_management_arprot,                                  //                                                                 .arprot
		output wire         ad9680_jesd204_link_management_arvalid,                                 //                                                                 .arvalid
		input  wire         ad9680_jesd204_link_management_arready,                                 //                                                                 .arready
		input  wire [31:0]  ad9680_jesd204_link_management_rdata,                                   //                                                                 .rdata
		input  wire [1:0]   ad9680_jesd204_link_management_rresp,                                   //                                                                 .rresp
		input  wire         ad9680_jesd204_link_management_rvalid,                                  //                                                                 .rvalid
		output wire         ad9680_jesd204_link_management_rready,                                  //                                                                 .rready
		output wire [13:0]  ad9680_jesd204_link_reconfig_awaddr,                                    //                                     ad9680_jesd204_link_reconfig.awaddr
		output wire [2:0]   ad9680_jesd204_link_reconfig_awprot,                                    //                                                                 .awprot
		output wire         ad9680_jesd204_link_reconfig_awvalid,                                   //                                                                 .awvalid
		input  wire         ad9680_jesd204_link_reconfig_awready,                                   //                                                                 .awready
		output wire [31:0]  ad9680_jesd204_link_reconfig_wdata,                                     //                                                                 .wdata
		output wire [3:0]   ad9680_jesd204_link_reconfig_wstrb,                                     //                                                                 .wstrb
		output wire         ad9680_jesd204_link_reconfig_wvalid,                                    //                                                                 .wvalid
		input  wire         ad9680_jesd204_link_reconfig_wready,                                    //                                                                 .wready
		input  wire [1:0]   ad9680_jesd204_link_reconfig_bresp,                                     //                                                                 .bresp
		input  wire         ad9680_jesd204_link_reconfig_bvalid,                                    //                                                                 .bvalid
		output wire         ad9680_jesd204_link_reconfig_bready,                                    //                                                                 .bready
		output wire [13:0]  ad9680_jesd204_link_reconfig_araddr,                                    //                                                                 .araddr
		output wire [2:0]   ad9680_jesd204_link_reconfig_arprot,                                    //                                                                 .arprot
		output wire         ad9680_jesd204_link_reconfig_arvalid,                                   //                                                                 .arvalid
		input  wire         ad9680_jesd204_link_reconfig_arready,                                   //                                                                 .arready
		input  wire [31:0]  ad9680_jesd204_link_reconfig_rdata,                                     //                                                                 .rdata
		input  wire [1:0]   ad9680_jesd204_link_reconfig_rresp,                                     //                                                                 .rresp
		input  wire         ad9680_jesd204_link_reconfig_rvalid,                                    //                                                                 .rvalid
		output wire         ad9680_jesd204_link_reconfig_rready,                                    //                                                                 .rready
		output wire [15:0]  axi_ad9144_core_s_axi_awaddr,                                           //                                            axi_ad9144_core_s_axi.awaddr
		output wire [2:0]   axi_ad9144_core_s_axi_awprot,                                           //                                                                 .awprot
		output wire         axi_ad9144_core_s_axi_awvalid,                                          //                                                                 .awvalid
		input  wire         axi_ad9144_core_s_axi_awready,                                          //                                                                 .awready
		output wire [31:0]  axi_ad9144_core_s_axi_wdata,                                            //                                                                 .wdata
		output wire [3:0]   axi_ad9144_core_s_axi_wstrb,                                            //                                                                 .wstrb
		output wire         axi_ad9144_core_s_axi_wvalid,                                           //                                                                 .wvalid
		input  wire         axi_ad9144_core_s_axi_wready,                                           //                                                                 .wready
		input  wire [1:0]   axi_ad9144_core_s_axi_bresp,                                            //                                                                 .bresp
		input  wire         axi_ad9144_core_s_axi_bvalid,                                           //                                                                 .bvalid
		output wire         axi_ad9144_core_s_axi_bready,                                           //                                                                 .bready
		output wire [15:0]  axi_ad9144_core_s_axi_araddr,                                           //                                                                 .araddr
		output wire [2:0]   axi_ad9144_core_s_axi_arprot,                                           //                                                                 .arprot
		output wire         axi_ad9144_core_s_axi_arvalid,                                          //                                                                 .arvalid
		input  wire         axi_ad9144_core_s_axi_arready,                                          //                                                                 .arready
		input  wire [31:0]  axi_ad9144_core_s_axi_rdata,                                            //                                                                 .rdata
		input  wire [1:0]   axi_ad9144_core_s_axi_rresp,                                            //                                                                 .rresp
		input  wire         axi_ad9144_core_s_axi_rvalid,                                           //                                                                 .rvalid
		output wire         axi_ad9144_core_s_axi_rready,                                           //                                                                 .rready
		input  wire [0:0]   axi_ad9144_dma_m_src_axi_awid,                                          //                                         axi_ad9144_dma_m_src_axi.awid
		input  wire [31:0]  axi_ad9144_dma_m_src_axi_awaddr,                                        //                                                                 .awaddr
		input  wire [3:0]   axi_ad9144_dma_m_src_axi_awlen,                                         //                                                                 .awlen
		input  wire [2:0]   axi_ad9144_dma_m_src_axi_awsize,                                        //                                                                 .awsize
		input  wire [1:0]   axi_ad9144_dma_m_src_axi_awburst,                                       //                                                                 .awburst
		input  wire [1:0]   axi_ad9144_dma_m_src_axi_awlock,                                        //                                                                 .awlock
		input  wire [3:0]   axi_ad9144_dma_m_src_axi_awcache,                                       //                                                                 .awcache
		input  wire [2:0]   axi_ad9144_dma_m_src_axi_awprot,                                        //                                                                 .awprot
		input  wire         axi_ad9144_dma_m_src_axi_awvalid,                                       //                                                                 .awvalid
		output wire         axi_ad9144_dma_m_src_axi_awready,                                       //                                                                 .awready
		input  wire [0:0]   axi_ad9144_dma_m_src_axi_wid,                                           //                                                                 .wid
		input  wire [127:0] axi_ad9144_dma_m_src_axi_wdata,                                         //                                                                 .wdata
		input  wire [15:0]  axi_ad9144_dma_m_src_axi_wstrb,                                         //                                                                 .wstrb
		input  wire         axi_ad9144_dma_m_src_axi_wlast,                                         //                                                                 .wlast
		input  wire         axi_ad9144_dma_m_src_axi_wvalid,                                        //                                                                 .wvalid
		output wire         axi_ad9144_dma_m_src_axi_wready,                                        //                                                                 .wready
		output wire [0:0]   axi_ad9144_dma_m_src_axi_bid,                                           //                                                                 .bid
		output wire [1:0]   axi_ad9144_dma_m_src_axi_bresp,                                         //                                                                 .bresp
		output wire         axi_ad9144_dma_m_src_axi_bvalid,                                        //                                                                 .bvalid
		input  wire         axi_ad9144_dma_m_src_axi_bready,                                        //                                                                 .bready
		input  wire [0:0]   axi_ad9144_dma_m_src_axi_arid,                                          //                                                                 .arid
		input  wire [31:0]  axi_ad9144_dma_m_src_axi_araddr,                                        //                                                                 .araddr
		input  wire [3:0]   axi_ad9144_dma_m_src_axi_arlen,                                         //                                                                 .arlen
		input  wire [2:0]   axi_ad9144_dma_m_src_axi_arsize,                                        //                                                                 .arsize
		input  wire [1:0]   axi_ad9144_dma_m_src_axi_arburst,                                       //                                                                 .arburst
		input  wire [1:0]   axi_ad9144_dma_m_src_axi_arlock,                                        //                                                                 .arlock
		input  wire [3:0]   axi_ad9144_dma_m_src_axi_arcache,                                       //                                                                 .arcache
		input  wire [2:0]   axi_ad9144_dma_m_src_axi_arprot,                                        //                                                                 .arprot
		input  wire         axi_ad9144_dma_m_src_axi_arvalid,                                       //                                                                 .arvalid
		output wire         axi_ad9144_dma_m_src_axi_arready,                                       //                                                                 .arready
		output wire [0:0]   axi_ad9144_dma_m_src_axi_rid,                                           //                                                                 .rid
		output wire [127:0] axi_ad9144_dma_m_src_axi_rdata,                                         //                                                                 .rdata
		output wire [1:0]   axi_ad9144_dma_m_src_axi_rresp,                                         //                                                                 .rresp
		output wire         axi_ad9144_dma_m_src_axi_rlast,                                         //                                                                 .rlast
		output wire         axi_ad9144_dma_m_src_axi_rvalid,                                        //                                                                 .rvalid
		input  wire         axi_ad9144_dma_m_src_axi_rready,                                        //                                                                 .rready
		output wire [11:0]  axi_ad9144_dma_s_axi_awaddr,                                            //                                             axi_ad9144_dma_s_axi.awaddr
		output wire [2:0]   axi_ad9144_dma_s_axi_awprot,                                            //                                                                 .awprot
		output wire         axi_ad9144_dma_s_axi_awvalid,                                           //                                                                 .awvalid
		input  wire         axi_ad9144_dma_s_axi_awready,                                           //                                                                 .awready
		output wire [31:0]  axi_ad9144_dma_s_axi_wdata,                                             //                                                                 .wdata
		output wire [3:0]   axi_ad9144_dma_s_axi_wstrb,                                             //                                                                 .wstrb
		output wire         axi_ad9144_dma_s_axi_wvalid,                                            //                                                                 .wvalid
		input  wire         axi_ad9144_dma_s_axi_wready,                                            //                                                                 .wready
		input  wire [1:0]   axi_ad9144_dma_s_axi_bresp,                                             //                                                                 .bresp
		input  wire         axi_ad9144_dma_s_axi_bvalid,                                            //                                                                 .bvalid
		output wire         axi_ad9144_dma_s_axi_bready,                                            //                                                                 .bready
		output wire [11:0]  axi_ad9144_dma_s_axi_araddr,                                            //                                                                 .araddr
		output wire [2:0]   axi_ad9144_dma_s_axi_arprot,                                            //                                                                 .arprot
		output wire         axi_ad9144_dma_s_axi_arvalid,                                           //                                                                 .arvalid
		input  wire         axi_ad9144_dma_s_axi_arready,                                           //                                                                 .arready
		input  wire [31:0]  axi_ad9144_dma_s_axi_rdata,                                             //                                                                 .rdata
		input  wire [1:0]   axi_ad9144_dma_s_axi_rresp,                                             //                                                                 .rresp
		input  wire         axi_ad9144_dma_s_axi_rvalid,                                            //                                                                 .rvalid
		output wire         axi_ad9144_dma_s_axi_rready,                                            //                                                                 .rready
		output wire [15:0]  axi_ad9680_core_s_axi_awaddr,                                           //                                            axi_ad9680_core_s_axi.awaddr
		output wire [2:0]   axi_ad9680_core_s_axi_awprot,                                           //                                                                 .awprot
		output wire         axi_ad9680_core_s_axi_awvalid,                                          //                                                                 .awvalid
		input  wire         axi_ad9680_core_s_axi_awready,                                          //                                                                 .awready
		output wire [31:0]  axi_ad9680_core_s_axi_wdata,                                            //                                                                 .wdata
		output wire [3:0]   axi_ad9680_core_s_axi_wstrb,                                            //                                                                 .wstrb
		output wire         axi_ad9680_core_s_axi_wvalid,                                           //                                                                 .wvalid
		input  wire         axi_ad9680_core_s_axi_wready,                                           //                                                                 .wready
		input  wire [1:0]   axi_ad9680_core_s_axi_bresp,                                            //                                                                 .bresp
		input  wire         axi_ad9680_core_s_axi_bvalid,                                           //                                                                 .bvalid
		output wire         axi_ad9680_core_s_axi_bready,                                           //                                                                 .bready
		output wire [15:0]  axi_ad9680_core_s_axi_araddr,                                           //                                                                 .araddr
		output wire [2:0]   axi_ad9680_core_s_axi_arprot,                                           //                                                                 .arprot
		output wire         axi_ad9680_core_s_axi_arvalid,                                          //                                                                 .arvalid
		input  wire         axi_ad9680_core_s_axi_arready,                                          //                                                                 .arready
		input  wire [31:0]  axi_ad9680_core_s_axi_rdata,                                            //                                                                 .rdata
		input  wire [1:0]   axi_ad9680_core_s_axi_rresp,                                            //                                                                 .rresp
		input  wire         axi_ad9680_core_s_axi_rvalid,                                           //                                                                 .rvalid
		output wire         axi_ad9680_core_s_axi_rready,                                           //                                                                 .rready
		input  wire [0:0]   axi_ad9680_dma_m_dest_axi_awid,                                         //                                        axi_ad9680_dma_m_dest_axi.awid
		input  wire [31:0]  axi_ad9680_dma_m_dest_axi_awaddr,                                       //                                                                 .awaddr
		input  wire [3:0]   axi_ad9680_dma_m_dest_axi_awlen,                                        //                                                                 .awlen
		input  wire [2:0]   axi_ad9680_dma_m_dest_axi_awsize,                                       //                                                                 .awsize
		input  wire [1:0]   axi_ad9680_dma_m_dest_axi_awburst,                                      //                                                                 .awburst
		input  wire [1:0]   axi_ad9680_dma_m_dest_axi_awlock,                                       //                                                                 .awlock
		input  wire [3:0]   axi_ad9680_dma_m_dest_axi_awcache,                                      //                                                                 .awcache
		input  wire [2:0]   axi_ad9680_dma_m_dest_axi_awprot,                                       //                                                                 .awprot
		input  wire         axi_ad9680_dma_m_dest_axi_awvalid,                                      //                                                                 .awvalid
		output wire         axi_ad9680_dma_m_dest_axi_awready,                                      //                                                                 .awready
		input  wire [0:0]   axi_ad9680_dma_m_dest_axi_wid,                                          //                                                                 .wid
		input  wire [127:0] axi_ad9680_dma_m_dest_axi_wdata,                                        //                                                                 .wdata
		input  wire [15:0]  axi_ad9680_dma_m_dest_axi_wstrb,                                        //                                                                 .wstrb
		input  wire         axi_ad9680_dma_m_dest_axi_wlast,                                        //                                                                 .wlast
		input  wire         axi_ad9680_dma_m_dest_axi_wvalid,                                       //                                                                 .wvalid
		output wire         axi_ad9680_dma_m_dest_axi_wready,                                       //                                                                 .wready
		output wire [0:0]   axi_ad9680_dma_m_dest_axi_bid,                                          //                                                                 .bid
		output wire [1:0]   axi_ad9680_dma_m_dest_axi_bresp,                                        //                                                                 .bresp
		output wire         axi_ad9680_dma_m_dest_axi_bvalid,                                       //                                                                 .bvalid
		input  wire         axi_ad9680_dma_m_dest_axi_bready,                                       //                                                                 .bready
		input  wire [0:0]   axi_ad9680_dma_m_dest_axi_arid,                                         //                                                                 .arid
		input  wire [31:0]  axi_ad9680_dma_m_dest_axi_araddr,                                       //                                                                 .araddr
		input  wire [3:0]   axi_ad9680_dma_m_dest_axi_arlen,                                        //                                                                 .arlen
		input  wire [2:0]   axi_ad9680_dma_m_dest_axi_arsize,                                       //                                                                 .arsize
		input  wire [1:0]   axi_ad9680_dma_m_dest_axi_arburst,                                      //                                                                 .arburst
		input  wire [1:0]   axi_ad9680_dma_m_dest_axi_arlock,                                       //                                                                 .arlock
		input  wire [3:0]   axi_ad9680_dma_m_dest_axi_arcache,                                      //                                                                 .arcache
		input  wire [2:0]   axi_ad9680_dma_m_dest_axi_arprot,                                       //                                                                 .arprot
		input  wire         axi_ad9680_dma_m_dest_axi_arvalid,                                      //                                                                 .arvalid
		output wire         axi_ad9680_dma_m_dest_axi_arready,                                      //                                                                 .arready
		output wire [0:0]   axi_ad9680_dma_m_dest_axi_rid,                                          //                                                                 .rid
		output wire [127:0] axi_ad9680_dma_m_dest_axi_rdata,                                        //                                                                 .rdata
		output wire [1:0]   axi_ad9680_dma_m_dest_axi_rresp,                                        //                                                                 .rresp
		output wire         axi_ad9680_dma_m_dest_axi_rlast,                                        //                                                                 .rlast
		output wire         axi_ad9680_dma_m_dest_axi_rvalid,                                       //                                                                 .rvalid
		input  wire         axi_ad9680_dma_m_dest_axi_rready,                                       //                                                                 .rready
		output wire [11:0]  axi_ad9680_dma_s_axi_awaddr,                                            //                                             axi_ad9680_dma_s_axi.awaddr
		output wire [2:0]   axi_ad9680_dma_s_axi_awprot,                                            //                                                                 .awprot
		output wire         axi_ad9680_dma_s_axi_awvalid,                                           //                                                                 .awvalid
		input  wire         axi_ad9680_dma_s_axi_awready,                                           //                                                                 .awready
		output wire [31:0]  axi_ad9680_dma_s_axi_wdata,                                             //                                                                 .wdata
		output wire [3:0]   axi_ad9680_dma_s_axi_wstrb,                                             //                                                                 .wstrb
		output wire         axi_ad9680_dma_s_axi_wvalid,                                            //                                                                 .wvalid
		input  wire         axi_ad9680_dma_s_axi_wready,                                            //                                                                 .wready
		input  wire [1:0]   axi_ad9680_dma_s_axi_bresp,                                             //                                                                 .bresp
		input  wire         axi_ad9680_dma_s_axi_bvalid,                                            //                                                                 .bvalid
		output wire         axi_ad9680_dma_s_axi_bready,                                            //                                                                 .bready
		output wire [11:0]  axi_ad9680_dma_s_axi_araddr,                                            //                                                                 .araddr
		output wire [2:0]   axi_ad9680_dma_s_axi_arprot,                                            //                                                                 .arprot
		output wire         axi_ad9680_dma_s_axi_arvalid,                                           //                                                                 .arvalid
		input  wire         axi_ad9680_dma_s_axi_arready,                                           //                                                                 .arready
		input  wire [31:0]  axi_ad9680_dma_s_axi_rdata,                                             //                                                                 .rdata
		input  wire [1:0]   axi_ad9680_dma_s_axi_rresp,                                             //                                                                 .rresp
		input  wire         axi_ad9680_dma_s_axi_rvalid,                                            //                                                                 .rvalid
		output wire         axi_ad9680_dma_s_axi_rready,                                            //                                                                 .rready
		input  wire         sys_clk_clk_clk,                                                        //                                                      sys_clk_clk.clk
		input  wire         sys_ddr3_cntrl_emif_usr_clk_clk,                                        //                                      sys_ddr3_cntrl_emif_usr_clk.clk
		input  wire         sys_dma_clk_clk_clk,                                                    //                                                  sys_dma_clk_clk.clk
		input  wire         axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset,            //            axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset.reset
		input  wire         axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset,                 //                 axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset.reset
		input  wire         sys_cpu_reset_reset_bridge_in_reset_reset,                              //                              sys_cpu_reset_reset_bridge_in_reset.reset
		input  wire         sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset, // sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset.reset
		input  wire [28:0]  sys_cpu_data_master_address,                                            //                                              sys_cpu_data_master.address
		output wire         sys_cpu_data_master_waitrequest,                                        //                                                                 .waitrequest
		input  wire [3:0]   sys_cpu_data_master_byteenable,                                         //                                                                 .byteenable
		input  wire         sys_cpu_data_master_read,                                               //                                                                 .read
		output wire [31:0]  sys_cpu_data_master_readdata,                                           //                                                                 .readdata
		output wire         sys_cpu_data_master_readdatavalid,                                      //                                                                 .readdatavalid
		input  wire         sys_cpu_data_master_write,                                              //                                                                 .write
		input  wire [31:0]  sys_cpu_data_master_writedata,                                          //                                                                 .writedata
		input  wire         sys_cpu_data_master_debugaccess,                                        //                                                                 .debugaccess
		input  wire [28:0]  sys_cpu_instruction_master_address,                                     //                                       sys_cpu_instruction_master.address
		output wire         sys_cpu_instruction_master_waitrequest,                                 //                                                                 .waitrequest
		input  wire         sys_cpu_instruction_master_read,                                        //                                                                 .read
		output wire [31:0]  sys_cpu_instruction_master_readdata,                                    //                                                                 .readdata
		output wire         sys_cpu_instruction_master_readdatavalid,                               //                                                                 .readdatavalid
		input  wire [27:0]  sys_ethernet_dma_rx_mm_write_address,                                   //                                     sys_ethernet_dma_rx_mm_write.address
		output wire         sys_ethernet_dma_rx_mm_write_waitrequest,                               //                                                                 .waitrequest
		input  wire [6:0]   sys_ethernet_dma_rx_mm_write_burstcount,                                //                                                                 .burstcount
		input  wire [7:0]   sys_ethernet_dma_rx_mm_write_byteenable,                                //                                                                 .byteenable
		input  wire         sys_ethernet_dma_rx_mm_write_write,                                     //                                                                 .write
		input  wire [63:0]  sys_ethernet_dma_rx_mm_write_writedata,                                 //                                                                 .writedata
		input  wire [27:0]  sys_ethernet_dma_tx_mm_read_address,                                    //                                      sys_ethernet_dma_tx_mm_read.address
		output wire         sys_ethernet_dma_tx_mm_read_waitrequest,                                //                                                                 .waitrequest
		input  wire [6:0]   sys_ethernet_dma_tx_mm_read_burstcount,                                 //                                                                 .burstcount
		input  wire [7:0]   sys_ethernet_dma_tx_mm_read_byteenable,                                 //                                                                 .byteenable
		input  wire         sys_ethernet_dma_tx_mm_read_read,                                       //                                                                 .read
		output wire [63:0]  sys_ethernet_dma_tx_mm_read_readdata,                                   //                                                                 .readdata
		output wire         sys_ethernet_dma_tx_mm_read_readdatavalid,                              //                                                                 .readdatavalid
		output wire [9:0]   ad9144_jesd204_lane_pll_reconfig_address,                               //                                 ad9144_jesd204_lane_pll_reconfig.address
		output wire         ad9144_jesd204_lane_pll_reconfig_write,                                 //                                                                 .write
		output wire         ad9144_jesd204_lane_pll_reconfig_read,                                  //                                                                 .read
		input  wire [31:0]  ad9144_jesd204_lane_pll_reconfig_readdata,                              //                                                                 .readdata
		output wire [31:0]  ad9144_jesd204_lane_pll_reconfig_writedata,                             //                                                                 .writedata
		input  wire         ad9144_jesd204_lane_pll_reconfig_waitrequest,                           //                                                                 .waitrequest
		output wire [9:0]   ad9144_jesd204_link_pll_reconfig_address,                               //                                 ad9144_jesd204_link_pll_reconfig.address
		output wire         ad9144_jesd204_link_pll_reconfig_write,                                 //                                                                 .write
		output wire         ad9144_jesd204_link_pll_reconfig_read,                                  //                                                                 .read
		input  wire [31:0]  ad9144_jesd204_link_pll_reconfig_readdata,                              //                                                                 .readdata
		output wire [31:0]  ad9144_jesd204_link_pll_reconfig_writedata,                             //                                                                 .writedata
		input  wire         ad9144_jesd204_link_pll_reconfig_waitrequest,                           //                                                                 .waitrequest
		output wire [9:0]   ad9680_jesd204_link_pll_reconfig_address,                               //                                 ad9680_jesd204_link_pll_reconfig.address
		output wire         ad9680_jesd204_link_pll_reconfig_write,                                 //                                                                 .write
		output wire         ad9680_jesd204_link_pll_reconfig_read,                                  //                                                                 .read
		input  wire [31:0]  ad9680_jesd204_link_pll_reconfig_readdata,                              //                                                                 .readdata
		output wire [31:0]  ad9680_jesd204_link_pll_reconfig_writedata,                             //                                                                 .writedata
		input  wire         ad9680_jesd204_link_pll_reconfig_waitrequest,                           //                                                                 .waitrequest
		output wire [9:0]   avl_adxcfg_0_rcfg_s0_address,                                           //                                             avl_adxcfg_0_rcfg_s0.address
		output wire         avl_adxcfg_0_rcfg_s0_write,                                             //                                                                 .write
		output wire         avl_adxcfg_0_rcfg_s0_read,                                              //                                                                 .read
		input  wire [31:0]  avl_adxcfg_0_rcfg_s0_readdata,                                          //                                                                 .readdata
		output wire [31:0]  avl_adxcfg_0_rcfg_s0_writedata,                                         //                                                                 .writedata
		input  wire         avl_adxcfg_0_rcfg_s0_waitrequest,                                       //                                                                 .waitrequest
		output wire [9:0]   avl_adxcfg_0_rcfg_s1_address,                                           //                                             avl_adxcfg_0_rcfg_s1.address
		output wire         avl_adxcfg_0_rcfg_s1_write,                                             //                                                                 .write
		output wire         avl_adxcfg_0_rcfg_s1_read,                                              //                                                                 .read
		input  wire [31:0]  avl_adxcfg_0_rcfg_s1_readdata,                                          //                                                                 .readdata
		output wire [31:0]  avl_adxcfg_0_rcfg_s1_writedata,                                         //                                                                 .writedata
		input  wire         avl_adxcfg_0_rcfg_s1_waitrequest,                                       //                                                                 .waitrequest
		output wire [9:0]   avl_adxcfg_1_rcfg_s0_address,                                           //                                             avl_adxcfg_1_rcfg_s0.address
		output wire         avl_adxcfg_1_rcfg_s0_write,                                             //                                                                 .write
		output wire         avl_adxcfg_1_rcfg_s0_read,                                              //                                                                 .read
		input  wire [31:0]  avl_adxcfg_1_rcfg_s0_readdata,                                          //                                                                 .readdata
		output wire [31:0]  avl_adxcfg_1_rcfg_s0_writedata,                                         //                                                                 .writedata
		input  wire         avl_adxcfg_1_rcfg_s0_waitrequest,                                       //                                                                 .waitrequest
		output wire [9:0]   avl_adxcfg_1_rcfg_s1_address,                                           //                                             avl_adxcfg_1_rcfg_s1.address
		output wire         avl_adxcfg_1_rcfg_s1_write,                                             //                                                                 .write
		output wire         avl_adxcfg_1_rcfg_s1_read,                                              //                                                                 .read
		input  wire [31:0]  avl_adxcfg_1_rcfg_s1_readdata,                                          //                                                                 .readdata
		output wire [31:0]  avl_adxcfg_1_rcfg_s1_writedata,                                         //                                                                 .writedata
		input  wire         avl_adxcfg_1_rcfg_s1_waitrequest,                                       //                                                                 .waitrequest
		output wire [9:0]   avl_adxcfg_2_rcfg_s0_address,                                           //                                             avl_adxcfg_2_rcfg_s0.address
		output wire         avl_adxcfg_2_rcfg_s0_write,                                             //                                                                 .write
		output wire         avl_adxcfg_2_rcfg_s0_read,                                              //                                                                 .read
		input  wire [31:0]  avl_adxcfg_2_rcfg_s0_readdata,                                          //                                                                 .readdata
		output wire [31:0]  avl_adxcfg_2_rcfg_s0_writedata,                                         //                                                                 .writedata
		input  wire         avl_adxcfg_2_rcfg_s0_waitrequest,                                       //                                                                 .waitrequest
		output wire [9:0]   avl_adxcfg_2_rcfg_s1_address,                                           //                                             avl_adxcfg_2_rcfg_s1.address
		output wire         avl_adxcfg_2_rcfg_s1_write,                                             //                                                                 .write
		output wire         avl_adxcfg_2_rcfg_s1_read,                                              //                                                                 .read
		input  wire [31:0]  avl_adxcfg_2_rcfg_s1_readdata,                                          //                                                                 .readdata
		output wire [31:0]  avl_adxcfg_2_rcfg_s1_writedata,                                         //                                                                 .writedata
		input  wire         avl_adxcfg_2_rcfg_s1_waitrequest,                                       //                                                                 .waitrequest
		output wire [9:0]   avl_adxcfg_3_rcfg_s0_address,                                           //                                             avl_adxcfg_3_rcfg_s0.address
		output wire         avl_adxcfg_3_rcfg_s0_write,                                             //                                                                 .write
		output wire         avl_adxcfg_3_rcfg_s0_read,                                              //                                                                 .read
		input  wire [31:0]  avl_adxcfg_3_rcfg_s0_readdata,                                          //                                                                 .readdata
		output wire [31:0]  avl_adxcfg_3_rcfg_s0_writedata,                                         //                                                                 .writedata
		input  wire         avl_adxcfg_3_rcfg_s0_waitrequest,                                       //                                                                 .waitrequest
		output wire [9:0]   avl_adxcfg_3_rcfg_s1_address,                                           //                                             avl_adxcfg_3_rcfg_s1.address
		output wire         avl_adxcfg_3_rcfg_s1_write,                                             //                                                                 .write
		output wire         avl_adxcfg_3_rcfg_s1_read,                                              //                                                                 .read
		input  wire [31:0]  avl_adxcfg_3_rcfg_s1_readdata,                                          //                                                                 .readdata
		output wire [31:0]  avl_adxcfg_3_rcfg_s1_writedata,                                         //                                                                 .writedata
		input  wire         avl_adxcfg_3_rcfg_s1_waitrequest,                                       //                                                                 .waitrequest
		output wire [8:0]   sys_cpu_debug_mem_slave_address,                                        //                                          sys_cpu_debug_mem_slave.address
		output wire         sys_cpu_debug_mem_slave_write,                                          //                                                                 .write
		output wire         sys_cpu_debug_mem_slave_read,                                           //                                                                 .read
		input  wire [31:0]  sys_cpu_debug_mem_slave_readdata,                                       //                                                                 .readdata
		output wire [31:0]  sys_cpu_debug_mem_slave_writedata,                                      //                                                                 .writedata
		output wire [3:0]   sys_cpu_debug_mem_slave_byteenable,                                     //                                                                 .byteenable
		input  wire         sys_cpu_debug_mem_slave_waitrequest,                                    //                                                                 .waitrequest
		output wire         sys_cpu_debug_mem_slave_debugaccess,                                    //                                                                 .debugaccess
		output wire [21:0]  sys_ddr3_cntrl_ctrl_amm_0_address,                                      //                                        sys_ddr3_cntrl_ctrl_amm_0.address
		output wire         sys_ddr3_cntrl_ctrl_amm_0_write,                                        //                                                                 .write
		output wire         sys_ddr3_cntrl_ctrl_amm_0_read,                                         //                                                                 .read
		input  wire [511:0] sys_ddr3_cntrl_ctrl_amm_0_readdata,                                     //                                                                 .readdata
		output wire [511:0] sys_ddr3_cntrl_ctrl_amm_0_writedata,                                    //                                                                 .writedata
		output wire [6:0]   sys_ddr3_cntrl_ctrl_amm_0_burstcount,                                   //                                                                 .burstcount
		output wire [63:0]  sys_ddr3_cntrl_ctrl_amm_0_byteenable,                                   //                                                                 .byteenable
		input  wire         sys_ddr3_cntrl_ctrl_amm_0_readdatavalid,                                //                                                                 .readdatavalid
		input  wire         sys_ddr3_cntrl_ctrl_amm_0_waitrequest,                                  //                                                                 .waitrequest
		output wire [7:0]   sys_ethernet_control_port_address,                                      //                                        sys_ethernet_control_port.address
		output wire         sys_ethernet_control_port_write,                                        //                                                                 .write
		output wire         sys_ethernet_control_port_read,                                         //                                                                 .read
		input  wire [31:0]  sys_ethernet_control_port_readdata,                                     //                                                                 .readdata
		output wire [31:0]  sys_ethernet_control_port_writedata,                                    //                                                                 .writedata
		input  wire         sys_ethernet_control_port_waitrequest,                                  //                                                                 .waitrequest
		output wire [2:0]   sys_ethernet_dma_rx_csr_address,                                        //                                          sys_ethernet_dma_rx_csr.address
		output wire         sys_ethernet_dma_rx_csr_write,                                          //                                                                 .write
		output wire         sys_ethernet_dma_rx_csr_read,                                           //                                                                 .read
		input  wire [31:0]  sys_ethernet_dma_rx_csr_readdata,                                       //                                                                 .readdata
		output wire [31:0]  sys_ethernet_dma_rx_csr_writedata,                                      //                                                                 .writedata
		output wire [3:0]   sys_ethernet_dma_rx_csr_byteenable,                                     //                                                                 .byteenable
		output wire         sys_ethernet_dma_rx_descriptor_slave_write,                             //                             sys_ethernet_dma_rx_descriptor_slave.write
		output wire [255:0] sys_ethernet_dma_rx_descriptor_slave_writedata,                         //                                                                 .writedata
		output wire [31:0]  sys_ethernet_dma_rx_descriptor_slave_byteenable,                        //                                                                 .byteenable
		input  wire         sys_ethernet_dma_rx_descriptor_slave_waitrequest,                       //                                                                 .waitrequest
		output wire [0:0]   sys_ethernet_dma_rx_response_address,                                   //                                     sys_ethernet_dma_rx_response.address
		output wire         sys_ethernet_dma_rx_response_read,                                      //                                                                 .read
		input  wire [31:0]  sys_ethernet_dma_rx_response_readdata,                                  //                                                                 .readdata
		output wire [3:0]   sys_ethernet_dma_rx_response_byteenable,                                //                                                                 .byteenable
		input  wire         sys_ethernet_dma_rx_response_waitrequest,                               //                                                                 .waitrequest
		output wire [2:0]   sys_ethernet_dma_tx_csr_address,                                        //                                          sys_ethernet_dma_tx_csr.address
		output wire         sys_ethernet_dma_tx_csr_write,                                          //                                                                 .write
		output wire         sys_ethernet_dma_tx_csr_read,                                           //                                                                 .read
		input  wire [31:0]  sys_ethernet_dma_tx_csr_readdata,                                       //                                                                 .readdata
		output wire [31:0]  sys_ethernet_dma_tx_csr_writedata,                                      //                                                                 .writedata
		output wire [3:0]   sys_ethernet_dma_tx_csr_byteenable,                                     //                                                                 .byteenable
		output wire         sys_ethernet_dma_tx_descriptor_slave_write,                             //                             sys_ethernet_dma_tx_descriptor_slave.write
		output wire [255:0] sys_ethernet_dma_tx_descriptor_slave_writedata,                         //                                                                 .writedata
		output wire [31:0]  sys_ethernet_dma_tx_descriptor_slave_byteenable,                        //                                                                 .byteenable
		input  wire         sys_ethernet_dma_tx_descriptor_slave_waitrequest,                       //                                                                 .waitrequest
		output wire [23:0]  sys_flash_uas_address,                                                  //                                                    sys_flash_uas.address
		output wire         sys_flash_uas_write,                                                    //                                                                 .write
		output wire         sys_flash_uas_read,                                                     //                                                                 .read
		input  wire [31:0]  sys_flash_uas_readdata,                                                 //                                                                 .readdata
		output wire [31:0]  sys_flash_uas_writedata,                                                //                                                                 .writedata
		output wire [2:0]   sys_flash_uas_burstcount,                                               //                                                                 .burstcount
		output wire [3:0]   sys_flash_uas_byteenable,                                               //                                                                 .byteenable
		input  wire         sys_flash_uas_readdatavalid,                                            //                                                                 .readdatavalid
		input  wire         sys_flash_uas_waitrequest,                                              //                                                                 .waitrequest
		output wire         sys_flash_uas_lock,                                                     //                                                                 .lock
		output wire         sys_flash_uas_debugaccess,                                              //                                                                 .debugaccess
		output wire [1:0]   sys_gpio_bd_s1_address,                                                 //                                                   sys_gpio_bd_s1.address
		output wire         sys_gpio_bd_s1_write,                                                   //                                                                 .write
		input  wire [31:0]  sys_gpio_bd_s1_readdata,                                                //                                                                 .readdata
		output wire [31:0]  sys_gpio_bd_s1_writedata,                                               //                                                                 .writedata
		output wire         sys_gpio_bd_s1_chipselect,                                              //                                                                 .chipselect
		output wire [1:0]   sys_gpio_in_s1_address,                                                 //                                                   sys_gpio_in_s1.address
		output wire         sys_gpio_in_s1_write,                                                   //                                                                 .write
		input  wire [31:0]  sys_gpio_in_s1_readdata,                                                //                                                                 .readdata
		output wire [31:0]  sys_gpio_in_s1_writedata,                                               //                                                                 .writedata
		output wire         sys_gpio_in_s1_chipselect,                                              //                                                                 .chipselect
		output wire [1:0]   sys_gpio_out_s1_address,                                                //                                                  sys_gpio_out_s1.address
		output wire         sys_gpio_out_s1_write,                                                  //                                                                 .write
		input  wire [31:0]  sys_gpio_out_s1_readdata,                                               //                                                                 .readdata
		output wire [31:0]  sys_gpio_out_s1_writedata,                                              //                                                                 .writedata
		output wire         sys_gpio_out_s1_chipselect,                                             //                                                                 .chipselect
		output wire [0:0]   sys_id_control_slave_address,                                           //                                             sys_id_control_slave.address
		input  wire [31:0]  sys_id_control_slave_readdata,                                          //                                                                 .readdata
		output wire [15:0]  sys_int_mem_s1_address,                                                 //                                                   sys_int_mem_s1.address
		output wire         sys_int_mem_s1_write,                                                   //                                                                 .write
		input  wire [31:0]  sys_int_mem_s1_readdata,                                                //                                                                 .readdata
		output wire [31:0]  sys_int_mem_s1_writedata,                                               //                                                                 .writedata
		output wire [3:0]   sys_int_mem_s1_byteenable,                                              //                                                                 .byteenable
		output wire         sys_int_mem_s1_chipselect,                                              //                                                                 .chipselect
		output wire         sys_int_mem_s1_clken,                                                   //                                                                 .clken
		output wire [2:0]   sys_spi_spi_control_port_address,                                       //                                         sys_spi_spi_control_port.address
		output wire         sys_spi_spi_control_port_write,                                         //                                                                 .write
		output wire         sys_spi_spi_control_port_read,                                          //                                                                 .read
		input  wire [15:0]  sys_spi_spi_control_port_readdata,                                      //                                                                 .readdata
		output wire [15:0]  sys_spi_spi_control_port_writedata,                                     //                                                                 .writedata
		output wire         sys_spi_spi_control_port_chipselect,                                    //                                                                 .chipselect
		output wire [2:0]   sys_timer_1_s1_address,                                                 //                                                   sys_timer_1_s1.address
		output wire         sys_timer_1_s1_write,                                                   //                                                                 .write
		input  wire [15:0]  sys_timer_1_s1_readdata,                                                //                                                                 .readdata
		output wire [15:0]  sys_timer_1_s1_writedata,                                               //                                                                 .writedata
		output wire         sys_timer_1_s1_chipselect,                                              //                                                                 .chipselect
		output wire [2:0]   sys_timer_2_s1_address,                                                 //                                                   sys_timer_2_s1.address
		output wire         sys_timer_2_s1_write,                                                   //                                                                 .write
		input  wire [15:0]  sys_timer_2_s1_readdata,                                                //                                                                 .readdata
		output wire [15:0]  sys_timer_2_s1_writedata,                                               //                                                                 .writedata
		output wire         sys_timer_2_s1_chipselect,                                              //                                                                 .chipselect
		output wire [0:0]   sys_uart_avalon_jtag_slave_address,                                     //                                       sys_uart_avalon_jtag_slave.address
		output wire         sys_uart_avalon_jtag_slave_write,                                       //                                                                 .write
		output wire         sys_uart_avalon_jtag_slave_read,                                        //                                                                 .read
		input  wire [31:0]  sys_uart_avalon_jtag_slave_readdata,                                    //                                                                 .readdata
		output wire [31:0]  sys_uart_avalon_jtag_slave_writedata,                                   //                                                                 .writedata
		input  wire         sys_uart_avalon_jtag_slave_waitrequest,                                 //                                                                 .waitrequest
		output wire         sys_uart_avalon_jtag_slave_chipselect                                   //                                                                 .chipselect
	);

	wire          sys_cpu_data_master_translator_avalon_universal_master_0_waitrequest;                            // sys_cpu_data_master_agent:av_waitrequest -> sys_cpu_data_master_translator:uav_waitrequest
	wire   [31:0] sys_cpu_data_master_translator_avalon_universal_master_0_readdata;                               // sys_cpu_data_master_agent:av_readdata -> sys_cpu_data_master_translator:uav_readdata
	wire          sys_cpu_data_master_translator_avalon_universal_master_0_debugaccess;                            // sys_cpu_data_master_translator:uav_debugaccess -> sys_cpu_data_master_agent:av_debugaccess
	wire   [31:0] sys_cpu_data_master_translator_avalon_universal_master_0_address;                                // sys_cpu_data_master_translator:uav_address -> sys_cpu_data_master_agent:av_address
	wire          sys_cpu_data_master_translator_avalon_universal_master_0_read;                                   // sys_cpu_data_master_translator:uav_read -> sys_cpu_data_master_agent:av_read
	wire    [3:0] sys_cpu_data_master_translator_avalon_universal_master_0_byteenable;                             // sys_cpu_data_master_translator:uav_byteenable -> sys_cpu_data_master_agent:av_byteenable
	wire          sys_cpu_data_master_translator_avalon_universal_master_0_readdatavalid;                          // sys_cpu_data_master_agent:av_readdatavalid -> sys_cpu_data_master_translator:uav_readdatavalid
	wire          sys_cpu_data_master_translator_avalon_universal_master_0_lock;                                   // sys_cpu_data_master_translator:uav_lock -> sys_cpu_data_master_agent:av_lock
	wire          sys_cpu_data_master_translator_avalon_universal_master_0_write;                                  // sys_cpu_data_master_translator:uav_write -> sys_cpu_data_master_agent:av_write
	wire   [31:0] sys_cpu_data_master_translator_avalon_universal_master_0_writedata;                              // sys_cpu_data_master_translator:uav_writedata -> sys_cpu_data_master_agent:av_writedata
	wire    [2:0] sys_cpu_data_master_translator_avalon_universal_master_0_burstcount;                             // sys_cpu_data_master_translator:uav_burstcount -> sys_cpu_data_master_agent:av_burstcount
	wire          sys_cpu_instruction_master_translator_avalon_universal_master_0_waitrequest;                     // sys_cpu_instruction_master_agent:av_waitrequest -> sys_cpu_instruction_master_translator:uav_waitrequest
	wire   [31:0] sys_cpu_instruction_master_translator_avalon_universal_master_0_readdata;                        // sys_cpu_instruction_master_agent:av_readdata -> sys_cpu_instruction_master_translator:uav_readdata
	wire          sys_cpu_instruction_master_translator_avalon_universal_master_0_debugaccess;                     // sys_cpu_instruction_master_translator:uav_debugaccess -> sys_cpu_instruction_master_agent:av_debugaccess
	wire   [31:0] sys_cpu_instruction_master_translator_avalon_universal_master_0_address;                         // sys_cpu_instruction_master_translator:uav_address -> sys_cpu_instruction_master_agent:av_address
	wire          sys_cpu_instruction_master_translator_avalon_universal_master_0_read;                            // sys_cpu_instruction_master_translator:uav_read -> sys_cpu_instruction_master_agent:av_read
	wire    [3:0] sys_cpu_instruction_master_translator_avalon_universal_master_0_byteenable;                      // sys_cpu_instruction_master_translator:uav_byteenable -> sys_cpu_instruction_master_agent:av_byteenable
	wire          sys_cpu_instruction_master_translator_avalon_universal_master_0_readdatavalid;                   // sys_cpu_instruction_master_agent:av_readdatavalid -> sys_cpu_instruction_master_translator:uav_readdatavalid
	wire          sys_cpu_instruction_master_translator_avalon_universal_master_0_lock;                            // sys_cpu_instruction_master_translator:uav_lock -> sys_cpu_instruction_master_agent:av_lock
	wire          sys_cpu_instruction_master_translator_avalon_universal_master_0_write;                           // sys_cpu_instruction_master_translator:uav_write -> sys_cpu_instruction_master_agent:av_write
	wire   [31:0] sys_cpu_instruction_master_translator_avalon_universal_master_0_writedata;                       // sys_cpu_instruction_master_translator:uav_writedata -> sys_cpu_instruction_master_agent:av_writedata
	wire    [2:0] sys_cpu_instruction_master_translator_avalon_universal_master_0_burstcount;                      // sys_cpu_instruction_master_translator:uav_burstcount -> sys_cpu_instruction_master_agent:av_burstcount
	wire          rsp_mux_002_src_valid;                                                                           // rsp_mux_002:src_valid -> axi_ad9680_dma_m_dest_axi_agent:write_rp_valid
	wire  [237:0] rsp_mux_002_src_data;                                                                            // rsp_mux_002:src_data -> axi_ad9680_dma_m_dest_axi_agent:write_rp_data
	wire          rsp_mux_002_src_ready;                                                                           // axi_ad9680_dma_m_dest_axi_agent:write_rp_ready -> rsp_mux_002:src_ready
	wire   [44:0] rsp_mux_002_src_channel;                                                                         // rsp_mux_002:src_channel -> axi_ad9680_dma_m_dest_axi_agent:write_rp_channel
	wire          rsp_mux_002_src_startofpacket;                                                                   // rsp_mux_002:src_startofpacket -> axi_ad9680_dma_m_dest_axi_agent:write_rp_startofpacket
	wire          rsp_mux_002_src_endofpacket;                                                                     // rsp_mux_002:src_endofpacket -> axi_ad9680_dma_m_dest_axi_agent:write_rp_endofpacket
	wire          rsp_mux_003_src_valid;                                                                           // rsp_mux_003:src_valid -> axi_ad9680_dma_m_dest_axi_agent:read_rp_valid
	wire  [237:0] rsp_mux_003_src_data;                                                                            // rsp_mux_003:src_data -> axi_ad9680_dma_m_dest_axi_agent:read_rp_data
	wire          rsp_mux_003_src_ready;                                                                           // axi_ad9680_dma_m_dest_axi_agent:read_rp_ready -> rsp_mux_003:src_ready
	wire   [44:0] rsp_mux_003_src_channel;                                                                         // rsp_mux_003:src_channel -> axi_ad9680_dma_m_dest_axi_agent:read_rp_channel
	wire          rsp_mux_003_src_startofpacket;                                                                   // rsp_mux_003:src_startofpacket -> axi_ad9680_dma_m_dest_axi_agent:read_rp_startofpacket
	wire          rsp_mux_003_src_endofpacket;                                                                     // rsp_mux_003:src_endofpacket -> axi_ad9680_dma_m_dest_axi_agent:read_rp_endofpacket
	wire          rsp_mux_004_src_valid;                                                                           // rsp_mux_004:src_valid -> axi_ad9144_dma_m_src_axi_agent:write_rp_valid
	wire  [237:0] rsp_mux_004_src_data;                                                                            // rsp_mux_004:src_data -> axi_ad9144_dma_m_src_axi_agent:write_rp_data
	wire          rsp_mux_004_src_ready;                                                                           // axi_ad9144_dma_m_src_axi_agent:write_rp_ready -> rsp_mux_004:src_ready
	wire   [44:0] rsp_mux_004_src_channel;                                                                         // rsp_mux_004:src_channel -> axi_ad9144_dma_m_src_axi_agent:write_rp_channel
	wire          rsp_mux_004_src_startofpacket;                                                                   // rsp_mux_004:src_startofpacket -> axi_ad9144_dma_m_src_axi_agent:write_rp_startofpacket
	wire          rsp_mux_004_src_endofpacket;                                                                     // rsp_mux_004:src_endofpacket -> axi_ad9144_dma_m_src_axi_agent:write_rp_endofpacket
	wire          rsp_mux_005_src_valid;                                                                           // rsp_mux_005:src_valid -> axi_ad9144_dma_m_src_axi_agent:read_rp_valid
	wire  [237:0] rsp_mux_005_src_data;                                                                            // rsp_mux_005:src_data -> axi_ad9144_dma_m_src_axi_agent:read_rp_data
	wire          rsp_mux_005_src_ready;                                                                           // axi_ad9144_dma_m_src_axi_agent:read_rp_ready -> rsp_mux_005:src_ready
	wire   [44:0] rsp_mux_005_src_channel;                                                                         // rsp_mux_005:src_channel -> axi_ad9144_dma_m_src_axi_agent:read_rp_channel
	wire          rsp_mux_005_src_startofpacket;                                                                   // rsp_mux_005:src_startofpacket -> axi_ad9144_dma_m_src_axi_agent:read_rp_startofpacket
	wire          rsp_mux_005_src_endofpacket;                                                                     // rsp_mux_005:src_endofpacket -> axi_ad9144_dma_m_src_axi_agent:read_rp_endofpacket
	wire          sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_waitrequest;                    // sys_ethernet_dma_tx_mm_read_agent:av_waitrequest -> sys_ethernet_dma_tx_mm_read_translator:uav_waitrequest
	wire   [63:0] sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_readdata;                       // sys_ethernet_dma_tx_mm_read_agent:av_readdata -> sys_ethernet_dma_tx_mm_read_translator:uav_readdata
	wire          sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_debugaccess;                    // sys_ethernet_dma_tx_mm_read_translator:uav_debugaccess -> sys_ethernet_dma_tx_mm_read_agent:av_debugaccess
	wire   [31:0] sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_address;                        // sys_ethernet_dma_tx_mm_read_translator:uav_address -> sys_ethernet_dma_tx_mm_read_agent:av_address
	wire          sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_read;                           // sys_ethernet_dma_tx_mm_read_translator:uav_read -> sys_ethernet_dma_tx_mm_read_agent:av_read
	wire    [7:0] sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_byteenable;                     // sys_ethernet_dma_tx_mm_read_translator:uav_byteenable -> sys_ethernet_dma_tx_mm_read_agent:av_byteenable
	wire          sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_readdatavalid;                  // sys_ethernet_dma_tx_mm_read_agent:av_readdatavalid -> sys_ethernet_dma_tx_mm_read_translator:uav_readdatavalid
	wire          sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_lock;                           // sys_ethernet_dma_tx_mm_read_translator:uav_lock -> sys_ethernet_dma_tx_mm_read_agent:av_lock
	wire          sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_write;                          // sys_ethernet_dma_tx_mm_read_translator:uav_write -> sys_ethernet_dma_tx_mm_read_agent:av_write
	wire   [63:0] sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_writedata;                      // sys_ethernet_dma_tx_mm_read_translator:uav_writedata -> sys_ethernet_dma_tx_mm_read_agent:av_writedata
	wire    [9:0] sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_burstcount;                     // sys_ethernet_dma_tx_mm_read_translator:uav_burstcount -> sys_ethernet_dma_tx_mm_read_agent:av_burstcount
	wire          rsp_mux_006_src_valid;                                                                           // rsp_mux_006:src_valid -> sys_ethernet_dma_tx_mm_read_agent:rp_valid
	wire  [165:0] rsp_mux_006_src_data;                                                                            // rsp_mux_006:src_data -> sys_ethernet_dma_tx_mm_read_agent:rp_data
	wire          rsp_mux_006_src_ready;                                                                           // sys_ethernet_dma_tx_mm_read_agent:rp_ready -> rsp_mux_006:src_ready
	wire   [44:0] rsp_mux_006_src_channel;                                                                         // rsp_mux_006:src_channel -> sys_ethernet_dma_tx_mm_read_agent:rp_channel
	wire          rsp_mux_006_src_startofpacket;                                                                   // rsp_mux_006:src_startofpacket -> sys_ethernet_dma_tx_mm_read_agent:rp_startofpacket
	wire          rsp_mux_006_src_endofpacket;                                                                     // rsp_mux_006:src_endofpacket -> sys_ethernet_dma_tx_mm_read_agent:rp_endofpacket
	wire          sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_waitrequest;                   // sys_ethernet_dma_rx_mm_write_agent:av_waitrequest -> sys_ethernet_dma_rx_mm_write_translator:uav_waitrequest
	wire   [63:0] sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_readdata;                      // sys_ethernet_dma_rx_mm_write_agent:av_readdata -> sys_ethernet_dma_rx_mm_write_translator:uav_readdata
	wire          sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_debugaccess;                   // sys_ethernet_dma_rx_mm_write_translator:uav_debugaccess -> sys_ethernet_dma_rx_mm_write_agent:av_debugaccess
	wire   [31:0] sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_address;                       // sys_ethernet_dma_rx_mm_write_translator:uav_address -> sys_ethernet_dma_rx_mm_write_agent:av_address
	wire          sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_read;                          // sys_ethernet_dma_rx_mm_write_translator:uav_read -> sys_ethernet_dma_rx_mm_write_agent:av_read
	wire    [7:0] sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_byteenable;                    // sys_ethernet_dma_rx_mm_write_translator:uav_byteenable -> sys_ethernet_dma_rx_mm_write_agent:av_byteenable
	wire          sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_readdatavalid;                 // sys_ethernet_dma_rx_mm_write_agent:av_readdatavalid -> sys_ethernet_dma_rx_mm_write_translator:uav_readdatavalid
	wire          sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_lock;                          // sys_ethernet_dma_rx_mm_write_translator:uav_lock -> sys_ethernet_dma_rx_mm_write_agent:av_lock
	wire          sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_write;                         // sys_ethernet_dma_rx_mm_write_translator:uav_write -> sys_ethernet_dma_rx_mm_write_agent:av_write
	wire   [63:0] sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_writedata;                     // sys_ethernet_dma_rx_mm_write_translator:uav_writedata -> sys_ethernet_dma_rx_mm_write_agent:av_writedata
	wire    [9:0] sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_burstcount;                    // sys_ethernet_dma_rx_mm_write_translator:uav_burstcount -> sys_ethernet_dma_rx_mm_write_agent:av_burstcount
	wire          rsp_mux_007_src_valid;                                                                           // rsp_mux_007:src_valid -> sys_ethernet_dma_rx_mm_write_agent:rp_valid
	wire  [165:0] rsp_mux_007_src_data;                                                                            // rsp_mux_007:src_data -> sys_ethernet_dma_rx_mm_write_agent:rp_data
	wire          rsp_mux_007_src_ready;                                                                           // sys_ethernet_dma_rx_mm_write_agent:rp_ready -> rsp_mux_007:src_ready
	wire   [44:0] rsp_mux_007_src_channel;                                                                         // rsp_mux_007:src_channel -> sys_ethernet_dma_rx_mm_write_agent:rp_channel
	wire          rsp_mux_007_src_startofpacket;                                                                   // rsp_mux_007:src_startofpacket -> sys_ethernet_dma_rx_mm_write_agent:rp_startofpacket
	wire          rsp_mux_007_src_endofpacket;                                                                     // rsp_mux_007:src_endofpacket -> sys_ethernet_dma_rx_mm_write_agent:rp_endofpacket
	wire   [31:0] sys_uart_avalon_jtag_slave_agent_m0_readdata;                                                    // sys_uart_avalon_jtag_slave_translator:uav_readdata -> sys_uart_avalon_jtag_slave_agent:m0_readdata
	wire          sys_uart_avalon_jtag_slave_agent_m0_waitrequest;                                                 // sys_uart_avalon_jtag_slave_translator:uav_waitrequest -> sys_uart_avalon_jtag_slave_agent:m0_waitrequest
	wire          sys_uart_avalon_jtag_slave_agent_m0_debugaccess;                                                 // sys_uart_avalon_jtag_slave_agent:m0_debugaccess -> sys_uart_avalon_jtag_slave_translator:uav_debugaccess
	wire   [31:0] sys_uart_avalon_jtag_slave_agent_m0_address;                                                     // sys_uart_avalon_jtag_slave_agent:m0_address -> sys_uart_avalon_jtag_slave_translator:uav_address
	wire    [3:0] sys_uart_avalon_jtag_slave_agent_m0_byteenable;                                                  // sys_uart_avalon_jtag_slave_agent:m0_byteenable -> sys_uart_avalon_jtag_slave_translator:uav_byteenable
	wire          sys_uart_avalon_jtag_slave_agent_m0_read;                                                        // sys_uart_avalon_jtag_slave_agent:m0_read -> sys_uart_avalon_jtag_slave_translator:uav_read
	wire          sys_uart_avalon_jtag_slave_agent_m0_readdatavalid;                                               // sys_uart_avalon_jtag_slave_translator:uav_readdatavalid -> sys_uart_avalon_jtag_slave_agent:m0_readdatavalid
	wire          sys_uart_avalon_jtag_slave_agent_m0_lock;                                                        // sys_uart_avalon_jtag_slave_agent:m0_lock -> sys_uart_avalon_jtag_slave_translator:uav_lock
	wire   [31:0] sys_uart_avalon_jtag_slave_agent_m0_writedata;                                                   // sys_uart_avalon_jtag_slave_agent:m0_writedata -> sys_uart_avalon_jtag_slave_translator:uav_writedata
	wire          sys_uart_avalon_jtag_slave_agent_m0_write;                                                       // sys_uart_avalon_jtag_slave_agent:m0_write -> sys_uart_avalon_jtag_slave_translator:uav_write
	wire    [2:0] sys_uart_avalon_jtag_slave_agent_m0_burstcount;                                                  // sys_uart_avalon_jtag_slave_agent:m0_burstcount -> sys_uart_avalon_jtag_slave_translator:uav_burstcount
	wire          sys_uart_avalon_jtag_slave_agent_rf_source_valid;                                                // sys_uart_avalon_jtag_slave_agent:rf_source_valid -> sys_uart_avalon_jtag_slave_agent_rsp_fifo:in_valid
	wire  [130:0] sys_uart_avalon_jtag_slave_agent_rf_source_data;                                                 // sys_uart_avalon_jtag_slave_agent:rf_source_data -> sys_uart_avalon_jtag_slave_agent_rsp_fifo:in_data
	wire          sys_uart_avalon_jtag_slave_agent_rf_source_ready;                                                // sys_uart_avalon_jtag_slave_agent_rsp_fifo:in_ready -> sys_uart_avalon_jtag_slave_agent:rf_source_ready
	wire          sys_uart_avalon_jtag_slave_agent_rf_source_startofpacket;                                        // sys_uart_avalon_jtag_slave_agent:rf_source_startofpacket -> sys_uart_avalon_jtag_slave_agent_rsp_fifo:in_startofpacket
	wire          sys_uart_avalon_jtag_slave_agent_rf_source_endofpacket;                                          // sys_uart_avalon_jtag_slave_agent:rf_source_endofpacket -> sys_uart_avalon_jtag_slave_agent_rsp_fifo:in_endofpacket
	wire          sys_uart_avalon_jtag_slave_agent_rsp_fifo_out_valid;                                             // sys_uart_avalon_jtag_slave_agent_rsp_fifo:out_valid -> sys_uart_avalon_jtag_slave_agent:rf_sink_valid
	wire  [130:0] sys_uart_avalon_jtag_slave_agent_rsp_fifo_out_data;                                              // sys_uart_avalon_jtag_slave_agent_rsp_fifo:out_data -> sys_uart_avalon_jtag_slave_agent:rf_sink_data
	wire          sys_uart_avalon_jtag_slave_agent_rsp_fifo_out_ready;                                             // sys_uart_avalon_jtag_slave_agent:rf_sink_ready -> sys_uart_avalon_jtag_slave_agent_rsp_fifo:out_ready
	wire          sys_uart_avalon_jtag_slave_agent_rsp_fifo_out_startofpacket;                                     // sys_uart_avalon_jtag_slave_agent_rsp_fifo:out_startofpacket -> sys_uart_avalon_jtag_slave_agent:rf_sink_startofpacket
	wire          sys_uart_avalon_jtag_slave_agent_rsp_fifo_out_endofpacket;                                       // sys_uart_avalon_jtag_slave_agent_rsp_fifo:out_endofpacket -> sys_uart_avalon_jtag_slave_agent:rf_sink_endofpacket
	wire          sys_uart_avalon_jtag_slave_agent_rdata_fifo_src_valid;                                           // sys_uart_avalon_jtag_slave_agent:rdata_fifo_src_valid -> sys_uart_avalon_jtag_slave_agent_rdata_fifo:in_valid
	wire   [33:0] sys_uart_avalon_jtag_slave_agent_rdata_fifo_src_data;                                            // sys_uart_avalon_jtag_slave_agent:rdata_fifo_src_data -> sys_uart_avalon_jtag_slave_agent_rdata_fifo:in_data
	wire          sys_uart_avalon_jtag_slave_agent_rdata_fifo_src_ready;                                           // sys_uart_avalon_jtag_slave_agent_rdata_fifo:in_ready -> sys_uart_avalon_jtag_slave_agent:rdata_fifo_src_ready
	wire   [31:0] sys_ethernet_control_port_agent_m0_readdata;                                                     // sys_ethernet_control_port_translator:uav_readdata -> sys_ethernet_control_port_agent:m0_readdata
	wire          sys_ethernet_control_port_agent_m0_waitrequest;                                                  // sys_ethernet_control_port_translator:uav_waitrequest -> sys_ethernet_control_port_agent:m0_waitrequest
	wire          sys_ethernet_control_port_agent_m0_debugaccess;                                                  // sys_ethernet_control_port_agent:m0_debugaccess -> sys_ethernet_control_port_translator:uav_debugaccess
	wire   [31:0] sys_ethernet_control_port_agent_m0_address;                                                      // sys_ethernet_control_port_agent:m0_address -> sys_ethernet_control_port_translator:uav_address
	wire    [3:0] sys_ethernet_control_port_agent_m0_byteenable;                                                   // sys_ethernet_control_port_agent:m0_byteenable -> sys_ethernet_control_port_translator:uav_byteenable
	wire          sys_ethernet_control_port_agent_m0_read;                                                         // sys_ethernet_control_port_agent:m0_read -> sys_ethernet_control_port_translator:uav_read
	wire          sys_ethernet_control_port_agent_m0_readdatavalid;                                                // sys_ethernet_control_port_translator:uav_readdatavalid -> sys_ethernet_control_port_agent:m0_readdatavalid
	wire          sys_ethernet_control_port_agent_m0_lock;                                                         // sys_ethernet_control_port_agent:m0_lock -> sys_ethernet_control_port_translator:uav_lock
	wire   [31:0] sys_ethernet_control_port_agent_m0_writedata;                                                    // sys_ethernet_control_port_agent:m0_writedata -> sys_ethernet_control_port_translator:uav_writedata
	wire          sys_ethernet_control_port_agent_m0_write;                                                        // sys_ethernet_control_port_agent:m0_write -> sys_ethernet_control_port_translator:uav_write
	wire    [2:0] sys_ethernet_control_port_agent_m0_burstcount;                                                   // sys_ethernet_control_port_agent:m0_burstcount -> sys_ethernet_control_port_translator:uav_burstcount
	wire          sys_ethernet_control_port_agent_rf_source_valid;                                                 // sys_ethernet_control_port_agent:rf_source_valid -> sys_ethernet_control_port_agent_rsp_fifo:in_valid
	wire  [130:0] sys_ethernet_control_port_agent_rf_source_data;                                                  // sys_ethernet_control_port_agent:rf_source_data -> sys_ethernet_control_port_agent_rsp_fifo:in_data
	wire          sys_ethernet_control_port_agent_rf_source_ready;                                                 // sys_ethernet_control_port_agent_rsp_fifo:in_ready -> sys_ethernet_control_port_agent:rf_source_ready
	wire          sys_ethernet_control_port_agent_rf_source_startofpacket;                                         // sys_ethernet_control_port_agent:rf_source_startofpacket -> sys_ethernet_control_port_agent_rsp_fifo:in_startofpacket
	wire          sys_ethernet_control_port_agent_rf_source_endofpacket;                                           // sys_ethernet_control_port_agent:rf_source_endofpacket -> sys_ethernet_control_port_agent_rsp_fifo:in_endofpacket
	wire          sys_ethernet_control_port_agent_rsp_fifo_out_valid;                                              // sys_ethernet_control_port_agent_rsp_fifo:out_valid -> sys_ethernet_control_port_agent:rf_sink_valid
	wire  [130:0] sys_ethernet_control_port_agent_rsp_fifo_out_data;                                               // sys_ethernet_control_port_agent_rsp_fifo:out_data -> sys_ethernet_control_port_agent:rf_sink_data
	wire          sys_ethernet_control_port_agent_rsp_fifo_out_ready;                                              // sys_ethernet_control_port_agent:rf_sink_ready -> sys_ethernet_control_port_agent_rsp_fifo:out_ready
	wire          sys_ethernet_control_port_agent_rsp_fifo_out_startofpacket;                                      // sys_ethernet_control_port_agent_rsp_fifo:out_startofpacket -> sys_ethernet_control_port_agent:rf_sink_startofpacket
	wire          sys_ethernet_control_port_agent_rsp_fifo_out_endofpacket;                                        // sys_ethernet_control_port_agent_rsp_fifo:out_endofpacket -> sys_ethernet_control_port_agent:rf_sink_endofpacket
	wire          sys_ethernet_control_port_agent_rdata_fifo_src_valid;                                            // sys_ethernet_control_port_agent:rdata_fifo_src_valid -> sys_ethernet_control_port_agent_rdata_fifo:in_valid
	wire   [33:0] sys_ethernet_control_port_agent_rdata_fifo_src_data;                                             // sys_ethernet_control_port_agent:rdata_fifo_src_data -> sys_ethernet_control_port_agent_rdata_fifo:in_data
	wire          sys_ethernet_control_port_agent_rdata_fifo_src_ready;                                            // sys_ethernet_control_port_agent_rdata_fifo:in_ready -> sys_ethernet_control_port_agent:rdata_fifo_src_ready
	wire   [31:0] sys_id_control_slave_agent_m0_readdata;                                                          // sys_id_control_slave_translator:uav_readdata -> sys_id_control_slave_agent:m0_readdata
	wire          sys_id_control_slave_agent_m0_waitrequest;                                                       // sys_id_control_slave_translator:uav_waitrequest -> sys_id_control_slave_agent:m0_waitrequest
	wire          sys_id_control_slave_agent_m0_debugaccess;                                                       // sys_id_control_slave_agent:m0_debugaccess -> sys_id_control_slave_translator:uav_debugaccess
	wire   [31:0] sys_id_control_slave_agent_m0_address;                                                           // sys_id_control_slave_agent:m0_address -> sys_id_control_slave_translator:uav_address
	wire    [3:0] sys_id_control_slave_agent_m0_byteenable;                                                        // sys_id_control_slave_agent:m0_byteenable -> sys_id_control_slave_translator:uav_byteenable
	wire          sys_id_control_slave_agent_m0_read;                                                              // sys_id_control_slave_agent:m0_read -> sys_id_control_slave_translator:uav_read
	wire          sys_id_control_slave_agent_m0_readdatavalid;                                                     // sys_id_control_slave_translator:uav_readdatavalid -> sys_id_control_slave_agent:m0_readdatavalid
	wire          sys_id_control_slave_agent_m0_lock;                                                              // sys_id_control_slave_agent:m0_lock -> sys_id_control_slave_translator:uav_lock
	wire   [31:0] sys_id_control_slave_agent_m0_writedata;                                                         // sys_id_control_slave_agent:m0_writedata -> sys_id_control_slave_translator:uav_writedata
	wire          sys_id_control_slave_agent_m0_write;                                                             // sys_id_control_slave_agent:m0_write -> sys_id_control_slave_translator:uav_write
	wire    [2:0] sys_id_control_slave_agent_m0_burstcount;                                                        // sys_id_control_slave_agent:m0_burstcount -> sys_id_control_slave_translator:uav_burstcount
	wire          sys_id_control_slave_agent_rf_source_valid;                                                      // sys_id_control_slave_agent:rf_source_valid -> sys_id_control_slave_agent_rsp_fifo:in_valid
	wire  [130:0] sys_id_control_slave_agent_rf_source_data;                                                       // sys_id_control_slave_agent:rf_source_data -> sys_id_control_slave_agent_rsp_fifo:in_data
	wire          sys_id_control_slave_agent_rf_source_ready;                                                      // sys_id_control_slave_agent_rsp_fifo:in_ready -> sys_id_control_slave_agent:rf_source_ready
	wire          sys_id_control_slave_agent_rf_source_startofpacket;                                              // sys_id_control_slave_agent:rf_source_startofpacket -> sys_id_control_slave_agent_rsp_fifo:in_startofpacket
	wire          sys_id_control_slave_agent_rf_source_endofpacket;                                                // sys_id_control_slave_agent:rf_source_endofpacket -> sys_id_control_slave_agent_rsp_fifo:in_endofpacket
	wire          sys_id_control_slave_agent_rsp_fifo_out_valid;                                                   // sys_id_control_slave_agent_rsp_fifo:out_valid -> sys_id_control_slave_agent:rf_sink_valid
	wire  [130:0] sys_id_control_slave_agent_rsp_fifo_out_data;                                                    // sys_id_control_slave_agent_rsp_fifo:out_data -> sys_id_control_slave_agent:rf_sink_data
	wire          sys_id_control_slave_agent_rsp_fifo_out_ready;                                                   // sys_id_control_slave_agent:rf_sink_ready -> sys_id_control_slave_agent_rsp_fifo:out_ready
	wire          sys_id_control_slave_agent_rsp_fifo_out_startofpacket;                                           // sys_id_control_slave_agent_rsp_fifo:out_startofpacket -> sys_id_control_slave_agent:rf_sink_startofpacket
	wire          sys_id_control_slave_agent_rsp_fifo_out_endofpacket;                                             // sys_id_control_slave_agent_rsp_fifo:out_endofpacket -> sys_id_control_slave_agent:rf_sink_endofpacket
	wire          sys_id_control_slave_agent_rdata_fifo_src_valid;                                                 // sys_id_control_slave_agent:rdata_fifo_src_valid -> sys_id_control_slave_agent_rdata_fifo:in_valid
	wire   [33:0] sys_id_control_slave_agent_rdata_fifo_src_data;                                                  // sys_id_control_slave_agent:rdata_fifo_src_data -> sys_id_control_slave_agent_rdata_fifo:in_data
	wire          sys_id_control_slave_agent_rdata_fifo_src_ready;                                                 // sys_id_control_slave_agent_rdata_fifo:in_ready -> sys_id_control_slave_agent:rdata_fifo_src_ready
	wire   [31:0] sys_ethernet_dma_rx_csr_agent_m0_readdata;                                                       // sys_ethernet_dma_rx_csr_translator:uav_readdata -> sys_ethernet_dma_rx_csr_agent:m0_readdata
	wire          sys_ethernet_dma_rx_csr_agent_m0_waitrequest;                                                    // sys_ethernet_dma_rx_csr_translator:uav_waitrequest -> sys_ethernet_dma_rx_csr_agent:m0_waitrequest
	wire          sys_ethernet_dma_rx_csr_agent_m0_debugaccess;                                                    // sys_ethernet_dma_rx_csr_agent:m0_debugaccess -> sys_ethernet_dma_rx_csr_translator:uav_debugaccess
	wire   [31:0] sys_ethernet_dma_rx_csr_agent_m0_address;                                                        // sys_ethernet_dma_rx_csr_agent:m0_address -> sys_ethernet_dma_rx_csr_translator:uav_address
	wire    [3:0] sys_ethernet_dma_rx_csr_agent_m0_byteenable;                                                     // sys_ethernet_dma_rx_csr_agent:m0_byteenable -> sys_ethernet_dma_rx_csr_translator:uav_byteenable
	wire          sys_ethernet_dma_rx_csr_agent_m0_read;                                                           // sys_ethernet_dma_rx_csr_agent:m0_read -> sys_ethernet_dma_rx_csr_translator:uav_read
	wire          sys_ethernet_dma_rx_csr_agent_m0_readdatavalid;                                                  // sys_ethernet_dma_rx_csr_translator:uav_readdatavalid -> sys_ethernet_dma_rx_csr_agent:m0_readdatavalid
	wire          sys_ethernet_dma_rx_csr_agent_m0_lock;                                                           // sys_ethernet_dma_rx_csr_agent:m0_lock -> sys_ethernet_dma_rx_csr_translator:uav_lock
	wire   [31:0] sys_ethernet_dma_rx_csr_agent_m0_writedata;                                                      // sys_ethernet_dma_rx_csr_agent:m0_writedata -> sys_ethernet_dma_rx_csr_translator:uav_writedata
	wire          sys_ethernet_dma_rx_csr_agent_m0_write;                                                          // sys_ethernet_dma_rx_csr_agent:m0_write -> sys_ethernet_dma_rx_csr_translator:uav_write
	wire    [2:0] sys_ethernet_dma_rx_csr_agent_m0_burstcount;                                                     // sys_ethernet_dma_rx_csr_agent:m0_burstcount -> sys_ethernet_dma_rx_csr_translator:uav_burstcount
	wire          sys_ethernet_dma_rx_csr_agent_rf_source_valid;                                                   // sys_ethernet_dma_rx_csr_agent:rf_source_valid -> sys_ethernet_dma_rx_csr_agent_rsp_fifo:in_valid
	wire  [130:0] sys_ethernet_dma_rx_csr_agent_rf_source_data;                                                    // sys_ethernet_dma_rx_csr_agent:rf_source_data -> sys_ethernet_dma_rx_csr_agent_rsp_fifo:in_data
	wire          sys_ethernet_dma_rx_csr_agent_rf_source_ready;                                                   // sys_ethernet_dma_rx_csr_agent_rsp_fifo:in_ready -> sys_ethernet_dma_rx_csr_agent:rf_source_ready
	wire          sys_ethernet_dma_rx_csr_agent_rf_source_startofpacket;                                           // sys_ethernet_dma_rx_csr_agent:rf_source_startofpacket -> sys_ethernet_dma_rx_csr_agent_rsp_fifo:in_startofpacket
	wire          sys_ethernet_dma_rx_csr_agent_rf_source_endofpacket;                                             // sys_ethernet_dma_rx_csr_agent:rf_source_endofpacket -> sys_ethernet_dma_rx_csr_agent_rsp_fifo:in_endofpacket
	wire          sys_ethernet_dma_rx_csr_agent_rsp_fifo_out_valid;                                                // sys_ethernet_dma_rx_csr_agent_rsp_fifo:out_valid -> sys_ethernet_dma_rx_csr_agent:rf_sink_valid
	wire  [130:0] sys_ethernet_dma_rx_csr_agent_rsp_fifo_out_data;                                                 // sys_ethernet_dma_rx_csr_agent_rsp_fifo:out_data -> sys_ethernet_dma_rx_csr_agent:rf_sink_data
	wire          sys_ethernet_dma_rx_csr_agent_rsp_fifo_out_ready;                                                // sys_ethernet_dma_rx_csr_agent:rf_sink_ready -> sys_ethernet_dma_rx_csr_agent_rsp_fifo:out_ready
	wire          sys_ethernet_dma_rx_csr_agent_rsp_fifo_out_startofpacket;                                        // sys_ethernet_dma_rx_csr_agent_rsp_fifo:out_startofpacket -> sys_ethernet_dma_rx_csr_agent:rf_sink_startofpacket
	wire          sys_ethernet_dma_rx_csr_agent_rsp_fifo_out_endofpacket;                                          // sys_ethernet_dma_rx_csr_agent_rsp_fifo:out_endofpacket -> sys_ethernet_dma_rx_csr_agent:rf_sink_endofpacket
	wire          sys_ethernet_dma_rx_csr_agent_rdata_fifo_src_valid;                                              // sys_ethernet_dma_rx_csr_agent:rdata_fifo_src_valid -> sys_ethernet_dma_rx_csr_agent_rdata_fifo:in_valid
	wire   [33:0] sys_ethernet_dma_rx_csr_agent_rdata_fifo_src_data;                                               // sys_ethernet_dma_rx_csr_agent:rdata_fifo_src_data -> sys_ethernet_dma_rx_csr_agent_rdata_fifo:in_data
	wire          sys_ethernet_dma_rx_csr_agent_rdata_fifo_src_ready;                                              // sys_ethernet_dma_rx_csr_agent_rdata_fifo:in_ready -> sys_ethernet_dma_rx_csr_agent:rdata_fifo_src_ready
	wire   [31:0] sys_ethernet_dma_tx_csr_agent_m0_readdata;                                                       // sys_ethernet_dma_tx_csr_translator:uav_readdata -> sys_ethernet_dma_tx_csr_agent:m0_readdata
	wire          sys_ethernet_dma_tx_csr_agent_m0_waitrequest;                                                    // sys_ethernet_dma_tx_csr_translator:uav_waitrequest -> sys_ethernet_dma_tx_csr_agent:m0_waitrequest
	wire          sys_ethernet_dma_tx_csr_agent_m0_debugaccess;                                                    // sys_ethernet_dma_tx_csr_agent:m0_debugaccess -> sys_ethernet_dma_tx_csr_translator:uav_debugaccess
	wire   [31:0] sys_ethernet_dma_tx_csr_agent_m0_address;                                                        // sys_ethernet_dma_tx_csr_agent:m0_address -> sys_ethernet_dma_tx_csr_translator:uav_address
	wire    [3:0] sys_ethernet_dma_tx_csr_agent_m0_byteenable;                                                     // sys_ethernet_dma_tx_csr_agent:m0_byteenable -> sys_ethernet_dma_tx_csr_translator:uav_byteenable
	wire          sys_ethernet_dma_tx_csr_agent_m0_read;                                                           // sys_ethernet_dma_tx_csr_agent:m0_read -> sys_ethernet_dma_tx_csr_translator:uav_read
	wire          sys_ethernet_dma_tx_csr_agent_m0_readdatavalid;                                                  // sys_ethernet_dma_tx_csr_translator:uav_readdatavalid -> sys_ethernet_dma_tx_csr_agent:m0_readdatavalid
	wire          sys_ethernet_dma_tx_csr_agent_m0_lock;                                                           // sys_ethernet_dma_tx_csr_agent:m0_lock -> sys_ethernet_dma_tx_csr_translator:uav_lock
	wire   [31:0] sys_ethernet_dma_tx_csr_agent_m0_writedata;                                                      // sys_ethernet_dma_tx_csr_agent:m0_writedata -> sys_ethernet_dma_tx_csr_translator:uav_writedata
	wire          sys_ethernet_dma_tx_csr_agent_m0_write;                                                          // sys_ethernet_dma_tx_csr_agent:m0_write -> sys_ethernet_dma_tx_csr_translator:uav_write
	wire    [2:0] sys_ethernet_dma_tx_csr_agent_m0_burstcount;                                                     // sys_ethernet_dma_tx_csr_agent:m0_burstcount -> sys_ethernet_dma_tx_csr_translator:uav_burstcount
	wire          sys_ethernet_dma_tx_csr_agent_rf_source_valid;                                                   // sys_ethernet_dma_tx_csr_agent:rf_source_valid -> sys_ethernet_dma_tx_csr_agent_rsp_fifo:in_valid
	wire  [130:0] sys_ethernet_dma_tx_csr_agent_rf_source_data;                                                    // sys_ethernet_dma_tx_csr_agent:rf_source_data -> sys_ethernet_dma_tx_csr_agent_rsp_fifo:in_data
	wire          sys_ethernet_dma_tx_csr_agent_rf_source_ready;                                                   // sys_ethernet_dma_tx_csr_agent_rsp_fifo:in_ready -> sys_ethernet_dma_tx_csr_agent:rf_source_ready
	wire          sys_ethernet_dma_tx_csr_agent_rf_source_startofpacket;                                           // sys_ethernet_dma_tx_csr_agent:rf_source_startofpacket -> sys_ethernet_dma_tx_csr_agent_rsp_fifo:in_startofpacket
	wire          sys_ethernet_dma_tx_csr_agent_rf_source_endofpacket;                                             // sys_ethernet_dma_tx_csr_agent:rf_source_endofpacket -> sys_ethernet_dma_tx_csr_agent_rsp_fifo:in_endofpacket
	wire          sys_ethernet_dma_tx_csr_agent_rsp_fifo_out_valid;                                                // sys_ethernet_dma_tx_csr_agent_rsp_fifo:out_valid -> sys_ethernet_dma_tx_csr_agent:rf_sink_valid
	wire  [130:0] sys_ethernet_dma_tx_csr_agent_rsp_fifo_out_data;                                                 // sys_ethernet_dma_tx_csr_agent_rsp_fifo:out_data -> sys_ethernet_dma_tx_csr_agent:rf_sink_data
	wire          sys_ethernet_dma_tx_csr_agent_rsp_fifo_out_ready;                                                // sys_ethernet_dma_tx_csr_agent:rf_sink_ready -> sys_ethernet_dma_tx_csr_agent_rsp_fifo:out_ready
	wire          sys_ethernet_dma_tx_csr_agent_rsp_fifo_out_startofpacket;                                        // sys_ethernet_dma_tx_csr_agent_rsp_fifo:out_startofpacket -> sys_ethernet_dma_tx_csr_agent:rf_sink_startofpacket
	wire          sys_ethernet_dma_tx_csr_agent_rsp_fifo_out_endofpacket;                                          // sys_ethernet_dma_tx_csr_agent_rsp_fifo:out_endofpacket -> sys_ethernet_dma_tx_csr_agent:rf_sink_endofpacket
	wire          sys_ethernet_dma_tx_csr_agent_rdata_fifo_src_valid;                                              // sys_ethernet_dma_tx_csr_agent:rdata_fifo_src_valid -> sys_ethernet_dma_tx_csr_agent_rdata_fifo:in_valid
	wire   [33:0] sys_ethernet_dma_tx_csr_agent_rdata_fifo_src_data;                                               // sys_ethernet_dma_tx_csr_agent:rdata_fifo_src_data -> sys_ethernet_dma_tx_csr_agent_rdata_fifo:in_data
	wire          sys_ethernet_dma_tx_csr_agent_rdata_fifo_src_ready;                                              // sys_ethernet_dma_tx_csr_agent_rdata_fifo:in_ready -> sys_ethernet_dma_tx_csr_agent:rdata_fifo_src_ready
	wire  [511:0] sys_ddr3_cntrl_ctrl_amm_0_agent_m0_readdata;                                                     // sys_ddr3_cntrl_ctrl_amm_0_translator:uav_readdata -> sys_ddr3_cntrl_ctrl_amm_0_agent:m0_readdata
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_m0_waitrequest;                                                  // sys_ddr3_cntrl_ctrl_amm_0_translator:uav_waitrequest -> sys_ddr3_cntrl_ctrl_amm_0_agent:m0_waitrequest
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_m0_debugaccess;                                                  // sys_ddr3_cntrl_ctrl_amm_0_agent:m0_debugaccess -> sys_ddr3_cntrl_ctrl_amm_0_translator:uav_debugaccess
	wire   [31:0] sys_ddr3_cntrl_ctrl_amm_0_agent_m0_address;                                                      // sys_ddr3_cntrl_ctrl_amm_0_agent:m0_address -> sys_ddr3_cntrl_ctrl_amm_0_translator:uav_address
	wire   [63:0] sys_ddr3_cntrl_ctrl_amm_0_agent_m0_byteenable;                                                   // sys_ddr3_cntrl_ctrl_amm_0_agent:m0_byteenable -> sys_ddr3_cntrl_ctrl_amm_0_translator:uav_byteenable
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_m0_read;                                                         // sys_ddr3_cntrl_ctrl_amm_0_agent:m0_read -> sys_ddr3_cntrl_ctrl_amm_0_translator:uav_read
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_m0_readdatavalid;                                                // sys_ddr3_cntrl_ctrl_amm_0_translator:uav_readdatavalid -> sys_ddr3_cntrl_ctrl_amm_0_agent:m0_readdatavalid
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_m0_lock;                                                         // sys_ddr3_cntrl_ctrl_amm_0_agent:m0_lock -> sys_ddr3_cntrl_ctrl_amm_0_translator:uav_lock
	wire  [511:0] sys_ddr3_cntrl_ctrl_amm_0_agent_m0_writedata;                                                    // sys_ddr3_cntrl_ctrl_amm_0_agent:m0_writedata -> sys_ddr3_cntrl_ctrl_amm_0_translator:uav_writedata
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_m0_write;                                                        // sys_ddr3_cntrl_ctrl_amm_0_agent:m0_write -> sys_ddr3_cntrl_ctrl_amm_0_translator:uav_write
	wire   [12:0] sys_ddr3_cntrl_ctrl_amm_0_agent_m0_burstcount;                                                   // sys_ddr3_cntrl_ctrl_amm_0_agent:m0_burstcount -> sys_ddr3_cntrl_ctrl_amm_0_translator:uav_burstcount
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_rf_source_valid;                                                 // sys_ddr3_cntrl_ctrl_amm_0_agent:rf_source_valid -> sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo:in_valid
	wire  [670:0] sys_ddr3_cntrl_ctrl_amm_0_agent_rf_source_data;                                                  // sys_ddr3_cntrl_ctrl_amm_0_agent:rf_source_data -> sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo:in_data
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_rf_source_ready;                                                 // sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo:in_ready -> sys_ddr3_cntrl_ctrl_amm_0_agent:rf_source_ready
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_rf_source_startofpacket;                                         // sys_ddr3_cntrl_ctrl_amm_0_agent:rf_source_startofpacket -> sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo:in_startofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_rf_source_endofpacket;                                           // sys_ddr3_cntrl_ctrl_amm_0_agent:rf_source_endofpacket -> sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo:in_endofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo_out_valid;                                              // sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo:out_valid -> sys_ddr3_cntrl_ctrl_amm_0_agent:rf_sink_valid
	wire  [670:0] sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo_out_data;                                               // sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo:out_data -> sys_ddr3_cntrl_ctrl_amm_0_agent:rf_sink_data
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo_out_ready;                                              // sys_ddr3_cntrl_ctrl_amm_0_agent:rf_sink_ready -> sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo:out_ready
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo_out_startofpacket;                                      // sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo:out_startofpacket -> sys_ddr3_cntrl_ctrl_amm_0_agent:rf_sink_startofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo_out_endofpacket;                                        // sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo:out_endofpacket -> sys_ddr3_cntrl_ctrl_amm_0_agent:rf_sink_endofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo_src_valid;                                            // sys_ddr3_cntrl_ctrl_amm_0_agent:rdata_fifo_src_valid -> sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo:in_valid
	wire  [513:0] sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo_src_data;                                             // sys_ddr3_cntrl_ctrl_amm_0_agent:rdata_fifo_src_data -> sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo:in_data
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo_src_ready;                                            // sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo:in_ready -> sys_ddr3_cntrl_ctrl_amm_0_agent:rdata_fifo_src_ready
	wire   [31:0] sys_cpu_debug_mem_slave_agent_m0_readdata;                                                       // sys_cpu_debug_mem_slave_translator:uav_readdata -> sys_cpu_debug_mem_slave_agent:m0_readdata
	wire          sys_cpu_debug_mem_slave_agent_m0_waitrequest;                                                    // sys_cpu_debug_mem_slave_translator:uav_waitrequest -> sys_cpu_debug_mem_slave_agent:m0_waitrequest
	wire          sys_cpu_debug_mem_slave_agent_m0_debugaccess;                                                    // sys_cpu_debug_mem_slave_agent:m0_debugaccess -> sys_cpu_debug_mem_slave_translator:uav_debugaccess
	wire   [31:0] sys_cpu_debug_mem_slave_agent_m0_address;                                                        // sys_cpu_debug_mem_slave_agent:m0_address -> sys_cpu_debug_mem_slave_translator:uav_address
	wire    [3:0] sys_cpu_debug_mem_slave_agent_m0_byteenable;                                                     // sys_cpu_debug_mem_slave_agent:m0_byteenable -> sys_cpu_debug_mem_slave_translator:uav_byteenable
	wire          sys_cpu_debug_mem_slave_agent_m0_read;                                                           // sys_cpu_debug_mem_slave_agent:m0_read -> sys_cpu_debug_mem_slave_translator:uav_read
	wire          sys_cpu_debug_mem_slave_agent_m0_readdatavalid;                                                  // sys_cpu_debug_mem_slave_translator:uav_readdatavalid -> sys_cpu_debug_mem_slave_agent:m0_readdatavalid
	wire          sys_cpu_debug_mem_slave_agent_m0_lock;                                                           // sys_cpu_debug_mem_slave_agent:m0_lock -> sys_cpu_debug_mem_slave_translator:uav_lock
	wire   [31:0] sys_cpu_debug_mem_slave_agent_m0_writedata;                                                      // sys_cpu_debug_mem_slave_agent:m0_writedata -> sys_cpu_debug_mem_slave_translator:uav_writedata
	wire          sys_cpu_debug_mem_slave_agent_m0_write;                                                          // sys_cpu_debug_mem_slave_agent:m0_write -> sys_cpu_debug_mem_slave_translator:uav_write
	wire    [2:0] sys_cpu_debug_mem_slave_agent_m0_burstcount;                                                     // sys_cpu_debug_mem_slave_agent:m0_burstcount -> sys_cpu_debug_mem_slave_translator:uav_burstcount
	wire          sys_cpu_debug_mem_slave_agent_rf_source_valid;                                                   // sys_cpu_debug_mem_slave_agent:rf_source_valid -> sys_cpu_debug_mem_slave_agent_rsp_fifo:in_valid
	wire  [130:0] sys_cpu_debug_mem_slave_agent_rf_source_data;                                                    // sys_cpu_debug_mem_slave_agent:rf_source_data -> sys_cpu_debug_mem_slave_agent_rsp_fifo:in_data
	wire          sys_cpu_debug_mem_slave_agent_rf_source_ready;                                                   // sys_cpu_debug_mem_slave_agent_rsp_fifo:in_ready -> sys_cpu_debug_mem_slave_agent:rf_source_ready
	wire          sys_cpu_debug_mem_slave_agent_rf_source_startofpacket;                                           // sys_cpu_debug_mem_slave_agent:rf_source_startofpacket -> sys_cpu_debug_mem_slave_agent_rsp_fifo:in_startofpacket
	wire          sys_cpu_debug_mem_slave_agent_rf_source_endofpacket;                                             // sys_cpu_debug_mem_slave_agent:rf_source_endofpacket -> sys_cpu_debug_mem_slave_agent_rsp_fifo:in_endofpacket
	wire          sys_cpu_debug_mem_slave_agent_rsp_fifo_out_valid;                                                // sys_cpu_debug_mem_slave_agent_rsp_fifo:out_valid -> sys_cpu_debug_mem_slave_agent:rf_sink_valid
	wire  [130:0] sys_cpu_debug_mem_slave_agent_rsp_fifo_out_data;                                                 // sys_cpu_debug_mem_slave_agent_rsp_fifo:out_data -> sys_cpu_debug_mem_slave_agent:rf_sink_data
	wire          sys_cpu_debug_mem_slave_agent_rsp_fifo_out_ready;                                                // sys_cpu_debug_mem_slave_agent:rf_sink_ready -> sys_cpu_debug_mem_slave_agent_rsp_fifo:out_ready
	wire          sys_cpu_debug_mem_slave_agent_rsp_fifo_out_startofpacket;                                        // sys_cpu_debug_mem_slave_agent_rsp_fifo:out_startofpacket -> sys_cpu_debug_mem_slave_agent:rf_sink_startofpacket
	wire          sys_cpu_debug_mem_slave_agent_rsp_fifo_out_endofpacket;                                          // sys_cpu_debug_mem_slave_agent_rsp_fifo:out_endofpacket -> sys_cpu_debug_mem_slave_agent:rf_sink_endofpacket
	wire          sys_cpu_debug_mem_slave_agent_rdata_fifo_src_valid;                                              // sys_cpu_debug_mem_slave_agent:rdata_fifo_src_valid -> sys_cpu_debug_mem_slave_agent_rdata_fifo:in_valid
	wire   [33:0] sys_cpu_debug_mem_slave_agent_rdata_fifo_src_data;                                               // sys_cpu_debug_mem_slave_agent:rdata_fifo_src_data -> sys_cpu_debug_mem_slave_agent_rdata_fifo:in_data
	wire          sys_cpu_debug_mem_slave_agent_rdata_fifo_src_ready;                                              // sys_cpu_debug_mem_slave_agent_rdata_fifo:in_ready -> sys_cpu_debug_mem_slave_agent:rdata_fifo_src_ready
	wire  [255:0] sys_ethernet_dma_rx_descriptor_slave_agent_m0_readdata;                                          // sys_ethernet_dma_rx_descriptor_slave_translator:uav_readdata -> sys_ethernet_dma_rx_descriptor_slave_agent:m0_readdata
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_m0_waitrequest;                                       // sys_ethernet_dma_rx_descriptor_slave_translator:uav_waitrequest -> sys_ethernet_dma_rx_descriptor_slave_agent:m0_waitrequest
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_m0_debugaccess;                                       // sys_ethernet_dma_rx_descriptor_slave_agent:m0_debugaccess -> sys_ethernet_dma_rx_descriptor_slave_translator:uav_debugaccess
	wire   [31:0] sys_ethernet_dma_rx_descriptor_slave_agent_m0_address;                                           // sys_ethernet_dma_rx_descriptor_slave_agent:m0_address -> sys_ethernet_dma_rx_descriptor_slave_translator:uav_address
	wire   [31:0] sys_ethernet_dma_rx_descriptor_slave_agent_m0_byteenable;                                        // sys_ethernet_dma_rx_descriptor_slave_agent:m0_byteenable -> sys_ethernet_dma_rx_descriptor_slave_translator:uav_byteenable
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_m0_read;                                              // sys_ethernet_dma_rx_descriptor_slave_agent:m0_read -> sys_ethernet_dma_rx_descriptor_slave_translator:uav_read
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_m0_readdatavalid;                                     // sys_ethernet_dma_rx_descriptor_slave_translator:uav_readdatavalid -> sys_ethernet_dma_rx_descriptor_slave_agent:m0_readdatavalid
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_m0_lock;                                              // sys_ethernet_dma_rx_descriptor_slave_agent:m0_lock -> sys_ethernet_dma_rx_descriptor_slave_translator:uav_lock
	wire  [255:0] sys_ethernet_dma_rx_descriptor_slave_agent_m0_writedata;                                         // sys_ethernet_dma_rx_descriptor_slave_agent:m0_writedata -> sys_ethernet_dma_rx_descriptor_slave_translator:uav_writedata
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_m0_write;                                             // sys_ethernet_dma_rx_descriptor_slave_agent:m0_write -> sys_ethernet_dma_rx_descriptor_slave_translator:uav_write
	wire    [5:0] sys_ethernet_dma_rx_descriptor_slave_agent_m0_burstcount;                                        // sys_ethernet_dma_rx_descriptor_slave_agent:m0_burstcount -> sys_ethernet_dma_rx_descriptor_slave_translator:uav_burstcount
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_rf_source_valid;                                      // sys_ethernet_dma_rx_descriptor_slave_agent:rf_source_valid -> sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo:in_valid
	wire  [382:0] sys_ethernet_dma_rx_descriptor_slave_agent_rf_source_data;                                       // sys_ethernet_dma_rx_descriptor_slave_agent:rf_source_data -> sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo:in_data
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_rf_source_ready;                                      // sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo:in_ready -> sys_ethernet_dma_rx_descriptor_slave_agent:rf_source_ready
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_rf_source_startofpacket;                              // sys_ethernet_dma_rx_descriptor_slave_agent:rf_source_startofpacket -> sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo:in_startofpacket
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_rf_source_endofpacket;                                // sys_ethernet_dma_rx_descriptor_slave_agent:rf_source_endofpacket -> sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo:in_endofpacket
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo_out_valid;                                   // sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo:out_valid -> sys_ethernet_dma_rx_descriptor_slave_agent:rf_sink_valid
	wire  [382:0] sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo_out_data;                                    // sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo:out_data -> sys_ethernet_dma_rx_descriptor_slave_agent:rf_sink_data
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo_out_ready;                                   // sys_ethernet_dma_rx_descriptor_slave_agent:rf_sink_ready -> sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo:out_ready
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo_out_startofpacket;                           // sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo:out_startofpacket -> sys_ethernet_dma_rx_descriptor_slave_agent:rf_sink_startofpacket
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo_out_endofpacket;                             // sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo:out_endofpacket -> sys_ethernet_dma_rx_descriptor_slave_agent:rf_sink_endofpacket
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo_src_valid;                                 // sys_ethernet_dma_rx_descriptor_slave_agent:rdata_fifo_src_valid -> sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo:in_valid
	wire  [257:0] sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo_src_data;                                  // sys_ethernet_dma_rx_descriptor_slave_agent:rdata_fifo_src_data -> sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo:in_data
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo_src_ready;                                 // sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo:in_ready -> sys_ethernet_dma_rx_descriptor_slave_agent:rdata_fifo_src_ready
	wire  [255:0] sys_ethernet_dma_tx_descriptor_slave_agent_m0_readdata;                                          // sys_ethernet_dma_tx_descriptor_slave_translator:uav_readdata -> sys_ethernet_dma_tx_descriptor_slave_agent:m0_readdata
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_m0_waitrequest;                                       // sys_ethernet_dma_tx_descriptor_slave_translator:uav_waitrequest -> sys_ethernet_dma_tx_descriptor_slave_agent:m0_waitrequest
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_m0_debugaccess;                                       // sys_ethernet_dma_tx_descriptor_slave_agent:m0_debugaccess -> sys_ethernet_dma_tx_descriptor_slave_translator:uav_debugaccess
	wire   [31:0] sys_ethernet_dma_tx_descriptor_slave_agent_m0_address;                                           // sys_ethernet_dma_tx_descriptor_slave_agent:m0_address -> sys_ethernet_dma_tx_descriptor_slave_translator:uav_address
	wire   [31:0] sys_ethernet_dma_tx_descriptor_slave_agent_m0_byteenable;                                        // sys_ethernet_dma_tx_descriptor_slave_agent:m0_byteenable -> sys_ethernet_dma_tx_descriptor_slave_translator:uav_byteenable
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_m0_read;                                              // sys_ethernet_dma_tx_descriptor_slave_agent:m0_read -> sys_ethernet_dma_tx_descriptor_slave_translator:uav_read
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_m0_readdatavalid;                                     // sys_ethernet_dma_tx_descriptor_slave_translator:uav_readdatavalid -> sys_ethernet_dma_tx_descriptor_slave_agent:m0_readdatavalid
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_m0_lock;                                              // sys_ethernet_dma_tx_descriptor_slave_agent:m0_lock -> sys_ethernet_dma_tx_descriptor_slave_translator:uav_lock
	wire  [255:0] sys_ethernet_dma_tx_descriptor_slave_agent_m0_writedata;                                         // sys_ethernet_dma_tx_descriptor_slave_agent:m0_writedata -> sys_ethernet_dma_tx_descriptor_slave_translator:uav_writedata
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_m0_write;                                             // sys_ethernet_dma_tx_descriptor_slave_agent:m0_write -> sys_ethernet_dma_tx_descriptor_slave_translator:uav_write
	wire    [5:0] sys_ethernet_dma_tx_descriptor_slave_agent_m0_burstcount;                                        // sys_ethernet_dma_tx_descriptor_slave_agent:m0_burstcount -> sys_ethernet_dma_tx_descriptor_slave_translator:uav_burstcount
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_rf_source_valid;                                      // sys_ethernet_dma_tx_descriptor_slave_agent:rf_source_valid -> sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo:in_valid
	wire  [382:0] sys_ethernet_dma_tx_descriptor_slave_agent_rf_source_data;                                       // sys_ethernet_dma_tx_descriptor_slave_agent:rf_source_data -> sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo:in_data
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_rf_source_ready;                                      // sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo:in_ready -> sys_ethernet_dma_tx_descriptor_slave_agent:rf_source_ready
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_rf_source_startofpacket;                              // sys_ethernet_dma_tx_descriptor_slave_agent:rf_source_startofpacket -> sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo:in_startofpacket
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_rf_source_endofpacket;                                // sys_ethernet_dma_tx_descriptor_slave_agent:rf_source_endofpacket -> sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo:in_endofpacket
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo_out_valid;                                   // sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo:out_valid -> sys_ethernet_dma_tx_descriptor_slave_agent:rf_sink_valid
	wire  [382:0] sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo_out_data;                                    // sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo:out_data -> sys_ethernet_dma_tx_descriptor_slave_agent:rf_sink_data
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo_out_ready;                                   // sys_ethernet_dma_tx_descriptor_slave_agent:rf_sink_ready -> sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo:out_ready
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo_out_startofpacket;                           // sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo:out_startofpacket -> sys_ethernet_dma_tx_descriptor_slave_agent:rf_sink_startofpacket
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo_out_endofpacket;                             // sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo:out_endofpacket -> sys_ethernet_dma_tx_descriptor_slave_agent:rf_sink_endofpacket
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo_src_valid;                                 // sys_ethernet_dma_tx_descriptor_slave_agent:rdata_fifo_src_valid -> sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo:in_valid
	wire  [257:0] sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo_src_data;                                  // sys_ethernet_dma_tx_descriptor_slave_agent:rdata_fifo_src_data -> sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo:in_data
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo_src_ready;                                 // sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo:in_ready -> sys_ethernet_dma_tx_descriptor_slave_agent:rdata_fifo_src_ready
	wire   [31:0] ad9144_jesd204_lane_pll_reconfig_agent_m0_readdata;                                              // ad9144_jesd204_lane_pll_reconfig_translator:uav_readdata -> ad9144_jesd204_lane_pll_reconfig_agent:m0_readdata
	wire          ad9144_jesd204_lane_pll_reconfig_agent_m0_waitrequest;                                           // ad9144_jesd204_lane_pll_reconfig_translator:uav_waitrequest -> ad9144_jesd204_lane_pll_reconfig_agent:m0_waitrequest
	wire          ad9144_jesd204_lane_pll_reconfig_agent_m0_debugaccess;                                           // ad9144_jesd204_lane_pll_reconfig_agent:m0_debugaccess -> ad9144_jesd204_lane_pll_reconfig_translator:uav_debugaccess
	wire   [31:0] ad9144_jesd204_lane_pll_reconfig_agent_m0_address;                                               // ad9144_jesd204_lane_pll_reconfig_agent:m0_address -> ad9144_jesd204_lane_pll_reconfig_translator:uav_address
	wire    [3:0] ad9144_jesd204_lane_pll_reconfig_agent_m0_byteenable;                                            // ad9144_jesd204_lane_pll_reconfig_agent:m0_byteenable -> ad9144_jesd204_lane_pll_reconfig_translator:uav_byteenable
	wire          ad9144_jesd204_lane_pll_reconfig_agent_m0_read;                                                  // ad9144_jesd204_lane_pll_reconfig_agent:m0_read -> ad9144_jesd204_lane_pll_reconfig_translator:uav_read
	wire          ad9144_jesd204_lane_pll_reconfig_agent_m0_readdatavalid;                                         // ad9144_jesd204_lane_pll_reconfig_translator:uav_readdatavalid -> ad9144_jesd204_lane_pll_reconfig_agent:m0_readdatavalid
	wire          ad9144_jesd204_lane_pll_reconfig_agent_m0_lock;                                                  // ad9144_jesd204_lane_pll_reconfig_agent:m0_lock -> ad9144_jesd204_lane_pll_reconfig_translator:uav_lock
	wire   [31:0] ad9144_jesd204_lane_pll_reconfig_agent_m0_writedata;                                             // ad9144_jesd204_lane_pll_reconfig_agent:m0_writedata -> ad9144_jesd204_lane_pll_reconfig_translator:uav_writedata
	wire          ad9144_jesd204_lane_pll_reconfig_agent_m0_write;                                                 // ad9144_jesd204_lane_pll_reconfig_agent:m0_write -> ad9144_jesd204_lane_pll_reconfig_translator:uav_write
	wire    [2:0] ad9144_jesd204_lane_pll_reconfig_agent_m0_burstcount;                                            // ad9144_jesd204_lane_pll_reconfig_agent:m0_burstcount -> ad9144_jesd204_lane_pll_reconfig_translator:uav_burstcount
	wire          ad9144_jesd204_lane_pll_reconfig_agent_rf_source_valid;                                          // ad9144_jesd204_lane_pll_reconfig_agent:rf_source_valid -> ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo:in_valid
	wire  [130:0] ad9144_jesd204_lane_pll_reconfig_agent_rf_source_data;                                           // ad9144_jesd204_lane_pll_reconfig_agent:rf_source_data -> ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo:in_data
	wire          ad9144_jesd204_lane_pll_reconfig_agent_rf_source_ready;                                          // ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo:in_ready -> ad9144_jesd204_lane_pll_reconfig_agent:rf_source_ready
	wire          ad9144_jesd204_lane_pll_reconfig_agent_rf_source_startofpacket;                                  // ad9144_jesd204_lane_pll_reconfig_agent:rf_source_startofpacket -> ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo:in_startofpacket
	wire          ad9144_jesd204_lane_pll_reconfig_agent_rf_source_endofpacket;                                    // ad9144_jesd204_lane_pll_reconfig_agent:rf_source_endofpacket -> ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo:in_endofpacket
	wire          ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo_out_valid;                                       // ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo:out_valid -> ad9144_jesd204_lane_pll_reconfig_agent:rf_sink_valid
	wire  [130:0] ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo_out_data;                                        // ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo:out_data -> ad9144_jesd204_lane_pll_reconfig_agent:rf_sink_data
	wire          ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo_out_ready;                                       // ad9144_jesd204_lane_pll_reconfig_agent:rf_sink_ready -> ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo:out_ready
	wire          ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo_out_startofpacket;                               // ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo:out_startofpacket -> ad9144_jesd204_lane_pll_reconfig_agent:rf_sink_startofpacket
	wire          ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo_out_endofpacket;                                 // ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo:out_endofpacket -> ad9144_jesd204_lane_pll_reconfig_agent:rf_sink_endofpacket
	wire          ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo_src_valid;                                     // ad9144_jesd204_lane_pll_reconfig_agent:rdata_fifo_src_valid -> ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo:in_valid
	wire   [33:0] ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo_src_data;                                      // ad9144_jesd204_lane_pll_reconfig_agent:rdata_fifo_src_data -> ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo:in_data
	wire          ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo_src_ready;                                     // ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo:in_ready -> ad9144_jesd204_lane_pll_reconfig_agent:rdata_fifo_src_ready
	wire   [31:0] ad9144_jesd204_link_pll_reconfig_agent_m0_readdata;                                              // ad9144_jesd204_link_pll_reconfig_translator:uav_readdata -> ad9144_jesd204_link_pll_reconfig_agent:m0_readdata
	wire          ad9144_jesd204_link_pll_reconfig_agent_m0_waitrequest;                                           // ad9144_jesd204_link_pll_reconfig_translator:uav_waitrequest -> ad9144_jesd204_link_pll_reconfig_agent:m0_waitrequest
	wire          ad9144_jesd204_link_pll_reconfig_agent_m0_debugaccess;                                           // ad9144_jesd204_link_pll_reconfig_agent:m0_debugaccess -> ad9144_jesd204_link_pll_reconfig_translator:uav_debugaccess
	wire   [31:0] ad9144_jesd204_link_pll_reconfig_agent_m0_address;                                               // ad9144_jesd204_link_pll_reconfig_agent:m0_address -> ad9144_jesd204_link_pll_reconfig_translator:uav_address
	wire    [3:0] ad9144_jesd204_link_pll_reconfig_agent_m0_byteenable;                                            // ad9144_jesd204_link_pll_reconfig_agent:m0_byteenable -> ad9144_jesd204_link_pll_reconfig_translator:uav_byteenable
	wire          ad9144_jesd204_link_pll_reconfig_agent_m0_read;                                                  // ad9144_jesd204_link_pll_reconfig_agent:m0_read -> ad9144_jesd204_link_pll_reconfig_translator:uav_read
	wire          ad9144_jesd204_link_pll_reconfig_agent_m0_readdatavalid;                                         // ad9144_jesd204_link_pll_reconfig_translator:uav_readdatavalid -> ad9144_jesd204_link_pll_reconfig_agent:m0_readdatavalid
	wire          ad9144_jesd204_link_pll_reconfig_agent_m0_lock;                                                  // ad9144_jesd204_link_pll_reconfig_agent:m0_lock -> ad9144_jesd204_link_pll_reconfig_translator:uav_lock
	wire   [31:0] ad9144_jesd204_link_pll_reconfig_agent_m0_writedata;                                             // ad9144_jesd204_link_pll_reconfig_agent:m0_writedata -> ad9144_jesd204_link_pll_reconfig_translator:uav_writedata
	wire          ad9144_jesd204_link_pll_reconfig_agent_m0_write;                                                 // ad9144_jesd204_link_pll_reconfig_agent:m0_write -> ad9144_jesd204_link_pll_reconfig_translator:uav_write
	wire    [2:0] ad9144_jesd204_link_pll_reconfig_agent_m0_burstcount;                                            // ad9144_jesd204_link_pll_reconfig_agent:m0_burstcount -> ad9144_jesd204_link_pll_reconfig_translator:uav_burstcount
	wire          ad9144_jesd204_link_pll_reconfig_agent_rf_source_valid;                                          // ad9144_jesd204_link_pll_reconfig_agent:rf_source_valid -> ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo:in_valid
	wire  [130:0] ad9144_jesd204_link_pll_reconfig_agent_rf_source_data;                                           // ad9144_jesd204_link_pll_reconfig_agent:rf_source_data -> ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo:in_data
	wire          ad9144_jesd204_link_pll_reconfig_agent_rf_source_ready;                                          // ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo:in_ready -> ad9144_jesd204_link_pll_reconfig_agent:rf_source_ready
	wire          ad9144_jesd204_link_pll_reconfig_agent_rf_source_startofpacket;                                  // ad9144_jesd204_link_pll_reconfig_agent:rf_source_startofpacket -> ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo:in_startofpacket
	wire          ad9144_jesd204_link_pll_reconfig_agent_rf_source_endofpacket;                                    // ad9144_jesd204_link_pll_reconfig_agent:rf_source_endofpacket -> ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo:in_endofpacket
	wire          ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo_out_valid;                                       // ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo:out_valid -> ad9144_jesd204_link_pll_reconfig_agent:rf_sink_valid
	wire  [130:0] ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo_out_data;                                        // ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo:out_data -> ad9144_jesd204_link_pll_reconfig_agent:rf_sink_data
	wire          ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo_out_ready;                                       // ad9144_jesd204_link_pll_reconfig_agent:rf_sink_ready -> ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo:out_ready
	wire          ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo_out_startofpacket;                               // ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo:out_startofpacket -> ad9144_jesd204_link_pll_reconfig_agent:rf_sink_startofpacket
	wire          ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo_out_endofpacket;                                 // ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo:out_endofpacket -> ad9144_jesd204_link_pll_reconfig_agent:rf_sink_endofpacket
	wire          ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo_src_valid;                                     // ad9144_jesd204_link_pll_reconfig_agent:rdata_fifo_src_valid -> ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo:in_valid
	wire   [33:0] ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo_src_data;                                      // ad9144_jesd204_link_pll_reconfig_agent:rdata_fifo_src_data -> ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo:in_data
	wire          ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo_src_ready;                                     // ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo:in_ready -> ad9144_jesd204_link_pll_reconfig_agent:rdata_fifo_src_ready
	wire   [31:0] ad9680_jesd204_link_pll_reconfig_agent_m0_readdata;                                              // ad9680_jesd204_link_pll_reconfig_translator:uav_readdata -> ad9680_jesd204_link_pll_reconfig_agent:m0_readdata
	wire          ad9680_jesd204_link_pll_reconfig_agent_m0_waitrequest;                                           // ad9680_jesd204_link_pll_reconfig_translator:uav_waitrequest -> ad9680_jesd204_link_pll_reconfig_agent:m0_waitrequest
	wire          ad9680_jesd204_link_pll_reconfig_agent_m0_debugaccess;                                           // ad9680_jesd204_link_pll_reconfig_agent:m0_debugaccess -> ad9680_jesd204_link_pll_reconfig_translator:uav_debugaccess
	wire   [31:0] ad9680_jesd204_link_pll_reconfig_agent_m0_address;                                               // ad9680_jesd204_link_pll_reconfig_agent:m0_address -> ad9680_jesd204_link_pll_reconfig_translator:uav_address
	wire    [3:0] ad9680_jesd204_link_pll_reconfig_agent_m0_byteenable;                                            // ad9680_jesd204_link_pll_reconfig_agent:m0_byteenable -> ad9680_jesd204_link_pll_reconfig_translator:uav_byteenable
	wire          ad9680_jesd204_link_pll_reconfig_agent_m0_read;                                                  // ad9680_jesd204_link_pll_reconfig_agent:m0_read -> ad9680_jesd204_link_pll_reconfig_translator:uav_read
	wire          ad9680_jesd204_link_pll_reconfig_agent_m0_readdatavalid;                                         // ad9680_jesd204_link_pll_reconfig_translator:uav_readdatavalid -> ad9680_jesd204_link_pll_reconfig_agent:m0_readdatavalid
	wire          ad9680_jesd204_link_pll_reconfig_agent_m0_lock;                                                  // ad9680_jesd204_link_pll_reconfig_agent:m0_lock -> ad9680_jesd204_link_pll_reconfig_translator:uav_lock
	wire   [31:0] ad9680_jesd204_link_pll_reconfig_agent_m0_writedata;                                             // ad9680_jesd204_link_pll_reconfig_agent:m0_writedata -> ad9680_jesd204_link_pll_reconfig_translator:uav_writedata
	wire          ad9680_jesd204_link_pll_reconfig_agent_m0_write;                                                 // ad9680_jesd204_link_pll_reconfig_agent:m0_write -> ad9680_jesd204_link_pll_reconfig_translator:uav_write
	wire    [2:0] ad9680_jesd204_link_pll_reconfig_agent_m0_burstcount;                                            // ad9680_jesd204_link_pll_reconfig_agent:m0_burstcount -> ad9680_jesd204_link_pll_reconfig_translator:uav_burstcount
	wire          ad9680_jesd204_link_pll_reconfig_agent_rf_source_valid;                                          // ad9680_jesd204_link_pll_reconfig_agent:rf_source_valid -> ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo:in_valid
	wire  [130:0] ad9680_jesd204_link_pll_reconfig_agent_rf_source_data;                                           // ad9680_jesd204_link_pll_reconfig_agent:rf_source_data -> ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo:in_data
	wire          ad9680_jesd204_link_pll_reconfig_agent_rf_source_ready;                                          // ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo:in_ready -> ad9680_jesd204_link_pll_reconfig_agent:rf_source_ready
	wire          ad9680_jesd204_link_pll_reconfig_agent_rf_source_startofpacket;                                  // ad9680_jesd204_link_pll_reconfig_agent:rf_source_startofpacket -> ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo:in_startofpacket
	wire          ad9680_jesd204_link_pll_reconfig_agent_rf_source_endofpacket;                                    // ad9680_jesd204_link_pll_reconfig_agent:rf_source_endofpacket -> ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo:in_endofpacket
	wire          ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo_out_valid;                                       // ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo:out_valid -> ad9680_jesd204_link_pll_reconfig_agent:rf_sink_valid
	wire  [130:0] ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo_out_data;                                        // ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo:out_data -> ad9680_jesd204_link_pll_reconfig_agent:rf_sink_data
	wire          ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo_out_ready;                                       // ad9680_jesd204_link_pll_reconfig_agent:rf_sink_ready -> ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo:out_ready
	wire          ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo_out_startofpacket;                               // ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo:out_startofpacket -> ad9680_jesd204_link_pll_reconfig_agent:rf_sink_startofpacket
	wire          ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo_out_endofpacket;                                 // ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo:out_endofpacket -> ad9680_jesd204_link_pll_reconfig_agent:rf_sink_endofpacket
	wire          ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo_src_valid;                                     // ad9680_jesd204_link_pll_reconfig_agent:rdata_fifo_src_valid -> ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo:in_valid
	wire   [33:0] ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo_src_data;                                      // ad9680_jesd204_link_pll_reconfig_agent:rdata_fifo_src_data -> ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo:in_data
	wire          ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo_src_ready;                                     // ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo:in_ready -> ad9680_jesd204_link_pll_reconfig_agent:rdata_fifo_src_ready
	wire   [31:0] avl_adxcfg_0_rcfg_s0_agent_m0_readdata;                                                          // avl_adxcfg_0_rcfg_s0_translator:uav_readdata -> avl_adxcfg_0_rcfg_s0_agent:m0_readdata
	wire          avl_adxcfg_0_rcfg_s0_agent_m0_waitrequest;                                                       // avl_adxcfg_0_rcfg_s0_translator:uav_waitrequest -> avl_adxcfg_0_rcfg_s0_agent:m0_waitrequest
	wire          avl_adxcfg_0_rcfg_s0_agent_m0_debugaccess;                                                       // avl_adxcfg_0_rcfg_s0_agent:m0_debugaccess -> avl_adxcfg_0_rcfg_s0_translator:uav_debugaccess
	wire   [31:0] avl_adxcfg_0_rcfg_s0_agent_m0_address;                                                           // avl_adxcfg_0_rcfg_s0_agent:m0_address -> avl_adxcfg_0_rcfg_s0_translator:uav_address
	wire    [3:0] avl_adxcfg_0_rcfg_s0_agent_m0_byteenable;                                                        // avl_adxcfg_0_rcfg_s0_agent:m0_byteenable -> avl_adxcfg_0_rcfg_s0_translator:uav_byteenable
	wire          avl_adxcfg_0_rcfg_s0_agent_m0_read;                                                              // avl_adxcfg_0_rcfg_s0_agent:m0_read -> avl_adxcfg_0_rcfg_s0_translator:uav_read
	wire          avl_adxcfg_0_rcfg_s0_agent_m0_readdatavalid;                                                     // avl_adxcfg_0_rcfg_s0_translator:uav_readdatavalid -> avl_adxcfg_0_rcfg_s0_agent:m0_readdatavalid
	wire          avl_adxcfg_0_rcfg_s0_agent_m0_lock;                                                              // avl_adxcfg_0_rcfg_s0_agent:m0_lock -> avl_adxcfg_0_rcfg_s0_translator:uav_lock
	wire   [31:0] avl_adxcfg_0_rcfg_s0_agent_m0_writedata;                                                         // avl_adxcfg_0_rcfg_s0_agent:m0_writedata -> avl_adxcfg_0_rcfg_s0_translator:uav_writedata
	wire          avl_adxcfg_0_rcfg_s0_agent_m0_write;                                                             // avl_adxcfg_0_rcfg_s0_agent:m0_write -> avl_adxcfg_0_rcfg_s0_translator:uav_write
	wire    [2:0] avl_adxcfg_0_rcfg_s0_agent_m0_burstcount;                                                        // avl_adxcfg_0_rcfg_s0_agent:m0_burstcount -> avl_adxcfg_0_rcfg_s0_translator:uav_burstcount
	wire          avl_adxcfg_0_rcfg_s0_agent_rf_source_valid;                                                      // avl_adxcfg_0_rcfg_s0_agent:rf_source_valid -> avl_adxcfg_0_rcfg_s0_agent_rsp_fifo:in_valid
	wire  [130:0] avl_adxcfg_0_rcfg_s0_agent_rf_source_data;                                                       // avl_adxcfg_0_rcfg_s0_agent:rf_source_data -> avl_adxcfg_0_rcfg_s0_agent_rsp_fifo:in_data
	wire          avl_adxcfg_0_rcfg_s0_agent_rf_source_ready;                                                      // avl_adxcfg_0_rcfg_s0_agent_rsp_fifo:in_ready -> avl_adxcfg_0_rcfg_s0_agent:rf_source_ready
	wire          avl_adxcfg_0_rcfg_s0_agent_rf_source_startofpacket;                                              // avl_adxcfg_0_rcfg_s0_agent:rf_source_startofpacket -> avl_adxcfg_0_rcfg_s0_agent_rsp_fifo:in_startofpacket
	wire          avl_adxcfg_0_rcfg_s0_agent_rf_source_endofpacket;                                                // avl_adxcfg_0_rcfg_s0_agent:rf_source_endofpacket -> avl_adxcfg_0_rcfg_s0_agent_rsp_fifo:in_endofpacket
	wire          avl_adxcfg_0_rcfg_s0_agent_rsp_fifo_out_valid;                                                   // avl_adxcfg_0_rcfg_s0_agent_rsp_fifo:out_valid -> avl_adxcfg_0_rcfg_s0_agent:rf_sink_valid
	wire  [130:0] avl_adxcfg_0_rcfg_s0_agent_rsp_fifo_out_data;                                                    // avl_adxcfg_0_rcfg_s0_agent_rsp_fifo:out_data -> avl_adxcfg_0_rcfg_s0_agent:rf_sink_data
	wire          avl_adxcfg_0_rcfg_s0_agent_rsp_fifo_out_ready;                                                   // avl_adxcfg_0_rcfg_s0_agent:rf_sink_ready -> avl_adxcfg_0_rcfg_s0_agent_rsp_fifo:out_ready
	wire          avl_adxcfg_0_rcfg_s0_agent_rsp_fifo_out_startofpacket;                                           // avl_adxcfg_0_rcfg_s0_agent_rsp_fifo:out_startofpacket -> avl_adxcfg_0_rcfg_s0_agent:rf_sink_startofpacket
	wire          avl_adxcfg_0_rcfg_s0_agent_rsp_fifo_out_endofpacket;                                             // avl_adxcfg_0_rcfg_s0_agent_rsp_fifo:out_endofpacket -> avl_adxcfg_0_rcfg_s0_agent:rf_sink_endofpacket
	wire          avl_adxcfg_0_rcfg_s0_agent_rdata_fifo_src_valid;                                                 // avl_adxcfg_0_rcfg_s0_agent:rdata_fifo_src_valid -> avl_adxcfg_0_rcfg_s0_agent_rdata_fifo:in_valid
	wire   [33:0] avl_adxcfg_0_rcfg_s0_agent_rdata_fifo_src_data;                                                  // avl_adxcfg_0_rcfg_s0_agent:rdata_fifo_src_data -> avl_adxcfg_0_rcfg_s0_agent_rdata_fifo:in_data
	wire          avl_adxcfg_0_rcfg_s0_agent_rdata_fifo_src_ready;                                                 // avl_adxcfg_0_rcfg_s0_agent_rdata_fifo:in_ready -> avl_adxcfg_0_rcfg_s0_agent:rdata_fifo_src_ready
	wire   [31:0] avl_adxcfg_1_rcfg_s0_agent_m0_readdata;                                                          // avl_adxcfg_1_rcfg_s0_translator:uav_readdata -> avl_adxcfg_1_rcfg_s0_agent:m0_readdata
	wire          avl_adxcfg_1_rcfg_s0_agent_m0_waitrequest;                                                       // avl_adxcfg_1_rcfg_s0_translator:uav_waitrequest -> avl_adxcfg_1_rcfg_s0_agent:m0_waitrequest
	wire          avl_adxcfg_1_rcfg_s0_agent_m0_debugaccess;                                                       // avl_adxcfg_1_rcfg_s0_agent:m0_debugaccess -> avl_adxcfg_1_rcfg_s0_translator:uav_debugaccess
	wire   [31:0] avl_adxcfg_1_rcfg_s0_agent_m0_address;                                                           // avl_adxcfg_1_rcfg_s0_agent:m0_address -> avl_adxcfg_1_rcfg_s0_translator:uav_address
	wire    [3:0] avl_adxcfg_1_rcfg_s0_agent_m0_byteenable;                                                        // avl_adxcfg_1_rcfg_s0_agent:m0_byteenable -> avl_adxcfg_1_rcfg_s0_translator:uav_byteenable
	wire          avl_adxcfg_1_rcfg_s0_agent_m0_read;                                                              // avl_adxcfg_1_rcfg_s0_agent:m0_read -> avl_adxcfg_1_rcfg_s0_translator:uav_read
	wire          avl_adxcfg_1_rcfg_s0_agent_m0_readdatavalid;                                                     // avl_adxcfg_1_rcfg_s0_translator:uav_readdatavalid -> avl_adxcfg_1_rcfg_s0_agent:m0_readdatavalid
	wire          avl_adxcfg_1_rcfg_s0_agent_m0_lock;                                                              // avl_adxcfg_1_rcfg_s0_agent:m0_lock -> avl_adxcfg_1_rcfg_s0_translator:uav_lock
	wire   [31:0] avl_adxcfg_1_rcfg_s0_agent_m0_writedata;                                                         // avl_adxcfg_1_rcfg_s0_agent:m0_writedata -> avl_adxcfg_1_rcfg_s0_translator:uav_writedata
	wire          avl_adxcfg_1_rcfg_s0_agent_m0_write;                                                             // avl_adxcfg_1_rcfg_s0_agent:m0_write -> avl_adxcfg_1_rcfg_s0_translator:uav_write
	wire    [2:0] avl_adxcfg_1_rcfg_s0_agent_m0_burstcount;                                                        // avl_adxcfg_1_rcfg_s0_agent:m0_burstcount -> avl_adxcfg_1_rcfg_s0_translator:uav_burstcount
	wire          avl_adxcfg_1_rcfg_s0_agent_rf_source_valid;                                                      // avl_adxcfg_1_rcfg_s0_agent:rf_source_valid -> avl_adxcfg_1_rcfg_s0_agent_rsp_fifo:in_valid
	wire  [130:0] avl_adxcfg_1_rcfg_s0_agent_rf_source_data;                                                       // avl_adxcfg_1_rcfg_s0_agent:rf_source_data -> avl_adxcfg_1_rcfg_s0_agent_rsp_fifo:in_data
	wire          avl_adxcfg_1_rcfg_s0_agent_rf_source_ready;                                                      // avl_adxcfg_1_rcfg_s0_agent_rsp_fifo:in_ready -> avl_adxcfg_1_rcfg_s0_agent:rf_source_ready
	wire          avl_adxcfg_1_rcfg_s0_agent_rf_source_startofpacket;                                              // avl_adxcfg_1_rcfg_s0_agent:rf_source_startofpacket -> avl_adxcfg_1_rcfg_s0_agent_rsp_fifo:in_startofpacket
	wire          avl_adxcfg_1_rcfg_s0_agent_rf_source_endofpacket;                                                // avl_adxcfg_1_rcfg_s0_agent:rf_source_endofpacket -> avl_adxcfg_1_rcfg_s0_agent_rsp_fifo:in_endofpacket
	wire          avl_adxcfg_1_rcfg_s0_agent_rsp_fifo_out_valid;                                                   // avl_adxcfg_1_rcfg_s0_agent_rsp_fifo:out_valid -> avl_adxcfg_1_rcfg_s0_agent:rf_sink_valid
	wire  [130:0] avl_adxcfg_1_rcfg_s0_agent_rsp_fifo_out_data;                                                    // avl_adxcfg_1_rcfg_s0_agent_rsp_fifo:out_data -> avl_adxcfg_1_rcfg_s0_agent:rf_sink_data
	wire          avl_adxcfg_1_rcfg_s0_agent_rsp_fifo_out_ready;                                                   // avl_adxcfg_1_rcfg_s0_agent:rf_sink_ready -> avl_adxcfg_1_rcfg_s0_agent_rsp_fifo:out_ready
	wire          avl_adxcfg_1_rcfg_s0_agent_rsp_fifo_out_startofpacket;                                           // avl_adxcfg_1_rcfg_s0_agent_rsp_fifo:out_startofpacket -> avl_adxcfg_1_rcfg_s0_agent:rf_sink_startofpacket
	wire          avl_adxcfg_1_rcfg_s0_agent_rsp_fifo_out_endofpacket;                                             // avl_adxcfg_1_rcfg_s0_agent_rsp_fifo:out_endofpacket -> avl_adxcfg_1_rcfg_s0_agent:rf_sink_endofpacket
	wire          avl_adxcfg_1_rcfg_s0_agent_rdata_fifo_src_valid;                                                 // avl_adxcfg_1_rcfg_s0_agent:rdata_fifo_src_valid -> avl_adxcfg_1_rcfg_s0_agent_rdata_fifo:in_valid
	wire   [33:0] avl_adxcfg_1_rcfg_s0_agent_rdata_fifo_src_data;                                                  // avl_adxcfg_1_rcfg_s0_agent:rdata_fifo_src_data -> avl_adxcfg_1_rcfg_s0_agent_rdata_fifo:in_data
	wire          avl_adxcfg_1_rcfg_s0_agent_rdata_fifo_src_ready;                                                 // avl_adxcfg_1_rcfg_s0_agent_rdata_fifo:in_ready -> avl_adxcfg_1_rcfg_s0_agent:rdata_fifo_src_ready
	wire   [31:0] avl_adxcfg_2_rcfg_s0_agent_m0_readdata;                                                          // avl_adxcfg_2_rcfg_s0_translator:uav_readdata -> avl_adxcfg_2_rcfg_s0_agent:m0_readdata
	wire          avl_adxcfg_2_rcfg_s0_agent_m0_waitrequest;                                                       // avl_adxcfg_2_rcfg_s0_translator:uav_waitrequest -> avl_adxcfg_2_rcfg_s0_agent:m0_waitrequest
	wire          avl_adxcfg_2_rcfg_s0_agent_m0_debugaccess;                                                       // avl_adxcfg_2_rcfg_s0_agent:m0_debugaccess -> avl_adxcfg_2_rcfg_s0_translator:uav_debugaccess
	wire   [31:0] avl_adxcfg_2_rcfg_s0_agent_m0_address;                                                           // avl_adxcfg_2_rcfg_s0_agent:m0_address -> avl_adxcfg_2_rcfg_s0_translator:uav_address
	wire    [3:0] avl_adxcfg_2_rcfg_s0_agent_m0_byteenable;                                                        // avl_adxcfg_2_rcfg_s0_agent:m0_byteenable -> avl_adxcfg_2_rcfg_s0_translator:uav_byteenable
	wire          avl_adxcfg_2_rcfg_s0_agent_m0_read;                                                              // avl_adxcfg_2_rcfg_s0_agent:m0_read -> avl_adxcfg_2_rcfg_s0_translator:uav_read
	wire          avl_adxcfg_2_rcfg_s0_agent_m0_readdatavalid;                                                     // avl_adxcfg_2_rcfg_s0_translator:uav_readdatavalid -> avl_adxcfg_2_rcfg_s0_agent:m0_readdatavalid
	wire          avl_adxcfg_2_rcfg_s0_agent_m0_lock;                                                              // avl_adxcfg_2_rcfg_s0_agent:m0_lock -> avl_adxcfg_2_rcfg_s0_translator:uav_lock
	wire   [31:0] avl_adxcfg_2_rcfg_s0_agent_m0_writedata;                                                         // avl_adxcfg_2_rcfg_s0_agent:m0_writedata -> avl_adxcfg_2_rcfg_s0_translator:uav_writedata
	wire          avl_adxcfg_2_rcfg_s0_agent_m0_write;                                                             // avl_adxcfg_2_rcfg_s0_agent:m0_write -> avl_adxcfg_2_rcfg_s0_translator:uav_write
	wire    [2:0] avl_adxcfg_2_rcfg_s0_agent_m0_burstcount;                                                        // avl_adxcfg_2_rcfg_s0_agent:m0_burstcount -> avl_adxcfg_2_rcfg_s0_translator:uav_burstcount
	wire          avl_adxcfg_2_rcfg_s0_agent_rf_source_valid;                                                      // avl_adxcfg_2_rcfg_s0_agent:rf_source_valid -> avl_adxcfg_2_rcfg_s0_agent_rsp_fifo:in_valid
	wire  [130:0] avl_adxcfg_2_rcfg_s0_agent_rf_source_data;                                                       // avl_adxcfg_2_rcfg_s0_agent:rf_source_data -> avl_adxcfg_2_rcfg_s0_agent_rsp_fifo:in_data
	wire          avl_adxcfg_2_rcfg_s0_agent_rf_source_ready;                                                      // avl_adxcfg_2_rcfg_s0_agent_rsp_fifo:in_ready -> avl_adxcfg_2_rcfg_s0_agent:rf_source_ready
	wire          avl_adxcfg_2_rcfg_s0_agent_rf_source_startofpacket;                                              // avl_adxcfg_2_rcfg_s0_agent:rf_source_startofpacket -> avl_adxcfg_2_rcfg_s0_agent_rsp_fifo:in_startofpacket
	wire          avl_adxcfg_2_rcfg_s0_agent_rf_source_endofpacket;                                                // avl_adxcfg_2_rcfg_s0_agent:rf_source_endofpacket -> avl_adxcfg_2_rcfg_s0_agent_rsp_fifo:in_endofpacket
	wire          avl_adxcfg_2_rcfg_s0_agent_rsp_fifo_out_valid;                                                   // avl_adxcfg_2_rcfg_s0_agent_rsp_fifo:out_valid -> avl_adxcfg_2_rcfg_s0_agent:rf_sink_valid
	wire  [130:0] avl_adxcfg_2_rcfg_s0_agent_rsp_fifo_out_data;                                                    // avl_adxcfg_2_rcfg_s0_agent_rsp_fifo:out_data -> avl_adxcfg_2_rcfg_s0_agent:rf_sink_data
	wire          avl_adxcfg_2_rcfg_s0_agent_rsp_fifo_out_ready;                                                   // avl_adxcfg_2_rcfg_s0_agent:rf_sink_ready -> avl_adxcfg_2_rcfg_s0_agent_rsp_fifo:out_ready
	wire          avl_adxcfg_2_rcfg_s0_agent_rsp_fifo_out_startofpacket;                                           // avl_adxcfg_2_rcfg_s0_agent_rsp_fifo:out_startofpacket -> avl_adxcfg_2_rcfg_s0_agent:rf_sink_startofpacket
	wire          avl_adxcfg_2_rcfg_s0_agent_rsp_fifo_out_endofpacket;                                             // avl_adxcfg_2_rcfg_s0_agent_rsp_fifo:out_endofpacket -> avl_adxcfg_2_rcfg_s0_agent:rf_sink_endofpacket
	wire          avl_adxcfg_2_rcfg_s0_agent_rdata_fifo_src_valid;                                                 // avl_adxcfg_2_rcfg_s0_agent:rdata_fifo_src_valid -> avl_adxcfg_2_rcfg_s0_agent_rdata_fifo:in_valid
	wire   [33:0] avl_adxcfg_2_rcfg_s0_agent_rdata_fifo_src_data;                                                  // avl_adxcfg_2_rcfg_s0_agent:rdata_fifo_src_data -> avl_adxcfg_2_rcfg_s0_agent_rdata_fifo:in_data
	wire          avl_adxcfg_2_rcfg_s0_agent_rdata_fifo_src_ready;                                                 // avl_adxcfg_2_rcfg_s0_agent_rdata_fifo:in_ready -> avl_adxcfg_2_rcfg_s0_agent:rdata_fifo_src_ready
	wire   [31:0] avl_adxcfg_3_rcfg_s0_agent_m0_readdata;                                                          // avl_adxcfg_3_rcfg_s0_translator:uav_readdata -> avl_adxcfg_3_rcfg_s0_agent:m0_readdata
	wire          avl_adxcfg_3_rcfg_s0_agent_m0_waitrequest;                                                       // avl_adxcfg_3_rcfg_s0_translator:uav_waitrequest -> avl_adxcfg_3_rcfg_s0_agent:m0_waitrequest
	wire          avl_adxcfg_3_rcfg_s0_agent_m0_debugaccess;                                                       // avl_adxcfg_3_rcfg_s0_agent:m0_debugaccess -> avl_adxcfg_3_rcfg_s0_translator:uav_debugaccess
	wire   [31:0] avl_adxcfg_3_rcfg_s0_agent_m0_address;                                                           // avl_adxcfg_3_rcfg_s0_agent:m0_address -> avl_adxcfg_3_rcfg_s0_translator:uav_address
	wire    [3:0] avl_adxcfg_3_rcfg_s0_agent_m0_byteenable;                                                        // avl_adxcfg_3_rcfg_s0_agent:m0_byteenable -> avl_adxcfg_3_rcfg_s0_translator:uav_byteenable
	wire          avl_adxcfg_3_rcfg_s0_agent_m0_read;                                                              // avl_adxcfg_3_rcfg_s0_agent:m0_read -> avl_adxcfg_3_rcfg_s0_translator:uav_read
	wire          avl_adxcfg_3_rcfg_s0_agent_m0_readdatavalid;                                                     // avl_adxcfg_3_rcfg_s0_translator:uav_readdatavalid -> avl_adxcfg_3_rcfg_s0_agent:m0_readdatavalid
	wire          avl_adxcfg_3_rcfg_s0_agent_m0_lock;                                                              // avl_adxcfg_3_rcfg_s0_agent:m0_lock -> avl_adxcfg_3_rcfg_s0_translator:uav_lock
	wire   [31:0] avl_adxcfg_3_rcfg_s0_agent_m0_writedata;                                                         // avl_adxcfg_3_rcfg_s0_agent:m0_writedata -> avl_adxcfg_3_rcfg_s0_translator:uav_writedata
	wire          avl_adxcfg_3_rcfg_s0_agent_m0_write;                                                             // avl_adxcfg_3_rcfg_s0_agent:m0_write -> avl_adxcfg_3_rcfg_s0_translator:uav_write
	wire    [2:0] avl_adxcfg_3_rcfg_s0_agent_m0_burstcount;                                                        // avl_adxcfg_3_rcfg_s0_agent:m0_burstcount -> avl_adxcfg_3_rcfg_s0_translator:uav_burstcount
	wire          avl_adxcfg_3_rcfg_s0_agent_rf_source_valid;                                                      // avl_adxcfg_3_rcfg_s0_agent:rf_source_valid -> avl_adxcfg_3_rcfg_s0_agent_rsp_fifo:in_valid
	wire  [130:0] avl_adxcfg_3_rcfg_s0_agent_rf_source_data;                                                       // avl_adxcfg_3_rcfg_s0_agent:rf_source_data -> avl_adxcfg_3_rcfg_s0_agent_rsp_fifo:in_data
	wire          avl_adxcfg_3_rcfg_s0_agent_rf_source_ready;                                                      // avl_adxcfg_3_rcfg_s0_agent_rsp_fifo:in_ready -> avl_adxcfg_3_rcfg_s0_agent:rf_source_ready
	wire          avl_adxcfg_3_rcfg_s0_agent_rf_source_startofpacket;                                              // avl_adxcfg_3_rcfg_s0_agent:rf_source_startofpacket -> avl_adxcfg_3_rcfg_s0_agent_rsp_fifo:in_startofpacket
	wire          avl_adxcfg_3_rcfg_s0_agent_rf_source_endofpacket;                                                // avl_adxcfg_3_rcfg_s0_agent:rf_source_endofpacket -> avl_adxcfg_3_rcfg_s0_agent_rsp_fifo:in_endofpacket
	wire          avl_adxcfg_3_rcfg_s0_agent_rsp_fifo_out_valid;                                                   // avl_adxcfg_3_rcfg_s0_agent_rsp_fifo:out_valid -> avl_adxcfg_3_rcfg_s0_agent:rf_sink_valid
	wire  [130:0] avl_adxcfg_3_rcfg_s0_agent_rsp_fifo_out_data;                                                    // avl_adxcfg_3_rcfg_s0_agent_rsp_fifo:out_data -> avl_adxcfg_3_rcfg_s0_agent:rf_sink_data
	wire          avl_adxcfg_3_rcfg_s0_agent_rsp_fifo_out_ready;                                                   // avl_adxcfg_3_rcfg_s0_agent:rf_sink_ready -> avl_adxcfg_3_rcfg_s0_agent_rsp_fifo:out_ready
	wire          avl_adxcfg_3_rcfg_s0_agent_rsp_fifo_out_startofpacket;                                           // avl_adxcfg_3_rcfg_s0_agent_rsp_fifo:out_startofpacket -> avl_adxcfg_3_rcfg_s0_agent:rf_sink_startofpacket
	wire          avl_adxcfg_3_rcfg_s0_agent_rsp_fifo_out_endofpacket;                                             // avl_adxcfg_3_rcfg_s0_agent_rsp_fifo:out_endofpacket -> avl_adxcfg_3_rcfg_s0_agent:rf_sink_endofpacket
	wire          avl_adxcfg_3_rcfg_s0_agent_rdata_fifo_src_valid;                                                 // avl_adxcfg_3_rcfg_s0_agent:rdata_fifo_src_valid -> avl_adxcfg_3_rcfg_s0_agent_rdata_fifo:in_valid
	wire   [33:0] avl_adxcfg_3_rcfg_s0_agent_rdata_fifo_src_data;                                                  // avl_adxcfg_3_rcfg_s0_agent:rdata_fifo_src_data -> avl_adxcfg_3_rcfg_s0_agent_rdata_fifo:in_data
	wire          avl_adxcfg_3_rcfg_s0_agent_rdata_fifo_src_ready;                                                 // avl_adxcfg_3_rcfg_s0_agent_rdata_fifo:in_ready -> avl_adxcfg_3_rcfg_s0_agent:rdata_fifo_src_ready
	wire   [31:0] avl_adxcfg_0_rcfg_s1_agent_m0_readdata;                                                          // avl_adxcfg_0_rcfg_s1_translator:uav_readdata -> avl_adxcfg_0_rcfg_s1_agent:m0_readdata
	wire          avl_adxcfg_0_rcfg_s1_agent_m0_waitrequest;                                                       // avl_adxcfg_0_rcfg_s1_translator:uav_waitrequest -> avl_adxcfg_0_rcfg_s1_agent:m0_waitrequest
	wire          avl_adxcfg_0_rcfg_s1_agent_m0_debugaccess;                                                       // avl_adxcfg_0_rcfg_s1_agent:m0_debugaccess -> avl_adxcfg_0_rcfg_s1_translator:uav_debugaccess
	wire   [31:0] avl_adxcfg_0_rcfg_s1_agent_m0_address;                                                           // avl_adxcfg_0_rcfg_s1_agent:m0_address -> avl_adxcfg_0_rcfg_s1_translator:uav_address
	wire    [3:0] avl_adxcfg_0_rcfg_s1_agent_m0_byteenable;                                                        // avl_adxcfg_0_rcfg_s1_agent:m0_byteenable -> avl_adxcfg_0_rcfg_s1_translator:uav_byteenable
	wire          avl_adxcfg_0_rcfg_s1_agent_m0_read;                                                              // avl_adxcfg_0_rcfg_s1_agent:m0_read -> avl_adxcfg_0_rcfg_s1_translator:uav_read
	wire          avl_adxcfg_0_rcfg_s1_agent_m0_readdatavalid;                                                     // avl_adxcfg_0_rcfg_s1_translator:uav_readdatavalid -> avl_adxcfg_0_rcfg_s1_agent:m0_readdatavalid
	wire          avl_adxcfg_0_rcfg_s1_agent_m0_lock;                                                              // avl_adxcfg_0_rcfg_s1_agent:m0_lock -> avl_adxcfg_0_rcfg_s1_translator:uav_lock
	wire   [31:0] avl_adxcfg_0_rcfg_s1_agent_m0_writedata;                                                         // avl_adxcfg_0_rcfg_s1_agent:m0_writedata -> avl_adxcfg_0_rcfg_s1_translator:uav_writedata
	wire          avl_adxcfg_0_rcfg_s1_agent_m0_write;                                                             // avl_adxcfg_0_rcfg_s1_agent:m0_write -> avl_adxcfg_0_rcfg_s1_translator:uav_write
	wire    [2:0] avl_adxcfg_0_rcfg_s1_agent_m0_burstcount;                                                        // avl_adxcfg_0_rcfg_s1_agent:m0_burstcount -> avl_adxcfg_0_rcfg_s1_translator:uav_burstcount
	wire          avl_adxcfg_0_rcfg_s1_agent_rf_source_valid;                                                      // avl_adxcfg_0_rcfg_s1_agent:rf_source_valid -> avl_adxcfg_0_rcfg_s1_agent_rsp_fifo:in_valid
	wire  [130:0] avl_adxcfg_0_rcfg_s1_agent_rf_source_data;                                                       // avl_adxcfg_0_rcfg_s1_agent:rf_source_data -> avl_adxcfg_0_rcfg_s1_agent_rsp_fifo:in_data
	wire          avl_adxcfg_0_rcfg_s1_agent_rf_source_ready;                                                      // avl_adxcfg_0_rcfg_s1_agent_rsp_fifo:in_ready -> avl_adxcfg_0_rcfg_s1_agent:rf_source_ready
	wire          avl_adxcfg_0_rcfg_s1_agent_rf_source_startofpacket;                                              // avl_adxcfg_0_rcfg_s1_agent:rf_source_startofpacket -> avl_adxcfg_0_rcfg_s1_agent_rsp_fifo:in_startofpacket
	wire          avl_adxcfg_0_rcfg_s1_agent_rf_source_endofpacket;                                                // avl_adxcfg_0_rcfg_s1_agent:rf_source_endofpacket -> avl_adxcfg_0_rcfg_s1_agent_rsp_fifo:in_endofpacket
	wire          avl_adxcfg_0_rcfg_s1_agent_rsp_fifo_out_valid;                                                   // avl_adxcfg_0_rcfg_s1_agent_rsp_fifo:out_valid -> avl_adxcfg_0_rcfg_s1_agent:rf_sink_valid
	wire  [130:0] avl_adxcfg_0_rcfg_s1_agent_rsp_fifo_out_data;                                                    // avl_adxcfg_0_rcfg_s1_agent_rsp_fifo:out_data -> avl_adxcfg_0_rcfg_s1_agent:rf_sink_data
	wire          avl_adxcfg_0_rcfg_s1_agent_rsp_fifo_out_ready;                                                   // avl_adxcfg_0_rcfg_s1_agent:rf_sink_ready -> avl_adxcfg_0_rcfg_s1_agent_rsp_fifo:out_ready
	wire          avl_adxcfg_0_rcfg_s1_agent_rsp_fifo_out_startofpacket;                                           // avl_adxcfg_0_rcfg_s1_agent_rsp_fifo:out_startofpacket -> avl_adxcfg_0_rcfg_s1_agent:rf_sink_startofpacket
	wire          avl_adxcfg_0_rcfg_s1_agent_rsp_fifo_out_endofpacket;                                             // avl_adxcfg_0_rcfg_s1_agent_rsp_fifo:out_endofpacket -> avl_adxcfg_0_rcfg_s1_agent:rf_sink_endofpacket
	wire          avl_adxcfg_0_rcfg_s1_agent_rdata_fifo_src_valid;                                                 // avl_adxcfg_0_rcfg_s1_agent:rdata_fifo_src_valid -> avl_adxcfg_0_rcfg_s1_agent_rdata_fifo:in_valid
	wire   [33:0] avl_adxcfg_0_rcfg_s1_agent_rdata_fifo_src_data;                                                  // avl_adxcfg_0_rcfg_s1_agent:rdata_fifo_src_data -> avl_adxcfg_0_rcfg_s1_agent_rdata_fifo:in_data
	wire          avl_adxcfg_0_rcfg_s1_agent_rdata_fifo_src_ready;                                                 // avl_adxcfg_0_rcfg_s1_agent_rdata_fifo:in_ready -> avl_adxcfg_0_rcfg_s1_agent:rdata_fifo_src_ready
	wire   [31:0] avl_adxcfg_1_rcfg_s1_agent_m0_readdata;                                                          // avl_adxcfg_1_rcfg_s1_translator:uav_readdata -> avl_adxcfg_1_rcfg_s1_agent:m0_readdata
	wire          avl_adxcfg_1_rcfg_s1_agent_m0_waitrequest;                                                       // avl_adxcfg_1_rcfg_s1_translator:uav_waitrequest -> avl_adxcfg_1_rcfg_s1_agent:m0_waitrequest
	wire          avl_adxcfg_1_rcfg_s1_agent_m0_debugaccess;                                                       // avl_adxcfg_1_rcfg_s1_agent:m0_debugaccess -> avl_adxcfg_1_rcfg_s1_translator:uav_debugaccess
	wire   [31:0] avl_adxcfg_1_rcfg_s1_agent_m0_address;                                                           // avl_adxcfg_1_rcfg_s1_agent:m0_address -> avl_adxcfg_1_rcfg_s1_translator:uav_address
	wire    [3:0] avl_adxcfg_1_rcfg_s1_agent_m0_byteenable;                                                        // avl_adxcfg_1_rcfg_s1_agent:m0_byteenable -> avl_adxcfg_1_rcfg_s1_translator:uav_byteenable
	wire          avl_adxcfg_1_rcfg_s1_agent_m0_read;                                                              // avl_adxcfg_1_rcfg_s1_agent:m0_read -> avl_adxcfg_1_rcfg_s1_translator:uav_read
	wire          avl_adxcfg_1_rcfg_s1_agent_m0_readdatavalid;                                                     // avl_adxcfg_1_rcfg_s1_translator:uav_readdatavalid -> avl_adxcfg_1_rcfg_s1_agent:m0_readdatavalid
	wire          avl_adxcfg_1_rcfg_s1_agent_m0_lock;                                                              // avl_adxcfg_1_rcfg_s1_agent:m0_lock -> avl_adxcfg_1_rcfg_s1_translator:uav_lock
	wire   [31:0] avl_adxcfg_1_rcfg_s1_agent_m0_writedata;                                                         // avl_adxcfg_1_rcfg_s1_agent:m0_writedata -> avl_adxcfg_1_rcfg_s1_translator:uav_writedata
	wire          avl_adxcfg_1_rcfg_s1_agent_m0_write;                                                             // avl_adxcfg_1_rcfg_s1_agent:m0_write -> avl_adxcfg_1_rcfg_s1_translator:uav_write
	wire    [2:0] avl_adxcfg_1_rcfg_s1_agent_m0_burstcount;                                                        // avl_adxcfg_1_rcfg_s1_agent:m0_burstcount -> avl_adxcfg_1_rcfg_s1_translator:uav_burstcount
	wire          avl_adxcfg_1_rcfg_s1_agent_rf_source_valid;                                                      // avl_adxcfg_1_rcfg_s1_agent:rf_source_valid -> avl_adxcfg_1_rcfg_s1_agent_rsp_fifo:in_valid
	wire  [130:0] avl_adxcfg_1_rcfg_s1_agent_rf_source_data;                                                       // avl_adxcfg_1_rcfg_s1_agent:rf_source_data -> avl_adxcfg_1_rcfg_s1_agent_rsp_fifo:in_data
	wire          avl_adxcfg_1_rcfg_s1_agent_rf_source_ready;                                                      // avl_adxcfg_1_rcfg_s1_agent_rsp_fifo:in_ready -> avl_adxcfg_1_rcfg_s1_agent:rf_source_ready
	wire          avl_adxcfg_1_rcfg_s1_agent_rf_source_startofpacket;                                              // avl_adxcfg_1_rcfg_s1_agent:rf_source_startofpacket -> avl_adxcfg_1_rcfg_s1_agent_rsp_fifo:in_startofpacket
	wire          avl_adxcfg_1_rcfg_s1_agent_rf_source_endofpacket;                                                // avl_adxcfg_1_rcfg_s1_agent:rf_source_endofpacket -> avl_adxcfg_1_rcfg_s1_agent_rsp_fifo:in_endofpacket
	wire          avl_adxcfg_1_rcfg_s1_agent_rsp_fifo_out_valid;                                                   // avl_adxcfg_1_rcfg_s1_agent_rsp_fifo:out_valid -> avl_adxcfg_1_rcfg_s1_agent:rf_sink_valid
	wire  [130:0] avl_adxcfg_1_rcfg_s1_agent_rsp_fifo_out_data;                                                    // avl_adxcfg_1_rcfg_s1_agent_rsp_fifo:out_data -> avl_adxcfg_1_rcfg_s1_agent:rf_sink_data
	wire          avl_adxcfg_1_rcfg_s1_agent_rsp_fifo_out_ready;                                                   // avl_adxcfg_1_rcfg_s1_agent:rf_sink_ready -> avl_adxcfg_1_rcfg_s1_agent_rsp_fifo:out_ready
	wire          avl_adxcfg_1_rcfg_s1_agent_rsp_fifo_out_startofpacket;                                           // avl_adxcfg_1_rcfg_s1_agent_rsp_fifo:out_startofpacket -> avl_adxcfg_1_rcfg_s1_agent:rf_sink_startofpacket
	wire          avl_adxcfg_1_rcfg_s1_agent_rsp_fifo_out_endofpacket;                                             // avl_adxcfg_1_rcfg_s1_agent_rsp_fifo:out_endofpacket -> avl_adxcfg_1_rcfg_s1_agent:rf_sink_endofpacket
	wire          avl_adxcfg_1_rcfg_s1_agent_rdata_fifo_src_valid;                                                 // avl_adxcfg_1_rcfg_s1_agent:rdata_fifo_src_valid -> avl_adxcfg_1_rcfg_s1_agent_rdata_fifo:in_valid
	wire   [33:0] avl_adxcfg_1_rcfg_s1_agent_rdata_fifo_src_data;                                                  // avl_adxcfg_1_rcfg_s1_agent:rdata_fifo_src_data -> avl_adxcfg_1_rcfg_s1_agent_rdata_fifo:in_data
	wire          avl_adxcfg_1_rcfg_s1_agent_rdata_fifo_src_ready;                                                 // avl_adxcfg_1_rcfg_s1_agent_rdata_fifo:in_ready -> avl_adxcfg_1_rcfg_s1_agent:rdata_fifo_src_ready
	wire   [31:0] avl_adxcfg_2_rcfg_s1_agent_m0_readdata;                                                          // avl_adxcfg_2_rcfg_s1_translator:uav_readdata -> avl_adxcfg_2_rcfg_s1_agent:m0_readdata
	wire          avl_adxcfg_2_rcfg_s1_agent_m0_waitrequest;                                                       // avl_adxcfg_2_rcfg_s1_translator:uav_waitrequest -> avl_adxcfg_2_rcfg_s1_agent:m0_waitrequest
	wire          avl_adxcfg_2_rcfg_s1_agent_m0_debugaccess;                                                       // avl_adxcfg_2_rcfg_s1_agent:m0_debugaccess -> avl_adxcfg_2_rcfg_s1_translator:uav_debugaccess
	wire   [31:0] avl_adxcfg_2_rcfg_s1_agent_m0_address;                                                           // avl_adxcfg_2_rcfg_s1_agent:m0_address -> avl_adxcfg_2_rcfg_s1_translator:uav_address
	wire    [3:0] avl_adxcfg_2_rcfg_s1_agent_m0_byteenable;                                                        // avl_adxcfg_2_rcfg_s1_agent:m0_byteenable -> avl_adxcfg_2_rcfg_s1_translator:uav_byteenable
	wire          avl_adxcfg_2_rcfg_s1_agent_m0_read;                                                              // avl_adxcfg_2_rcfg_s1_agent:m0_read -> avl_adxcfg_2_rcfg_s1_translator:uav_read
	wire          avl_adxcfg_2_rcfg_s1_agent_m0_readdatavalid;                                                     // avl_adxcfg_2_rcfg_s1_translator:uav_readdatavalid -> avl_adxcfg_2_rcfg_s1_agent:m0_readdatavalid
	wire          avl_adxcfg_2_rcfg_s1_agent_m0_lock;                                                              // avl_adxcfg_2_rcfg_s1_agent:m0_lock -> avl_adxcfg_2_rcfg_s1_translator:uav_lock
	wire   [31:0] avl_adxcfg_2_rcfg_s1_agent_m0_writedata;                                                         // avl_adxcfg_2_rcfg_s1_agent:m0_writedata -> avl_adxcfg_2_rcfg_s1_translator:uav_writedata
	wire          avl_adxcfg_2_rcfg_s1_agent_m0_write;                                                             // avl_adxcfg_2_rcfg_s1_agent:m0_write -> avl_adxcfg_2_rcfg_s1_translator:uav_write
	wire    [2:0] avl_adxcfg_2_rcfg_s1_agent_m0_burstcount;                                                        // avl_adxcfg_2_rcfg_s1_agent:m0_burstcount -> avl_adxcfg_2_rcfg_s1_translator:uav_burstcount
	wire          avl_adxcfg_2_rcfg_s1_agent_rf_source_valid;                                                      // avl_adxcfg_2_rcfg_s1_agent:rf_source_valid -> avl_adxcfg_2_rcfg_s1_agent_rsp_fifo:in_valid
	wire  [130:0] avl_adxcfg_2_rcfg_s1_agent_rf_source_data;                                                       // avl_adxcfg_2_rcfg_s1_agent:rf_source_data -> avl_adxcfg_2_rcfg_s1_agent_rsp_fifo:in_data
	wire          avl_adxcfg_2_rcfg_s1_agent_rf_source_ready;                                                      // avl_adxcfg_2_rcfg_s1_agent_rsp_fifo:in_ready -> avl_adxcfg_2_rcfg_s1_agent:rf_source_ready
	wire          avl_adxcfg_2_rcfg_s1_agent_rf_source_startofpacket;                                              // avl_adxcfg_2_rcfg_s1_agent:rf_source_startofpacket -> avl_adxcfg_2_rcfg_s1_agent_rsp_fifo:in_startofpacket
	wire          avl_adxcfg_2_rcfg_s1_agent_rf_source_endofpacket;                                                // avl_adxcfg_2_rcfg_s1_agent:rf_source_endofpacket -> avl_adxcfg_2_rcfg_s1_agent_rsp_fifo:in_endofpacket
	wire          avl_adxcfg_2_rcfg_s1_agent_rsp_fifo_out_valid;                                                   // avl_adxcfg_2_rcfg_s1_agent_rsp_fifo:out_valid -> avl_adxcfg_2_rcfg_s1_agent:rf_sink_valid
	wire  [130:0] avl_adxcfg_2_rcfg_s1_agent_rsp_fifo_out_data;                                                    // avl_adxcfg_2_rcfg_s1_agent_rsp_fifo:out_data -> avl_adxcfg_2_rcfg_s1_agent:rf_sink_data
	wire          avl_adxcfg_2_rcfg_s1_agent_rsp_fifo_out_ready;                                                   // avl_adxcfg_2_rcfg_s1_agent:rf_sink_ready -> avl_adxcfg_2_rcfg_s1_agent_rsp_fifo:out_ready
	wire          avl_adxcfg_2_rcfg_s1_agent_rsp_fifo_out_startofpacket;                                           // avl_adxcfg_2_rcfg_s1_agent_rsp_fifo:out_startofpacket -> avl_adxcfg_2_rcfg_s1_agent:rf_sink_startofpacket
	wire          avl_adxcfg_2_rcfg_s1_agent_rsp_fifo_out_endofpacket;                                             // avl_adxcfg_2_rcfg_s1_agent_rsp_fifo:out_endofpacket -> avl_adxcfg_2_rcfg_s1_agent:rf_sink_endofpacket
	wire          avl_adxcfg_2_rcfg_s1_agent_rdata_fifo_src_valid;                                                 // avl_adxcfg_2_rcfg_s1_agent:rdata_fifo_src_valid -> avl_adxcfg_2_rcfg_s1_agent_rdata_fifo:in_valid
	wire   [33:0] avl_adxcfg_2_rcfg_s1_agent_rdata_fifo_src_data;                                                  // avl_adxcfg_2_rcfg_s1_agent:rdata_fifo_src_data -> avl_adxcfg_2_rcfg_s1_agent_rdata_fifo:in_data
	wire          avl_adxcfg_2_rcfg_s1_agent_rdata_fifo_src_ready;                                                 // avl_adxcfg_2_rcfg_s1_agent_rdata_fifo:in_ready -> avl_adxcfg_2_rcfg_s1_agent:rdata_fifo_src_ready
	wire   [31:0] avl_adxcfg_3_rcfg_s1_agent_m0_readdata;                                                          // avl_adxcfg_3_rcfg_s1_translator:uav_readdata -> avl_adxcfg_3_rcfg_s1_agent:m0_readdata
	wire          avl_adxcfg_3_rcfg_s1_agent_m0_waitrequest;                                                       // avl_adxcfg_3_rcfg_s1_translator:uav_waitrequest -> avl_adxcfg_3_rcfg_s1_agent:m0_waitrequest
	wire          avl_adxcfg_3_rcfg_s1_agent_m0_debugaccess;                                                       // avl_adxcfg_3_rcfg_s1_agent:m0_debugaccess -> avl_adxcfg_3_rcfg_s1_translator:uav_debugaccess
	wire   [31:0] avl_adxcfg_3_rcfg_s1_agent_m0_address;                                                           // avl_adxcfg_3_rcfg_s1_agent:m0_address -> avl_adxcfg_3_rcfg_s1_translator:uav_address
	wire    [3:0] avl_adxcfg_3_rcfg_s1_agent_m0_byteenable;                                                        // avl_adxcfg_3_rcfg_s1_agent:m0_byteenable -> avl_adxcfg_3_rcfg_s1_translator:uav_byteenable
	wire          avl_adxcfg_3_rcfg_s1_agent_m0_read;                                                              // avl_adxcfg_3_rcfg_s1_agent:m0_read -> avl_adxcfg_3_rcfg_s1_translator:uav_read
	wire          avl_adxcfg_3_rcfg_s1_agent_m0_readdatavalid;                                                     // avl_adxcfg_3_rcfg_s1_translator:uav_readdatavalid -> avl_adxcfg_3_rcfg_s1_agent:m0_readdatavalid
	wire          avl_adxcfg_3_rcfg_s1_agent_m0_lock;                                                              // avl_adxcfg_3_rcfg_s1_agent:m0_lock -> avl_adxcfg_3_rcfg_s1_translator:uav_lock
	wire   [31:0] avl_adxcfg_3_rcfg_s1_agent_m0_writedata;                                                         // avl_adxcfg_3_rcfg_s1_agent:m0_writedata -> avl_adxcfg_3_rcfg_s1_translator:uav_writedata
	wire          avl_adxcfg_3_rcfg_s1_agent_m0_write;                                                             // avl_adxcfg_3_rcfg_s1_agent:m0_write -> avl_adxcfg_3_rcfg_s1_translator:uav_write
	wire    [2:0] avl_adxcfg_3_rcfg_s1_agent_m0_burstcount;                                                        // avl_adxcfg_3_rcfg_s1_agent:m0_burstcount -> avl_adxcfg_3_rcfg_s1_translator:uav_burstcount
	wire          avl_adxcfg_3_rcfg_s1_agent_rf_source_valid;                                                      // avl_adxcfg_3_rcfg_s1_agent:rf_source_valid -> avl_adxcfg_3_rcfg_s1_agent_rsp_fifo:in_valid
	wire  [130:0] avl_adxcfg_3_rcfg_s1_agent_rf_source_data;                                                       // avl_adxcfg_3_rcfg_s1_agent:rf_source_data -> avl_adxcfg_3_rcfg_s1_agent_rsp_fifo:in_data
	wire          avl_adxcfg_3_rcfg_s1_agent_rf_source_ready;                                                      // avl_adxcfg_3_rcfg_s1_agent_rsp_fifo:in_ready -> avl_adxcfg_3_rcfg_s1_agent:rf_source_ready
	wire          avl_adxcfg_3_rcfg_s1_agent_rf_source_startofpacket;                                              // avl_adxcfg_3_rcfg_s1_agent:rf_source_startofpacket -> avl_adxcfg_3_rcfg_s1_agent_rsp_fifo:in_startofpacket
	wire          avl_adxcfg_3_rcfg_s1_agent_rf_source_endofpacket;                                                // avl_adxcfg_3_rcfg_s1_agent:rf_source_endofpacket -> avl_adxcfg_3_rcfg_s1_agent_rsp_fifo:in_endofpacket
	wire          avl_adxcfg_3_rcfg_s1_agent_rsp_fifo_out_valid;                                                   // avl_adxcfg_3_rcfg_s1_agent_rsp_fifo:out_valid -> avl_adxcfg_3_rcfg_s1_agent:rf_sink_valid
	wire  [130:0] avl_adxcfg_3_rcfg_s1_agent_rsp_fifo_out_data;                                                    // avl_adxcfg_3_rcfg_s1_agent_rsp_fifo:out_data -> avl_adxcfg_3_rcfg_s1_agent:rf_sink_data
	wire          avl_adxcfg_3_rcfg_s1_agent_rsp_fifo_out_ready;                                                   // avl_adxcfg_3_rcfg_s1_agent:rf_sink_ready -> avl_adxcfg_3_rcfg_s1_agent_rsp_fifo:out_ready
	wire          avl_adxcfg_3_rcfg_s1_agent_rsp_fifo_out_startofpacket;                                           // avl_adxcfg_3_rcfg_s1_agent_rsp_fifo:out_startofpacket -> avl_adxcfg_3_rcfg_s1_agent:rf_sink_startofpacket
	wire          avl_adxcfg_3_rcfg_s1_agent_rsp_fifo_out_endofpacket;                                             // avl_adxcfg_3_rcfg_s1_agent_rsp_fifo:out_endofpacket -> avl_adxcfg_3_rcfg_s1_agent:rf_sink_endofpacket
	wire          avl_adxcfg_3_rcfg_s1_agent_rdata_fifo_src_valid;                                                 // avl_adxcfg_3_rcfg_s1_agent:rdata_fifo_src_valid -> avl_adxcfg_3_rcfg_s1_agent_rdata_fifo:in_valid
	wire   [33:0] avl_adxcfg_3_rcfg_s1_agent_rdata_fifo_src_data;                                                  // avl_adxcfg_3_rcfg_s1_agent:rdata_fifo_src_data -> avl_adxcfg_3_rcfg_s1_agent_rdata_fifo:in_data
	wire          avl_adxcfg_3_rcfg_s1_agent_rdata_fifo_src_ready;                                                 // avl_adxcfg_3_rcfg_s1_agent_rdata_fifo:in_ready -> avl_adxcfg_3_rcfg_s1_agent:rdata_fifo_src_ready
	wire   [31:0] sys_ethernet_dma_rx_response_agent_m0_readdata;                                                  // sys_ethernet_dma_rx_response_translator:uav_readdata -> sys_ethernet_dma_rx_response_agent:m0_readdata
	wire          sys_ethernet_dma_rx_response_agent_m0_waitrequest;                                               // sys_ethernet_dma_rx_response_translator:uav_waitrequest -> sys_ethernet_dma_rx_response_agent:m0_waitrequest
	wire          sys_ethernet_dma_rx_response_agent_m0_debugaccess;                                               // sys_ethernet_dma_rx_response_agent:m0_debugaccess -> sys_ethernet_dma_rx_response_translator:uav_debugaccess
	wire   [31:0] sys_ethernet_dma_rx_response_agent_m0_address;                                                   // sys_ethernet_dma_rx_response_agent:m0_address -> sys_ethernet_dma_rx_response_translator:uav_address
	wire    [3:0] sys_ethernet_dma_rx_response_agent_m0_byteenable;                                                // sys_ethernet_dma_rx_response_agent:m0_byteenable -> sys_ethernet_dma_rx_response_translator:uav_byteenable
	wire          sys_ethernet_dma_rx_response_agent_m0_read;                                                      // sys_ethernet_dma_rx_response_agent:m0_read -> sys_ethernet_dma_rx_response_translator:uav_read
	wire          sys_ethernet_dma_rx_response_agent_m0_readdatavalid;                                             // sys_ethernet_dma_rx_response_translator:uav_readdatavalid -> sys_ethernet_dma_rx_response_agent:m0_readdatavalid
	wire          sys_ethernet_dma_rx_response_agent_m0_lock;                                                      // sys_ethernet_dma_rx_response_agent:m0_lock -> sys_ethernet_dma_rx_response_translator:uav_lock
	wire   [31:0] sys_ethernet_dma_rx_response_agent_m0_writedata;                                                 // sys_ethernet_dma_rx_response_agent:m0_writedata -> sys_ethernet_dma_rx_response_translator:uav_writedata
	wire          sys_ethernet_dma_rx_response_agent_m0_write;                                                     // sys_ethernet_dma_rx_response_agent:m0_write -> sys_ethernet_dma_rx_response_translator:uav_write
	wire    [2:0] sys_ethernet_dma_rx_response_agent_m0_burstcount;                                                // sys_ethernet_dma_rx_response_agent:m0_burstcount -> sys_ethernet_dma_rx_response_translator:uav_burstcount
	wire          sys_ethernet_dma_rx_response_agent_rf_source_valid;                                              // sys_ethernet_dma_rx_response_agent:rf_source_valid -> sys_ethernet_dma_rx_response_agent_rsp_fifo:in_valid
	wire  [130:0] sys_ethernet_dma_rx_response_agent_rf_source_data;                                               // sys_ethernet_dma_rx_response_agent:rf_source_data -> sys_ethernet_dma_rx_response_agent_rsp_fifo:in_data
	wire          sys_ethernet_dma_rx_response_agent_rf_source_ready;                                              // sys_ethernet_dma_rx_response_agent_rsp_fifo:in_ready -> sys_ethernet_dma_rx_response_agent:rf_source_ready
	wire          sys_ethernet_dma_rx_response_agent_rf_source_startofpacket;                                      // sys_ethernet_dma_rx_response_agent:rf_source_startofpacket -> sys_ethernet_dma_rx_response_agent_rsp_fifo:in_startofpacket
	wire          sys_ethernet_dma_rx_response_agent_rf_source_endofpacket;                                        // sys_ethernet_dma_rx_response_agent:rf_source_endofpacket -> sys_ethernet_dma_rx_response_agent_rsp_fifo:in_endofpacket
	wire          sys_ethernet_dma_rx_response_agent_rsp_fifo_out_valid;                                           // sys_ethernet_dma_rx_response_agent_rsp_fifo:out_valid -> sys_ethernet_dma_rx_response_agent:rf_sink_valid
	wire  [130:0] sys_ethernet_dma_rx_response_agent_rsp_fifo_out_data;                                            // sys_ethernet_dma_rx_response_agent_rsp_fifo:out_data -> sys_ethernet_dma_rx_response_agent:rf_sink_data
	wire          sys_ethernet_dma_rx_response_agent_rsp_fifo_out_ready;                                           // sys_ethernet_dma_rx_response_agent:rf_sink_ready -> sys_ethernet_dma_rx_response_agent_rsp_fifo:out_ready
	wire          sys_ethernet_dma_rx_response_agent_rsp_fifo_out_startofpacket;                                   // sys_ethernet_dma_rx_response_agent_rsp_fifo:out_startofpacket -> sys_ethernet_dma_rx_response_agent:rf_sink_startofpacket
	wire          sys_ethernet_dma_rx_response_agent_rsp_fifo_out_endofpacket;                                     // sys_ethernet_dma_rx_response_agent_rsp_fifo:out_endofpacket -> sys_ethernet_dma_rx_response_agent:rf_sink_endofpacket
	wire          sys_ethernet_dma_rx_response_agent_rdata_fifo_src_valid;                                         // sys_ethernet_dma_rx_response_agent:rdata_fifo_src_valid -> sys_ethernet_dma_rx_response_agent_rdata_fifo:in_valid
	wire   [33:0] sys_ethernet_dma_rx_response_agent_rdata_fifo_src_data;                                          // sys_ethernet_dma_rx_response_agent:rdata_fifo_src_data -> sys_ethernet_dma_rx_response_agent_rdata_fifo:in_data
	wire          sys_ethernet_dma_rx_response_agent_rdata_fifo_src_ready;                                         // sys_ethernet_dma_rx_response_agent_rdata_fifo:in_ready -> sys_ethernet_dma_rx_response_agent:rdata_fifo_src_ready
	wire   [31:0] sys_int_mem_s1_agent_m0_readdata;                                                                // sys_int_mem_s1_translator:uav_readdata -> sys_int_mem_s1_agent:m0_readdata
	wire          sys_int_mem_s1_agent_m0_waitrequest;                                                             // sys_int_mem_s1_translator:uav_waitrequest -> sys_int_mem_s1_agent:m0_waitrequest
	wire          sys_int_mem_s1_agent_m0_debugaccess;                                                             // sys_int_mem_s1_agent:m0_debugaccess -> sys_int_mem_s1_translator:uav_debugaccess
	wire   [31:0] sys_int_mem_s1_agent_m0_address;                                                                 // sys_int_mem_s1_agent:m0_address -> sys_int_mem_s1_translator:uav_address
	wire    [3:0] sys_int_mem_s1_agent_m0_byteenable;                                                              // sys_int_mem_s1_agent:m0_byteenable -> sys_int_mem_s1_translator:uav_byteenable
	wire          sys_int_mem_s1_agent_m0_read;                                                                    // sys_int_mem_s1_agent:m0_read -> sys_int_mem_s1_translator:uav_read
	wire          sys_int_mem_s1_agent_m0_readdatavalid;                                                           // sys_int_mem_s1_translator:uav_readdatavalid -> sys_int_mem_s1_agent:m0_readdatavalid
	wire          sys_int_mem_s1_agent_m0_lock;                                                                    // sys_int_mem_s1_agent:m0_lock -> sys_int_mem_s1_translator:uav_lock
	wire   [31:0] sys_int_mem_s1_agent_m0_writedata;                                                               // sys_int_mem_s1_agent:m0_writedata -> sys_int_mem_s1_translator:uav_writedata
	wire          sys_int_mem_s1_agent_m0_write;                                                                   // sys_int_mem_s1_agent:m0_write -> sys_int_mem_s1_translator:uav_write
	wire    [2:0] sys_int_mem_s1_agent_m0_burstcount;                                                              // sys_int_mem_s1_agent:m0_burstcount -> sys_int_mem_s1_translator:uav_burstcount
	wire          sys_int_mem_s1_agent_rf_source_valid;                                                            // sys_int_mem_s1_agent:rf_source_valid -> sys_int_mem_s1_agent_rsp_fifo:in_valid
	wire  [130:0] sys_int_mem_s1_agent_rf_source_data;                                                             // sys_int_mem_s1_agent:rf_source_data -> sys_int_mem_s1_agent_rsp_fifo:in_data
	wire          sys_int_mem_s1_agent_rf_source_ready;                                                            // sys_int_mem_s1_agent_rsp_fifo:in_ready -> sys_int_mem_s1_agent:rf_source_ready
	wire          sys_int_mem_s1_agent_rf_source_startofpacket;                                                    // sys_int_mem_s1_agent:rf_source_startofpacket -> sys_int_mem_s1_agent_rsp_fifo:in_startofpacket
	wire          sys_int_mem_s1_agent_rf_source_endofpacket;                                                      // sys_int_mem_s1_agent:rf_source_endofpacket -> sys_int_mem_s1_agent_rsp_fifo:in_endofpacket
	wire          sys_int_mem_s1_agent_rsp_fifo_out_valid;                                                         // sys_int_mem_s1_agent_rsp_fifo:out_valid -> sys_int_mem_s1_agent:rf_sink_valid
	wire  [130:0] sys_int_mem_s1_agent_rsp_fifo_out_data;                                                          // sys_int_mem_s1_agent_rsp_fifo:out_data -> sys_int_mem_s1_agent:rf_sink_data
	wire          sys_int_mem_s1_agent_rsp_fifo_out_ready;                                                         // sys_int_mem_s1_agent:rf_sink_ready -> sys_int_mem_s1_agent_rsp_fifo:out_ready
	wire          sys_int_mem_s1_agent_rsp_fifo_out_startofpacket;                                                 // sys_int_mem_s1_agent_rsp_fifo:out_startofpacket -> sys_int_mem_s1_agent:rf_sink_startofpacket
	wire          sys_int_mem_s1_agent_rsp_fifo_out_endofpacket;                                                   // sys_int_mem_s1_agent_rsp_fifo:out_endofpacket -> sys_int_mem_s1_agent:rf_sink_endofpacket
	wire          sys_int_mem_s1_agent_rdata_fifo_src_valid;                                                       // sys_int_mem_s1_agent:rdata_fifo_src_valid -> sys_int_mem_s1_agent_rdata_fifo:in_valid
	wire   [33:0] sys_int_mem_s1_agent_rdata_fifo_src_data;                                                        // sys_int_mem_s1_agent:rdata_fifo_src_data -> sys_int_mem_s1_agent_rdata_fifo:in_data
	wire          sys_int_mem_s1_agent_rdata_fifo_src_ready;                                                       // sys_int_mem_s1_agent_rdata_fifo:in_ready -> sys_int_mem_s1_agent:rdata_fifo_src_ready
	wire   [31:0] sys_timer_1_s1_agent_m0_readdata;                                                                // sys_timer_1_s1_translator:uav_readdata -> sys_timer_1_s1_agent:m0_readdata
	wire          sys_timer_1_s1_agent_m0_waitrequest;                                                             // sys_timer_1_s1_translator:uav_waitrequest -> sys_timer_1_s1_agent:m0_waitrequest
	wire          sys_timer_1_s1_agent_m0_debugaccess;                                                             // sys_timer_1_s1_agent:m0_debugaccess -> sys_timer_1_s1_translator:uav_debugaccess
	wire   [31:0] sys_timer_1_s1_agent_m0_address;                                                                 // sys_timer_1_s1_agent:m0_address -> sys_timer_1_s1_translator:uav_address
	wire    [3:0] sys_timer_1_s1_agent_m0_byteenable;                                                              // sys_timer_1_s1_agent:m0_byteenable -> sys_timer_1_s1_translator:uav_byteenable
	wire          sys_timer_1_s1_agent_m0_read;                                                                    // sys_timer_1_s1_agent:m0_read -> sys_timer_1_s1_translator:uav_read
	wire          sys_timer_1_s1_agent_m0_readdatavalid;                                                           // sys_timer_1_s1_translator:uav_readdatavalid -> sys_timer_1_s1_agent:m0_readdatavalid
	wire          sys_timer_1_s1_agent_m0_lock;                                                                    // sys_timer_1_s1_agent:m0_lock -> sys_timer_1_s1_translator:uav_lock
	wire   [31:0] sys_timer_1_s1_agent_m0_writedata;                                                               // sys_timer_1_s1_agent:m0_writedata -> sys_timer_1_s1_translator:uav_writedata
	wire          sys_timer_1_s1_agent_m0_write;                                                                   // sys_timer_1_s1_agent:m0_write -> sys_timer_1_s1_translator:uav_write
	wire    [2:0] sys_timer_1_s1_agent_m0_burstcount;                                                              // sys_timer_1_s1_agent:m0_burstcount -> sys_timer_1_s1_translator:uav_burstcount
	wire          sys_timer_1_s1_agent_rf_source_valid;                                                            // sys_timer_1_s1_agent:rf_source_valid -> sys_timer_1_s1_agent_rsp_fifo:in_valid
	wire  [130:0] sys_timer_1_s1_agent_rf_source_data;                                                             // sys_timer_1_s1_agent:rf_source_data -> sys_timer_1_s1_agent_rsp_fifo:in_data
	wire          sys_timer_1_s1_agent_rf_source_ready;                                                            // sys_timer_1_s1_agent_rsp_fifo:in_ready -> sys_timer_1_s1_agent:rf_source_ready
	wire          sys_timer_1_s1_agent_rf_source_startofpacket;                                                    // sys_timer_1_s1_agent:rf_source_startofpacket -> sys_timer_1_s1_agent_rsp_fifo:in_startofpacket
	wire          sys_timer_1_s1_agent_rf_source_endofpacket;                                                      // sys_timer_1_s1_agent:rf_source_endofpacket -> sys_timer_1_s1_agent_rsp_fifo:in_endofpacket
	wire          sys_timer_1_s1_agent_rsp_fifo_out_valid;                                                         // sys_timer_1_s1_agent_rsp_fifo:out_valid -> sys_timer_1_s1_agent:rf_sink_valid
	wire  [130:0] sys_timer_1_s1_agent_rsp_fifo_out_data;                                                          // sys_timer_1_s1_agent_rsp_fifo:out_data -> sys_timer_1_s1_agent:rf_sink_data
	wire          sys_timer_1_s1_agent_rsp_fifo_out_ready;                                                         // sys_timer_1_s1_agent:rf_sink_ready -> sys_timer_1_s1_agent_rsp_fifo:out_ready
	wire          sys_timer_1_s1_agent_rsp_fifo_out_startofpacket;                                                 // sys_timer_1_s1_agent_rsp_fifo:out_startofpacket -> sys_timer_1_s1_agent:rf_sink_startofpacket
	wire          sys_timer_1_s1_agent_rsp_fifo_out_endofpacket;                                                   // sys_timer_1_s1_agent_rsp_fifo:out_endofpacket -> sys_timer_1_s1_agent:rf_sink_endofpacket
	wire          sys_timer_1_s1_agent_rdata_fifo_src_valid;                                                       // sys_timer_1_s1_agent:rdata_fifo_src_valid -> sys_timer_1_s1_agent_rdata_fifo:in_valid
	wire   [33:0] sys_timer_1_s1_agent_rdata_fifo_src_data;                                                        // sys_timer_1_s1_agent:rdata_fifo_src_data -> sys_timer_1_s1_agent_rdata_fifo:in_data
	wire          sys_timer_1_s1_agent_rdata_fifo_src_ready;                                                       // sys_timer_1_s1_agent_rdata_fifo:in_ready -> sys_timer_1_s1_agent:rdata_fifo_src_ready
	wire   [31:0] sys_timer_2_s1_agent_m0_readdata;                                                                // sys_timer_2_s1_translator:uav_readdata -> sys_timer_2_s1_agent:m0_readdata
	wire          sys_timer_2_s1_agent_m0_waitrequest;                                                             // sys_timer_2_s1_translator:uav_waitrequest -> sys_timer_2_s1_agent:m0_waitrequest
	wire          sys_timer_2_s1_agent_m0_debugaccess;                                                             // sys_timer_2_s1_agent:m0_debugaccess -> sys_timer_2_s1_translator:uav_debugaccess
	wire   [31:0] sys_timer_2_s1_agent_m0_address;                                                                 // sys_timer_2_s1_agent:m0_address -> sys_timer_2_s1_translator:uav_address
	wire    [3:0] sys_timer_2_s1_agent_m0_byteenable;                                                              // sys_timer_2_s1_agent:m0_byteenable -> sys_timer_2_s1_translator:uav_byteenable
	wire          sys_timer_2_s1_agent_m0_read;                                                                    // sys_timer_2_s1_agent:m0_read -> sys_timer_2_s1_translator:uav_read
	wire          sys_timer_2_s1_agent_m0_readdatavalid;                                                           // sys_timer_2_s1_translator:uav_readdatavalid -> sys_timer_2_s1_agent:m0_readdatavalid
	wire          sys_timer_2_s1_agent_m0_lock;                                                                    // sys_timer_2_s1_agent:m0_lock -> sys_timer_2_s1_translator:uav_lock
	wire   [31:0] sys_timer_2_s1_agent_m0_writedata;                                                               // sys_timer_2_s1_agent:m0_writedata -> sys_timer_2_s1_translator:uav_writedata
	wire          sys_timer_2_s1_agent_m0_write;                                                                   // sys_timer_2_s1_agent:m0_write -> sys_timer_2_s1_translator:uav_write
	wire    [2:0] sys_timer_2_s1_agent_m0_burstcount;                                                              // sys_timer_2_s1_agent:m0_burstcount -> sys_timer_2_s1_translator:uav_burstcount
	wire          sys_timer_2_s1_agent_rf_source_valid;                                                            // sys_timer_2_s1_agent:rf_source_valid -> sys_timer_2_s1_agent_rsp_fifo:in_valid
	wire  [130:0] sys_timer_2_s1_agent_rf_source_data;                                                             // sys_timer_2_s1_agent:rf_source_data -> sys_timer_2_s1_agent_rsp_fifo:in_data
	wire          sys_timer_2_s1_agent_rf_source_ready;                                                            // sys_timer_2_s1_agent_rsp_fifo:in_ready -> sys_timer_2_s1_agent:rf_source_ready
	wire          sys_timer_2_s1_agent_rf_source_startofpacket;                                                    // sys_timer_2_s1_agent:rf_source_startofpacket -> sys_timer_2_s1_agent_rsp_fifo:in_startofpacket
	wire          sys_timer_2_s1_agent_rf_source_endofpacket;                                                      // sys_timer_2_s1_agent:rf_source_endofpacket -> sys_timer_2_s1_agent_rsp_fifo:in_endofpacket
	wire          sys_timer_2_s1_agent_rsp_fifo_out_valid;                                                         // sys_timer_2_s1_agent_rsp_fifo:out_valid -> sys_timer_2_s1_agent:rf_sink_valid
	wire  [130:0] sys_timer_2_s1_agent_rsp_fifo_out_data;                                                          // sys_timer_2_s1_agent_rsp_fifo:out_data -> sys_timer_2_s1_agent:rf_sink_data
	wire          sys_timer_2_s1_agent_rsp_fifo_out_ready;                                                         // sys_timer_2_s1_agent:rf_sink_ready -> sys_timer_2_s1_agent_rsp_fifo:out_ready
	wire          sys_timer_2_s1_agent_rsp_fifo_out_startofpacket;                                                 // sys_timer_2_s1_agent_rsp_fifo:out_startofpacket -> sys_timer_2_s1_agent:rf_sink_startofpacket
	wire          sys_timer_2_s1_agent_rsp_fifo_out_endofpacket;                                                   // sys_timer_2_s1_agent_rsp_fifo:out_endofpacket -> sys_timer_2_s1_agent:rf_sink_endofpacket
	wire          sys_timer_2_s1_agent_rdata_fifo_src_valid;                                                       // sys_timer_2_s1_agent:rdata_fifo_src_valid -> sys_timer_2_s1_agent_rdata_fifo:in_valid
	wire   [33:0] sys_timer_2_s1_agent_rdata_fifo_src_data;                                                        // sys_timer_2_s1_agent:rdata_fifo_src_data -> sys_timer_2_s1_agent_rdata_fifo:in_data
	wire          sys_timer_2_s1_agent_rdata_fifo_src_ready;                                                       // sys_timer_2_s1_agent_rdata_fifo:in_ready -> sys_timer_2_s1_agent:rdata_fifo_src_ready
	wire   [31:0] sys_gpio_bd_s1_agent_m0_readdata;                                                                // sys_gpio_bd_s1_translator:uav_readdata -> sys_gpio_bd_s1_agent:m0_readdata
	wire          sys_gpio_bd_s1_agent_m0_waitrequest;                                                             // sys_gpio_bd_s1_translator:uav_waitrequest -> sys_gpio_bd_s1_agent:m0_waitrequest
	wire          sys_gpio_bd_s1_agent_m0_debugaccess;                                                             // sys_gpio_bd_s1_agent:m0_debugaccess -> sys_gpio_bd_s1_translator:uav_debugaccess
	wire   [31:0] sys_gpio_bd_s1_agent_m0_address;                                                                 // sys_gpio_bd_s1_agent:m0_address -> sys_gpio_bd_s1_translator:uav_address
	wire    [3:0] sys_gpio_bd_s1_agent_m0_byteenable;                                                              // sys_gpio_bd_s1_agent:m0_byteenable -> sys_gpio_bd_s1_translator:uav_byteenable
	wire          sys_gpio_bd_s1_agent_m0_read;                                                                    // sys_gpio_bd_s1_agent:m0_read -> sys_gpio_bd_s1_translator:uav_read
	wire          sys_gpio_bd_s1_agent_m0_readdatavalid;                                                           // sys_gpio_bd_s1_translator:uav_readdatavalid -> sys_gpio_bd_s1_agent:m0_readdatavalid
	wire          sys_gpio_bd_s1_agent_m0_lock;                                                                    // sys_gpio_bd_s1_agent:m0_lock -> sys_gpio_bd_s1_translator:uav_lock
	wire   [31:0] sys_gpio_bd_s1_agent_m0_writedata;                                                               // sys_gpio_bd_s1_agent:m0_writedata -> sys_gpio_bd_s1_translator:uav_writedata
	wire          sys_gpio_bd_s1_agent_m0_write;                                                                   // sys_gpio_bd_s1_agent:m0_write -> sys_gpio_bd_s1_translator:uav_write
	wire    [2:0] sys_gpio_bd_s1_agent_m0_burstcount;                                                              // sys_gpio_bd_s1_agent:m0_burstcount -> sys_gpio_bd_s1_translator:uav_burstcount
	wire          sys_gpio_bd_s1_agent_rf_source_valid;                                                            // sys_gpio_bd_s1_agent:rf_source_valid -> sys_gpio_bd_s1_agent_rsp_fifo:in_valid
	wire  [130:0] sys_gpio_bd_s1_agent_rf_source_data;                                                             // sys_gpio_bd_s1_agent:rf_source_data -> sys_gpio_bd_s1_agent_rsp_fifo:in_data
	wire          sys_gpio_bd_s1_agent_rf_source_ready;                                                            // sys_gpio_bd_s1_agent_rsp_fifo:in_ready -> sys_gpio_bd_s1_agent:rf_source_ready
	wire          sys_gpio_bd_s1_agent_rf_source_startofpacket;                                                    // sys_gpio_bd_s1_agent:rf_source_startofpacket -> sys_gpio_bd_s1_agent_rsp_fifo:in_startofpacket
	wire          sys_gpio_bd_s1_agent_rf_source_endofpacket;                                                      // sys_gpio_bd_s1_agent:rf_source_endofpacket -> sys_gpio_bd_s1_agent_rsp_fifo:in_endofpacket
	wire          sys_gpio_bd_s1_agent_rsp_fifo_out_valid;                                                         // sys_gpio_bd_s1_agent_rsp_fifo:out_valid -> sys_gpio_bd_s1_agent:rf_sink_valid
	wire  [130:0] sys_gpio_bd_s1_agent_rsp_fifo_out_data;                                                          // sys_gpio_bd_s1_agent_rsp_fifo:out_data -> sys_gpio_bd_s1_agent:rf_sink_data
	wire          sys_gpio_bd_s1_agent_rsp_fifo_out_ready;                                                         // sys_gpio_bd_s1_agent:rf_sink_ready -> sys_gpio_bd_s1_agent_rsp_fifo:out_ready
	wire          sys_gpio_bd_s1_agent_rsp_fifo_out_startofpacket;                                                 // sys_gpio_bd_s1_agent_rsp_fifo:out_startofpacket -> sys_gpio_bd_s1_agent:rf_sink_startofpacket
	wire          sys_gpio_bd_s1_agent_rsp_fifo_out_endofpacket;                                                   // sys_gpio_bd_s1_agent_rsp_fifo:out_endofpacket -> sys_gpio_bd_s1_agent:rf_sink_endofpacket
	wire          sys_gpio_bd_s1_agent_rdata_fifo_src_valid;                                                       // sys_gpio_bd_s1_agent:rdata_fifo_src_valid -> sys_gpio_bd_s1_agent_rdata_fifo:in_valid
	wire   [33:0] sys_gpio_bd_s1_agent_rdata_fifo_src_data;                                                        // sys_gpio_bd_s1_agent:rdata_fifo_src_data -> sys_gpio_bd_s1_agent_rdata_fifo:in_data
	wire          sys_gpio_bd_s1_agent_rdata_fifo_src_ready;                                                       // sys_gpio_bd_s1_agent_rdata_fifo:in_ready -> sys_gpio_bd_s1_agent:rdata_fifo_src_ready
	wire   [31:0] sys_gpio_in_s1_agent_m0_readdata;                                                                // sys_gpio_in_s1_translator:uav_readdata -> sys_gpio_in_s1_agent:m0_readdata
	wire          sys_gpio_in_s1_agent_m0_waitrequest;                                                             // sys_gpio_in_s1_translator:uav_waitrequest -> sys_gpio_in_s1_agent:m0_waitrequest
	wire          sys_gpio_in_s1_agent_m0_debugaccess;                                                             // sys_gpio_in_s1_agent:m0_debugaccess -> sys_gpio_in_s1_translator:uav_debugaccess
	wire   [31:0] sys_gpio_in_s1_agent_m0_address;                                                                 // sys_gpio_in_s1_agent:m0_address -> sys_gpio_in_s1_translator:uav_address
	wire    [3:0] sys_gpio_in_s1_agent_m0_byteenable;                                                              // sys_gpio_in_s1_agent:m0_byteenable -> sys_gpio_in_s1_translator:uav_byteenable
	wire          sys_gpio_in_s1_agent_m0_read;                                                                    // sys_gpio_in_s1_agent:m0_read -> sys_gpio_in_s1_translator:uav_read
	wire          sys_gpio_in_s1_agent_m0_readdatavalid;                                                           // sys_gpio_in_s1_translator:uav_readdatavalid -> sys_gpio_in_s1_agent:m0_readdatavalid
	wire          sys_gpio_in_s1_agent_m0_lock;                                                                    // sys_gpio_in_s1_agent:m0_lock -> sys_gpio_in_s1_translator:uav_lock
	wire   [31:0] sys_gpio_in_s1_agent_m0_writedata;                                                               // sys_gpio_in_s1_agent:m0_writedata -> sys_gpio_in_s1_translator:uav_writedata
	wire          sys_gpio_in_s1_agent_m0_write;                                                                   // sys_gpio_in_s1_agent:m0_write -> sys_gpio_in_s1_translator:uav_write
	wire    [2:0] sys_gpio_in_s1_agent_m0_burstcount;                                                              // sys_gpio_in_s1_agent:m0_burstcount -> sys_gpio_in_s1_translator:uav_burstcount
	wire          sys_gpio_in_s1_agent_rf_source_valid;                                                            // sys_gpio_in_s1_agent:rf_source_valid -> sys_gpio_in_s1_agent_rsp_fifo:in_valid
	wire  [130:0] sys_gpio_in_s1_agent_rf_source_data;                                                             // sys_gpio_in_s1_agent:rf_source_data -> sys_gpio_in_s1_agent_rsp_fifo:in_data
	wire          sys_gpio_in_s1_agent_rf_source_ready;                                                            // sys_gpio_in_s1_agent_rsp_fifo:in_ready -> sys_gpio_in_s1_agent:rf_source_ready
	wire          sys_gpio_in_s1_agent_rf_source_startofpacket;                                                    // sys_gpio_in_s1_agent:rf_source_startofpacket -> sys_gpio_in_s1_agent_rsp_fifo:in_startofpacket
	wire          sys_gpio_in_s1_agent_rf_source_endofpacket;                                                      // sys_gpio_in_s1_agent:rf_source_endofpacket -> sys_gpio_in_s1_agent_rsp_fifo:in_endofpacket
	wire          sys_gpio_in_s1_agent_rsp_fifo_out_valid;                                                         // sys_gpio_in_s1_agent_rsp_fifo:out_valid -> sys_gpio_in_s1_agent:rf_sink_valid
	wire  [130:0] sys_gpio_in_s1_agent_rsp_fifo_out_data;                                                          // sys_gpio_in_s1_agent_rsp_fifo:out_data -> sys_gpio_in_s1_agent:rf_sink_data
	wire          sys_gpio_in_s1_agent_rsp_fifo_out_ready;                                                         // sys_gpio_in_s1_agent:rf_sink_ready -> sys_gpio_in_s1_agent_rsp_fifo:out_ready
	wire          sys_gpio_in_s1_agent_rsp_fifo_out_startofpacket;                                                 // sys_gpio_in_s1_agent_rsp_fifo:out_startofpacket -> sys_gpio_in_s1_agent:rf_sink_startofpacket
	wire          sys_gpio_in_s1_agent_rsp_fifo_out_endofpacket;                                                   // sys_gpio_in_s1_agent_rsp_fifo:out_endofpacket -> sys_gpio_in_s1_agent:rf_sink_endofpacket
	wire          sys_gpio_in_s1_agent_rdata_fifo_src_valid;                                                       // sys_gpio_in_s1_agent:rdata_fifo_src_valid -> sys_gpio_in_s1_agent_rdata_fifo:in_valid
	wire   [33:0] sys_gpio_in_s1_agent_rdata_fifo_src_data;                                                        // sys_gpio_in_s1_agent:rdata_fifo_src_data -> sys_gpio_in_s1_agent_rdata_fifo:in_data
	wire          sys_gpio_in_s1_agent_rdata_fifo_src_ready;                                                       // sys_gpio_in_s1_agent_rdata_fifo:in_ready -> sys_gpio_in_s1_agent:rdata_fifo_src_ready
	wire   [31:0] sys_gpio_out_s1_agent_m0_readdata;                                                               // sys_gpio_out_s1_translator:uav_readdata -> sys_gpio_out_s1_agent:m0_readdata
	wire          sys_gpio_out_s1_agent_m0_waitrequest;                                                            // sys_gpio_out_s1_translator:uav_waitrequest -> sys_gpio_out_s1_agent:m0_waitrequest
	wire          sys_gpio_out_s1_agent_m0_debugaccess;                                                            // sys_gpio_out_s1_agent:m0_debugaccess -> sys_gpio_out_s1_translator:uav_debugaccess
	wire   [31:0] sys_gpio_out_s1_agent_m0_address;                                                                // sys_gpio_out_s1_agent:m0_address -> sys_gpio_out_s1_translator:uav_address
	wire    [3:0] sys_gpio_out_s1_agent_m0_byteenable;                                                             // sys_gpio_out_s1_agent:m0_byteenable -> sys_gpio_out_s1_translator:uav_byteenable
	wire          sys_gpio_out_s1_agent_m0_read;                                                                   // sys_gpio_out_s1_agent:m0_read -> sys_gpio_out_s1_translator:uav_read
	wire          sys_gpio_out_s1_agent_m0_readdatavalid;                                                          // sys_gpio_out_s1_translator:uav_readdatavalid -> sys_gpio_out_s1_agent:m0_readdatavalid
	wire          sys_gpio_out_s1_agent_m0_lock;                                                                   // sys_gpio_out_s1_agent:m0_lock -> sys_gpio_out_s1_translator:uav_lock
	wire   [31:0] sys_gpio_out_s1_agent_m0_writedata;                                                              // sys_gpio_out_s1_agent:m0_writedata -> sys_gpio_out_s1_translator:uav_writedata
	wire          sys_gpio_out_s1_agent_m0_write;                                                                  // sys_gpio_out_s1_agent:m0_write -> sys_gpio_out_s1_translator:uav_write
	wire    [2:0] sys_gpio_out_s1_agent_m0_burstcount;                                                             // sys_gpio_out_s1_agent:m0_burstcount -> sys_gpio_out_s1_translator:uav_burstcount
	wire          sys_gpio_out_s1_agent_rf_source_valid;                                                           // sys_gpio_out_s1_agent:rf_source_valid -> sys_gpio_out_s1_agent_rsp_fifo:in_valid
	wire  [130:0] sys_gpio_out_s1_agent_rf_source_data;                                                            // sys_gpio_out_s1_agent:rf_source_data -> sys_gpio_out_s1_agent_rsp_fifo:in_data
	wire          sys_gpio_out_s1_agent_rf_source_ready;                                                           // sys_gpio_out_s1_agent_rsp_fifo:in_ready -> sys_gpio_out_s1_agent:rf_source_ready
	wire          sys_gpio_out_s1_agent_rf_source_startofpacket;                                                   // sys_gpio_out_s1_agent:rf_source_startofpacket -> sys_gpio_out_s1_agent_rsp_fifo:in_startofpacket
	wire          sys_gpio_out_s1_agent_rf_source_endofpacket;                                                     // sys_gpio_out_s1_agent:rf_source_endofpacket -> sys_gpio_out_s1_agent_rsp_fifo:in_endofpacket
	wire          sys_gpio_out_s1_agent_rsp_fifo_out_valid;                                                        // sys_gpio_out_s1_agent_rsp_fifo:out_valid -> sys_gpio_out_s1_agent:rf_sink_valid
	wire  [130:0] sys_gpio_out_s1_agent_rsp_fifo_out_data;                                                         // sys_gpio_out_s1_agent_rsp_fifo:out_data -> sys_gpio_out_s1_agent:rf_sink_data
	wire          sys_gpio_out_s1_agent_rsp_fifo_out_ready;                                                        // sys_gpio_out_s1_agent:rf_sink_ready -> sys_gpio_out_s1_agent_rsp_fifo:out_ready
	wire          sys_gpio_out_s1_agent_rsp_fifo_out_startofpacket;                                                // sys_gpio_out_s1_agent_rsp_fifo:out_startofpacket -> sys_gpio_out_s1_agent:rf_sink_startofpacket
	wire          sys_gpio_out_s1_agent_rsp_fifo_out_endofpacket;                                                  // sys_gpio_out_s1_agent_rsp_fifo:out_endofpacket -> sys_gpio_out_s1_agent:rf_sink_endofpacket
	wire          sys_gpio_out_s1_agent_rdata_fifo_src_valid;                                                      // sys_gpio_out_s1_agent:rdata_fifo_src_valid -> sys_gpio_out_s1_agent_rdata_fifo:in_valid
	wire   [33:0] sys_gpio_out_s1_agent_rdata_fifo_src_data;                                                       // sys_gpio_out_s1_agent:rdata_fifo_src_data -> sys_gpio_out_s1_agent_rdata_fifo:in_data
	wire          sys_gpio_out_s1_agent_rdata_fifo_src_ready;                                                      // sys_gpio_out_s1_agent_rdata_fifo:in_ready -> sys_gpio_out_s1_agent:rdata_fifo_src_ready
	wire   [31:0] sys_spi_spi_control_port_agent_m0_readdata;                                                      // sys_spi_spi_control_port_translator:uav_readdata -> sys_spi_spi_control_port_agent:m0_readdata
	wire          sys_spi_spi_control_port_agent_m0_waitrequest;                                                   // sys_spi_spi_control_port_translator:uav_waitrequest -> sys_spi_spi_control_port_agent:m0_waitrequest
	wire          sys_spi_spi_control_port_agent_m0_debugaccess;                                                   // sys_spi_spi_control_port_agent:m0_debugaccess -> sys_spi_spi_control_port_translator:uav_debugaccess
	wire   [31:0] sys_spi_spi_control_port_agent_m0_address;                                                       // sys_spi_spi_control_port_agent:m0_address -> sys_spi_spi_control_port_translator:uav_address
	wire    [3:0] sys_spi_spi_control_port_agent_m0_byteenable;                                                    // sys_spi_spi_control_port_agent:m0_byteenable -> sys_spi_spi_control_port_translator:uav_byteenable
	wire          sys_spi_spi_control_port_agent_m0_read;                                                          // sys_spi_spi_control_port_agent:m0_read -> sys_spi_spi_control_port_translator:uav_read
	wire          sys_spi_spi_control_port_agent_m0_readdatavalid;                                                 // sys_spi_spi_control_port_translator:uav_readdatavalid -> sys_spi_spi_control_port_agent:m0_readdatavalid
	wire          sys_spi_spi_control_port_agent_m0_lock;                                                          // sys_spi_spi_control_port_agent:m0_lock -> sys_spi_spi_control_port_translator:uav_lock
	wire   [31:0] sys_spi_spi_control_port_agent_m0_writedata;                                                     // sys_spi_spi_control_port_agent:m0_writedata -> sys_spi_spi_control_port_translator:uav_writedata
	wire          sys_spi_spi_control_port_agent_m0_write;                                                         // sys_spi_spi_control_port_agent:m0_write -> sys_spi_spi_control_port_translator:uav_write
	wire    [2:0] sys_spi_spi_control_port_agent_m0_burstcount;                                                    // sys_spi_spi_control_port_agent:m0_burstcount -> sys_spi_spi_control_port_translator:uav_burstcount
	wire          sys_spi_spi_control_port_agent_rf_source_valid;                                                  // sys_spi_spi_control_port_agent:rf_source_valid -> sys_spi_spi_control_port_agent_rsp_fifo:in_valid
	wire  [130:0] sys_spi_spi_control_port_agent_rf_source_data;                                                   // sys_spi_spi_control_port_agent:rf_source_data -> sys_spi_spi_control_port_agent_rsp_fifo:in_data
	wire          sys_spi_spi_control_port_agent_rf_source_ready;                                                  // sys_spi_spi_control_port_agent_rsp_fifo:in_ready -> sys_spi_spi_control_port_agent:rf_source_ready
	wire          sys_spi_spi_control_port_agent_rf_source_startofpacket;                                          // sys_spi_spi_control_port_agent:rf_source_startofpacket -> sys_spi_spi_control_port_agent_rsp_fifo:in_startofpacket
	wire          sys_spi_spi_control_port_agent_rf_source_endofpacket;                                            // sys_spi_spi_control_port_agent:rf_source_endofpacket -> sys_spi_spi_control_port_agent_rsp_fifo:in_endofpacket
	wire          sys_spi_spi_control_port_agent_rsp_fifo_out_valid;                                               // sys_spi_spi_control_port_agent_rsp_fifo:out_valid -> sys_spi_spi_control_port_agent:rf_sink_valid
	wire  [130:0] sys_spi_spi_control_port_agent_rsp_fifo_out_data;                                                // sys_spi_spi_control_port_agent_rsp_fifo:out_data -> sys_spi_spi_control_port_agent:rf_sink_data
	wire          sys_spi_spi_control_port_agent_rsp_fifo_out_ready;                                               // sys_spi_spi_control_port_agent:rf_sink_ready -> sys_spi_spi_control_port_agent_rsp_fifo:out_ready
	wire          sys_spi_spi_control_port_agent_rsp_fifo_out_startofpacket;                                       // sys_spi_spi_control_port_agent_rsp_fifo:out_startofpacket -> sys_spi_spi_control_port_agent:rf_sink_startofpacket
	wire          sys_spi_spi_control_port_agent_rsp_fifo_out_endofpacket;                                         // sys_spi_spi_control_port_agent_rsp_fifo:out_endofpacket -> sys_spi_spi_control_port_agent:rf_sink_endofpacket
	wire          sys_spi_spi_control_port_agent_rdata_fifo_src_valid;                                             // sys_spi_spi_control_port_agent:rdata_fifo_src_valid -> sys_spi_spi_control_port_agent_rdata_fifo:in_valid
	wire   [33:0] sys_spi_spi_control_port_agent_rdata_fifo_src_data;                                              // sys_spi_spi_control_port_agent:rdata_fifo_src_data -> sys_spi_spi_control_port_agent_rdata_fifo:in_data
	wire          sys_spi_spi_control_port_agent_rdata_fifo_src_ready;                                             // sys_spi_spi_control_port_agent_rdata_fifo:in_ready -> sys_spi_spi_control_port_agent:rdata_fifo_src_ready
	wire   [31:0] sys_flash_uas_agent_m0_readdata;                                                                 // sys_flash_uas_translator:uav_readdata -> sys_flash_uas_agent:m0_readdata
	wire          sys_flash_uas_agent_m0_waitrequest;                                                              // sys_flash_uas_translator:uav_waitrequest -> sys_flash_uas_agent:m0_waitrequest
	wire          sys_flash_uas_agent_m0_debugaccess;                                                              // sys_flash_uas_agent:m0_debugaccess -> sys_flash_uas_translator:uav_debugaccess
	wire   [31:0] sys_flash_uas_agent_m0_address;                                                                  // sys_flash_uas_agent:m0_address -> sys_flash_uas_translator:uav_address
	wire    [3:0] sys_flash_uas_agent_m0_byteenable;                                                               // sys_flash_uas_agent:m0_byteenable -> sys_flash_uas_translator:uav_byteenable
	wire          sys_flash_uas_agent_m0_read;                                                                     // sys_flash_uas_agent:m0_read -> sys_flash_uas_translator:uav_read
	wire          sys_flash_uas_agent_m0_readdatavalid;                                                            // sys_flash_uas_translator:uav_readdatavalid -> sys_flash_uas_agent:m0_readdatavalid
	wire          sys_flash_uas_agent_m0_lock;                                                                     // sys_flash_uas_agent:m0_lock -> sys_flash_uas_translator:uav_lock
	wire   [31:0] sys_flash_uas_agent_m0_writedata;                                                                // sys_flash_uas_agent:m0_writedata -> sys_flash_uas_translator:uav_writedata
	wire          sys_flash_uas_agent_m0_write;                                                                    // sys_flash_uas_agent:m0_write -> sys_flash_uas_translator:uav_write
	wire    [2:0] sys_flash_uas_agent_m0_burstcount;                                                               // sys_flash_uas_agent:m0_burstcount -> sys_flash_uas_translator:uav_burstcount
	wire          sys_flash_uas_agent_rf_source_valid;                                                             // sys_flash_uas_agent:rf_source_valid -> sys_flash_uas_agent_rsp_fifo:in_valid
	wire  [130:0] sys_flash_uas_agent_rf_source_data;                                                              // sys_flash_uas_agent:rf_source_data -> sys_flash_uas_agent_rsp_fifo:in_data
	wire          sys_flash_uas_agent_rf_source_ready;                                                             // sys_flash_uas_agent_rsp_fifo:in_ready -> sys_flash_uas_agent:rf_source_ready
	wire          sys_flash_uas_agent_rf_source_startofpacket;                                                     // sys_flash_uas_agent:rf_source_startofpacket -> sys_flash_uas_agent_rsp_fifo:in_startofpacket
	wire          sys_flash_uas_agent_rf_source_endofpacket;                                                       // sys_flash_uas_agent:rf_source_endofpacket -> sys_flash_uas_agent_rsp_fifo:in_endofpacket
	wire          sys_flash_uas_agent_rsp_fifo_out_valid;                                                          // sys_flash_uas_agent_rsp_fifo:out_valid -> sys_flash_uas_agent:rf_sink_valid
	wire  [130:0] sys_flash_uas_agent_rsp_fifo_out_data;                                                           // sys_flash_uas_agent_rsp_fifo:out_data -> sys_flash_uas_agent:rf_sink_data
	wire          sys_flash_uas_agent_rsp_fifo_out_ready;                                                          // sys_flash_uas_agent:rf_sink_ready -> sys_flash_uas_agent_rsp_fifo:out_ready
	wire          sys_flash_uas_agent_rsp_fifo_out_startofpacket;                                                  // sys_flash_uas_agent_rsp_fifo:out_startofpacket -> sys_flash_uas_agent:rf_sink_startofpacket
	wire          sys_flash_uas_agent_rsp_fifo_out_endofpacket;                                                    // sys_flash_uas_agent_rsp_fifo:out_endofpacket -> sys_flash_uas_agent:rf_sink_endofpacket
	wire          sys_flash_uas_agent_rdata_fifo_src_valid;                                                        // sys_flash_uas_agent:rdata_fifo_src_valid -> sys_flash_uas_agent_rdata_fifo:in_valid
	wire   [33:0] sys_flash_uas_agent_rdata_fifo_src_data;                                                         // sys_flash_uas_agent:rdata_fifo_src_data -> sys_flash_uas_agent_rdata_fifo:in_data
	wire          sys_flash_uas_agent_rdata_fifo_src_ready;                                                        // sys_flash_uas_agent_rdata_fifo:in_ready -> sys_flash_uas_agent:rdata_fifo_src_ready
	wire          sys_cpu_data_master_agent_cp_valid;                                                              // sys_cpu_data_master_agent:cp_valid -> router:sink_valid
	wire  [129:0] sys_cpu_data_master_agent_cp_data;                                                               // sys_cpu_data_master_agent:cp_data -> router:sink_data
	wire          sys_cpu_data_master_agent_cp_ready;                                                              // router:sink_ready -> sys_cpu_data_master_agent:cp_ready
	wire          sys_cpu_data_master_agent_cp_startofpacket;                                                      // sys_cpu_data_master_agent:cp_startofpacket -> router:sink_startofpacket
	wire          sys_cpu_data_master_agent_cp_endofpacket;                                                        // sys_cpu_data_master_agent:cp_endofpacket -> router:sink_endofpacket
	wire          sys_cpu_instruction_master_agent_cp_valid;                                                       // sys_cpu_instruction_master_agent:cp_valid -> router_001:sink_valid
	wire  [129:0] sys_cpu_instruction_master_agent_cp_data;                                                        // sys_cpu_instruction_master_agent:cp_data -> router_001:sink_data
	wire          sys_cpu_instruction_master_agent_cp_ready;                                                       // router_001:sink_ready -> sys_cpu_instruction_master_agent:cp_ready
	wire          sys_cpu_instruction_master_agent_cp_startofpacket;                                               // sys_cpu_instruction_master_agent:cp_startofpacket -> router_001:sink_startofpacket
	wire          sys_cpu_instruction_master_agent_cp_endofpacket;                                                 // sys_cpu_instruction_master_agent:cp_endofpacket -> router_001:sink_endofpacket
	wire          axi_ad9680_dma_m_dest_axi_agent_write_cp_valid;                                                  // axi_ad9680_dma_m_dest_axi_agent:write_cp_valid -> router_002:sink_valid
	wire  [237:0] axi_ad9680_dma_m_dest_axi_agent_write_cp_data;                                                   // axi_ad9680_dma_m_dest_axi_agent:write_cp_data -> router_002:sink_data
	wire          axi_ad9680_dma_m_dest_axi_agent_write_cp_ready;                                                  // router_002:sink_ready -> axi_ad9680_dma_m_dest_axi_agent:write_cp_ready
	wire          axi_ad9680_dma_m_dest_axi_agent_write_cp_startofpacket;                                          // axi_ad9680_dma_m_dest_axi_agent:write_cp_startofpacket -> router_002:sink_startofpacket
	wire          axi_ad9680_dma_m_dest_axi_agent_write_cp_endofpacket;                                            // axi_ad9680_dma_m_dest_axi_agent:write_cp_endofpacket -> router_002:sink_endofpacket
	wire          router_002_src_valid;                                                                            // router_002:src_valid -> cmd_demux_002:sink_valid
	wire  [237:0] router_002_src_data;                                                                             // router_002:src_data -> cmd_demux_002:sink_data
	wire          router_002_src_ready;                                                                            // cmd_demux_002:sink_ready -> router_002:src_ready
	wire   [44:0] router_002_src_channel;                                                                          // router_002:src_channel -> cmd_demux_002:sink_channel
	wire          router_002_src_startofpacket;                                                                    // router_002:src_startofpacket -> cmd_demux_002:sink_startofpacket
	wire          router_002_src_endofpacket;                                                                      // router_002:src_endofpacket -> cmd_demux_002:sink_endofpacket
	wire          axi_ad9680_dma_m_dest_axi_agent_read_cp_valid;                                                   // axi_ad9680_dma_m_dest_axi_agent:read_cp_valid -> router_003:sink_valid
	wire  [237:0] axi_ad9680_dma_m_dest_axi_agent_read_cp_data;                                                    // axi_ad9680_dma_m_dest_axi_agent:read_cp_data -> router_003:sink_data
	wire          axi_ad9680_dma_m_dest_axi_agent_read_cp_ready;                                                   // router_003:sink_ready -> axi_ad9680_dma_m_dest_axi_agent:read_cp_ready
	wire          axi_ad9680_dma_m_dest_axi_agent_read_cp_startofpacket;                                           // axi_ad9680_dma_m_dest_axi_agent:read_cp_startofpacket -> router_003:sink_startofpacket
	wire          axi_ad9680_dma_m_dest_axi_agent_read_cp_endofpacket;                                             // axi_ad9680_dma_m_dest_axi_agent:read_cp_endofpacket -> router_003:sink_endofpacket
	wire          router_003_src_valid;                                                                            // router_003:src_valid -> cmd_demux_003:sink_valid
	wire  [237:0] router_003_src_data;                                                                             // router_003:src_data -> cmd_demux_003:sink_data
	wire          router_003_src_ready;                                                                            // cmd_demux_003:sink_ready -> router_003:src_ready
	wire   [44:0] router_003_src_channel;                                                                          // router_003:src_channel -> cmd_demux_003:sink_channel
	wire          router_003_src_startofpacket;                                                                    // router_003:src_startofpacket -> cmd_demux_003:sink_startofpacket
	wire          router_003_src_endofpacket;                                                                      // router_003:src_endofpacket -> cmd_demux_003:sink_endofpacket
	wire          axi_ad9144_dma_m_src_axi_agent_write_cp_valid;                                                   // axi_ad9144_dma_m_src_axi_agent:write_cp_valid -> router_004:sink_valid
	wire  [237:0] axi_ad9144_dma_m_src_axi_agent_write_cp_data;                                                    // axi_ad9144_dma_m_src_axi_agent:write_cp_data -> router_004:sink_data
	wire          axi_ad9144_dma_m_src_axi_agent_write_cp_ready;                                                   // router_004:sink_ready -> axi_ad9144_dma_m_src_axi_agent:write_cp_ready
	wire          axi_ad9144_dma_m_src_axi_agent_write_cp_startofpacket;                                           // axi_ad9144_dma_m_src_axi_agent:write_cp_startofpacket -> router_004:sink_startofpacket
	wire          axi_ad9144_dma_m_src_axi_agent_write_cp_endofpacket;                                             // axi_ad9144_dma_m_src_axi_agent:write_cp_endofpacket -> router_004:sink_endofpacket
	wire          router_004_src_valid;                                                                            // router_004:src_valid -> cmd_demux_004:sink_valid
	wire  [237:0] router_004_src_data;                                                                             // router_004:src_data -> cmd_demux_004:sink_data
	wire          router_004_src_ready;                                                                            // cmd_demux_004:sink_ready -> router_004:src_ready
	wire   [44:0] router_004_src_channel;                                                                          // router_004:src_channel -> cmd_demux_004:sink_channel
	wire          router_004_src_startofpacket;                                                                    // router_004:src_startofpacket -> cmd_demux_004:sink_startofpacket
	wire          router_004_src_endofpacket;                                                                      // router_004:src_endofpacket -> cmd_demux_004:sink_endofpacket
	wire          axi_ad9144_dma_m_src_axi_agent_read_cp_valid;                                                    // axi_ad9144_dma_m_src_axi_agent:read_cp_valid -> router_005:sink_valid
	wire  [237:0] axi_ad9144_dma_m_src_axi_agent_read_cp_data;                                                     // axi_ad9144_dma_m_src_axi_agent:read_cp_data -> router_005:sink_data
	wire          axi_ad9144_dma_m_src_axi_agent_read_cp_ready;                                                    // router_005:sink_ready -> axi_ad9144_dma_m_src_axi_agent:read_cp_ready
	wire          axi_ad9144_dma_m_src_axi_agent_read_cp_startofpacket;                                            // axi_ad9144_dma_m_src_axi_agent:read_cp_startofpacket -> router_005:sink_startofpacket
	wire          axi_ad9144_dma_m_src_axi_agent_read_cp_endofpacket;                                              // axi_ad9144_dma_m_src_axi_agent:read_cp_endofpacket -> router_005:sink_endofpacket
	wire          router_005_src_valid;                                                                            // router_005:src_valid -> cmd_demux_005:sink_valid
	wire  [237:0] router_005_src_data;                                                                             // router_005:src_data -> cmd_demux_005:sink_data
	wire          router_005_src_ready;                                                                            // cmd_demux_005:sink_ready -> router_005:src_ready
	wire   [44:0] router_005_src_channel;                                                                          // router_005:src_channel -> cmd_demux_005:sink_channel
	wire          router_005_src_startofpacket;                                                                    // router_005:src_startofpacket -> cmd_demux_005:sink_startofpacket
	wire          router_005_src_endofpacket;                                                                      // router_005:src_endofpacket -> cmd_demux_005:sink_endofpacket
	wire          sys_ethernet_dma_tx_mm_read_agent_cp_valid;                                                      // sys_ethernet_dma_tx_mm_read_agent:cp_valid -> router_006:sink_valid
	wire  [165:0] sys_ethernet_dma_tx_mm_read_agent_cp_data;                                                       // sys_ethernet_dma_tx_mm_read_agent:cp_data -> router_006:sink_data
	wire          sys_ethernet_dma_tx_mm_read_agent_cp_ready;                                                      // router_006:sink_ready -> sys_ethernet_dma_tx_mm_read_agent:cp_ready
	wire          sys_ethernet_dma_tx_mm_read_agent_cp_startofpacket;                                              // sys_ethernet_dma_tx_mm_read_agent:cp_startofpacket -> router_006:sink_startofpacket
	wire          sys_ethernet_dma_tx_mm_read_agent_cp_endofpacket;                                                // sys_ethernet_dma_tx_mm_read_agent:cp_endofpacket -> router_006:sink_endofpacket
	wire          router_006_src_valid;                                                                            // router_006:src_valid -> cmd_demux_006:sink_valid
	wire  [165:0] router_006_src_data;                                                                             // router_006:src_data -> cmd_demux_006:sink_data
	wire          router_006_src_ready;                                                                            // cmd_demux_006:sink_ready -> router_006:src_ready
	wire   [44:0] router_006_src_channel;                                                                          // router_006:src_channel -> cmd_demux_006:sink_channel
	wire          router_006_src_startofpacket;                                                                    // router_006:src_startofpacket -> cmd_demux_006:sink_startofpacket
	wire          router_006_src_endofpacket;                                                                      // router_006:src_endofpacket -> cmd_demux_006:sink_endofpacket
	wire          sys_ethernet_dma_rx_mm_write_agent_cp_valid;                                                     // sys_ethernet_dma_rx_mm_write_agent:cp_valid -> router_007:sink_valid
	wire  [165:0] sys_ethernet_dma_rx_mm_write_agent_cp_data;                                                      // sys_ethernet_dma_rx_mm_write_agent:cp_data -> router_007:sink_data
	wire          sys_ethernet_dma_rx_mm_write_agent_cp_ready;                                                     // router_007:sink_ready -> sys_ethernet_dma_rx_mm_write_agent:cp_ready
	wire          sys_ethernet_dma_rx_mm_write_agent_cp_startofpacket;                                             // sys_ethernet_dma_rx_mm_write_agent:cp_startofpacket -> router_007:sink_startofpacket
	wire          sys_ethernet_dma_rx_mm_write_agent_cp_endofpacket;                                               // sys_ethernet_dma_rx_mm_write_agent:cp_endofpacket -> router_007:sink_endofpacket
	wire          router_007_src_valid;                                                                            // router_007:src_valid -> cmd_demux_007:sink_valid
	wire  [165:0] router_007_src_data;                                                                             // router_007:src_data -> cmd_demux_007:sink_data
	wire          router_007_src_ready;                                                                            // cmd_demux_007:sink_ready -> router_007:src_ready
	wire   [44:0] router_007_src_channel;                                                                          // router_007:src_channel -> cmd_demux_007:sink_channel
	wire          router_007_src_startofpacket;                                                                    // router_007:src_startofpacket -> cmd_demux_007:sink_startofpacket
	wire          router_007_src_endofpacket;                                                                      // router_007:src_endofpacket -> cmd_demux_007:sink_endofpacket
	wire          router_008_src_valid;                                                                            // router_008:src_valid -> rsp_demux:sink_valid
	wire  [129:0] router_008_src_data;                                                                             // router_008:src_data -> rsp_demux:sink_data
	wire          router_008_src_ready;                                                                            // rsp_demux:sink_ready -> router_008:src_ready
	wire   [44:0] router_008_src_channel;                                                                          // router_008:src_channel -> rsp_demux:sink_channel
	wire          router_008_src_startofpacket;                                                                    // router_008:src_startofpacket -> rsp_demux:sink_startofpacket
	wire          router_008_src_endofpacket;                                                                      // router_008:src_endofpacket -> rsp_demux:sink_endofpacket
	wire          router_009_src_valid;                                                                            // router_009:src_valid -> rsp_demux_001:sink_valid
	wire  [129:0] router_009_src_data;                                                                             // router_009:src_data -> rsp_demux_001:sink_data
	wire          router_009_src_ready;                                                                            // rsp_demux_001:sink_ready -> router_009:src_ready
	wire   [44:0] router_009_src_channel;                                                                          // router_009:src_channel -> rsp_demux_001:sink_channel
	wire          router_009_src_startofpacket;                                                                    // router_009:src_startofpacket -> rsp_demux_001:sink_startofpacket
	wire          router_009_src_endofpacket;                                                                      // router_009:src_endofpacket -> rsp_demux_001:sink_endofpacket
	wire          router_010_src_valid;                                                                            // router_010:src_valid -> rsp_demux_002:sink_valid
	wire  [129:0] router_010_src_data;                                                                             // router_010:src_data -> rsp_demux_002:sink_data
	wire          router_010_src_ready;                                                                            // rsp_demux_002:sink_ready -> router_010:src_ready
	wire   [44:0] router_010_src_channel;                                                                          // router_010:src_channel -> rsp_demux_002:sink_channel
	wire          router_010_src_startofpacket;                                                                    // router_010:src_startofpacket -> rsp_demux_002:sink_startofpacket
	wire          router_010_src_endofpacket;                                                                      // router_010:src_endofpacket -> rsp_demux_002:sink_endofpacket
	wire          router_011_src_valid;                                                                            // router_011:src_valid -> rsp_demux_003:sink_valid
	wire  [129:0] router_011_src_data;                                                                             // router_011:src_data -> rsp_demux_003:sink_data
	wire          router_011_src_ready;                                                                            // rsp_demux_003:sink_ready -> router_011:src_ready
	wire   [44:0] router_011_src_channel;                                                                          // router_011:src_channel -> rsp_demux_003:sink_channel
	wire          router_011_src_startofpacket;                                                                    // router_011:src_startofpacket -> rsp_demux_003:sink_startofpacket
	wire          router_011_src_endofpacket;                                                                      // router_011:src_endofpacket -> rsp_demux_003:sink_endofpacket
	wire          router_012_src_valid;                                                                            // router_012:src_valid -> rsp_demux_004:sink_valid
	wire  [129:0] router_012_src_data;                                                                             // router_012:src_data -> rsp_demux_004:sink_data
	wire          router_012_src_ready;                                                                            // rsp_demux_004:sink_ready -> router_012:src_ready
	wire   [44:0] router_012_src_channel;                                                                          // router_012:src_channel -> rsp_demux_004:sink_channel
	wire          router_012_src_startofpacket;                                                                    // router_012:src_startofpacket -> rsp_demux_004:sink_startofpacket
	wire          router_012_src_endofpacket;                                                                      // router_012:src_endofpacket -> rsp_demux_004:sink_endofpacket
	wire          router_013_src_valid;                                                                            // router_013:src_valid -> rsp_demux_005:sink_valid
	wire  [129:0] router_013_src_data;                                                                             // router_013:src_data -> rsp_demux_005:sink_data
	wire          router_013_src_ready;                                                                            // rsp_demux_005:sink_ready -> router_013:src_ready
	wire   [44:0] router_013_src_channel;                                                                          // router_013:src_channel -> rsp_demux_005:sink_channel
	wire          router_013_src_startofpacket;                                                                    // router_013:src_startofpacket -> rsp_demux_005:sink_startofpacket
	wire          router_013_src_endofpacket;                                                                      // router_013:src_endofpacket -> rsp_demux_005:sink_endofpacket
	wire          router_014_src_valid;                                                                            // router_014:src_valid -> rsp_demux_006:sink_valid
	wire  [129:0] router_014_src_data;                                                                             // router_014:src_data -> rsp_demux_006:sink_data
	wire          router_014_src_ready;                                                                            // rsp_demux_006:sink_ready -> router_014:src_ready
	wire   [44:0] router_014_src_channel;                                                                          // router_014:src_channel -> rsp_demux_006:sink_channel
	wire          router_014_src_startofpacket;                                                                    // router_014:src_startofpacket -> rsp_demux_006:sink_startofpacket
	wire          router_014_src_endofpacket;                                                                      // router_014:src_endofpacket -> rsp_demux_006:sink_endofpacket
	wire          router_015_src_valid;                                                                            // router_015:src_valid -> rsp_demux_007:sink_valid
	wire  [129:0] router_015_src_data;                                                                             // router_015:src_data -> rsp_demux_007:sink_data
	wire          router_015_src_ready;                                                                            // rsp_demux_007:sink_ready -> router_015:src_ready
	wire   [44:0] router_015_src_channel;                                                                          // router_015:src_channel -> rsp_demux_007:sink_channel
	wire          router_015_src_startofpacket;                                                                    // router_015:src_startofpacket -> rsp_demux_007:sink_startofpacket
	wire          router_015_src_endofpacket;                                                                      // router_015:src_endofpacket -> rsp_demux_007:sink_endofpacket
	wire          router_016_src_valid;                                                                            // router_016:src_valid -> rsp_demux_008:sink_valid
	wire  [129:0] router_016_src_data;                                                                             // router_016:src_data -> rsp_demux_008:sink_data
	wire          router_016_src_ready;                                                                            // rsp_demux_008:sink_ready -> router_016:src_ready
	wire   [44:0] router_016_src_channel;                                                                          // router_016:src_channel -> rsp_demux_008:sink_channel
	wire          router_016_src_startofpacket;                                                                    // router_016:src_startofpacket -> rsp_demux_008:sink_startofpacket
	wire          router_016_src_endofpacket;                                                                      // router_016:src_endofpacket -> rsp_demux_008:sink_endofpacket
	wire          router_017_src_valid;                                                                            // router_017:src_valid -> rsp_demux_009:sink_valid
	wire  [129:0] router_017_src_data;                                                                             // router_017:src_data -> rsp_demux_009:sink_data
	wire          router_017_src_ready;                                                                            // rsp_demux_009:sink_ready -> router_017:src_ready
	wire   [44:0] router_017_src_channel;                                                                          // router_017:src_channel -> rsp_demux_009:sink_channel
	wire          router_017_src_startofpacket;                                                                    // router_017:src_startofpacket -> rsp_demux_009:sink_startofpacket
	wire          router_017_src_endofpacket;                                                                      // router_017:src_endofpacket -> rsp_demux_009:sink_endofpacket
	wire          router_018_src_valid;                                                                            // router_018:src_valid -> rsp_demux_010:sink_valid
	wire  [129:0] router_018_src_data;                                                                             // router_018:src_data -> rsp_demux_010:sink_data
	wire          router_018_src_ready;                                                                            // rsp_demux_010:sink_ready -> router_018:src_ready
	wire   [44:0] router_018_src_channel;                                                                          // router_018:src_channel -> rsp_demux_010:sink_channel
	wire          router_018_src_startofpacket;                                                                    // router_018:src_startofpacket -> rsp_demux_010:sink_startofpacket
	wire          router_018_src_endofpacket;                                                                      // router_018:src_endofpacket -> rsp_demux_010:sink_endofpacket
	wire          router_019_src_valid;                                                                            // router_019:src_valid -> rsp_demux_011:sink_valid
	wire  [129:0] router_019_src_data;                                                                             // router_019:src_data -> rsp_demux_011:sink_data
	wire          router_019_src_ready;                                                                            // rsp_demux_011:sink_ready -> router_019:src_ready
	wire   [44:0] router_019_src_channel;                                                                          // router_019:src_channel -> rsp_demux_011:sink_channel
	wire          router_019_src_startofpacket;                                                                    // router_019:src_startofpacket -> rsp_demux_011:sink_startofpacket
	wire          router_019_src_endofpacket;                                                                      // router_019:src_endofpacket -> rsp_demux_011:sink_endofpacket
	wire          router_020_src_valid;                                                                            // router_020:src_valid -> rsp_demux_012:sink_valid
	wire  [129:0] router_020_src_data;                                                                             // router_020:src_data -> rsp_demux_012:sink_data
	wire          router_020_src_ready;                                                                            // rsp_demux_012:sink_ready -> router_020:src_ready
	wire   [44:0] router_020_src_channel;                                                                          // router_020:src_channel -> rsp_demux_012:sink_channel
	wire          router_020_src_startofpacket;                                                                    // router_020:src_startofpacket -> rsp_demux_012:sink_startofpacket
	wire          router_020_src_endofpacket;                                                                      // router_020:src_endofpacket -> rsp_demux_012:sink_endofpacket
	wire          router_021_src_valid;                                                                            // router_021:src_valid -> rsp_demux_013:sink_valid
	wire  [129:0] router_021_src_data;                                                                             // router_021:src_data -> rsp_demux_013:sink_data
	wire          router_021_src_ready;                                                                            // rsp_demux_013:sink_ready -> router_021:src_ready
	wire   [44:0] router_021_src_channel;                                                                          // router_021:src_channel -> rsp_demux_013:sink_channel
	wire          router_021_src_startofpacket;                                                                    // router_021:src_startofpacket -> rsp_demux_013:sink_startofpacket
	wire          router_021_src_endofpacket;                                                                      // router_021:src_endofpacket -> rsp_demux_013:sink_endofpacket
	wire          router_022_src_valid;                                                                            // router_022:src_valid -> rsp_demux_014:sink_valid
	wire  [129:0] router_022_src_data;                                                                             // router_022:src_data -> rsp_demux_014:sink_data
	wire          router_022_src_ready;                                                                            // rsp_demux_014:sink_ready -> router_022:src_ready
	wire   [44:0] router_022_src_channel;                                                                          // router_022:src_channel -> rsp_demux_014:sink_channel
	wire          router_022_src_startofpacket;                                                                    // router_022:src_startofpacket -> rsp_demux_014:sink_startofpacket
	wire          router_022_src_endofpacket;                                                                      // router_022:src_endofpacket -> rsp_demux_014:sink_endofpacket
	wire          router_023_src_valid;                                                                            // router_023:src_valid -> rsp_demux_015:sink_valid
	wire  [129:0] router_023_src_data;                                                                             // router_023:src_data -> rsp_demux_015:sink_data
	wire          router_023_src_ready;                                                                            // rsp_demux_015:sink_ready -> router_023:src_ready
	wire   [44:0] router_023_src_channel;                                                                          // router_023:src_channel -> rsp_demux_015:sink_channel
	wire          router_023_src_startofpacket;                                                                    // router_023:src_startofpacket -> rsp_demux_015:sink_startofpacket
	wire          router_023_src_endofpacket;                                                                      // router_023:src_endofpacket -> rsp_demux_015:sink_endofpacket
	wire          router_024_src_valid;                                                                            // router_024:src_valid -> rsp_demux_016:sink_valid
	wire  [129:0] router_024_src_data;                                                                             // router_024:src_data -> rsp_demux_016:sink_data
	wire          router_024_src_ready;                                                                            // rsp_demux_016:sink_ready -> router_024:src_ready
	wire   [44:0] router_024_src_channel;                                                                          // router_024:src_channel -> rsp_demux_016:sink_channel
	wire          router_024_src_startofpacket;                                                                    // router_024:src_startofpacket -> rsp_demux_016:sink_startofpacket
	wire          router_024_src_endofpacket;                                                                      // router_024:src_endofpacket -> rsp_demux_016:sink_endofpacket
	wire          router_025_src_valid;                                                                            // router_025:src_valid -> rsp_demux_017:sink_valid
	wire  [129:0] router_025_src_data;                                                                             // router_025:src_data -> rsp_demux_017:sink_data
	wire          router_025_src_ready;                                                                            // rsp_demux_017:sink_ready -> router_025:src_ready
	wire   [44:0] router_025_src_channel;                                                                          // router_025:src_channel -> rsp_demux_017:sink_channel
	wire          router_025_src_startofpacket;                                                                    // router_025:src_startofpacket -> rsp_demux_017:sink_startofpacket
	wire          router_025_src_endofpacket;                                                                      // router_025:src_endofpacket -> rsp_demux_017:sink_endofpacket
	wire          router_026_src_valid;                                                                            // router_026:src_valid -> rsp_demux_018:sink_valid
	wire  [129:0] router_026_src_data;                                                                             // router_026:src_data -> rsp_demux_018:sink_data
	wire          router_026_src_ready;                                                                            // rsp_demux_018:sink_ready -> router_026:src_ready
	wire   [44:0] router_026_src_channel;                                                                          // router_026:src_channel -> rsp_demux_018:sink_channel
	wire          router_026_src_startofpacket;                                                                    // router_026:src_startofpacket -> rsp_demux_018:sink_startofpacket
	wire          router_026_src_endofpacket;                                                                      // router_026:src_endofpacket -> rsp_demux_018:sink_endofpacket
	wire          router_027_src_valid;                                                                            // router_027:src_valid -> rsp_demux_019:sink_valid
	wire  [129:0] router_027_src_data;                                                                             // router_027:src_data -> rsp_demux_019:sink_data
	wire          router_027_src_ready;                                                                            // rsp_demux_019:sink_ready -> router_027:src_ready
	wire   [44:0] router_027_src_channel;                                                                          // router_027:src_channel -> rsp_demux_019:sink_channel
	wire          router_027_src_startofpacket;                                                                    // router_027:src_startofpacket -> rsp_demux_019:sink_startofpacket
	wire          router_027_src_endofpacket;                                                                      // router_027:src_endofpacket -> rsp_demux_019:sink_endofpacket
	wire          router_028_src_valid;                                                                            // router_028:src_valid -> rsp_demux_020:sink_valid
	wire  [129:0] router_028_src_data;                                                                             // router_028:src_data -> rsp_demux_020:sink_data
	wire          router_028_src_ready;                                                                            // rsp_demux_020:sink_ready -> router_028:src_ready
	wire   [44:0] router_028_src_channel;                                                                          // router_028:src_channel -> rsp_demux_020:sink_channel
	wire          router_028_src_startofpacket;                                                                    // router_028:src_startofpacket -> rsp_demux_020:sink_startofpacket
	wire          router_028_src_endofpacket;                                                                      // router_028:src_endofpacket -> rsp_demux_020:sink_endofpacket
	wire          router_029_src_valid;                                                                            // router_029:src_valid -> rsp_demux_021:sink_valid
	wire  [669:0] router_029_src_data;                                                                             // router_029:src_data -> rsp_demux_021:sink_data
	wire          router_029_src_ready;                                                                            // rsp_demux_021:sink_ready -> router_029:src_ready
	wire   [44:0] router_029_src_channel;                                                                          // router_029:src_channel -> rsp_demux_021:sink_channel
	wire          router_029_src_startofpacket;                                                                    // router_029:src_startofpacket -> rsp_demux_021:sink_startofpacket
	wire          router_029_src_endofpacket;                                                                      // router_029:src_endofpacket -> rsp_demux_021:sink_endofpacket
	wire          router_030_src_valid;                                                                            // router_030:src_valid -> rsp_demux_022:sink_valid
	wire  [129:0] router_030_src_data;                                                                             // router_030:src_data -> rsp_demux_022:sink_data
	wire          router_030_src_ready;                                                                            // rsp_demux_022:sink_ready -> router_030:src_ready
	wire   [44:0] router_030_src_channel;                                                                          // router_030:src_channel -> rsp_demux_022:sink_channel
	wire          router_030_src_startofpacket;                                                                    // router_030:src_startofpacket -> rsp_demux_022:sink_startofpacket
	wire          router_030_src_endofpacket;                                                                      // router_030:src_endofpacket -> rsp_demux_022:sink_endofpacket
	wire          router_031_src_valid;                                                                            // router_031:src_valid -> rsp_demux_023:sink_valid
	wire  [381:0] router_031_src_data;                                                                             // router_031:src_data -> rsp_demux_023:sink_data
	wire          router_031_src_ready;                                                                            // rsp_demux_023:sink_ready -> router_031:src_ready
	wire   [44:0] router_031_src_channel;                                                                          // router_031:src_channel -> rsp_demux_023:sink_channel
	wire          router_031_src_startofpacket;                                                                    // router_031:src_startofpacket -> rsp_demux_023:sink_startofpacket
	wire          router_031_src_endofpacket;                                                                      // router_031:src_endofpacket -> rsp_demux_023:sink_endofpacket
	wire          router_032_src_valid;                                                                            // router_032:src_valid -> rsp_demux_024:sink_valid
	wire  [381:0] router_032_src_data;                                                                             // router_032:src_data -> rsp_demux_024:sink_data
	wire          router_032_src_ready;                                                                            // rsp_demux_024:sink_ready -> router_032:src_ready
	wire   [44:0] router_032_src_channel;                                                                          // router_032:src_channel -> rsp_demux_024:sink_channel
	wire          router_032_src_startofpacket;                                                                    // router_032:src_startofpacket -> rsp_demux_024:sink_startofpacket
	wire          router_032_src_endofpacket;                                                                      // router_032:src_endofpacket -> rsp_demux_024:sink_endofpacket
	wire          router_033_src_valid;                                                                            // router_033:src_valid -> rsp_demux_025:sink_valid
	wire  [129:0] router_033_src_data;                                                                             // router_033:src_data -> rsp_demux_025:sink_data
	wire          router_033_src_ready;                                                                            // rsp_demux_025:sink_ready -> router_033:src_ready
	wire   [44:0] router_033_src_channel;                                                                          // router_033:src_channel -> rsp_demux_025:sink_channel
	wire          router_033_src_startofpacket;                                                                    // router_033:src_startofpacket -> rsp_demux_025:sink_startofpacket
	wire          router_033_src_endofpacket;                                                                      // router_033:src_endofpacket -> rsp_demux_025:sink_endofpacket
	wire          router_034_src_valid;                                                                            // router_034:src_valid -> rsp_demux_026:sink_valid
	wire  [129:0] router_034_src_data;                                                                             // router_034:src_data -> rsp_demux_026:sink_data
	wire          router_034_src_ready;                                                                            // rsp_demux_026:sink_ready -> router_034:src_ready
	wire   [44:0] router_034_src_channel;                                                                          // router_034:src_channel -> rsp_demux_026:sink_channel
	wire          router_034_src_startofpacket;                                                                    // router_034:src_startofpacket -> rsp_demux_026:sink_startofpacket
	wire          router_034_src_endofpacket;                                                                      // router_034:src_endofpacket -> rsp_demux_026:sink_endofpacket
	wire          router_035_src_valid;                                                                            // router_035:src_valid -> rsp_demux_027:sink_valid
	wire  [129:0] router_035_src_data;                                                                             // router_035:src_data -> rsp_demux_027:sink_data
	wire          router_035_src_ready;                                                                            // rsp_demux_027:sink_ready -> router_035:src_ready
	wire   [44:0] router_035_src_channel;                                                                          // router_035:src_channel -> rsp_demux_027:sink_channel
	wire          router_035_src_startofpacket;                                                                    // router_035:src_startofpacket -> rsp_demux_027:sink_startofpacket
	wire          router_035_src_endofpacket;                                                                      // router_035:src_endofpacket -> rsp_demux_027:sink_endofpacket
	wire          router_036_src_valid;                                                                            // router_036:src_valid -> rsp_demux_028:sink_valid
	wire  [129:0] router_036_src_data;                                                                             // router_036:src_data -> rsp_demux_028:sink_data
	wire          router_036_src_ready;                                                                            // rsp_demux_028:sink_ready -> router_036:src_ready
	wire   [44:0] router_036_src_channel;                                                                          // router_036:src_channel -> rsp_demux_028:sink_channel
	wire          router_036_src_startofpacket;                                                                    // router_036:src_startofpacket -> rsp_demux_028:sink_startofpacket
	wire          router_036_src_endofpacket;                                                                      // router_036:src_endofpacket -> rsp_demux_028:sink_endofpacket
	wire          router_037_src_valid;                                                                            // router_037:src_valid -> rsp_demux_029:sink_valid
	wire  [129:0] router_037_src_data;                                                                             // router_037:src_data -> rsp_demux_029:sink_data
	wire          router_037_src_ready;                                                                            // rsp_demux_029:sink_ready -> router_037:src_ready
	wire   [44:0] router_037_src_channel;                                                                          // router_037:src_channel -> rsp_demux_029:sink_channel
	wire          router_037_src_startofpacket;                                                                    // router_037:src_startofpacket -> rsp_demux_029:sink_startofpacket
	wire          router_037_src_endofpacket;                                                                      // router_037:src_endofpacket -> rsp_demux_029:sink_endofpacket
	wire          router_038_src_valid;                                                                            // router_038:src_valid -> rsp_demux_030:sink_valid
	wire  [129:0] router_038_src_data;                                                                             // router_038:src_data -> rsp_demux_030:sink_data
	wire          router_038_src_ready;                                                                            // rsp_demux_030:sink_ready -> router_038:src_ready
	wire   [44:0] router_038_src_channel;                                                                          // router_038:src_channel -> rsp_demux_030:sink_channel
	wire          router_038_src_startofpacket;                                                                    // router_038:src_startofpacket -> rsp_demux_030:sink_startofpacket
	wire          router_038_src_endofpacket;                                                                      // router_038:src_endofpacket -> rsp_demux_030:sink_endofpacket
	wire          router_039_src_valid;                                                                            // router_039:src_valid -> rsp_demux_031:sink_valid
	wire  [129:0] router_039_src_data;                                                                             // router_039:src_data -> rsp_demux_031:sink_data
	wire          router_039_src_ready;                                                                            // rsp_demux_031:sink_ready -> router_039:src_ready
	wire   [44:0] router_039_src_channel;                                                                          // router_039:src_channel -> rsp_demux_031:sink_channel
	wire          router_039_src_startofpacket;                                                                    // router_039:src_startofpacket -> rsp_demux_031:sink_startofpacket
	wire          router_039_src_endofpacket;                                                                      // router_039:src_endofpacket -> rsp_demux_031:sink_endofpacket
	wire          router_040_src_valid;                                                                            // router_040:src_valid -> rsp_demux_032:sink_valid
	wire  [129:0] router_040_src_data;                                                                             // router_040:src_data -> rsp_demux_032:sink_data
	wire          router_040_src_ready;                                                                            // rsp_demux_032:sink_ready -> router_040:src_ready
	wire   [44:0] router_040_src_channel;                                                                          // router_040:src_channel -> rsp_demux_032:sink_channel
	wire          router_040_src_startofpacket;                                                                    // router_040:src_startofpacket -> rsp_demux_032:sink_startofpacket
	wire          router_040_src_endofpacket;                                                                      // router_040:src_endofpacket -> rsp_demux_032:sink_endofpacket
	wire          router_041_src_valid;                                                                            // router_041:src_valid -> rsp_demux_033:sink_valid
	wire  [129:0] router_041_src_data;                                                                             // router_041:src_data -> rsp_demux_033:sink_data
	wire          router_041_src_ready;                                                                            // rsp_demux_033:sink_ready -> router_041:src_ready
	wire   [44:0] router_041_src_channel;                                                                          // router_041:src_channel -> rsp_demux_033:sink_channel
	wire          router_041_src_startofpacket;                                                                    // router_041:src_startofpacket -> rsp_demux_033:sink_startofpacket
	wire          router_041_src_endofpacket;                                                                      // router_041:src_endofpacket -> rsp_demux_033:sink_endofpacket
	wire          router_042_src_valid;                                                                            // router_042:src_valid -> rsp_demux_034:sink_valid
	wire  [129:0] router_042_src_data;                                                                             // router_042:src_data -> rsp_demux_034:sink_data
	wire          router_042_src_ready;                                                                            // rsp_demux_034:sink_ready -> router_042:src_ready
	wire   [44:0] router_042_src_channel;                                                                          // router_042:src_channel -> rsp_demux_034:sink_channel
	wire          router_042_src_startofpacket;                                                                    // router_042:src_startofpacket -> rsp_demux_034:sink_startofpacket
	wire          router_042_src_endofpacket;                                                                      // router_042:src_endofpacket -> rsp_demux_034:sink_endofpacket
	wire          router_043_src_valid;                                                                            // router_043:src_valid -> rsp_demux_035:sink_valid
	wire  [129:0] router_043_src_data;                                                                             // router_043:src_data -> rsp_demux_035:sink_data
	wire          router_043_src_ready;                                                                            // rsp_demux_035:sink_ready -> router_043:src_ready
	wire   [44:0] router_043_src_channel;                                                                          // router_043:src_channel -> rsp_demux_035:sink_channel
	wire          router_043_src_startofpacket;                                                                    // router_043:src_startofpacket -> rsp_demux_035:sink_startofpacket
	wire          router_043_src_endofpacket;                                                                      // router_043:src_endofpacket -> rsp_demux_035:sink_endofpacket
	wire          router_044_src_valid;                                                                            // router_044:src_valid -> rsp_demux_036:sink_valid
	wire  [129:0] router_044_src_data;                                                                             // router_044:src_data -> rsp_demux_036:sink_data
	wire          router_044_src_ready;                                                                            // rsp_demux_036:sink_ready -> router_044:src_ready
	wire   [44:0] router_044_src_channel;                                                                          // router_044:src_channel -> rsp_demux_036:sink_channel
	wire          router_044_src_startofpacket;                                                                    // router_044:src_startofpacket -> rsp_demux_036:sink_startofpacket
	wire          router_044_src_endofpacket;                                                                      // router_044:src_endofpacket -> rsp_demux_036:sink_endofpacket
	wire          router_045_src_valid;                                                                            // router_045:src_valid -> rsp_demux_037:sink_valid
	wire  [129:0] router_045_src_data;                                                                             // router_045:src_data -> rsp_demux_037:sink_data
	wire          router_045_src_ready;                                                                            // rsp_demux_037:sink_ready -> router_045:src_ready
	wire   [44:0] router_045_src_channel;                                                                          // router_045:src_channel -> rsp_demux_037:sink_channel
	wire          router_045_src_startofpacket;                                                                    // router_045:src_startofpacket -> rsp_demux_037:sink_startofpacket
	wire          router_045_src_endofpacket;                                                                      // router_045:src_endofpacket -> rsp_demux_037:sink_endofpacket
	wire          router_046_src_valid;                                                                            // router_046:src_valid -> rsp_demux_038:sink_valid
	wire  [129:0] router_046_src_data;                                                                             // router_046:src_data -> rsp_demux_038:sink_data
	wire          router_046_src_ready;                                                                            // rsp_demux_038:sink_ready -> router_046:src_ready
	wire   [44:0] router_046_src_channel;                                                                          // router_046:src_channel -> rsp_demux_038:sink_channel
	wire          router_046_src_startofpacket;                                                                    // router_046:src_startofpacket -> rsp_demux_038:sink_startofpacket
	wire          router_046_src_endofpacket;                                                                      // router_046:src_endofpacket -> rsp_demux_038:sink_endofpacket
	wire          router_047_src_valid;                                                                            // router_047:src_valid -> rsp_demux_039:sink_valid
	wire  [129:0] router_047_src_data;                                                                             // router_047:src_data -> rsp_demux_039:sink_data
	wire          router_047_src_ready;                                                                            // rsp_demux_039:sink_ready -> router_047:src_ready
	wire   [44:0] router_047_src_channel;                                                                          // router_047:src_channel -> rsp_demux_039:sink_channel
	wire          router_047_src_startofpacket;                                                                    // router_047:src_startofpacket -> rsp_demux_039:sink_startofpacket
	wire          router_047_src_endofpacket;                                                                      // router_047:src_endofpacket -> rsp_demux_039:sink_endofpacket
	wire          router_048_src_valid;                                                                            // router_048:src_valid -> rsp_demux_040:sink_valid
	wire  [129:0] router_048_src_data;                                                                             // router_048:src_data -> rsp_demux_040:sink_data
	wire          router_048_src_ready;                                                                            // rsp_demux_040:sink_ready -> router_048:src_ready
	wire   [44:0] router_048_src_channel;                                                                          // router_048:src_channel -> rsp_demux_040:sink_channel
	wire          router_048_src_startofpacket;                                                                    // router_048:src_startofpacket -> rsp_demux_040:sink_startofpacket
	wire          router_048_src_endofpacket;                                                                      // router_048:src_endofpacket -> rsp_demux_040:sink_endofpacket
	wire          router_049_src_valid;                                                                            // router_049:src_valid -> rsp_demux_041:sink_valid
	wire  [129:0] router_049_src_data;                                                                             // router_049:src_data -> rsp_demux_041:sink_data
	wire          router_049_src_ready;                                                                            // rsp_demux_041:sink_ready -> router_049:src_ready
	wire   [44:0] router_049_src_channel;                                                                          // router_049:src_channel -> rsp_demux_041:sink_channel
	wire          router_049_src_startofpacket;                                                                    // router_049:src_startofpacket -> rsp_demux_041:sink_startofpacket
	wire          router_049_src_endofpacket;                                                                      // router_049:src_endofpacket -> rsp_demux_041:sink_endofpacket
	wire          router_050_src_valid;                                                                            // router_050:src_valid -> rsp_demux_042:sink_valid
	wire  [129:0] router_050_src_data;                                                                             // router_050:src_data -> rsp_demux_042:sink_data
	wire          router_050_src_ready;                                                                            // rsp_demux_042:sink_ready -> router_050:src_ready
	wire   [44:0] router_050_src_channel;                                                                          // router_050:src_channel -> rsp_demux_042:sink_channel
	wire          router_050_src_startofpacket;                                                                    // router_050:src_startofpacket -> rsp_demux_042:sink_startofpacket
	wire          router_050_src_endofpacket;                                                                      // router_050:src_endofpacket -> rsp_demux_042:sink_endofpacket
	wire          router_051_src_valid;                                                                            // router_051:src_valid -> rsp_demux_043:sink_valid
	wire  [129:0] router_051_src_data;                                                                             // router_051:src_data -> rsp_demux_043:sink_data
	wire          router_051_src_ready;                                                                            // rsp_demux_043:sink_ready -> router_051:src_ready
	wire   [44:0] router_051_src_channel;                                                                          // router_051:src_channel -> rsp_demux_043:sink_channel
	wire          router_051_src_startofpacket;                                                                    // router_051:src_startofpacket -> rsp_demux_043:sink_startofpacket
	wire          router_051_src_endofpacket;                                                                      // router_051:src_endofpacket -> rsp_demux_043:sink_endofpacket
	wire          router_052_src_valid;                                                                            // router_052:src_valid -> rsp_demux_044:sink_valid
	wire  [129:0] router_052_src_data;                                                                             // router_052:src_data -> rsp_demux_044:sink_data
	wire          router_052_src_ready;                                                                            // rsp_demux_044:sink_ready -> router_052:src_ready
	wire   [44:0] router_052_src_channel;                                                                          // router_052:src_channel -> rsp_demux_044:sink_channel
	wire          router_052_src_startofpacket;                                                                    // router_052:src_startofpacket -> rsp_demux_044:sink_startofpacket
	wire          router_052_src_endofpacket;                                                                      // router_052:src_endofpacket -> rsp_demux_044:sink_endofpacket
	wire          router_src_valid;                                                                                // router:src_valid -> sys_cpu_data_master_limiter:cmd_sink_valid
	wire  [129:0] router_src_data;                                                                                 // router:src_data -> sys_cpu_data_master_limiter:cmd_sink_data
	wire          router_src_ready;                                                                                // sys_cpu_data_master_limiter:cmd_sink_ready -> router:src_ready
	wire   [44:0] router_src_channel;                                                                              // router:src_channel -> sys_cpu_data_master_limiter:cmd_sink_channel
	wire          router_src_startofpacket;                                                                        // router:src_startofpacket -> sys_cpu_data_master_limiter:cmd_sink_startofpacket
	wire          router_src_endofpacket;                                                                          // router:src_endofpacket -> sys_cpu_data_master_limiter:cmd_sink_endofpacket
	wire          sys_cpu_data_master_limiter_rsp_src_valid;                                                       // sys_cpu_data_master_limiter:rsp_src_valid -> sys_cpu_data_master_agent:rp_valid
	wire  [129:0] sys_cpu_data_master_limiter_rsp_src_data;                                                        // sys_cpu_data_master_limiter:rsp_src_data -> sys_cpu_data_master_agent:rp_data
	wire          sys_cpu_data_master_limiter_rsp_src_ready;                                                       // sys_cpu_data_master_agent:rp_ready -> sys_cpu_data_master_limiter:rsp_src_ready
	wire   [44:0] sys_cpu_data_master_limiter_rsp_src_channel;                                                     // sys_cpu_data_master_limiter:rsp_src_channel -> sys_cpu_data_master_agent:rp_channel
	wire          sys_cpu_data_master_limiter_rsp_src_startofpacket;                                               // sys_cpu_data_master_limiter:rsp_src_startofpacket -> sys_cpu_data_master_agent:rp_startofpacket
	wire          sys_cpu_data_master_limiter_rsp_src_endofpacket;                                                 // sys_cpu_data_master_limiter:rsp_src_endofpacket -> sys_cpu_data_master_agent:rp_endofpacket
	wire          router_001_src_valid;                                                                            // router_001:src_valid -> sys_cpu_instruction_master_limiter:cmd_sink_valid
	wire  [129:0] router_001_src_data;                                                                             // router_001:src_data -> sys_cpu_instruction_master_limiter:cmd_sink_data
	wire          router_001_src_ready;                                                                            // sys_cpu_instruction_master_limiter:cmd_sink_ready -> router_001:src_ready
	wire   [44:0] router_001_src_channel;                                                                          // router_001:src_channel -> sys_cpu_instruction_master_limiter:cmd_sink_channel
	wire          router_001_src_startofpacket;                                                                    // router_001:src_startofpacket -> sys_cpu_instruction_master_limiter:cmd_sink_startofpacket
	wire          router_001_src_endofpacket;                                                                      // router_001:src_endofpacket -> sys_cpu_instruction_master_limiter:cmd_sink_endofpacket
	wire          sys_cpu_instruction_master_limiter_rsp_src_valid;                                                // sys_cpu_instruction_master_limiter:rsp_src_valid -> sys_cpu_instruction_master_agent:rp_valid
	wire  [129:0] sys_cpu_instruction_master_limiter_rsp_src_data;                                                 // sys_cpu_instruction_master_limiter:rsp_src_data -> sys_cpu_instruction_master_agent:rp_data
	wire          sys_cpu_instruction_master_limiter_rsp_src_ready;                                                // sys_cpu_instruction_master_agent:rp_ready -> sys_cpu_instruction_master_limiter:rsp_src_ready
	wire   [44:0] sys_cpu_instruction_master_limiter_rsp_src_channel;                                              // sys_cpu_instruction_master_limiter:rsp_src_channel -> sys_cpu_instruction_master_agent:rp_channel
	wire          sys_cpu_instruction_master_limiter_rsp_src_startofpacket;                                        // sys_cpu_instruction_master_limiter:rsp_src_startofpacket -> sys_cpu_instruction_master_agent:rp_startofpacket
	wire          sys_cpu_instruction_master_limiter_rsp_src_endofpacket;                                          // sys_cpu_instruction_master_limiter:rsp_src_endofpacket -> sys_cpu_instruction_master_agent:rp_endofpacket
	wire          cmd_mux_021_src_valid;                                                                           // cmd_mux_021:src_valid -> sys_ddr3_cntrl_ctrl_amm_0_burst_adapter:sink0_valid
	wire  [669:0] cmd_mux_021_src_data;                                                                            // cmd_mux_021:src_data -> sys_ddr3_cntrl_ctrl_amm_0_burst_adapter:sink0_data
	wire          cmd_mux_021_src_ready;                                                                           // sys_ddr3_cntrl_ctrl_amm_0_burst_adapter:sink0_ready -> cmd_mux_021:src_ready
	wire   [44:0] cmd_mux_021_src_channel;                                                                         // cmd_mux_021:src_channel -> sys_ddr3_cntrl_ctrl_amm_0_burst_adapter:sink0_channel
	wire          cmd_mux_021_src_startofpacket;                                                                   // cmd_mux_021:src_startofpacket -> sys_ddr3_cntrl_ctrl_amm_0_burst_adapter:sink0_startofpacket
	wire          cmd_mux_021_src_endofpacket;                                                                     // cmd_mux_021:src_endofpacket -> sys_ddr3_cntrl_ctrl_amm_0_burst_adapter:sink0_endofpacket
	wire          cmd_mux_023_src_valid;                                                                           // cmd_mux_023:src_valid -> sys_ethernet_dma_rx_descriptor_slave_burst_adapter:sink0_valid
	wire  [381:0] cmd_mux_023_src_data;                                                                            // cmd_mux_023:src_data -> sys_ethernet_dma_rx_descriptor_slave_burst_adapter:sink0_data
	wire          cmd_mux_023_src_ready;                                                                           // sys_ethernet_dma_rx_descriptor_slave_burst_adapter:sink0_ready -> cmd_mux_023:src_ready
	wire   [44:0] cmd_mux_023_src_channel;                                                                         // cmd_mux_023:src_channel -> sys_ethernet_dma_rx_descriptor_slave_burst_adapter:sink0_channel
	wire          cmd_mux_023_src_startofpacket;                                                                   // cmd_mux_023:src_startofpacket -> sys_ethernet_dma_rx_descriptor_slave_burst_adapter:sink0_startofpacket
	wire          cmd_mux_023_src_endofpacket;                                                                     // cmd_mux_023:src_endofpacket -> sys_ethernet_dma_rx_descriptor_slave_burst_adapter:sink0_endofpacket
	wire          cmd_mux_024_src_valid;                                                                           // cmd_mux_024:src_valid -> sys_ethernet_dma_tx_descriptor_slave_burst_adapter:sink0_valid
	wire  [381:0] cmd_mux_024_src_data;                                                                            // cmd_mux_024:src_data -> sys_ethernet_dma_tx_descriptor_slave_burst_adapter:sink0_data
	wire          cmd_mux_024_src_ready;                                                                           // sys_ethernet_dma_tx_descriptor_slave_burst_adapter:sink0_ready -> cmd_mux_024:src_ready
	wire   [44:0] cmd_mux_024_src_channel;                                                                         // cmd_mux_024:src_channel -> sys_ethernet_dma_tx_descriptor_slave_burst_adapter:sink0_channel
	wire          cmd_mux_024_src_startofpacket;                                                                   // cmd_mux_024:src_startofpacket -> sys_ethernet_dma_tx_descriptor_slave_burst_adapter:sink0_startofpacket
	wire          cmd_mux_024_src_endofpacket;                                                                     // cmd_mux_024:src_endofpacket -> sys_ethernet_dma_tx_descriptor_slave_burst_adapter:sink0_endofpacket
	wire          cmd_demux_src21_valid;                                                                           // cmd_demux:src21_valid -> sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_valid
	wire  [129:0] cmd_demux_src21_data;                                                                            // cmd_demux:src21_data -> sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_data
	wire          cmd_demux_src21_ready;                                                                           // sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_ready -> cmd_demux:src21_ready
	wire   [44:0] cmd_demux_src21_channel;                                                                         // cmd_demux:src21_channel -> sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_channel
	wire          cmd_demux_src21_startofpacket;                                                                   // cmd_demux:src21_startofpacket -> sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_startofpacket
	wire          cmd_demux_src21_endofpacket;                                                                     // cmd_demux:src21_endofpacket -> sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_endofpacket
	wire          cmd_demux_src23_valid;                                                                           // cmd_demux:src23_valid -> sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter:in_valid
	wire  [129:0] cmd_demux_src23_data;                                                                            // cmd_demux:src23_data -> sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter:in_data
	wire          cmd_demux_src23_ready;                                                                           // sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter:in_ready -> cmd_demux:src23_ready
	wire   [44:0] cmd_demux_src23_channel;                                                                         // cmd_demux:src23_channel -> sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter:in_channel
	wire          cmd_demux_src23_startofpacket;                                                                   // cmd_demux:src23_startofpacket -> sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter:in_startofpacket
	wire          cmd_demux_src23_endofpacket;                                                                     // cmd_demux:src23_endofpacket -> sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter:in_endofpacket
	wire          cmd_demux_src24_valid;                                                                           // cmd_demux:src24_valid -> sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter:in_valid
	wire  [129:0] cmd_demux_src24_data;                                                                            // cmd_demux:src24_data -> sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter:in_data
	wire          cmd_demux_src24_ready;                                                                           // sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter:in_ready -> cmd_demux:src24_ready
	wire   [44:0] cmd_demux_src24_channel;                                                                         // cmd_demux:src24_channel -> sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter:in_channel
	wire          cmd_demux_src24_startofpacket;                                                                   // cmd_demux:src24_startofpacket -> sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter:in_startofpacket
	wire          cmd_demux_src24_endofpacket;                                                                     // cmd_demux:src24_endofpacket -> sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter:in_endofpacket
	wire          cmd_demux_001_src0_valid;                                                                        // cmd_demux_001:src0_valid -> sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_valid
	wire  [129:0] cmd_demux_001_src0_data;                                                                         // cmd_demux_001:src0_data -> sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_data
	wire          cmd_demux_001_src0_ready;                                                                        // sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_ready -> cmd_demux_001:src0_ready
	wire   [44:0] cmd_demux_001_src0_channel;                                                                      // cmd_demux_001:src0_channel -> sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_channel
	wire          cmd_demux_001_src0_startofpacket;                                                                // cmd_demux_001:src0_startofpacket -> sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_startofpacket
	wire          cmd_demux_001_src0_endofpacket;                                                                  // cmd_demux_001:src0_endofpacket -> sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_endofpacket
	wire          cmd_demux_002_src0_valid;                                                                        // cmd_demux_002:src0_valid -> axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_valid
	wire  [237:0] cmd_demux_002_src0_data;                                                                         // cmd_demux_002:src0_data -> axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_data
	wire          cmd_demux_002_src0_ready;                                                                        // axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_ready -> cmd_demux_002:src0_ready
	wire   [44:0] cmd_demux_002_src0_channel;                                                                      // cmd_demux_002:src0_channel -> axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_channel
	wire          cmd_demux_002_src0_startofpacket;                                                                // cmd_demux_002:src0_startofpacket -> axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_startofpacket
	wire          cmd_demux_002_src0_endofpacket;                                                                  // cmd_demux_002:src0_endofpacket -> axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_endofpacket
	wire          cmd_demux_003_src0_valid;                                                                        // cmd_demux_003:src0_valid -> axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_valid
	wire  [237:0] cmd_demux_003_src0_data;                                                                         // cmd_demux_003:src0_data -> axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_data
	wire          cmd_demux_003_src0_ready;                                                                        // axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_ready -> cmd_demux_003:src0_ready
	wire   [44:0] cmd_demux_003_src0_channel;                                                                      // cmd_demux_003:src0_channel -> axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_channel
	wire          cmd_demux_003_src0_startofpacket;                                                                // cmd_demux_003:src0_startofpacket -> axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_startofpacket
	wire          cmd_demux_003_src0_endofpacket;                                                                  // cmd_demux_003:src0_endofpacket -> axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_endofpacket
	wire          cmd_demux_004_src0_valid;                                                                        // cmd_demux_004:src0_valid -> axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_valid
	wire  [237:0] cmd_demux_004_src0_data;                                                                         // cmd_demux_004:src0_data -> axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_data
	wire          cmd_demux_004_src0_ready;                                                                        // axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_ready -> cmd_demux_004:src0_ready
	wire   [44:0] cmd_demux_004_src0_channel;                                                                      // cmd_demux_004:src0_channel -> axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_channel
	wire          cmd_demux_004_src0_startofpacket;                                                                // cmd_demux_004:src0_startofpacket -> axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_startofpacket
	wire          cmd_demux_004_src0_endofpacket;                                                                  // cmd_demux_004:src0_endofpacket -> axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_endofpacket
	wire          cmd_demux_005_src0_valid;                                                                        // cmd_demux_005:src0_valid -> axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_valid
	wire  [237:0] cmd_demux_005_src0_data;                                                                         // cmd_demux_005:src0_data -> axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_data
	wire          cmd_demux_005_src0_ready;                                                                        // axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_ready -> cmd_demux_005:src0_ready
	wire   [44:0] cmd_demux_005_src0_channel;                                                                      // cmd_demux_005:src0_channel -> axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_channel
	wire          cmd_demux_005_src0_startofpacket;                                                                // cmd_demux_005:src0_startofpacket -> axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_startofpacket
	wire          cmd_demux_005_src0_endofpacket;                                                                  // cmd_demux_005:src0_endofpacket -> axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_endofpacket
	wire          cmd_demux_006_src0_valid;                                                                        // cmd_demux_006:src0_valid -> sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_valid
	wire  [165:0] cmd_demux_006_src0_data;                                                                         // cmd_demux_006:src0_data -> sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_data
	wire          cmd_demux_006_src0_ready;                                                                        // sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_ready -> cmd_demux_006:src0_ready
	wire   [44:0] cmd_demux_006_src0_channel;                                                                      // cmd_demux_006:src0_channel -> sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_channel
	wire          cmd_demux_006_src0_startofpacket;                                                                // cmd_demux_006:src0_startofpacket -> sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_startofpacket
	wire          cmd_demux_006_src0_endofpacket;                                                                  // cmd_demux_006:src0_endofpacket -> sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_endofpacket
	wire          cmd_demux_007_src0_valid;                                                                        // cmd_demux_007:src0_valid -> sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_valid
	wire  [165:0] cmd_demux_007_src0_data;                                                                         // cmd_demux_007:src0_data -> sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_data
	wire          cmd_demux_007_src0_ready;                                                                        // sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_ready -> cmd_demux_007:src0_ready
	wire   [44:0] cmd_demux_007_src0_channel;                                                                      // cmd_demux_007:src0_channel -> sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_channel
	wire          cmd_demux_007_src0_startofpacket;                                                                // cmd_demux_007:src0_startofpacket -> sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_startofpacket
	wire          cmd_demux_007_src0_endofpacket;                                                                  // cmd_demux_007:src0_endofpacket -> sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:in_endofpacket
	wire          rsp_demux_023_src0_valid;                                                                        // rsp_demux_023:src0_valid -> sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:in_valid
	wire  [381:0] rsp_demux_023_src0_data;                                                                         // rsp_demux_023:src0_data -> sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:in_data
	wire          rsp_demux_023_src0_ready;                                                                        // sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:in_ready -> rsp_demux_023:src0_ready
	wire   [44:0] rsp_demux_023_src0_channel;                                                                      // rsp_demux_023:src0_channel -> sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:in_channel
	wire          rsp_demux_023_src0_startofpacket;                                                                // rsp_demux_023:src0_startofpacket -> sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:in_startofpacket
	wire          rsp_demux_023_src0_endofpacket;                                                                  // rsp_demux_023:src0_endofpacket -> sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:in_endofpacket
	wire          rsp_demux_024_src0_valid;                                                                        // rsp_demux_024:src0_valid -> sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:in_valid
	wire  [381:0] rsp_demux_024_src0_data;                                                                         // rsp_demux_024:src0_data -> sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:in_data
	wire          rsp_demux_024_src0_ready;                                                                        // sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:in_ready -> rsp_demux_024:src0_ready
	wire   [44:0] rsp_demux_024_src0_channel;                                                                      // rsp_demux_024:src0_channel -> sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:in_channel
	wire          rsp_demux_024_src0_startofpacket;                                                                // rsp_demux_024:src0_startofpacket -> sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:in_startofpacket
	wire          rsp_demux_024_src0_endofpacket;                                                                  // rsp_demux_024:src0_endofpacket -> sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:in_endofpacket
	wire          sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid;                    // sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_valid -> crosser:in_valid
	wire  [669:0] sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data;                     // sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_data -> crosser:in_data
	wire          sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready;                    // crosser:in_ready -> sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_ready
	wire   [44:0] sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel;                  // sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_channel -> crosser:in_channel
	wire          sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket;            // sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_startofpacket -> crosser:in_startofpacket
	wire          sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket;              // sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_endofpacket -> crosser:in_endofpacket
	wire          sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid;             // sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_valid -> crosser_001:in_valid
	wire  [669:0] sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data;              // sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_data -> crosser_001:in_data
	wire          sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready;             // crosser_001:in_ready -> sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_ready
	wire   [44:0] sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel;           // sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_channel -> crosser_001:in_channel
	wire          sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket;     // sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_startofpacket -> crosser_001:in_startofpacket
	wire          sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket;       // sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_endofpacket -> crosser_001:in_endofpacket
	wire          axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid;           // axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_valid -> async_fifo:in_valid
	wire  [669:0] axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data;            // axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_data -> async_fifo:in_data
	wire          axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready;           // async_fifo:in_ready -> axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_ready
	wire   [44:0] axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel;         // axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_channel -> async_fifo:in_channel
	wire          axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket;   // axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_startofpacket -> async_fifo:in_startofpacket
	wire          axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket;     // axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_endofpacket -> async_fifo:in_endofpacket
	wire          axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid;           // axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_valid -> async_fifo_001:in_valid
	wire  [669:0] axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data;            // axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_data -> async_fifo_001:in_data
	wire          axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready;           // async_fifo_001:in_ready -> axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_ready
	wire   [44:0] axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel;         // axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_channel -> async_fifo_001:in_channel
	wire          axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket;   // axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_startofpacket -> async_fifo_001:in_startofpacket
	wire          axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket;     // axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_endofpacket -> async_fifo_001:in_endofpacket
	wire          axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid;            // axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_valid -> async_fifo_002:in_valid
	wire  [669:0] axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data;             // axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_data -> async_fifo_002:in_data
	wire          axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready;            // async_fifo_002:in_ready -> axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_ready
	wire   [44:0] axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel;          // axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_channel -> async_fifo_002:in_channel
	wire          axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket;    // axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_startofpacket -> async_fifo_002:in_startofpacket
	wire          axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket;      // axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_endofpacket -> async_fifo_002:in_endofpacket
	wire          axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid;            // axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_valid -> async_fifo_003:in_valid
	wire  [669:0] axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data;             // axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_data -> async_fifo_003:in_data
	wire          axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready;            // async_fifo_003:in_ready -> axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_ready
	wire   [44:0] axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel;          // axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_channel -> async_fifo_003:in_channel
	wire          axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket;    // axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_startofpacket -> async_fifo_003:in_startofpacket
	wire          axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket;      // axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_endofpacket -> async_fifo_003:in_endofpacket
	wire          sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid;            // sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_valid -> async_fifo_004:in_valid
	wire  [669:0] sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data;             // sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_data -> async_fifo_004:in_data
	wire          sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready;            // async_fifo_004:in_ready -> sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_ready
	wire   [44:0] sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel;          // sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_channel -> async_fifo_004:in_channel
	wire          sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket;    // sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_startofpacket -> async_fifo_004:in_startofpacket
	wire          sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket;      // sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_endofpacket -> async_fifo_004:in_endofpacket
	wire          sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid;           // sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_valid -> async_fifo_005:in_valid
	wire  [669:0] sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data;            // sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_data -> async_fifo_005:in_data
	wire          sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready;           // async_fifo_005:in_ready -> sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_ready
	wire   [44:0] sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel;         // sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_channel -> async_fifo_005:in_channel
	wire          sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket;   // sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_startofpacket -> async_fifo_005:in_startofpacket
	wire          sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket;     // sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter:out_endofpacket -> async_fifo_005:in_endofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter_src_valid;                    // sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter:out_valid -> crosser_002:in_valid
	wire  [129:0] sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter_src_data;                     // sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter:out_data -> crosser_002:in_data
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter_src_ready;                    // crosser_002:in_ready -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter:out_ready
	wire   [44:0] sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter_src_channel;                  // sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter:out_channel -> crosser_002:in_channel
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter_src_startofpacket;            // sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter:out_startofpacket -> crosser_002:in_startofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter_src_endofpacket;              // sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter:out_endofpacket -> crosser_002:in_endofpacket
	wire    [0:0] sys_cpu_data_master_limiter_cmd_src_valid;                                                       // sys_cpu_data_master_limiter:cmd_src_valid -> limiter_pipeline:in_valid
	wire  [129:0] sys_cpu_data_master_limiter_cmd_src_data;                                                        // sys_cpu_data_master_limiter:cmd_src_data -> limiter_pipeline:in_data
	wire          sys_cpu_data_master_limiter_cmd_src_ready;                                                       // limiter_pipeline:in_ready -> sys_cpu_data_master_limiter:cmd_src_ready
	wire   [44:0] sys_cpu_data_master_limiter_cmd_src_channel;                                                     // sys_cpu_data_master_limiter:cmd_src_channel -> limiter_pipeline:in_channel
	wire          sys_cpu_data_master_limiter_cmd_src_startofpacket;                                               // sys_cpu_data_master_limiter:cmd_src_startofpacket -> limiter_pipeline:in_startofpacket
	wire          sys_cpu_data_master_limiter_cmd_src_endofpacket;                                                 // sys_cpu_data_master_limiter:cmd_src_endofpacket -> limiter_pipeline:in_endofpacket
	wire          limiter_pipeline_source0_valid;                                                                  // limiter_pipeline:out_valid -> cmd_demux:sink_valid
	wire  [129:0] limiter_pipeline_source0_data;                                                                   // limiter_pipeline:out_data -> cmd_demux:sink_data
	wire          limiter_pipeline_source0_ready;                                                                  // cmd_demux:sink_ready -> limiter_pipeline:out_ready
	wire   [44:0] limiter_pipeline_source0_channel;                                                                // limiter_pipeline:out_channel -> cmd_demux:sink_channel
	wire          limiter_pipeline_source0_startofpacket;                                                          // limiter_pipeline:out_startofpacket -> cmd_demux:sink_startofpacket
	wire          limiter_pipeline_source0_endofpacket;                                                            // limiter_pipeline:out_endofpacket -> cmd_demux:sink_endofpacket
	wire          rsp_mux_src_valid;                                                                               // rsp_mux:src_valid -> limiter_pipeline_001:in_valid
	wire  [129:0] rsp_mux_src_data;                                                                                // rsp_mux:src_data -> limiter_pipeline_001:in_data
	wire          rsp_mux_src_ready;                                                                               // limiter_pipeline_001:in_ready -> rsp_mux:src_ready
	wire   [44:0] rsp_mux_src_channel;                                                                             // rsp_mux:src_channel -> limiter_pipeline_001:in_channel
	wire          rsp_mux_src_startofpacket;                                                                       // rsp_mux:src_startofpacket -> limiter_pipeline_001:in_startofpacket
	wire          rsp_mux_src_endofpacket;                                                                         // rsp_mux:src_endofpacket -> limiter_pipeline_001:in_endofpacket
	wire          limiter_pipeline_001_source0_valid;                                                              // limiter_pipeline_001:out_valid -> sys_cpu_data_master_limiter:rsp_sink_valid
	wire  [129:0] limiter_pipeline_001_source0_data;                                                               // limiter_pipeline_001:out_data -> sys_cpu_data_master_limiter:rsp_sink_data
	wire          limiter_pipeline_001_source0_ready;                                                              // sys_cpu_data_master_limiter:rsp_sink_ready -> limiter_pipeline_001:out_ready
	wire   [44:0] limiter_pipeline_001_source0_channel;                                                            // limiter_pipeline_001:out_channel -> sys_cpu_data_master_limiter:rsp_sink_channel
	wire          limiter_pipeline_001_source0_startofpacket;                                                      // limiter_pipeline_001:out_startofpacket -> sys_cpu_data_master_limiter:rsp_sink_startofpacket
	wire          limiter_pipeline_001_source0_endofpacket;                                                        // limiter_pipeline_001:out_endofpacket -> sys_cpu_data_master_limiter:rsp_sink_endofpacket
	wire    [0:0] sys_cpu_instruction_master_limiter_cmd_src_valid;                                                // sys_cpu_instruction_master_limiter:cmd_src_valid -> limiter_pipeline_002:in_valid
	wire  [129:0] sys_cpu_instruction_master_limiter_cmd_src_data;                                                 // sys_cpu_instruction_master_limiter:cmd_src_data -> limiter_pipeline_002:in_data
	wire          sys_cpu_instruction_master_limiter_cmd_src_ready;                                                // limiter_pipeline_002:in_ready -> sys_cpu_instruction_master_limiter:cmd_src_ready
	wire   [44:0] sys_cpu_instruction_master_limiter_cmd_src_channel;                                              // sys_cpu_instruction_master_limiter:cmd_src_channel -> limiter_pipeline_002:in_channel
	wire          sys_cpu_instruction_master_limiter_cmd_src_startofpacket;                                        // sys_cpu_instruction_master_limiter:cmd_src_startofpacket -> limiter_pipeline_002:in_startofpacket
	wire          sys_cpu_instruction_master_limiter_cmd_src_endofpacket;                                          // sys_cpu_instruction_master_limiter:cmd_src_endofpacket -> limiter_pipeline_002:in_endofpacket
	wire          limiter_pipeline_002_source0_valid;                                                              // limiter_pipeline_002:out_valid -> cmd_demux_001:sink_valid
	wire  [129:0] limiter_pipeline_002_source0_data;                                                               // limiter_pipeline_002:out_data -> cmd_demux_001:sink_data
	wire          limiter_pipeline_002_source0_ready;                                                              // cmd_demux_001:sink_ready -> limiter_pipeline_002:out_ready
	wire   [44:0] limiter_pipeline_002_source0_channel;                                                            // limiter_pipeline_002:out_channel -> cmd_demux_001:sink_channel
	wire          limiter_pipeline_002_source0_startofpacket;                                                      // limiter_pipeline_002:out_startofpacket -> cmd_demux_001:sink_startofpacket
	wire          limiter_pipeline_002_source0_endofpacket;                                                        // limiter_pipeline_002:out_endofpacket -> cmd_demux_001:sink_endofpacket
	wire          rsp_mux_001_src_valid;                                                                           // rsp_mux_001:src_valid -> limiter_pipeline_003:in_valid
	wire  [129:0] rsp_mux_001_src_data;                                                                            // rsp_mux_001:src_data -> limiter_pipeline_003:in_data
	wire          rsp_mux_001_src_ready;                                                                           // limiter_pipeline_003:in_ready -> rsp_mux_001:src_ready
	wire   [44:0] rsp_mux_001_src_channel;                                                                         // rsp_mux_001:src_channel -> limiter_pipeline_003:in_channel
	wire          rsp_mux_001_src_startofpacket;                                                                   // rsp_mux_001:src_startofpacket -> limiter_pipeline_003:in_startofpacket
	wire          rsp_mux_001_src_endofpacket;                                                                     // rsp_mux_001:src_endofpacket -> limiter_pipeline_003:in_endofpacket
	wire          limiter_pipeline_003_source0_valid;                                                              // limiter_pipeline_003:out_valid -> sys_cpu_instruction_master_limiter:rsp_sink_valid
	wire  [129:0] limiter_pipeline_003_source0_data;                                                               // limiter_pipeline_003:out_data -> sys_cpu_instruction_master_limiter:rsp_sink_data
	wire          limiter_pipeline_003_source0_ready;                                                              // sys_cpu_instruction_master_limiter:rsp_sink_ready -> limiter_pipeline_003:out_ready
	wire   [44:0] limiter_pipeline_003_source0_channel;                                                            // limiter_pipeline_003:out_channel -> sys_cpu_instruction_master_limiter:rsp_sink_channel
	wire          limiter_pipeline_003_source0_startofpacket;                                                      // limiter_pipeline_003:out_startofpacket -> sys_cpu_instruction_master_limiter:rsp_sink_startofpacket
	wire          limiter_pipeline_003_source0_endofpacket;                                                        // limiter_pipeline_003:out_endofpacket -> sys_cpu_instruction_master_limiter:rsp_sink_endofpacket
	wire          cmd_mux_src_valid;                                                                               // cmd_mux:src_valid -> agent_pipeline:in_valid
	wire  [129:0] cmd_mux_src_data;                                                                                // cmd_mux:src_data -> agent_pipeline:in_data
	wire          cmd_mux_src_ready;                                                                               // agent_pipeline:in_ready -> cmd_mux:src_ready
	wire   [44:0] cmd_mux_src_channel;                                                                             // cmd_mux:src_channel -> agent_pipeline:in_channel
	wire          cmd_mux_src_startofpacket;                                                                       // cmd_mux:src_startofpacket -> agent_pipeline:in_startofpacket
	wire          cmd_mux_src_endofpacket;                                                                         // cmd_mux:src_endofpacket -> agent_pipeline:in_endofpacket
	wire          agent_pipeline_source0_valid;                                                                    // agent_pipeline:out_valid -> ad9144_jesd204_link_management_agent:write_cp_valid
	wire  [129:0] agent_pipeline_source0_data;                                                                     // agent_pipeline:out_data -> ad9144_jesd204_link_management_agent:write_cp_data
	wire          agent_pipeline_source0_ready;                                                                    // ad9144_jesd204_link_management_agent:write_cp_ready -> agent_pipeline:out_ready
	wire   [44:0] agent_pipeline_source0_channel;                                                                  // agent_pipeline:out_channel -> ad9144_jesd204_link_management_agent:write_cp_channel
	wire          agent_pipeline_source0_startofpacket;                                                            // agent_pipeline:out_startofpacket -> ad9144_jesd204_link_management_agent:write_cp_startofpacket
	wire          agent_pipeline_source0_endofpacket;                                                              // agent_pipeline:out_endofpacket -> ad9144_jesd204_link_management_agent:write_cp_endofpacket
	wire          cmd_mux_001_src_valid;                                                                           // cmd_mux_001:src_valid -> agent_pipeline_001:in_valid
	wire  [129:0] cmd_mux_001_src_data;                                                                            // cmd_mux_001:src_data -> agent_pipeline_001:in_data
	wire          cmd_mux_001_src_ready;                                                                           // agent_pipeline_001:in_ready -> cmd_mux_001:src_ready
	wire   [44:0] cmd_mux_001_src_channel;                                                                         // cmd_mux_001:src_channel -> agent_pipeline_001:in_channel
	wire          cmd_mux_001_src_startofpacket;                                                                   // cmd_mux_001:src_startofpacket -> agent_pipeline_001:in_startofpacket
	wire          cmd_mux_001_src_endofpacket;                                                                     // cmd_mux_001:src_endofpacket -> agent_pipeline_001:in_endofpacket
	wire          agent_pipeline_001_source0_valid;                                                                // agent_pipeline_001:out_valid -> ad9144_jesd204_link_management_agent:read_cp_valid
	wire  [129:0] agent_pipeline_001_source0_data;                                                                 // agent_pipeline_001:out_data -> ad9144_jesd204_link_management_agent:read_cp_data
	wire          agent_pipeline_001_source0_ready;                                                                // ad9144_jesd204_link_management_agent:read_cp_ready -> agent_pipeline_001:out_ready
	wire   [44:0] agent_pipeline_001_source0_channel;                                                              // agent_pipeline_001:out_channel -> ad9144_jesd204_link_management_agent:read_cp_channel
	wire          agent_pipeline_001_source0_startofpacket;                                                        // agent_pipeline_001:out_startofpacket -> ad9144_jesd204_link_management_agent:read_cp_startofpacket
	wire          agent_pipeline_001_source0_endofpacket;                                                          // agent_pipeline_001:out_endofpacket -> ad9144_jesd204_link_management_agent:read_cp_endofpacket
	wire          ad9144_jesd204_link_management_agent_write_rp_valid;                                             // ad9144_jesd204_link_management_agent:write_rp_valid -> agent_pipeline_002:in_valid
	wire  [129:0] ad9144_jesd204_link_management_agent_write_rp_data;                                              // ad9144_jesd204_link_management_agent:write_rp_data -> agent_pipeline_002:in_data
	wire          ad9144_jesd204_link_management_agent_write_rp_ready;                                             // agent_pipeline_002:in_ready -> ad9144_jesd204_link_management_agent:write_rp_ready
	wire          ad9144_jesd204_link_management_agent_write_rp_startofpacket;                                     // ad9144_jesd204_link_management_agent:write_rp_startofpacket -> agent_pipeline_002:in_startofpacket
	wire          ad9144_jesd204_link_management_agent_write_rp_endofpacket;                                       // ad9144_jesd204_link_management_agent:write_rp_endofpacket -> agent_pipeline_002:in_endofpacket
	wire          agent_pipeline_002_source0_valid;                                                                // agent_pipeline_002:out_valid -> router_008:sink_valid
	wire  [129:0] agent_pipeline_002_source0_data;                                                                 // agent_pipeline_002:out_data -> router_008:sink_data
	wire          agent_pipeline_002_source0_ready;                                                                // router_008:sink_ready -> agent_pipeline_002:out_ready
	wire          agent_pipeline_002_source0_startofpacket;                                                        // agent_pipeline_002:out_startofpacket -> router_008:sink_startofpacket
	wire          agent_pipeline_002_source0_endofpacket;                                                          // agent_pipeline_002:out_endofpacket -> router_008:sink_endofpacket
	wire          ad9144_jesd204_link_management_agent_read_rp_valid;                                              // ad9144_jesd204_link_management_agent:read_rp_valid -> agent_pipeline_003:in_valid
	wire  [129:0] ad9144_jesd204_link_management_agent_read_rp_data;                                               // ad9144_jesd204_link_management_agent:read_rp_data -> agent_pipeline_003:in_data
	wire          ad9144_jesd204_link_management_agent_read_rp_ready;                                              // agent_pipeline_003:in_ready -> ad9144_jesd204_link_management_agent:read_rp_ready
	wire          ad9144_jesd204_link_management_agent_read_rp_startofpacket;                                      // ad9144_jesd204_link_management_agent:read_rp_startofpacket -> agent_pipeline_003:in_startofpacket
	wire          ad9144_jesd204_link_management_agent_read_rp_endofpacket;                                        // ad9144_jesd204_link_management_agent:read_rp_endofpacket -> agent_pipeline_003:in_endofpacket
	wire          agent_pipeline_003_source0_valid;                                                                // agent_pipeline_003:out_valid -> router_009:sink_valid
	wire  [129:0] agent_pipeline_003_source0_data;                                                                 // agent_pipeline_003:out_data -> router_009:sink_data
	wire          agent_pipeline_003_source0_ready;                                                                // router_009:sink_ready -> agent_pipeline_003:out_ready
	wire          agent_pipeline_003_source0_startofpacket;                                                        // agent_pipeline_003:out_startofpacket -> router_009:sink_startofpacket
	wire          agent_pipeline_003_source0_endofpacket;                                                          // agent_pipeline_003:out_endofpacket -> router_009:sink_endofpacket
	wire          cmd_mux_002_src_valid;                                                                           // cmd_mux_002:src_valid -> agent_pipeline_004:in_valid
	wire  [129:0] cmd_mux_002_src_data;                                                                            // cmd_mux_002:src_data -> agent_pipeline_004:in_data
	wire          cmd_mux_002_src_ready;                                                                           // agent_pipeline_004:in_ready -> cmd_mux_002:src_ready
	wire   [44:0] cmd_mux_002_src_channel;                                                                         // cmd_mux_002:src_channel -> agent_pipeline_004:in_channel
	wire          cmd_mux_002_src_startofpacket;                                                                   // cmd_mux_002:src_startofpacket -> agent_pipeline_004:in_startofpacket
	wire          cmd_mux_002_src_endofpacket;                                                                     // cmd_mux_002:src_endofpacket -> agent_pipeline_004:in_endofpacket
	wire          agent_pipeline_004_source0_valid;                                                                // agent_pipeline_004:out_valid -> ad9680_jesd204_link_management_agent:write_cp_valid
	wire  [129:0] agent_pipeline_004_source0_data;                                                                 // agent_pipeline_004:out_data -> ad9680_jesd204_link_management_agent:write_cp_data
	wire          agent_pipeline_004_source0_ready;                                                                // ad9680_jesd204_link_management_agent:write_cp_ready -> agent_pipeline_004:out_ready
	wire   [44:0] agent_pipeline_004_source0_channel;                                                              // agent_pipeline_004:out_channel -> ad9680_jesd204_link_management_agent:write_cp_channel
	wire          agent_pipeline_004_source0_startofpacket;                                                        // agent_pipeline_004:out_startofpacket -> ad9680_jesd204_link_management_agent:write_cp_startofpacket
	wire          agent_pipeline_004_source0_endofpacket;                                                          // agent_pipeline_004:out_endofpacket -> ad9680_jesd204_link_management_agent:write_cp_endofpacket
	wire          cmd_mux_003_src_valid;                                                                           // cmd_mux_003:src_valid -> agent_pipeline_005:in_valid
	wire  [129:0] cmd_mux_003_src_data;                                                                            // cmd_mux_003:src_data -> agent_pipeline_005:in_data
	wire          cmd_mux_003_src_ready;                                                                           // agent_pipeline_005:in_ready -> cmd_mux_003:src_ready
	wire   [44:0] cmd_mux_003_src_channel;                                                                         // cmd_mux_003:src_channel -> agent_pipeline_005:in_channel
	wire          cmd_mux_003_src_startofpacket;                                                                   // cmd_mux_003:src_startofpacket -> agent_pipeline_005:in_startofpacket
	wire          cmd_mux_003_src_endofpacket;                                                                     // cmd_mux_003:src_endofpacket -> agent_pipeline_005:in_endofpacket
	wire          agent_pipeline_005_source0_valid;                                                                // agent_pipeline_005:out_valid -> ad9680_jesd204_link_management_agent:read_cp_valid
	wire  [129:0] agent_pipeline_005_source0_data;                                                                 // agent_pipeline_005:out_data -> ad9680_jesd204_link_management_agent:read_cp_data
	wire          agent_pipeline_005_source0_ready;                                                                // ad9680_jesd204_link_management_agent:read_cp_ready -> agent_pipeline_005:out_ready
	wire   [44:0] agent_pipeline_005_source0_channel;                                                              // agent_pipeline_005:out_channel -> ad9680_jesd204_link_management_agent:read_cp_channel
	wire          agent_pipeline_005_source0_startofpacket;                                                        // agent_pipeline_005:out_startofpacket -> ad9680_jesd204_link_management_agent:read_cp_startofpacket
	wire          agent_pipeline_005_source0_endofpacket;                                                          // agent_pipeline_005:out_endofpacket -> ad9680_jesd204_link_management_agent:read_cp_endofpacket
	wire          ad9680_jesd204_link_management_agent_write_rp_valid;                                             // ad9680_jesd204_link_management_agent:write_rp_valid -> agent_pipeline_006:in_valid
	wire  [129:0] ad9680_jesd204_link_management_agent_write_rp_data;                                              // ad9680_jesd204_link_management_agent:write_rp_data -> agent_pipeline_006:in_data
	wire          ad9680_jesd204_link_management_agent_write_rp_ready;                                             // agent_pipeline_006:in_ready -> ad9680_jesd204_link_management_agent:write_rp_ready
	wire          ad9680_jesd204_link_management_agent_write_rp_startofpacket;                                     // ad9680_jesd204_link_management_agent:write_rp_startofpacket -> agent_pipeline_006:in_startofpacket
	wire          ad9680_jesd204_link_management_agent_write_rp_endofpacket;                                       // ad9680_jesd204_link_management_agent:write_rp_endofpacket -> agent_pipeline_006:in_endofpacket
	wire          agent_pipeline_006_source0_valid;                                                                // agent_pipeline_006:out_valid -> router_010:sink_valid
	wire  [129:0] agent_pipeline_006_source0_data;                                                                 // agent_pipeline_006:out_data -> router_010:sink_data
	wire          agent_pipeline_006_source0_ready;                                                                // router_010:sink_ready -> agent_pipeline_006:out_ready
	wire          agent_pipeline_006_source0_startofpacket;                                                        // agent_pipeline_006:out_startofpacket -> router_010:sink_startofpacket
	wire          agent_pipeline_006_source0_endofpacket;                                                          // agent_pipeline_006:out_endofpacket -> router_010:sink_endofpacket
	wire          ad9680_jesd204_link_management_agent_read_rp_valid;                                              // ad9680_jesd204_link_management_agent:read_rp_valid -> agent_pipeline_007:in_valid
	wire  [129:0] ad9680_jesd204_link_management_agent_read_rp_data;                                               // ad9680_jesd204_link_management_agent:read_rp_data -> agent_pipeline_007:in_data
	wire          ad9680_jesd204_link_management_agent_read_rp_ready;                                              // agent_pipeline_007:in_ready -> ad9680_jesd204_link_management_agent:read_rp_ready
	wire          ad9680_jesd204_link_management_agent_read_rp_startofpacket;                                      // ad9680_jesd204_link_management_agent:read_rp_startofpacket -> agent_pipeline_007:in_startofpacket
	wire          ad9680_jesd204_link_management_agent_read_rp_endofpacket;                                        // ad9680_jesd204_link_management_agent:read_rp_endofpacket -> agent_pipeline_007:in_endofpacket
	wire          agent_pipeline_007_source0_valid;                                                                // agent_pipeline_007:out_valid -> router_011:sink_valid
	wire  [129:0] agent_pipeline_007_source0_data;                                                                 // agent_pipeline_007:out_data -> router_011:sink_data
	wire          agent_pipeline_007_source0_ready;                                                                // router_011:sink_ready -> agent_pipeline_007:out_ready
	wire          agent_pipeline_007_source0_startofpacket;                                                        // agent_pipeline_007:out_startofpacket -> router_011:sink_startofpacket
	wire          agent_pipeline_007_source0_endofpacket;                                                          // agent_pipeline_007:out_endofpacket -> router_011:sink_endofpacket
	wire          cmd_mux_004_src_valid;                                                                           // cmd_mux_004:src_valid -> agent_pipeline_008:in_valid
	wire  [129:0] cmd_mux_004_src_data;                                                                            // cmd_mux_004:src_data -> agent_pipeline_008:in_data
	wire          cmd_mux_004_src_ready;                                                                           // agent_pipeline_008:in_ready -> cmd_mux_004:src_ready
	wire   [44:0] cmd_mux_004_src_channel;                                                                         // cmd_mux_004:src_channel -> agent_pipeline_008:in_channel
	wire          cmd_mux_004_src_startofpacket;                                                                   // cmd_mux_004:src_startofpacket -> agent_pipeline_008:in_startofpacket
	wire          cmd_mux_004_src_endofpacket;                                                                     // cmd_mux_004:src_endofpacket -> agent_pipeline_008:in_endofpacket
	wire          agent_pipeline_008_source0_valid;                                                                // agent_pipeline_008:out_valid -> ad9144_jesd204_link_reconfig_agent:write_cp_valid
	wire  [129:0] agent_pipeline_008_source0_data;                                                                 // agent_pipeline_008:out_data -> ad9144_jesd204_link_reconfig_agent:write_cp_data
	wire          agent_pipeline_008_source0_ready;                                                                // ad9144_jesd204_link_reconfig_agent:write_cp_ready -> agent_pipeline_008:out_ready
	wire   [44:0] agent_pipeline_008_source0_channel;                                                              // agent_pipeline_008:out_channel -> ad9144_jesd204_link_reconfig_agent:write_cp_channel
	wire          agent_pipeline_008_source0_startofpacket;                                                        // agent_pipeline_008:out_startofpacket -> ad9144_jesd204_link_reconfig_agent:write_cp_startofpacket
	wire          agent_pipeline_008_source0_endofpacket;                                                          // agent_pipeline_008:out_endofpacket -> ad9144_jesd204_link_reconfig_agent:write_cp_endofpacket
	wire          cmd_mux_005_src_valid;                                                                           // cmd_mux_005:src_valid -> agent_pipeline_009:in_valid
	wire  [129:0] cmd_mux_005_src_data;                                                                            // cmd_mux_005:src_data -> agent_pipeline_009:in_data
	wire          cmd_mux_005_src_ready;                                                                           // agent_pipeline_009:in_ready -> cmd_mux_005:src_ready
	wire   [44:0] cmd_mux_005_src_channel;                                                                         // cmd_mux_005:src_channel -> agent_pipeline_009:in_channel
	wire          cmd_mux_005_src_startofpacket;                                                                   // cmd_mux_005:src_startofpacket -> agent_pipeline_009:in_startofpacket
	wire          cmd_mux_005_src_endofpacket;                                                                     // cmd_mux_005:src_endofpacket -> agent_pipeline_009:in_endofpacket
	wire          agent_pipeline_009_source0_valid;                                                                // agent_pipeline_009:out_valid -> ad9144_jesd204_link_reconfig_agent:read_cp_valid
	wire  [129:0] agent_pipeline_009_source0_data;                                                                 // agent_pipeline_009:out_data -> ad9144_jesd204_link_reconfig_agent:read_cp_data
	wire          agent_pipeline_009_source0_ready;                                                                // ad9144_jesd204_link_reconfig_agent:read_cp_ready -> agent_pipeline_009:out_ready
	wire   [44:0] agent_pipeline_009_source0_channel;                                                              // agent_pipeline_009:out_channel -> ad9144_jesd204_link_reconfig_agent:read_cp_channel
	wire          agent_pipeline_009_source0_startofpacket;                                                        // agent_pipeline_009:out_startofpacket -> ad9144_jesd204_link_reconfig_agent:read_cp_startofpacket
	wire          agent_pipeline_009_source0_endofpacket;                                                          // agent_pipeline_009:out_endofpacket -> ad9144_jesd204_link_reconfig_agent:read_cp_endofpacket
	wire          ad9144_jesd204_link_reconfig_agent_write_rp_valid;                                               // ad9144_jesd204_link_reconfig_agent:write_rp_valid -> agent_pipeline_010:in_valid
	wire  [129:0] ad9144_jesd204_link_reconfig_agent_write_rp_data;                                                // ad9144_jesd204_link_reconfig_agent:write_rp_data -> agent_pipeline_010:in_data
	wire          ad9144_jesd204_link_reconfig_agent_write_rp_ready;                                               // agent_pipeline_010:in_ready -> ad9144_jesd204_link_reconfig_agent:write_rp_ready
	wire          ad9144_jesd204_link_reconfig_agent_write_rp_startofpacket;                                       // ad9144_jesd204_link_reconfig_agent:write_rp_startofpacket -> agent_pipeline_010:in_startofpacket
	wire          ad9144_jesd204_link_reconfig_agent_write_rp_endofpacket;                                         // ad9144_jesd204_link_reconfig_agent:write_rp_endofpacket -> agent_pipeline_010:in_endofpacket
	wire          agent_pipeline_010_source0_valid;                                                                // agent_pipeline_010:out_valid -> router_012:sink_valid
	wire  [129:0] agent_pipeline_010_source0_data;                                                                 // agent_pipeline_010:out_data -> router_012:sink_data
	wire          agent_pipeline_010_source0_ready;                                                                // router_012:sink_ready -> agent_pipeline_010:out_ready
	wire          agent_pipeline_010_source0_startofpacket;                                                        // agent_pipeline_010:out_startofpacket -> router_012:sink_startofpacket
	wire          agent_pipeline_010_source0_endofpacket;                                                          // agent_pipeline_010:out_endofpacket -> router_012:sink_endofpacket
	wire          ad9144_jesd204_link_reconfig_agent_read_rp_valid;                                                // ad9144_jesd204_link_reconfig_agent:read_rp_valid -> agent_pipeline_011:in_valid
	wire  [129:0] ad9144_jesd204_link_reconfig_agent_read_rp_data;                                                 // ad9144_jesd204_link_reconfig_agent:read_rp_data -> agent_pipeline_011:in_data
	wire          ad9144_jesd204_link_reconfig_agent_read_rp_ready;                                                // agent_pipeline_011:in_ready -> ad9144_jesd204_link_reconfig_agent:read_rp_ready
	wire          ad9144_jesd204_link_reconfig_agent_read_rp_startofpacket;                                        // ad9144_jesd204_link_reconfig_agent:read_rp_startofpacket -> agent_pipeline_011:in_startofpacket
	wire          ad9144_jesd204_link_reconfig_agent_read_rp_endofpacket;                                          // ad9144_jesd204_link_reconfig_agent:read_rp_endofpacket -> agent_pipeline_011:in_endofpacket
	wire          agent_pipeline_011_source0_valid;                                                                // agent_pipeline_011:out_valid -> router_013:sink_valid
	wire  [129:0] agent_pipeline_011_source0_data;                                                                 // agent_pipeline_011:out_data -> router_013:sink_data
	wire          agent_pipeline_011_source0_ready;                                                                // router_013:sink_ready -> agent_pipeline_011:out_ready
	wire          agent_pipeline_011_source0_startofpacket;                                                        // agent_pipeline_011:out_startofpacket -> router_013:sink_startofpacket
	wire          agent_pipeline_011_source0_endofpacket;                                                          // agent_pipeline_011:out_endofpacket -> router_013:sink_endofpacket
	wire          cmd_mux_006_src_valid;                                                                           // cmd_mux_006:src_valid -> agent_pipeline_012:in_valid
	wire  [129:0] cmd_mux_006_src_data;                                                                            // cmd_mux_006:src_data -> agent_pipeline_012:in_data
	wire          cmd_mux_006_src_ready;                                                                           // agent_pipeline_012:in_ready -> cmd_mux_006:src_ready
	wire   [44:0] cmd_mux_006_src_channel;                                                                         // cmd_mux_006:src_channel -> agent_pipeline_012:in_channel
	wire          cmd_mux_006_src_startofpacket;                                                                   // cmd_mux_006:src_startofpacket -> agent_pipeline_012:in_startofpacket
	wire          cmd_mux_006_src_endofpacket;                                                                     // cmd_mux_006:src_endofpacket -> agent_pipeline_012:in_endofpacket
	wire          agent_pipeline_012_source0_valid;                                                                // agent_pipeline_012:out_valid -> ad9680_jesd204_link_reconfig_agent:write_cp_valid
	wire  [129:0] agent_pipeline_012_source0_data;                                                                 // agent_pipeline_012:out_data -> ad9680_jesd204_link_reconfig_agent:write_cp_data
	wire          agent_pipeline_012_source0_ready;                                                                // ad9680_jesd204_link_reconfig_agent:write_cp_ready -> agent_pipeline_012:out_ready
	wire   [44:0] agent_pipeline_012_source0_channel;                                                              // agent_pipeline_012:out_channel -> ad9680_jesd204_link_reconfig_agent:write_cp_channel
	wire          agent_pipeline_012_source0_startofpacket;                                                        // agent_pipeline_012:out_startofpacket -> ad9680_jesd204_link_reconfig_agent:write_cp_startofpacket
	wire          agent_pipeline_012_source0_endofpacket;                                                          // agent_pipeline_012:out_endofpacket -> ad9680_jesd204_link_reconfig_agent:write_cp_endofpacket
	wire          cmd_mux_007_src_valid;                                                                           // cmd_mux_007:src_valid -> agent_pipeline_013:in_valid
	wire  [129:0] cmd_mux_007_src_data;                                                                            // cmd_mux_007:src_data -> agent_pipeline_013:in_data
	wire          cmd_mux_007_src_ready;                                                                           // agent_pipeline_013:in_ready -> cmd_mux_007:src_ready
	wire   [44:0] cmd_mux_007_src_channel;                                                                         // cmd_mux_007:src_channel -> agent_pipeline_013:in_channel
	wire          cmd_mux_007_src_startofpacket;                                                                   // cmd_mux_007:src_startofpacket -> agent_pipeline_013:in_startofpacket
	wire          cmd_mux_007_src_endofpacket;                                                                     // cmd_mux_007:src_endofpacket -> agent_pipeline_013:in_endofpacket
	wire          agent_pipeline_013_source0_valid;                                                                // agent_pipeline_013:out_valid -> ad9680_jesd204_link_reconfig_agent:read_cp_valid
	wire  [129:0] agent_pipeline_013_source0_data;                                                                 // agent_pipeline_013:out_data -> ad9680_jesd204_link_reconfig_agent:read_cp_data
	wire          agent_pipeline_013_source0_ready;                                                                // ad9680_jesd204_link_reconfig_agent:read_cp_ready -> agent_pipeline_013:out_ready
	wire   [44:0] agent_pipeline_013_source0_channel;                                                              // agent_pipeline_013:out_channel -> ad9680_jesd204_link_reconfig_agent:read_cp_channel
	wire          agent_pipeline_013_source0_startofpacket;                                                        // agent_pipeline_013:out_startofpacket -> ad9680_jesd204_link_reconfig_agent:read_cp_startofpacket
	wire          agent_pipeline_013_source0_endofpacket;                                                          // agent_pipeline_013:out_endofpacket -> ad9680_jesd204_link_reconfig_agent:read_cp_endofpacket
	wire          ad9680_jesd204_link_reconfig_agent_write_rp_valid;                                               // ad9680_jesd204_link_reconfig_agent:write_rp_valid -> agent_pipeline_014:in_valid
	wire  [129:0] ad9680_jesd204_link_reconfig_agent_write_rp_data;                                                // ad9680_jesd204_link_reconfig_agent:write_rp_data -> agent_pipeline_014:in_data
	wire          ad9680_jesd204_link_reconfig_agent_write_rp_ready;                                               // agent_pipeline_014:in_ready -> ad9680_jesd204_link_reconfig_agent:write_rp_ready
	wire          ad9680_jesd204_link_reconfig_agent_write_rp_startofpacket;                                       // ad9680_jesd204_link_reconfig_agent:write_rp_startofpacket -> agent_pipeline_014:in_startofpacket
	wire          ad9680_jesd204_link_reconfig_agent_write_rp_endofpacket;                                         // ad9680_jesd204_link_reconfig_agent:write_rp_endofpacket -> agent_pipeline_014:in_endofpacket
	wire          agent_pipeline_014_source0_valid;                                                                // agent_pipeline_014:out_valid -> router_014:sink_valid
	wire  [129:0] agent_pipeline_014_source0_data;                                                                 // agent_pipeline_014:out_data -> router_014:sink_data
	wire          agent_pipeline_014_source0_ready;                                                                // router_014:sink_ready -> agent_pipeline_014:out_ready
	wire          agent_pipeline_014_source0_startofpacket;                                                        // agent_pipeline_014:out_startofpacket -> router_014:sink_startofpacket
	wire          agent_pipeline_014_source0_endofpacket;                                                          // agent_pipeline_014:out_endofpacket -> router_014:sink_endofpacket
	wire          ad9680_jesd204_link_reconfig_agent_read_rp_valid;                                                // ad9680_jesd204_link_reconfig_agent:read_rp_valid -> agent_pipeline_015:in_valid
	wire  [129:0] ad9680_jesd204_link_reconfig_agent_read_rp_data;                                                 // ad9680_jesd204_link_reconfig_agent:read_rp_data -> agent_pipeline_015:in_data
	wire          ad9680_jesd204_link_reconfig_agent_read_rp_ready;                                                // agent_pipeline_015:in_ready -> ad9680_jesd204_link_reconfig_agent:read_rp_ready
	wire          ad9680_jesd204_link_reconfig_agent_read_rp_startofpacket;                                        // ad9680_jesd204_link_reconfig_agent:read_rp_startofpacket -> agent_pipeline_015:in_startofpacket
	wire          ad9680_jesd204_link_reconfig_agent_read_rp_endofpacket;                                          // ad9680_jesd204_link_reconfig_agent:read_rp_endofpacket -> agent_pipeline_015:in_endofpacket
	wire          agent_pipeline_015_source0_valid;                                                                // agent_pipeline_015:out_valid -> router_015:sink_valid
	wire  [129:0] agent_pipeline_015_source0_data;                                                                 // agent_pipeline_015:out_data -> router_015:sink_data
	wire          agent_pipeline_015_source0_ready;                                                                // router_015:sink_ready -> agent_pipeline_015:out_ready
	wire          agent_pipeline_015_source0_startofpacket;                                                        // agent_pipeline_015:out_startofpacket -> router_015:sink_startofpacket
	wire          agent_pipeline_015_source0_endofpacket;                                                          // agent_pipeline_015:out_endofpacket -> router_015:sink_endofpacket
	wire          cmd_mux_008_src_valid;                                                                           // cmd_mux_008:src_valid -> agent_pipeline_016:in_valid
	wire  [129:0] cmd_mux_008_src_data;                                                                            // cmd_mux_008:src_data -> agent_pipeline_016:in_data
	wire          cmd_mux_008_src_ready;                                                                           // agent_pipeline_016:in_ready -> cmd_mux_008:src_ready
	wire   [44:0] cmd_mux_008_src_channel;                                                                         // cmd_mux_008:src_channel -> agent_pipeline_016:in_channel
	wire          cmd_mux_008_src_startofpacket;                                                                   // cmd_mux_008:src_startofpacket -> agent_pipeline_016:in_startofpacket
	wire          cmd_mux_008_src_endofpacket;                                                                     // cmd_mux_008:src_endofpacket -> agent_pipeline_016:in_endofpacket
	wire          agent_pipeline_016_source0_valid;                                                                // agent_pipeline_016:out_valid -> axi_ad9144_dma_s_axi_agent:write_cp_valid
	wire  [129:0] agent_pipeline_016_source0_data;                                                                 // agent_pipeline_016:out_data -> axi_ad9144_dma_s_axi_agent:write_cp_data
	wire          agent_pipeline_016_source0_ready;                                                                // axi_ad9144_dma_s_axi_agent:write_cp_ready -> agent_pipeline_016:out_ready
	wire   [44:0] agent_pipeline_016_source0_channel;                                                              // agent_pipeline_016:out_channel -> axi_ad9144_dma_s_axi_agent:write_cp_channel
	wire          agent_pipeline_016_source0_startofpacket;                                                        // agent_pipeline_016:out_startofpacket -> axi_ad9144_dma_s_axi_agent:write_cp_startofpacket
	wire          agent_pipeline_016_source0_endofpacket;                                                          // agent_pipeline_016:out_endofpacket -> axi_ad9144_dma_s_axi_agent:write_cp_endofpacket
	wire          cmd_mux_009_src_valid;                                                                           // cmd_mux_009:src_valid -> agent_pipeline_017:in_valid
	wire  [129:0] cmd_mux_009_src_data;                                                                            // cmd_mux_009:src_data -> agent_pipeline_017:in_data
	wire          cmd_mux_009_src_ready;                                                                           // agent_pipeline_017:in_ready -> cmd_mux_009:src_ready
	wire   [44:0] cmd_mux_009_src_channel;                                                                         // cmd_mux_009:src_channel -> agent_pipeline_017:in_channel
	wire          cmd_mux_009_src_startofpacket;                                                                   // cmd_mux_009:src_startofpacket -> agent_pipeline_017:in_startofpacket
	wire          cmd_mux_009_src_endofpacket;                                                                     // cmd_mux_009:src_endofpacket -> agent_pipeline_017:in_endofpacket
	wire          agent_pipeline_017_source0_valid;                                                                // agent_pipeline_017:out_valid -> axi_ad9144_dma_s_axi_agent:read_cp_valid
	wire  [129:0] agent_pipeline_017_source0_data;                                                                 // agent_pipeline_017:out_data -> axi_ad9144_dma_s_axi_agent:read_cp_data
	wire          agent_pipeline_017_source0_ready;                                                                // axi_ad9144_dma_s_axi_agent:read_cp_ready -> agent_pipeline_017:out_ready
	wire   [44:0] agent_pipeline_017_source0_channel;                                                              // agent_pipeline_017:out_channel -> axi_ad9144_dma_s_axi_agent:read_cp_channel
	wire          agent_pipeline_017_source0_startofpacket;                                                        // agent_pipeline_017:out_startofpacket -> axi_ad9144_dma_s_axi_agent:read_cp_startofpacket
	wire          agent_pipeline_017_source0_endofpacket;                                                          // agent_pipeline_017:out_endofpacket -> axi_ad9144_dma_s_axi_agent:read_cp_endofpacket
	wire          axi_ad9144_dma_s_axi_agent_write_rp_valid;                                                       // axi_ad9144_dma_s_axi_agent:write_rp_valid -> agent_pipeline_018:in_valid
	wire  [129:0] axi_ad9144_dma_s_axi_agent_write_rp_data;                                                        // axi_ad9144_dma_s_axi_agent:write_rp_data -> agent_pipeline_018:in_data
	wire          axi_ad9144_dma_s_axi_agent_write_rp_ready;                                                       // agent_pipeline_018:in_ready -> axi_ad9144_dma_s_axi_agent:write_rp_ready
	wire          axi_ad9144_dma_s_axi_agent_write_rp_startofpacket;                                               // axi_ad9144_dma_s_axi_agent:write_rp_startofpacket -> agent_pipeline_018:in_startofpacket
	wire          axi_ad9144_dma_s_axi_agent_write_rp_endofpacket;                                                 // axi_ad9144_dma_s_axi_agent:write_rp_endofpacket -> agent_pipeline_018:in_endofpacket
	wire          agent_pipeline_018_source0_valid;                                                                // agent_pipeline_018:out_valid -> router_016:sink_valid
	wire  [129:0] agent_pipeline_018_source0_data;                                                                 // agent_pipeline_018:out_data -> router_016:sink_data
	wire          agent_pipeline_018_source0_ready;                                                                // router_016:sink_ready -> agent_pipeline_018:out_ready
	wire          agent_pipeline_018_source0_startofpacket;                                                        // agent_pipeline_018:out_startofpacket -> router_016:sink_startofpacket
	wire          agent_pipeline_018_source0_endofpacket;                                                          // agent_pipeline_018:out_endofpacket -> router_016:sink_endofpacket
	wire          axi_ad9144_dma_s_axi_agent_read_rp_valid;                                                        // axi_ad9144_dma_s_axi_agent:read_rp_valid -> agent_pipeline_019:in_valid
	wire  [129:0] axi_ad9144_dma_s_axi_agent_read_rp_data;                                                         // axi_ad9144_dma_s_axi_agent:read_rp_data -> agent_pipeline_019:in_data
	wire          axi_ad9144_dma_s_axi_agent_read_rp_ready;                                                        // agent_pipeline_019:in_ready -> axi_ad9144_dma_s_axi_agent:read_rp_ready
	wire          axi_ad9144_dma_s_axi_agent_read_rp_startofpacket;                                                // axi_ad9144_dma_s_axi_agent:read_rp_startofpacket -> agent_pipeline_019:in_startofpacket
	wire          axi_ad9144_dma_s_axi_agent_read_rp_endofpacket;                                                  // axi_ad9144_dma_s_axi_agent:read_rp_endofpacket -> agent_pipeline_019:in_endofpacket
	wire          agent_pipeline_019_source0_valid;                                                                // agent_pipeline_019:out_valid -> router_017:sink_valid
	wire  [129:0] agent_pipeline_019_source0_data;                                                                 // agent_pipeline_019:out_data -> router_017:sink_data
	wire          agent_pipeline_019_source0_ready;                                                                // router_017:sink_ready -> agent_pipeline_019:out_ready
	wire          agent_pipeline_019_source0_startofpacket;                                                        // agent_pipeline_019:out_startofpacket -> router_017:sink_startofpacket
	wire          agent_pipeline_019_source0_endofpacket;                                                          // agent_pipeline_019:out_endofpacket -> router_017:sink_endofpacket
	wire          cmd_mux_010_src_valid;                                                                           // cmd_mux_010:src_valid -> agent_pipeline_020:in_valid
	wire  [129:0] cmd_mux_010_src_data;                                                                            // cmd_mux_010:src_data -> agent_pipeline_020:in_data
	wire          cmd_mux_010_src_ready;                                                                           // agent_pipeline_020:in_ready -> cmd_mux_010:src_ready
	wire   [44:0] cmd_mux_010_src_channel;                                                                         // cmd_mux_010:src_channel -> agent_pipeline_020:in_channel
	wire          cmd_mux_010_src_startofpacket;                                                                   // cmd_mux_010:src_startofpacket -> agent_pipeline_020:in_startofpacket
	wire          cmd_mux_010_src_endofpacket;                                                                     // cmd_mux_010:src_endofpacket -> agent_pipeline_020:in_endofpacket
	wire          agent_pipeline_020_source0_valid;                                                                // agent_pipeline_020:out_valid -> axi_ad9144_core_s_axi_agent:write_cp_valid
	wire  [129:0] agent_pipeline_020_source0_data;                                                                 // agent_pipeline_020:out_data -> axi_ad9144_core_s_axi_agent:write_cp_data
	wire          agent_pipeline_020_source0_ready;                                                                // axi_ad9144_core_s_axi_agent:write_cp_ready -> agent_pipeline_020:out_ready
	wire   [44:0] agent_pipeline_020_source0_channel;                                                              // agent_pipeline_020:out_channel -> axi_ad9144_core_s_axi_agent:write_cp_channel
	wire          agent_pipeline_020_source0_startofpacket;                                                        // agent_pipeline_020:out_startofpacket -> axi_ad9144_core_s_axi_agent:write_cp_startofpacket
	wire          agent_pipeline_020_source0_endofpacket;                                                          // agent_pipeline_020:out_endofpacket -> axi_ad9144_core_s_axi_agent:write_cp_endofpacket
	wire          cmd_mux_011_src_valid;                                                                           // cmd_mux_011:src_valid -> agent_pipeline_021:in_valid
	wire  [129:0] cmd_mux_011_src_data;                                                                            // cmd_mux_011:src_data -> agent_pipeline_021:in_data
	wire          cmd_mux_011_src_ready;                                                                           // agent_pipeline_021:in_ready -> cmd_mux_011:src_ready
	wire   [44:0] cmd_mux_011_src_channel;                                                                         // cmd_mux_011:src_channel -> agent_pipeline_021:in_channel
	wire          cmd_mux_011_src_startofpacket;                                                                   // cmd_mux_011:src_startofpacket -> agent_pipeline_021:in_startofpacket
	wire          cmd_mux_011_src_endofpacket;                                                                     // cmd_mux_011:src_endofpacket -> agent_pipeline_021:in_endofpacket
	wire          agent_pipeline_021_source0_valid;                                                                // agent_pipeline_021:out_valid -> axi_ad9144_core_s_axi_agent:read_cp_valid
	wire  [129:0] agent_pipeline_021_source0_data;                                                                 // agent_pipeline_021:out_data -> axi_ad9144_core_s_axi_agent:read_cp_data
	wire          agent_pipeline_021_source0_ready;                                                                // axi_ad9144_core_s_axi_agent:read_cp_ready -> agent_pipeline_021:out_ready
	wire   [44:0] agent_pipeline_021_source0_channel;                                                              // agent_pipeline_021:out_channel -> axi_ad9144_core_s_axi_agent:read_cp_channel
	wire          agent_pipeline_021_source0_startofpacket;                                                        // agent_pipeline_021:out_startofpacket -> axi_ad9144_core_s_axi_agent:read_cp_startofpacket
	wire          agent_pipeline_021_source0_endofpacket;                                                          // agent_pipeline_021:out_endofpacket -> axi_ad9144_core_s_axi_agent:read_cp_endofpacket
	wire          axi_ad9144_core_s_axi_agent_write_rp_valid;                                                      // axi_ad9144_core_s_axi_agent:write_rp_valid -> agent_pipeline_022:in_valid
	wire  [129:0] axi_ad9144_core_s_axi_agent_write_rp_data;                                                       // axi_ad9144_core_s_axi_agent:write_rp_data -> agent_pipeline_022:in_data
	wire          axi_ad9144_core_s_axi_agent_write_rp_ready;                                                      // agent_pipeline_022:in_ready -> axi_ad9144_core_s_axi_agent:write_rp_ready
	wire          axi_ad9144_core_s_axi_agent_write_rp_startofpacket;                                              // axi_ad9144_core_s_axi_agent:write_rp_startofpacket -> agent_pipeline_022:in_startofpacket
	wire          axi_ad9144_core_s_axi_agent_write_rp_endofpacket;                                                // axi_ad9144_core_s_axi_agent:write_rp_endofpacket -> agent_pipeline_022:in_endofpacket
	wire          agent_pipeline_022_source0_valid;                                                                // agent_pipeline_022:out_valid -> router_018:sink_valid
	wire  [129:0] agent_pipeline_022_source0_data;                                                                 // agent_pipeline_022:out_data -> router_018:sink_data
	wire          agent_pipeline_022_source0_ready;                                                                // router_018:sink_ready -> agent_pipeline_022:out_ready
	wire          agent_pipeline_022_source0_startofpacket;                                                        // agent_pipeline_022:out_startofpacket -> router_018:sink_startofpacket
	wire          agent_pipeline_022_source0_endofpacket;                                                          // agent_pipeline_022:out_endofpacket -> router_018:sink_endofpacket
	wire          axi_ad9144_core_s_axi_agent_read_rp_valid;                                                       // axi_ad9144_core_s_axi_agent:read_rp_valid -> agent_pipeline_023:in_valid
	wire  [129:0] axi_ad9144_core_s_axi_agent_read_rp_data;                                                        // axi_ad9144_core_s_axi_agent:read_rp_data -> agent_pipeline_023:in_data
	wire          axi_ad9144_core_s_axi_agent_read_rp_ready;                                                       // agent_pipeline_023:in_ready -> axi_ad9144_core_s_axi_agent:read_rp_ready
	wire          axi_ad9144_core_s_axi_agent_read_rp_startofpacket;                                               // axi_ad9144_core_s_axi_agent:read_rp_startofpacket -> agent_pipeline_023:in_startofpacket
	wire          axi_ad9144_core_s_axi_agent_read_rp_endofpacket;                                                 // axi_ad9144_core_s_axi_agent:read_rp_endofpacket -> agent_pipeline_023:in_endofpacket
	wire          agent_pipeline_023_source0_valid;                                                                // agent_pipeline_023:out_valid -> router_019:sink_valid
	wire  [129:0] agent_pipeline_023_source0_data;                                                                 // agent_pipeline_023:out_data -> router_019:sink_data
	wire          agent_pipeline_023_source0_ready;                                                                // router_019:sink_ready -> agent_pipeline_023:out_ready
	wire          agent_pipeline_023_source0_startofpacket;                                                        // agent_pipeline_023:out_startofpacket -> router_019:sink_startofpacket
	wire          agent_pipeline_023_source0_endofpacket;                                                          // agent_pipeline_023:out_endofpacket -> router_019:sink_endofpacket
	wire          cmd_mux_012_src_valid;                                                                           // cmd_mux_012:src_valid -> agent_pipeline_024:in_valid
	wire  [129:0] cmd_mux_012_src_data;                                                                            // cmd_mux_012:src_data -> agent_pipeline_024:in_data
	wire          cmd_mux_012_src_ready;                                                                           // agent_pipeline_024:in_ready -> cmd_mux_012:src_ready
	wire   [44:0] cmd_mux_012_src_channel;                                                                         // cmd_mux_012:src_channel -> agent_pipeline_024:in_channel
	wire          cmd_mux_012_src_startofpacket;                                                                   // cmd_mux_012:src_startofpacket -> agent_pipeline_024:in_startofpacket
	wire          cmd_mux_012_src_endofpacket;                                                                     // cmd_mux_012:src_endofpacket -> agent_pipeline_024:in_endofpacket
	wire          agent_pipeline_024_source0_valid;                                                                // agent_pipeline_024:out_valid -> axi_ad9680_dma_s_axi_agent:write_cp_valid
	wire  [129:0] agent_pipeline_024_source0_data;                                                                 // agent_pipeline_024:out_data -> axi_ad9680_dma_s_axi_agent:write_cp_data
	wire          agent_pipeline_024_source0_ready;                                                                // axi_ad9680_dma_s_axi_agent:write_cp_ready -> agent_pipeline_024:out_ready
	wire   [44:0] agent_pipeline_024_source0_channel;                                                              // agent_pipeline_024:out_channel -> axi_ad9680_dma_s_axi_agent:write_cp_channel
	wire          agent_pipeline_024_source0_startofpacket;                                                        // agent_pipeline_024:out_startofpacket -> axi_ad9680_dma_s_axi_agent:write_cp_startofpacket
	wire          agent_pipeline_024_source0_endofpacket;                                                          // agent_pipeline_024:out_endofpacket -> axi_ad9680_dma_s_axi_agent:write_cp_endofpacket
	wire          cmd_mux_013_src_valid;                                                                           // cmd_mux_013:src_valid -> agent_pipeline_025:in_valid
	wire  [129:0] cmd_mux_013_src_data;                                                                            // cmd_mux_013:src_data -> agent_pipeline_025:in_data
	wire          cmd_mux_013_src_ready;                                                                           // agent_pipeline_025:in_ready -> cmd_mux_013:src_ready
	wire   [44:0] cmd_mux_013_src_channel;                                                                         // cmd_mux_013:src_channel -> agent_pipeline_025:in_channel
	wire          cmd_mux_013_src_startofpacket;                                                                   // cmd_mux_013:src_startofpacket -> agent_pipeline_025:in_startofpacket
	wire          cmd_mux_013_src_endofpacket;                                                                     // cmd_mux_013:src_endofpacket -> agent_pipeline_025:in_endofpacket
	wire          agent_pipeline_025_source0_valid;                                                                // agent_pipeline_025:out_valid -> axi_ad9680_dma_s_axi_agent:read_cp_valid
	wire  [129:0] agent_pipeline_025_source0_data;                                                                 // agent_pipeline_025:out_data -> axi_ad9680_dma_s_axi_agent:read_cp_data
	wire          agent_pipeline_025_source0_ready;                                                                // axi_ad9680_dma_s_axi_agent:read_cp_ready -> agent_pipeline_025:out_ready
	wire   [44:0] agent_pipeline_025_source0_channel;                                                              // agent_pipeline_025:out_channel -> axi_ad9680_dma_s_axi_agent:read_cp_channel
	wire          agent_pipeline_025_source0_startofpacket;                                                        // agent_pipeline_025:out_startofpacket -> axi_ad9680_dma_s_axi_agent:read_cp_startofpacket
	wire          agent_pipeline_025_source0_endofpacket;                                                          // agent_pipeline_025:out_endofpacket -> axi_ad9680_dma_s_axi_agent:read_cp_endofpacket
	wire          axi_ad9680_dma_s_axi_agent_write_rp_valid;                                                       // axi_ad9680_dma_s_axi_agent:write_rp_valid -> agent_pipeline_026:in_valid
	wire  [129:0] axi_ad9680_dma_s_axi_agent_write_rp_data;                                                        // axi_ad9680_dma_s_axi_agent:write_rp_data -> agent_pipeline_026:in_data
	wire          axi_ad9680_dma_s_axi_agent_write_rp_ready;                                                       // agent_pipeline_026:in_ready -> axi_ad9680_dma_s_axi_agent:write_rp_ready
	wire          axi_ad9680_dma_s_axi_agent_write_rp_startofpacket;                                               // axi_ad9680_dma_s_axi_agent:write_rp_startofpacket -> agent_pipeline_026:in_startofpacket
	wire          axi_ad9680_dma_s_axi_agent_write_rp_endofpacket;                                                 // axi_ad9680_dma_s_axi_agent:write_rp_endofpacket -> agent_pipeline_026:in_endofpacket
	wire          agent_pipeline_026_source0_valid;                                                                // agent_pipeline_026:out_valid -> router_020:sink_valid
	wire  [129:0] agent_pipeline_026_source0_data;                                                                 // agent_pipeline_026:out_data -> router_020:sink_data
	wire          agent_pipeline_026_source0_ready;                                                                // router_020:sink_ready -> agent_pipeline_026:out_ready
	wire          agent_pipeline_026_source0_startofpacket;                                                        // agent_pipeline_026:out_startofpacket -> router_020:sink_startofpacket
	wire          agent_pipeline_026_source0_endofpacket;                                                          // agent_pipeline_026:out_endofpacket -> router_020:sink_endofpacket
	wire          axi_ad9680_dma_s_axi_agent_read_rp_valid;                                                        // axi_ad9680_dma_s_axi_agent:read_rp_valid -> agent_pipeline_027:in_valid
	wire  [129:0] axi_ad9680_dma_s_axi_agent_read_rp_data;                                                         // axi_ad9680_dma_s_axi_agent:read_rp_data -> agent_pipeline_027:in_data
	wire          axi_ad9680_dma_s_axi_agent_read_rp_ready;                                                        // agent_pipeline_027:in_ready -> axi_ad9680_dma_s_axi_agent:read_rp_ready
	wire          axi_ad9680_dma_s_axi_agent_read_rp_startofpacket;                                                // axi_ad9680_dma_s_axi_agent:read_rp_startofpacket -> agent_pipeline_027:in_startofpacket
	wire          axi_ad9680_dma_s_axi_agent_read_rp_endofpacket;                                                  // axi_ad9680_dma_s_axi_agent:read_rp_endofpacket -> agent_pipeline_027:in_endofpacket
	wire          agent_pipeline_027_source0_valid;                                                                // agent_pipeline_027:out_valid -> router_021:sink_valid
	wire  [129:0] agent_pipeline_027_source0_data;                                                                 // agent_pipeline_027:out_data -> router_021:sink_data
	wire          agent_pipeline_027_source0_ready;                                                                // router_021:sink_ready -> agent_pipeline_027:out_ready
	wire          agent_pipeline_027_source0_startofpacket;                                                        // agent_pipeline_027:out_startofpacket -> router_021:sink_startofpacket
	wire          agent_pipeline_027_source0_endofpacket;                                                          // agent_pipeline_027:out_endofpacket -> router_021:sink_endofpacket
	wire          cmd_mux_014_src_valid;                                                                           // cmd_mux_014:src_valid -> agent_pipeline_028:in_valid
	wire  [129:0] cmd_mux_014_src_data;                                                                            // cmd_mux_014:src_data -> agent_pipeline_028:in_data
	wire          cmd_mux_014_src_ready;                                                                           // agent_pipeline_028:in_ready -> cmd_mux_014:src_ready
	wire   [44:0] cmd_mux_014_src_channel;                                                                         // cmd_mux_014:src_channel -> agent_pipeline_028:in_channel
	wire          cmd_mux_014_src_startofpacket;                                                                   // cmd_mux_014:src_startofpacket -> agent_pipeline_028:in_startofpacket
	wire          cmd_mux_014_src_endofpacket;                                                                     // cmd_mux_014:src_endofpacket -> agent_pipeline_028:in_endofpacket
	wire          agent_pipeline_028_source0_valid;                                                                // agent_pipeline_028:out_valid -> axi_ad9680_core_s_axi_agent:write_cp_valid
	wire  [129:0] agent_pipeline_028_source0_data;                                                                 // agent_pipeline_028:out_data -> axi_ad9680_core_s_axi_agent:write_cp_data
	wire          agent_pipeline_028_source0_ready;                                                                // axi_ad9680_core_s_axi_agent:write_cp_ready -> agent_pipeline_028:out_ready
	wire   [44:0] agent_pipeline_028_source0_channel;                                                              // agent_pipeline_028:out_channel -> axi_ad9680_core_s_axi_agent:write_cp_channel
	wire          agent_pipeline_028_source0_startofpacket;                                                        // agent_pipeline_028:out_startofpacket -> axi_ad9680_core_s_axi_agent:write_cp_startofpacket
	wire          agent_pipeline_028_source0_endofpacket;                                                          // agent_pipeline_028:out_endofpacket -> axi_ad9680_core_s_axi_agent:write_cp_endofpacket
	wire          cmd_mux_015_src_valid;                                                                           // cmd_mux_015:src_valid -> agent_pipeline_029:in_valid
	wire  [129:0] cmd_mux_015_src_data;                                                                            // cmd_mux_015:src_data -> agent_pipeline_029:in_data
	wire          cmd_mux_015_src_ready;                                                                           // agent_pipeline_029:in_ready -> cmd_mux_015:src_ready
	wire   [44:0] cmd_mux_015_src_channel;                                                                         // cmd_mux_015:src_channel -> agent_pipeline_029:in_channel
	wire          cmd_mux_015_src_startofpacket;                                                                   // cmd_mux_015:src_startofpacket -> agent_pipeline_029:in_startofpacket
	wire          cmd_mux_015_src_endofpacket;                                                                     // cmd_mux_015:src_endofpacket -> agent_pipeline_029:in_endofpacket
	wire          agent_pipeline_029_source0_valid;                                                                // agent_pipeline_029:out_valid -> axi_ad9680_core_s_axi_agent:read_cp_valid
	wire  [129:0] agent_pipeline_029_source0_data;                                                                 // agent_pipeline_029:out_data -> axi_ad9680_core_s_axi_agent:read_cp_data
	wire          agent_pipeline_029_source0_ready;                                                                // axi_ad9680_core_s_axi_agent:read_cp_ready -> agent_pipeline_029:out_ready
	wire   [44:0] agent_pipeline_029_source0_channel;                                                              // agent_pipeline_029:out_channel -> axi_ad9680_core_s_axi_agent:read_cp_channel
	wire          agent_pipeline_029_source0_startofpacket;                                                        // agent_pipeline_029:out_startofpacket -> axi_ad9680_core_s_axi_agent:read_cp_startofpacket
	wire          agent_pipeline_029_source0_endofpacket;                                                          // agent_pipeline_029:out_endofpacket -> axi_ad9680_core_s_axi_agent:read_cp_endofpacket
	wire          axi_ad9680_core_s_axi_agent_write_rp_valid;                                                      // axi_ad9680_core_s_axi_agent:write_rp_valid -> agent_pipeline_030:in_valid
	wire  [129:0] axi_ad9680_core_s_axi_agent_write_rp_data;                                                       // axi_ad9680_core_s_axi_agent:write_rp_data -> agent_pipeline_030:in_data
	wire          axi_ad9680_core_s_axi_agent_write_rp_ready;                                                      // agent_pipeline_030:in_ready -> axi_ad9680_core_s_axi_agent:write_rp_ready
	wire          axi_ad9680_core_s_axi_agent_write_rp_startofpacket;                                              // axi_ad9680_core_s_axi_agent:write_rp_startofpacket -> agent_pipeline_030:in_startofpacket
	wire          axi_ad9680_core_s_axi_agent_write_rp_endofpacket;                                                // axi_ad9680_core_s_axi_agent:write_rp_endofpacket -> agent_pipeline_030:in_endofpacket
	wire          agent_pipeline_030_source0_valid;                                                                // agent_pipeline_030:out_valid -> router_022:sink_valid
	wire  [129:0] agent_pipeline_030_source0_data;                                                                 // agent_pipeline_030:out_data -> router_022:sink_data
	wire          agent_pipeline_030_source0_ready;                                                                // router_022:sink_ready -> agent_pipeline_030:out_ready
	wire          agent_pipeline_030_source0_startofpacket;                                                        // agent_pipeline_030:out_startofpacket -> router_022:sink_startofpacket
	wire          agent_pipeline_030_source0_endofpacket;                                                          // agent_pipeline_030:out_endofpacket -> router_022:sink_endofpacket
	wire          axi_ad9680_core_s_axi_agent_read_rp_valid;                                                       // axi_ad9680_core_s_axi_agent:read_rp_valid -> agent_pipeline_031:in_valid
	wire  [129:0] axi_ad9680_core_s_axi_agent_read_rp_data;                                                        // axi_ad9680_core_s_axi_agent:read_rp_data -> agent_pipeline_031:in_data
	wire          axi_ad9680_core_s_axi_agent_read_rp_ready;                                                       // agent_pipeline_031:in_ready -> axi_ad9680_core_s_axi_agent:read_rp_ready
	wire          axi_ad9680_core_s_axi_agent_read_rp_startofpacket;                                               // axi_ad9680_core_s_axi_agent:read_rp_startofpacket -> agent_pipeline_031:in_startofpacket
	wire          axi_ad9680_core_s_axi_agent_read_rp_endofpacket;                                                 // axi_ad9680_core_s_axi_agent:read_rp_endofpacket -> agent_pipeline_031:in_endofpacket
	wire          agent_pipeline_031_source0_valid;                                                                // agent_pipeline_031:out_valid -> router_023:sink_valid
	wire  [129:0] agent_pipeline_031_source0_data;                                                                 // agent_pipeline_031:out_data -> router_023:sink_data
	wire          agent_pipeline_031_source0_ready;                                                                // router_023:sink_ready -> agent_pipeline_031:out_ready
	wire          agent_pipeline_031_source0_startofpacket;                                                        // agent_pipeline_031:out_startofpacket -> router_023:sink_startofpacket
	wire          agent_pipeline_031_source0_endofpacket;                                                          // agent_pipeline_031:out_endofpacket -> router_023:sink_endofpacket
	wire          cmd_mux_016_src_valid;                                                                           // cmd_mux_016:src_valid -> agent_pipeline_032:in_valid
	wire  [129:0] cmd_mux_016_src_data;                                                                            // cmd_mux_016:src_data -> agent_pipeline_032:in_data
	wire          cmd_mux_016_src_ready;                                                                           // agent_pipeline_032:in_ready -> cmd_mux_016:src_ready
	wire   [44:0] cmd_mux_016_src_channel;                                                                         // cmd_mux_016:src_channel -> agent_pipeline_032:in_channel
	wire          cmd_mux_016_src_startofpacket;                                                                   // cmd_mux_016:src_startofpacket -> agent_pipeline_032:in_startofpacket
	wire          cmd_mux_016_src_endofpacket;                                                                     // cmd_mux_016:src_endofpacket -> agent_pipeline_032:in_endofpacket
	wire          agent_pipeline_032_source0_valid;                                                                // agent_pipeline_032:out_valid -> sys_uart_avalon_jtag_slave_agent:cp_valid
	wire  [129:0] agent_pipeline_032_source0_data;                                                                 // agent_pipeline_032:out_data -> sys_uart_avalon_jtag_slave_agent:cp_data
	wire          agent_pipeline_032_source0_ready;                                                                // sys_uart_avalon_jtag_slave_agent:cp_ready -> agent_pipeline_032:out_ready
	wire   [44:0] agent_pipeline_032_source0_channel;                                                              // agent_pipeline_032:out_channel -> sys_uart_avalon_jtag_slave_agent:cp_channel
	wire          agent_pipeline_032_source0_startofpacket;                                                        // agent_pipeline_032:out_startofpacket -> sys_uart_avalon_jtag_slave_agent:cp_startofpacket
	wire          agent_pipeline_032_source0_endofpacket;                                                          // agent_pipeline_032:out_endofpacket -> sys_uart_avalon_jtag_slave_agent:cp_endofpacket
	wire          sys_uart_avalon_jtag_slave_agent_rp_valid;                                                       // sys_uart_avalon_jtag_slave_agent:rp_valid -> agent_pipeline_033:in_valid
	wire  [129:0] sys_uart_avalon_jtag_slave_agent_rp_data;                                                        // sys_uart_avalon_jtag_slave_agent:rp_data -> agent_pipeline_033:in_data
	wire          sys_uart_avalon_jtag_slave_agent_rp_ready;                                                       // agent_pipeline_033:in_ready -> sys_uart_avalon_jtag_slave_agent:rp_ready
	wire          sys_uart_avalon_jtag_slave_agent_rp_startofpacket;                                               // sys_uart_avalon_jtag_slave_agent:rp_startofpacket -> agent_pipeline_033:in_startofpacket
	wire          sys_uart_avalon_jtag_slave_agent_rp_endofpacket;                                                 // sys_uart_avalon_jtag_slave_agent:rp_endofpacket -> agent_pipeline_033:in_endofpacket
	wire          agent_pipeline_033_source0_valid;                                                                // agent_pipeline_033:out_valid -> router_024:sink_valid
	wire  [129:0] agent_pipeline_033_source0_data;                                                                 // agent_pipeline_033:out_data -> router_024:sink_data
	wire          agent_pipeline_033_source0_ready;                                                                // router_024:sink_ready -> agent_pipeline_033:out_ready
	wire          agent_pipeline_033_source0_startofpacket;                                                        // agent_pipeline_033:out_startofpacket -> router_024:sink_startofpacket
	wire          agent_pipeline_033_source0_endofpacket;                                                          // agent_pipeline_033:out_endofpacket -> router_024:sink_endofpacket
	wire          cmd_mux_017_src_valid;                                                                           // cmd_mux_017:src_valid -> agent_pipeline_034:in_valid
	wire  [129:0] cmd_mux_017_src_data;                                                                            // cmd_mux_017:src_data -> agent_pipeline_034:in_data
	wire          cmd_mux_017_src_ready;                                                                           // agent_pipeline_034:in_ready -> cmd_mux_017:src_ready
	wire   [44:0] cmd_mux_017_src_channel;                                                                         // cmd_mux_017:src_channel -> agent_pipeline_034:in_channel
	wire          cmd_mux_017_src_startofpacket;                                                                   // cmd_mux_017:src_startofpacket -> agent_pipeline_034:in_startofpacket
	wire          cmd_mux_017_src_endofpacket;                                                                     // cmd_mux_017:src_endofpacket -> agent_pipeline_034:in_endofpacket
	wire          agent_pipeline_034_source0_valid;                                                                // agent_pipeline_034:out_valid -> sys_ethernet_control_port_agent:cp_valid
	wire  [129:0] agent_pipeline_034_source0_data;                                                                 // agent_pipeline_034:out_data -> sys_ethernet_control_port_agent:cp_data
	wire          agent_pipeline_034_source0_ready;                                                                // sys_ethernet_control_port_agent:cp_ready -> agent_pipeline_034:out_ready
	wire   [44:0] agent_pipeline_034_source0_channel;                                                              // agent_pipeline_034:out_channel -> sys_ethernet_control_port_agent:cp_channel
	wire          agent_pipeline_034_source0_startofpacket;                                                        // agent_pipeline_034:out_startofpacket -> sys_ethernet_control_port_agent:cp_startofpacket
	wire          agent_pipeline_034_source0_endofpacket;                                                          // agent_pipeline_034:out_endofpacket -> sys_ethernet_control_port_agent:cp_endofpacket
	wire          sys_ethernet_control_port_agent_rp_valid;                                                        // sys_ethernet_control_port_agent:rp_valid -> agent_pipeline_035:in_valid
	wire  [129:0] sys_ethernet_control_port_agent_rp_data;                                                         // sys_ethernet_control_port_agent:rp_data -> agent_pipeline_035:in_data
	wire          sys_ethernet_control_port_agent_rp_ready;                                                        // agent_pipeline_035:in_ready -> sys_ethernet_control_port_agent:rp_ready
	wire          sys_ethernet_control_port_agent_rp_startofpacket;                                                // sys_ethernet_control_port_agent:rp_startofpacket -> agent_pipeline_035:in_startofpacket
	wire          sys_ethernet_control_port_agent_rp_endofpacket;                                                  // sys_ethernet_control_port_agent:rp_endofpacket -> agent_pipeline_035:in_endofpacket
	wire          agent_pipeline_035_source0_valid;                                                                // agent_pipeline_035:out_valid -> router_025:sink_valid
	wire  [129:0] agent_pipeline_035_source0_data;                                                                 // agent_pipeline_035:out_data -> router_025:sink_data
	wire          agent_pipeline_035_source0_ready;                                                                // router_025:sink_ready -> agent_pipeline_035:out_ready
	wire          agent_pipeline_035_source0_startofpacket;                                                        // agent_pipeline_035:out_startofpacket -> router_025:sink_startofpacket
	wire          agent_pipeline_035_source0_endofpacket;                                                          // agent_pipeline_035:out_endofpacket -> router_025:sink_endofpacket
	wire          cmd_mux_018_src_valid;                                                                           // cmd_mux_018:src_valid -> agent_pipeline_036:in_valid
	wire  [129:0] cmd_mux_018_src_data;                                                                            // cmd_mux_018:src_data -> agent_pipeline_036:in_data
	wire          cmd_mux_018_src_ready;                                                                           // agent_pipeline_036:in_ready -> cmd_mux_018:src_ready
	wire   [44:0] cmd_mux_018_src_channel;                                                                         // cmd_mux_018:src_channel -> agent_pipeline_036:in_channel
	wire          cmd_mux_018_src_startofpacket;                                                                   // cmd_mux_018:src_startofpacket -> agent_pipeline_036:in_startofpacket
	wire          cmd_mux_018_src_endofpacket;                                                                     // cmd_mux_018:src_endofpacket -> agent_pipeline_036:in_endofpacket
	wire          agent_pipeline_036_source0_valid;                                                                // agent_pipeline_036:out_valid -> sys_id_control_slave_agent:cp_valid
	wire  [129:0] agent_pipeline_036_source0_data;                                                                 // agent_pipeline_036:out_data -> sys_id_control_slave_agent:cp_data
	wire          agent_pipeline_036_source0_ready;                                                                // sys_id_control_slave_agent:cp_ready -> agent_pipeline_036:out_ready
	wire   [44:0] agent_pipeline_036_source0_channel;                                                              // agent_pipeline_036:out_channel -> sys_id_control_slave_agent:cp_channel
	wire          agent_pipeline_036_source0_startofpacket;                                                        // agent_pipeline_036:out_startofpacket -> sys_id_control_slave_agent:cp_startofpacket
	wire          agent_pipeline_036_source0_endofpacket;                                                          // agent_pipeline_036:out_endofpacket -> sys_id_control_slave_agent:cp_endofpacket
	wire          sys_id_control_slave_agent_rp_valid;                                                             // sys_id_control_slave_agent:rp_valid -> agent_pipeline_037:in_valid
	wire  [129:0] sys_id_control_slave_agent_rp_data;                                                              // sys_id_control_slave_agent:rp_data -> agent_pipeline_037:in_data
	wire          sys_id_control_slave_agent_rp_ready;                                                             // agent_pipeline_037:in_ready -> sys_id_control_slave_agent:rp_ready
	wire          sys_id_control_slave_agent_rp_startofpacket;                                                     // sys_id_control_slave_agent:rp_startofpacket -> agent_pipeline_037:in_startofpacket
	wire          sys_id_control_slave_agent_rp_endofpacket;                                                       // sys_id_control_slave_agent:rp_endofpacket -> agent_pipeline_037:in_endofpacket
	wire          agent_pipeline_037_source0_valid;                                                                // agent_pipeline_037:out_valid -> router_026:sink_valid
	wire  [129:0] agent_pipeline_037_source0_data;                                                                 // agent_pipeline_037:out_data -> router_026:sink_data
	wire          agent_pipeline_037_source0_ready;                                                                // router_026:sink_ready -> agent_pipeline_037:out_ready
	wire          agent_pipeline_037_source0_startofpacket;                                                        // agent_pipeline_037:out_startofpacket -> router_026:sink_startofpacket
	wire          agent_pipeline_037_source0_endofpacket;                                                          // agent_pipeline_037:out_endofpacket -> router_026:sink_endofpacket
	wire          cmd_mux_019_src_valid;                                                                           // cmd_mux_019:src_valid -> agent_pipeline_038:in_valid
	wire  [129:0] cmd_mux_019_src_data;                                                                            // cmd_mux_019:src_data -> agent_pipeline_038:in_data
	wire          cmd_mux_019_src_ready;                                                                           // agent_pipeline_038:in_ready -> cmd_mux_019:src_ready
	wire   [44:0] cmd_mux_019_src_channel;                                                                         // cmd_mux_019:src_channel -> agent_pipeline_038:in_channel
	wire          cmd_mux_019_src_startofpacket;                                                                   // cmd_mux_019:src_startofpacket -> agent_pipeline_038:in_startofpacket
	wire          cmd_mux_019_src_endofpacket;                                                                     // cmd_mux_019:src_endofpacket -> agent_pipeline_038:in_endofpacket
	wire          agent_pipeline_038_source0_valid;                                                                // agent_pipeline_038:out_valid -> sys_ethernet_dma_rx_csr_agent:cp_valid
	wire  [129:0] agent_pipeline_038_source0_data;                                                                 // agent_pipeline_038:out_data -> sys_ethernet_dma_rx_csr_agent:cp_data
	wire          agent_pipeline_038_source0_ready;                                                                // sys_ethernet_dma_rx_csr_agent:cp_ready -> agent_pipeline_038:out_ready
	wire   [44:0] agent_pipeline_038_source0_channel;                                                              // agent_pipeline_038:out_channel -> sys_ethernet_dma_rx_csr_agent:cp_channel
	wire          agent_pipeline_038_source0_startofpacket;                                                        // agent_pipeline_038:out_startofpacket -> sys_ethernet_dma_rx_csr_agent:cp_startofpacket
	wire          agent_pipeline_038_source0_endofpacket;                                                          // agent_pipeline_038:out_endofpacket -> sys_ethernet_dma_rx_csr_agent:cp_endofpacket
	wire          sys_ethernet_dma_rx_csr_agent_rp_valid;                                                          // sys_ethernet_dma_rx_csr_agent:rp_valid -> agent_pipeline_039:in_valid
	wire  [129:0] sys_ethernet_dma_rx_csr_agent_rp_data;                                                           // sys_ethernet_dma_rx_csr_agent:rp_data -> agent_pipeline_039:in_data
	wire          sys_ethernet_dma_rx_csr_agent_rp_ready;                                                          // agent_pipeline_039:in_ready -> sys_ethernet_dma_rx_csr_agent:rp_ready
	wire          sys_ethernet_dma_rx_csr_agent_rp_startofpacket;                                                  // sys_ethernet_dma_rx_csr_agent:rp_startofpacket -> agent_pipeline_039:in_startofpacket
	wire          sys_ethernet_dma_rx_csr_agent_rp_endofpacket;                                                    // sys_ethernet_dma_rx_csr_agent:rp_endofpacket -> agent_pipeline_039:in_endofpacket
	wire          agent_pipeline_039_source0_valid;                                                                // agent_pipeline_039:out_valid -> router_027:sink_valid
	wire  [129:0] agent_pipeline_039_source0_data;                                                                 // agent_pipeline_039:out_data -> router_027:sink_data
	wire          agent_pipeline_039_source0_ready;                                                                // router_027:sink_ready -> agent_pipeline_039:out_ready
	wire          agent_pipeline_039_source0_startofpacket;                                                        // agent_pipeline_039:out_startofpacket -> router_027:sink_startofpacket
	wire          agent_pipeline_039_source0_endofpacket;                                                          // agent_pipeline_039:out_endofpacket -> router_027:sink_endofpacket
	wire          cmd_mux_020_src_valid;                                                                           // cmd_mux_020:src_valid -> agent_pipeline_040:in_valid
	wire  [129:0] cmd_mux_020_src_data;                                                                            // cmd_mux_020:src_data -> agent_pipeline_040:in_data
	wire          cmd_mux_020_src_ready;                                                                           // agent_pipeline_040:in_ready -> cmd_mux_020:src_ready
	wire   [44:0] cmd_mux_020_src_channel;                                                                         // cmd_mux_020:src_channel -> agent_pipeline_040:in_channel
	wire          cmd_mux_020_src_startofpacket;                                                                   // cmd_mux_020:src_startofpacket -> agent_pipeline_040:in_startofpacket
	wire          cmd_mux_020_src_endofpacket;                                                                     // cmd_mux_020:src_endofpacket -> agent_pipeline_040:in_endofpacket
	wire          agent_pipeline_040_source0_valid;                                                                // agent_pipeline_040:out_valid -> sys_ethernet_dma_tx_csr_agent:cp_valid
	wire  [129:0] agent_pipeline_040_source0_data;                                                                 // agent_pipeline_040:out_data -> sys_ethernet_dma_tx_csr_agent:cp_data
	wire          agent_pipeline_040_source0_ready;                                                                // sys_ethernet_dma_tx_csr_agent:cp_ready -> agent_pipeline_040:out_ready
	wire   [44:0] agent_pipeline_040_source0_channel;                                                              // agent_pipeline_040:out_channel -> sys_ethernet_dma_tx_csr_agent:cp_channel
	wire          agent_pipeline_040_source0_startofpacket;                                                        // agent_pipeline_040:out_startofpacket -> sys_ethernet_dma_tx_csr_agent:cp_startofpacket
	wire          agent_pipeline_040_source0_endofpacket;                                                          // agent_pipeline_040:out_endofpacket -> sys_ethernet_dma_tx_csr_agent:cp_endofpacket
	wire          sys_ethernet_dma_tx_csr_agent_rp_valid;                                                          // sys_ethernet_dma_tx_csr_agent:rp_valid -> agent_pipeline_041:in_valid
	wire  [129:0] sys_ethernet_dma_tx_csr_agent_rp_data;                                                           // sys_ethernet_dma_tx_csr_agent:rp_data -> agent_pipeline_041:in_data
	wire          sys_ethernet_dma_tx_csr_agent_rp_ready;                                                          // agent_pipeline_041:in_ready -> sys_ethernet_dma_tx_csr_agent:rp_ready
	wire          sys_ethernet_dma_tx_csr_agent_rp_startofpacket;                                                  // sys_ethernet_dma_tx_csr_agent:rp_startofpacket -> agent_pipeline_041:in_startofpacket
	wire          sys_ethernet_dma_tx_csr_agent_rp_endofpacket;                                                    // sys_ethernet_dma_tx_csr_agent:rp_endofpacket -> agent_pipeline_041:in_endofpacket
	wire          agent_pipeline_041_source0_valid;                                                                // agent_pipeline_041:out_valid -> router_028:sink_valid
	wire  [129:0] agent_pipeline_041_source0_data;                                                                 // agent_pipeline_041:out_data -> router_028:sink_data
	wire          agent_pipeline_041_source0_ready;                                                                // router_028:sink_ready -> agent_pipeline_041:out_ready
	wire          agent_pipeline_041_source0_startofpacket;                                                        // agent_pipeline_041:out_startofpacket -> router_028:sink_startofpacket
	wire          agent_pipeline_041_source0_endofpacket;                                                          // agent_pipeline_041:out_endofpacket -> router_028:sink_endofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_burst_adapter_source0_valid;                                           // sys_ddr3_cntrl_ctrl_amm_0_burst_adapter:source0_valid -> agent_pipeline_042:in_valid
	wire  [669:0] sys_ddr3_cntrl_ctrl_amm_0_burst_adapter_source0_data;                                            // sys_ddr3_cntrl_ctrl_amm_0_burst_adapter:source0_data -> agent_pipeline_042:in_data
	wire          sys_ddr3_cntrl_ctrl_amm_0_burst_adapter_source0_ready;                                           // agent_pipeline_042:in_ready -> sys_ddr3_cntrl_ctrl_amm_0_burst_adapter:source0_ready
	wire   [44:0] sys_ddr3_cntrl_ctrl_amm_0_burst_adapter_source0_channel;                                         // sys_ddr3_cntrl_ctrl_amm_0_burst_adapter:source0_channel -> agent_pipeline_042:in_channel
	wire          sys_ddr3_cntrl_ctrl_amm_0_burst_adapter_source0_startofpacket;                                   // sys_ddr3_cntrl_ctrl_amm_0_burst_adapter:source0_startofpacket -> agent_pipeline_042:in_startofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_burst_adapter_source0_endofpacket;                                     // sys_ddr3_cntrl_ctrl_amm_0_burst_adapter:source0_endofpacket -> agent_pipeline_042:in_endofpacket
	wire          agent_pipeline_042_source0_valid;                                                                // agent_pipeline_042:out_valid -> sys_ddr3_cntrl_ctrl_amm_0_agent:cp_valid
	wire  [669:0] agent_pipeline_042_source0_data;                                                                 // agent_pipeline_042:out_data -> sys_ddr3_cntrl_ctrl_amm_0_agent:cp_data
	wire          agent_pipeline_042_source0_ready;                                                                // sys_ddr3_cntrl_ctrl_amm_0_agent:cp_ready -> agent_pipeline_042:out_ready
	wire   [44:0] agent_pipeline_042_source0_channel;                                                              // agent_pipeline_042:out_channel -> sys_ddr3_cntrl_ctrl_amm_0_agent:cp_channel
	wire          agent_pipeline_042_source0_startofpacket;                                                        // agent_pipeline_042:out_startofpacket -> sys_ddr3_cntrl_ctrl_amm_0_agent:cp_startofpacket
	wire          agent_pipeline_042_source0_endofpacket;                                                          // agent_pipeline_042:out_endofpacket -> sys_ddr3_cntrl_ctrl_amm_0_agent:cp_endofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_rp_valid;                                                        // sys_ddr3_cntrl_ctrl_amm_0_agent:rp_valid -> agent_pipeline_043:in_valid
	wire  [669:0] sys_ddr3_cntrl_ctrl_amm_0_agent_rp_data;                                                         // sys_ddr3_cntrl_ctrl_amm_0_agent:rp_data -> agent_pipeline_043:in_data
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_rp_ready;                                                        // agent_pipeline_043:in_ready -> sys_ddr3_cntrl_ctrl_amm_0_agent:rp_ready
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_rp_startofpacket;                                                // sys_ddr3_cntrl_ctrl_amm_0_agent:rp_startofpacket -> agent_pipeline_043:in_startofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_rp_endofpacket;                                                  // sys_ddr3_cntrl_ctrl_amm_0_agent:rp_endofpacket -> agent_pipeline_043:in_endofpacket
	wire          agent_pipeline_043_source0_valid;                                                                // agent_pipeline_043:out_valid -> router_029:sink_valid
	wire  [669:0] agent_pipeline_043_source0_data;                                                                 // agent_pipeline_043:out_data -> router_029:sink_data
	wire          agent_pipeline_043_source0_ready;                                                                // router_029:sink_ready -> agent_pipeline_043:out_ready
	wire          agent_pipeline_043_source0_startofpacket;                                                        // agent_pipeline_043:out_startofpacket -> router_029:sink_startofpacket
	wire          agent_pipeline_043_source0_endofpacket;                                                          // agent_pipeline_043:out_endofpacket -> router_029:sink_endofpacket
	wire          cmd_mux_022_src_valid;                                                                           // cmd_mux_022:src_valid -> agent_pipeline_044:in_valid
	wire  [129:0] cmd_mux_022_src_data;                                                                            // cmd_mux_022:src_data -> agent_pipeline_044:in_data
	wire          cmd_mux_022_src_ready;                                                                           // agent_pipeline_044:in_ready -> cmd_mux_022:src_ready
	wire   [44:0] cmd_mux_022_src_channel;                                                                         // cmd_mux_022:src_channel -> agent_pipeline_044:in_channel
	wire          cmd_mux_022_src_startofpacket;                                                                   // cmd_mux_022:src_startofpacket -> agent_pipeline_044:in_startofpacket
	wire          cmd_mux_022_src_endofpacket;                                                                     // cmd_mux_022:src_endofpacket -> agent_pipeline_044:in_endofpacket
	wire          agent_pipeline_044_source0_valid;                                                                // agent_pipeline_044:out_valid -> sys_cpu_debug_mem_slave_agent:cp_valid
	wire  [129:0] agent_pipeline_044_source0_data;                                                                 // agent_pipeline_044:out_data -> sys_cpu_debug_mem_slave_agent:cp_data
	wire          agent_pipeline_044_source0_ready;                                                                // sys_cpu_debug_mem_slave_agent:cp_ready -> agent_pipeline_044:out_ready
	wire   [44:0] agent_pipeline_044_source0_channel;                                                              // agent_pipeline_044:out_channel -> sys_cpu_debug_mem_slave_agent:cp_channel
	wire          agent_pipeline_044_source0_startofpacket;                                                        // agent_pipeline_044:out_startofpacket -> sys_cpu_debug_mem_slave_agent:cp_startofpacket
	wire          agent_pipeline_044_source0_endofpacket;                                                          // agent_pipeline_044:out_endofpacket -> sys_cpu_debug_mem_slave_agent:cp_endofpacket
	wire          sys_cpu_debug_mem_slave_agent_rp_valid;                                                          // sys_cpu_debug_mem_slave_agent:rp_valid -> agent_pipeline_045:in_valid
	wire  [129:0] sys_cpu_debug_mem_slave_agent_rp_data;                                                           // sys_cpu_debug_mem_slave_agent:rp_data -> agent_pipeline_045:in_data
	wire          sys_cpu_debug_mem_slave_agent_rp_ready;                                                          // agent_pipeline_045:in_ready -> sys_cpu_debug_mem_slave_agent:rp_ready
	wire          sys_cpu_debug_mem_slave_agent_rp_startofpacket;                                                  // sys_cpu_debug_mem_slave_agent:rp_startofpacket -> agent_pipeline_045:in_startofpacket
	wire          sys_cpu_debug_mem_slave_agent_rp_endofpacket;                                                    // sys_cpu_debug_mem_slave_agent:rp_endofpacket -> agent_pipeline_045:in_endofpacket
	wire          agent_pipeline_045_source0_valid;                                                                // agent_pipeline_045:out_valid -> router_030:sink_valid
	wire  [129:0] agent_pipeline_045_source0_data;                                                                 // agent_pipeline_045:out_data -> router_030:sink_data
	wire          agent_pipeline_045_source0_ready;                                                                // router_030:sink_ready -> agent_pipeline_045:out_ready
	wire          agent_pipeline_045_source0_startofpacket;                                                        // agent_pipeline_045:out_startofpacket -> router_030:sink_startofpacket
	wire          agent_pipeline_045_source0_endofpacket;                                                          // agent_pipeline_045:out_endofpacket -> router_030:sink_endofpacket
	wire          sys_ethernet_dma_rx_descriptor_slave_burst_adapter_source0_valid;                                // sys_ethernet_dma_rx_descriptor_slave_burst_adapter:source0_valid -> agent_pipeline_046:in_valid
	wire  [381:0] sys_ethernet_dma_rx_descriptor_slave_burst_adapter_source0_data;                                 // sys_ethernet_dma_rx_descriptor_slave_burst_adapter:source0_data -> agent_pipeline_046:in_data
	wire          sys_ethernet_dma_rx_descriptor_slave_burst_adapter_source0_ready;                                // agent_pipeline_046:in_ready -> sys_ethernet_dma_rx_descriptor_slave_burst_adapter:source0_ready
	wire   [44:0] sys_ethernet_dma_rx_descriptor_slave_burst_adapter_source0_channel;                              // sys_ethernet_dma_rx_descriptor_slave_burst_adapter:source0_channel -> agent_pipeline_046:in_channel
	wire          sys_ethernet_dma_rx_descriptor_slave_burst_adapter_source0_startofpacket;                        // sys_ethernet_dma_rx_descriptor_slave_burst_adapter:source0_startofpacket -> agent_pipeline_046:in_startofpacket
	wire          sys_ethernet_dma_rx_descriptor_slave_burst_adapter_source0_endofpacket;                          // sys_ethernet_dma_rx_descriptor_slave_burst_adapter:source0_endofpacket -> agent_pipeline_046:in_endofpacket
	wire          agent_pipeline_046_source0_valid;                                                                // agent_pipeline_046:out_valid -> sys_ethernet_dma_rx_descriptor_slave_agent:cp_valid
	wire  [381:0] agent_pipeline_046_source0_data;                                                                 // agent_pipeline_046:out_data -> sys_ethernet_dma_rx_descriptor_slave_agent:cp_data
	wire          agent_pipeline_046_source0_ready;                                                                // sys_ethernet_dma_rx_descriptor_slave_agent:cp_ready -> agent_pipeline_046:out_ready
	wire   [44:0] agent_pipeline_046_source0_channel;                                                              // agent_pipeline_046:out_channel -> sys_ethernet_dma_rx_descriptor_slave_agent:cp_channel
	wire          agent_pipeline_046_source0_startofpacket;                                                        // agent_pipeline_046:out_startofpacket -> sys_ethernet_dma_rx_descriptor_slave_agent:cp_startofpacket
	wire          agent_pipeline_046_source0_endofpacket;                                                          // agent_pipeline_046:out_endofpacket -> sys_ethernet_dma_rx_descriptor_slave_agent:cp_endofpacket
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_rp_valid;                                             // sys_ethernet_dma_rx_descriptor_slave_agent:rp_valid -> agent_pipeline_047:in_valid
	wire  [381:0] sys_ethernet_dma_rx_descriptor_slave_agent_rp_data;                                              // sys_ethernet_dma_rx_descriptor_slave_agent:rp_data -> agent_pipeline_047:in_data
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_rp_ready;                                             // agent_pipeline_047:in_ready -> sys_ethernet_dma_rx_descriptor_slave_agent:rp_ready
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_rp_startofpacket;                                     // sys_ethernet_dma_rx_descriptor_slave_agent:rp_startofpacket -> agent_pipeline_047:in_startofpacket
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_rp_endofpacket;                                       // sys_ethernet_dma_rx_descriptor_slave_agent:rp_endofpacket -> agent_pipeline_047:in_endofpacket
	wire          agent_pipeline_047_source0_valid;                                                                // agent_pipeline_047:out_valid -> router_031:sink_valid
	wire  [381:0] agent_pipeline_047_source0_data;                                                                 // agent_pipeline_047:out_data -> router_031:sink_data
	wire          agent_pipeline_047_source0_ready;                                                                // router_031:sink_ready -> agent_pipeline_047:out_ready
	wire          agent_pipeline_047_source0_startofpacket;                                                        // agent_pipeline_047:out_startofpacket -> router_031:sink_startofpacket
	wire          agent_pipeline_047_source0_endofpacket;                                                          // agent_pipeline_047:out_endofpacket -> router_031:sink_endofpacket
	wire          sys_ethernet_dma_tx_descriptor_slave_burst_adapter_source0_valid;                                // sys_ethernet_dma_tx_descriptor_slave_burst_adapter:source0_valid -> agent_pipeline_048:in_valid
	wire  [381:0] sys_ethernet_dma_tx_descriptor_slave_burst_adapter_source0_data;                                 // sys_ethernet_dma_tx_descriptor_slave_burst_adapter:source0_data -> agent_pipeline_048:in_data
	wire          sys_ethernet_dma_tx_descriptor_slave_burst_adapter_source0_ready;                                // agent_pipeline_048:in_ready -> sys_ethernet_dma_tx_descriptor_slave_burst_adapter:source0_ready
	wire   [44:0] sys_ethernet_dma_tx_descriptor_slave_burst_adapter_source0_channel;                              // sys_ethernet_dma_tx_descriptor_slave_burst_adapter:source0_channel -> agent_pipeline_048:in_channel
	wire          sys_ethernet_dma_tx_descriptor_slave_burst_adapter_source0_startofpacket;                        // sys_ethernet_dma_tx_descriptor_slave_burst_adapter:source0_startofpacket -> agent_pipeline_048:in_startofpacket
	wire          sys_ethernet_dma_tx_descriptor_slave_burst_adapter_source0_endofpacket;                          // sys_ethernet_dma_tx_descriptor_slave_burst_adapter:source0_endofpacket -> agent_pipeline_048:in_endofpacket
	wire          agent_pipeline_048_source0_valid;                                                                // agent_pipeline_048:out_valid -> sys_ethernet_dma_tx_descriptor_slave_agent:cp_valid
	wire  [381:0] agent_pipeline_048_source0_data;                                                                 // agent_pipeline_048:out_data -> sys_ethernet_dma_tx_descriptor_slave_agent:cp_data
	wire          agent_pipeline_048_source0_ready;                                                                // sys_ethernet_dma_tx_descriptor_slave_agent:cp_ready -> agent_pipeline_048:out_ready
	wire   [44:0] agent_pipeline_048_source0_channel;                                                              // agent_pipeline_048:out_channel -> sys_ethernet_dma_tx_descriptor_slave_agent:cp_channel
	wire          agent_pipeline_048_source0_startofpacket;                                                        // agent_pipeline_048:out_startofpacket -> sys_ethernet_dma_tx_descriptor_slave_agent:cp_startofpacket
	wire          agent_pipeline_048_source0_endofpacket;                                                          // agent_pipeline_048:out_endofpacket -> sys_ethernet_dma_tx_descriptor_slave_agent:cp_endofpacket
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_rp_valid;                                             // sys_ethernet_dma_tx_descriptor_slave_agent:rp_valid -> agent_pipeline_049:in_valid
	wire  [381:0] sys_ethernet_dma_tx_descriptor_slave_agent_rp_data;                                              // sys_ethernet_dma_tx_descriptor_slave_agent:rp_data -> agent_pipeline_049:in_data
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_rp_ready;                                             // agent_pipeline_049:in_ready -> sys_ethernet_dma_tx_descriptor_slave_agent:rp_ready
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_rp_startofpacket;                                     // sys_ethernet_dma_tx_descriptor_slave_agent:rp_startofpacket -> agent_pipeline_049:in_startofpacket
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_rp_endofpacket;                                       // sys_ethernet_dma_tx_descriptor_slave_agent:rp_endofpacket -> agent_pipeline_049:in_endofpacket
	wire          agent_pipeline_049_source0_valid;                                                                // agent_pipeline_049:out_valid -> router_032:sink_valid
	wire  [381:0] agent_pipeline_049_source0_data;                                                                 // agent_pipeline_049:out_data -> router_032:sink_data
	wire          agent_pipeline_049_source0_ready;                                                                // router_032:sink_ready -> agent_pipeline_049:out_ready
	wire          agent_pipeline_049_source0_startofpacket;                                                        // agent_pipeline_049:out_startofpacket -> router_032:sink_startofpacket
	wire          agent_pipeline_049_source0_endofpacket;                                                          // agent_pipeline_049:out_endofpacket -> router_032:sink_endofpacket
	wire          cmd_mux_025_src_valid;                                                                           // cmd_mux_025:src_valid -> agent_pipeline_050:in_valid
	wire  [129:0] cmd_mux_025_src_data;                                                                            // cmd_mux_025:src_data -> agent_pipeline_050:in_data
	wire          cmd_mux_025_src_ready;                                                                           // agent_pipeline_050:in_ready -> cmd_mux_025:src_ready
	wire   [44:0] cmd_mux_025_src_channel;                                                                         // cmd_mux_025:src_channel -> agent_pipeline_050:in_channel
	wire          cmd_mux_025_src_startofpacket;                                                                   // cmd_mux_025:src_startofpacket -> agent_pipeline_050:in_startofpacket
	wire          cmd_mux_025_src_endofpacket;                                                                     // cmd_mux_025:src_endofpacket -> agent_pipeline_050:in_endofpacket
	wire          agent_pipeline_050_source0_valid;                                                                // agent_pipeline_050:out_valid -> ad9144_jesd204_lane_pll_reconfig_agent:cp_valid
	wire  [129:0] agent_pipeline_050_source0_data;                                                                 // agent_pipeline_050:out_data -> ad9144_jesd204_lane_pll_reconfig_agent:cp_data
	wire          agent_pipeline_050_source0_ready;                                                                // ad9144_jesd204_lane_pll_reconfig_agent:cp_ready -> agent_pipeline_050:out_ready
	wire   [44:0] agent_pipeline_050_source0_channel;                                                              // agent_pipeline_050:out_channel -> ad9144_jesd204_lane_pll_reconfig_agent:cp_channel
	wire          agent_pipeline_050_source0_startofpacket;                                                        // agent_pipeline_050:out_startofpacket -> ad9144_jesd204_lane_pll_reconfig_agent:cp_startofpacket
	wire          agent_pipeline_050_source0_endofpacket;                                                          // agent_pipeline_050:out_endofpacket -> ad9144_jesd204_lane_pll_reconfig_agent:cp_endofpacket
	wire          ad9144_jesd204_lane_pll_reconfig_agent_rp_valid;                                                 // ad9144_jesd204_lane_pll_reconfig_agent:rp_valid -> agent_pipeline_051:in_valid
	wire  [129:0] ad9144_jesd204_lane_pll_reconfig_agent_rp_data;                                                  // ad9144_jesd204_lane_pll_reconfig_agent:rp_data -> agent_pipeline_051:in_data
	wire          ad9144_jesd204_lane_pll_reconfig_agent_rp_ready;                                                 // agent_pipeline_051:in_ready -> ad9144_jesd204_lane_pll_reconfig_agent:rp_ready
	wire          ad9144_jesd204_lane_pll_reconfig_agent_rp_startofpacket;                                         // ad9144_jesd204_lane_pll_reconfig_agent:rp_startofpacket -> agent_pipeline_051:in_startofpacket
	wire          ad9144_jesd204_lane_pll_reconfig_agent_rp_endofpacket;                                           // ad9144_jesd204_lane_pll_reconfig_agent:rp_endofpacket -> agent_pipeline_051:in_endofpacket
	wire          agent_pipeline_051_source0_valid;                                                                // agent_pipeline_051:out_valid -> router_033:sink_valid
	wire  [129:0] agent_pipeline_051_source0_data;                                                                 // agent_pipeline_051:out_data -> router_033:sink_data
	wire          agent_pipeline_051_source0_ready;                                                                // router_033:sink_ready -> agent_pipeline_051:out_ready
	wire          agent_pipeline_051_source0_startofpacket;                                                        // agent_pipeline_051:out_startofpacket -> router_033:sink_startofpacket
	wire          agent_pipeline_051_source0_endofpacket;                                                          // agent_pipeline_051:out_endofpacket -> router_033:sink_endofpacket
	wire          cmd_mux_026_src_valid;                                                                           // cmd_mux_026:src_valid -> agent_pipeline_052:in_valid
	wire  [129:0] cmd_mux_026_src_data;                                                                            // cmd_mux_026:src_data -> agent_pipeline_052:in_data
	wire          cmd_mux_026_src_ready;                                                                           // agent_pipeline_052:in_ready -> cmd_mux_026:src_ready
	wire   [44:0] cmd_mux_026_src_channel;                                                                         // cmd_mux_026:src_channel -> agent_pipeline_052:in_channel
	wire          cmd_mux_026_src_startofpacket;                                                                   // cmd_mux_026:src_startofpacket -> agent_pipeline_052:in_startofpacket
	wire          cmd_mux_026_src_endofpacket;                                                                     // cmd_mux_026:src_endofpacket -> agent_pipeline_052:in_endofpacket
	wire          agent_pipeline_052_source0_valid;                                                                // agent_pipeline_052:out_valid -> ad9144_jesd204_link_pll_reconfig_agent:cp_valid
	wire  [129:0] agent_pipeline_052_source0_data;                                                                 // agent_pipeline_052:out_data -> ad9144_jesd204_link_pll_reconfig_agent:cp_data
	wire          agent_pipeline_052_source0_ready;                                                                // ad9144_jesd204_link_pll_reconfig_agent:cp_ready -> agent_pipeline_052:out_ready
	wire   [44:0] agent_pipeline_052_source0_channel;                                                              // agent_pipeline_052:out_channel -> ad9144_jesd204_link_pll_reconfig_agent:cp_channel
	wire          agent_pipeline_052_source0_startofpacket;                                                        // agent_pipeline_052:out_startofpacket -> ad9144_jesd204_link_pll_reconfig_agent:cp_startofpacket
	wire          agent_pipeline_052_source0_endofpacket;                                                          // agent_pipeline_052:out_endofpacket -> ad9144_jesd204_link_pll_reconfig_agent:cp_endofpacket
	wire          ad9144_jesd204_link_pll_reconfig_agent_rp_valid;                                                 // ad9144_jesd204_link_pll_reconfig_agent:rp_valid -> agent_pipeline_053:in_valid
	wire  [129:0] ad9144_jesd204_link_pll_reconfig_agent_rp_data;                                                  // ad9144_jesd204_link_pll_reconfig_agent:rp_data -> agent_pipeline_053:in_data
	wire          ad9144_jesd204_link_pll_reconfig_agent_rp_ready;                                                 // agent_pipeline_053:in_ready -> ad9144_jesd204_link_pll_reconfig_agent:rp_ready
	wire          ad9144_jesd204_link_pll_reconfig_agent_rp_startofpacket;                                         // ad9144_jesd204_link_pll_reconfig_agent:rp_startofpacket -> agent_pipeline_053:in_startofpacket
	wire          ad9144_jesd204_link_pll_reconfig_agent_rp_endofpacket;                                           // ad9144_jesd204_link_pll_reconfig_agent:rp_endofpacket -> agent_pipeline_053:in_endofpacket
	wire          agent_pipeline_053_source0_valid;                                                                // agent_pipeline_053:out_valid -> router_034:sink_valid
	wire  [129:0] agent_pipeline_053_source0_data;                                                                 // agent_pipeline_053:out_data -> router_034:sink_data
	wire          agent_pipeline_053_source0_ready;                                                                // router_034:sink_ready -> agent_pipeline_053:out_ready
	wire          agent_pipeline_053_source0_startofpacket;                                                        // agent_pipeline_053:out_startofpacket -> router_034:sink_startofpacket
	wire          agent_pipeline_053_source0_endofpacket;                                                          // agent_pipeline_053:out_endofpacket -> router_034:sink_endofpacket
	wire          cmd_mux_027_src_valid;                                                                           // cmd_mux_027:src_valid -> agent_pipeline_054:in_valid
	wire  [129:0] cmd_mux_027_src_data;                                                                            // cmd_mux_027:src_data -> agent_pipeline_054:in_data
	wire          cmd_mux_027_src_ready;                                                                           // agent_pipeline_054:in_ready -> cmd_mux_027:src_ready
	wire   [44:0] cmd_mux_027_src_channel;                                                                         // cmd_mux_027:src_channel -> agent_pipeline_054:in_channel
	wire          cmd_mux_027_src_startofpacket;                                                                   // cmd_mux_027:src_startofpacket -> agent_pipeline_054:in_startofpacket
	wire          cmd_mux_027_src_endofpacket;                                                                     // cmd_mux_027:src_endofpacket -> agent_pipeline_054:in_endofpacket
	wire          agent_pipeline_054_source0_valid;                                                                // agent_pipeline_054:out_valid -> ad9680_jesd204_link_pll_reconfig_agent:cp_valid
	wire  [129:0] agent_pipeline_054_source0_data;                                                                 // agent_pipeline_054:out_data -> ad9680_jesd204_link_pll_reconfig_agent:cp_data
	wire          agent_pipeline_054_source0_ready;                                                                // ad9680_jesd204_link_pll_reconfig_agent:cp_ready -> agent_pipeline_054:out_ready
	wire   [44:0] agent_pipeline_054_source0_channel;                                                              // agent_pipeline_054:out_channel -> ad9680_jesd204_link_pll_reconfig_agent:cp_channel
	wire          agent_pipeline_054_source0_startofpacket;                                                        // agent_pipeline_054:out_startofpacket -> ad9680_jesd204_link_pll_reconfig_agent:cp_startofpacket
	wire          agent_pipeline_054_source0_endofpacket;                                                          // agent_pipeline_054:out_endofpacket -> ad9680_jesd204_link_pll_reconfig_agent:cp_endofpacket
	wire          ad9680_jesd204_link_pll_reconfig_agent_rp_valid;                                                 // ad9680_jesd204_link_pll_reconfig_agent:rp_valid -> agent_pipeline_055:in_valid
	wire  [129:0] ad9680_jesd204_link_pll_reconfig_agent_rp_data;                                                  // ad9680_jesd204_link_pll_reconfig_agent:rp_data -> agent_pipeline_055:in_data
	wire          ad9680_jesd204_link_pll_reconfig_agent_rp_ready;                                                 // agent_pipeline_055:in_ready -> ad9680_jesd204_link_pll_reconfig_agent:rp_ready
	wire          ad9680_jesd204_link_pll_reconfig_agent_rp_startofpacket;                                         // ad9680_jesd204_link_pll_reconfig_agent:rp_startofpacket -> agent_pipeline_055:in_startofpacket
	wire          ad9680_jesd204_link_pll_reconfig_agent_rp_endofpacket;                                           // ad9680_jesd204_link_pll_reconfig_agent:rp_endofpacket -> agent_pipeline_055:in_endofpacket
	wire          agent_pipeline_055_source0_valid;                                                                // agent_pipeline_055:out_valid -> router_035:sink_valid
	wire  [129:0] agent_pipeline_055_source0_data;                                                                 // agent_pipeline_055:out_data -> router_035:sink_data
	wire          agent_pipeline_055_source0_ready;                                                                // router_035:sink_ready -> agent_pipeline_055:out_ready
	wire          agent_pipeline_055_source0_startofpacket;                                                        // agent_pipeline_055:out_startofpacket -> router_035:sink_startofpacket
	wire          agent_pipeline_055_source0_endofpacket;                                                          // agent_pipeline_055:out_endofpacket -> router_035:sink_endofpacket
	wire          cmd_mux_028_src_valid;                                                                           // cmd_mux_028:src_valid -> agent_pipeline_056:in_valid
	wire  [129:0] cmd_mux_028_src_data;                                                                            // cmd_mux_028:src_data -> agent_pipeline_056:in_data
	wire          cmd_mux_028_src_ready;                                                                           // agent_pipeline_056:in_ready -> cmd_mux_028:src_ready
	wire   [44:0] cmd_mux_028_src_channel;                                                                         // cmd_mux_028:src_channel -> agent_pipeline_056:in_channel
	wire          cmd_mux_028_src_startofpacket;                                                                   // cmd_mux_028:src_startofpacket -> agent_pipeline_056:in_startofpacket
	wire          cmd_mux_028_src_endofpacket;                                                                     // cmd_mux_028:src_endofpacket -> agent_pipeline_056:in_endofpacket
	wire          agent_pipeline_056_source0_valid;                                                                // agent_pipeline_056:out_valid -> avl_adxcfg_0_rcfg_s0_agent:cp_valid
	wire  [129:0] agent_pipeline_056_source0_data;                                                                 // agent_pipeline_056:out_data -> avl_adxcfg_0_rcfg_s0_agent:cp_data
	wire          agent_pipeline_056_source0_ready;                                                                // avl_adxcfg_0_rcfg_s0_agent:cp_ready -> agent_pipeline_056:out_ready
	wire   [44:0] agent_pipeline_056_source0_channel;                                                              // agent_pipeline_056:out_channel -> avl_adxcfg_0_rcfg_s0_agent:cp_channel
	wire          agent_pipeline_056_source0_startofpacket;                                                        // agent_pipeline_056:out_startofpacket -> avl_adxcfg_0_rcfg_s0_agent:cp_startofpacket
	wire          agent_pipeline_056_source0_endofpacket;                                                          // agent_pipeline_056:out_endofpacket -> avl_adxcfg_0_rcfg_s0_agent:cp_endofpacket
	wire          avl_adxcfg_0_rcfg_s0_agent_rp_valid;                                                             // avl_adxcfg_0_rcfg_s0_agent:rp_valid -> agent_pipeline_057:in_valid
	wire  [129:0] avl_adxcfg_0_rcfg_s0_agent_rp_data;                                                              // avl_adxcfg_0_rcfg_s0_agent:rp_data -> agent_pipeline_057:in_data
	wire          avl_adxcfg_0_rcfg_s0_agent_rp_ready;                                                             // agent_pipeline_057:in_ready -> avl_adxcfg_0_rcfg_s0_agent:rp_ready
	wire          avl_adxcfg_0_rcfg_s0_agent_rp_startofpacket;                                                     // avl_adxcfg_0_rcfg_s0_agent:rp_startofpacket -> agent_pipeline_057:in_startofpacket
	wire          avl_adxcfg_0_rcfg_s0_agent_rp_endofpacket;                                                       // avl_adxcfg_0_rcfg_s0_agent:rp_endofpacket -> agent_pipeline_057:in_endofpacket
	wire          agent_pipeline_057_source0_valid;                                                                // agent_pipeline_057:out_valid -> router_036:sink_valid
	wire  [129:0] agent_pipeline_057_source0_data;                                                                 // agent_pipeline_057:out_data -> router_036:sink_data
	wire          agent_pipeline_057_source0_ready;                                                                // router_036:sink_ready -> agent_pipeline_057:out_ready
	wire          agent_pipeline_057_source0_startofpacket;                                                        // agent_pipeline_057:out_startofpacket -> router_036:sink_startofpacket
	wire          agent_pipeline_057_source0_endofpacket;                                                          // agent_pipeline_057:out_endofpacket -> router_036:sink_endofpacket
	wire          cmd_mux_029_src_valid;                                                                           // cmd_mux_029:src_valid -> agent_pipeline_058:in_valid
	wire  [129:0] cmd_mux_029_src_data;                                                                            // cmd_mux_029:src_data -> agent_pipeline_058:in_data
	wire          cmd_mux_029_src_ready;                                                                           // agent_pipeline_058:in_ready -> cmd_mux_029:src_ready
	wire   [44:0] cmd_mux_029_src_channel;                                                                         // cmd_mux_029:src_channel -> agent_pipeline_058:in_channel
	wire          cmd_mux_029_src_startofpacket;                                                                   // cmd_mux_029:src_startofpacket -> agent_pipeline_058:in_startofpacket
	wire          cmd_mux_029_src_endofpacket;                                                                     // cmd_mux_029:src_endofpacket -> agent_pipeline_058:in_endofpacket
	wire          agent_pipeline_058_source0_valid;                                                                // agent_pipeline_058:out_valid -> avl_adxcfg_1_rcfg_s0_agent:cp_valid
	wire  [129:0] agent_pipeline_058_source0_data;                                                                 // agent_pipeline_058:out_data -> avl_adxcfg_1_rcfg_s0_agent:cp_data
	wire          agent_pipeline_058_source0_ready;                                                                // avl_adxcfg_1_rcfg_s0_agent:cp_ready -> agent_pipeline_058:out_ready
	wire   [44:0] agent_pipeline_058_source0_channel;                                                              // agent_pipeline_058:out_channel -> avl_adxcfg_1_rcfg_s0_agent:cp_channel
	wire          agent_pipeline_058_source0_startofpacket;                                                        // agent_pipeline_058:out_startofpacket -> avl_adxcfg_1_rcfg_s0_agent:cp_startofpacket
	wire          agent_pipeline_058_source0_endofpacket;                                                          // agent_pipeline_058:out_endofpacket -> avl_adxcfg_1_rcfg_s0_agent:cp_endofpacket
	wire          avl_adxcfg_1_rcfg_s0_agent_rp_valid;                                                             // avl_adxcfg_1_rcfg_s0_agent:rp_valid -> agent_pipeline_059:in_valid
	wire  [129:0] avl_adxcfg_1_rcfg_s0_agent_rp_data;                                                              // avl_adxcfg_1_rcfg_s0_agent:rp_data -> agent_pipeline_059:in_data
	wire          avl_adxcfg_1_rcfg_s0_agent_rp_ready;                                                             // agent_pipeline_059:in_ready -> avl_adxcfg_1_rcfg_s0_agent:rp_ready
	wire          avl_adxcfg_1_rcfg_s0_agent_rp_startofpacket;                                                     // avl_adxcfg_1_rcfg_s0_agent:rp_startofpacket -> agent_pipeline_059:in_startofpacket
	wire          avl_adxcfg_1_rcfg_s0_agent_rp_endofpacket;                                                       // avl_adxcfg_1_rcfg_s0_agent:rp_endofpacket -> agent_pipeline_059:in_endofpacket
	wire          agent_pipeline_059_source0_valid;                                                                // agent_pipeline_059:out_valid -> router_037:sink_valid
	wire  [129:0] agent_pipeline_059_source0_data;                                                                 // agent_pipeline_059:out_data -> router_037:sink_data
	wire          agent_pipeline_059_source0_ready;                                                                // router_037:sink_ready -> agent_pipeline_059:out_ready
	wire          agent_pipeline_059_source0_startofpacket;                                                        // agent_pipeline_059:out_startofpacket -> router_037:sink_startofpacket
	wire          agent_pipeline_059_source0_endofpacket;                                                          // agent_pipeline_059:out_endofpacket -> router_037:sink_endofpacket
	wire          cmd_mux_030_src_valid;                                                                           // cmd_mux_030:src_valid -> agent_pipeline_060:in_valid
	wire  [129:0] cmd_mux_030_src_data;                                                                            // cmd_mux_030:src_data -> agent_pipeline_060:in_data
	wire          cmd_mux_030_src_ready;                                                                           // agent_pipeline_060:in_ready -> cmd_mux_030:src_ready
	wire   [44:0] cmd_mux_030_src_channel;                                                                         // cmd_mux_030:src_channel -> agent_pipeline_060:in_channel
	wire          cmd_mux_030_src_startofpacket;                                                                   // cmd_mux_030:src_startofpacket -> agent_pipeline_060:in_startofpacket
	wire          cmd_mux_030_src_endofpacket;                                                                     // cmd_mux_030:src_endofpacket -> agent_pipeline_060:in_endofpacket
	wire          agent_pipeline_060_source0_valid;                                                                // agent_pipeline_060:out_valid -> avl_adxcfg_2_rcfg_s0_agent:cp_valid
	wire  [129:0] agent_pipeline_060_source0_data;                                                                 // agent_pipeline_060:out_data -> avl_adxcfg_2_rcfg_s0_agent:cp_data
	wire          agent_pipeline_060_source0_ready;                                                                // avl_adxcfg_2_rcfg_s0_agent:cp_ready -> agent_pipeline_060:out_ready
	wire   [44:0] agent_pipeline_060_source0_channel;                                                              // agent_pipeline_060:out_channel -> avl_adxcfg_2_rcfg_s0_agent:cp_channel
	wire          agent_pipeline_060_source0_startofpacket;                                                        // agent_pipeline_060:out_startofpacket -> avl_adxcfg_2_rcfg_s0_agent:cp_startofpacket
	wire          agent_pipeline_060_source0_endofpacket;                                                          // agent_pipeline_060:out_endofpacket -> avl_adxcfg_2_rcfg_s0_agent:cp_endofpacket
	wire          avl_adxcfg_2_rcfg_s0_agent_rp_valid;                                                             // avl_adxcfg_2_rcfg_s0_agent:rp_valid -> agent_pipeline_061:in_valid
	wire  [129:0] avl_adxcfg_2_rcfg_s0_agent_rp_data;                                                              // avl_adxcfg_2_rcfg_s0_agent:rp_data -> agent_pipeline_061:in_data
	wire          avl_adxcfg_2_rcfg_s0_agent_rp_ready;                                                             // agent_pipeline_061:in_ready -> avl_adxcfg_2_rcfg_s0_agent:rp_ready
	wire          avl_adxcfg_2_rcfg_s0_agent_rp_startofpacket;                                                     // avl_adxcfg_2_rcfg_s0_agent:rp_startofpacket -> agent_pipeline_061:in_startofpacket
	wire          avl_adxcfg_2_rcfg_s0_agent_rp_endofpacket;                                                       // avl_adxcfg_2_rcfg_s0_agent:rp_endofpacket -> agent_pipeline_061:in_endofpacket
	wire          agent_pipeline_061_source0_valid;                                                                // agent_pipeline_061:out_valid -> router_038:sink_valid
	wire  [129:0] agent_pipeline_061_source0_data;                                                                 // agent_pipeline_061:out_data -> router_038:sink_data
	wire          agent_pipeline_061_source0_ready;                                                                // router_038:sink_ready -> agent_pipeline_061:out_ready
	wire          agent_pipeline_061_source0_startofpacket;                                                        // agent_pipeline_061:out_startofpacket -> router_038:sink_startofpacket
	wire          agent_pipeline_061_source0_endofpacket;                                                          // agent_pipeline_061:out_endofpacket -> router_038:sink_endofpacket
	wire          cmd_mux_031_src_valid;                                                                           // cmd_mux_031:src_valid -> agent_pipeline_062:in_valid
	wire  [129:0] cmd_mux_031_src_data;                                                                            // cmd_mux_031:src_data -> agent_pipeline_062:in_data
	wire          cmd_mux_031_src_ready;                                                                           // agent_pipeline_062:in_ready -> cmd_mux_031:src_ready
	wire   [44:0] cmd_mux_031_src_channel;                                                                         // cmd_mux_031:src_channel -> agent_pipeline_062:in_channel
	wire          cmd_mux_031_src_startofpacket;                                                                   // cmd_mux_031:src_startofpacket -> agent_pipeline_062:in_startofpacket
	wire          cmd_mux_031_src_endofpacket;                                                                     // cmd_mux_031:src_endofpacket -> agent_pipeline_062:in_endofpacket
	wire          agent_pipeline_062_source0_valid;                                                                // agent_pipeline_062:out_valid -> avl_adxcfg_3_rcfg_s0_agent:cp_valid
	wire  [129:0] agent_pipeline_062_source0_data;                                                                 // agent_pipeline_062:out_data -> avl_adxcfg_3_rcfg_s0_agent:cp_data
	wire          agent_pipeline_062_source0_ready;                                                                // avl_adxcfg_3_rcfg_s0_agent:cp_ready -> agent_pipeline_062:out_ready
	wire   [44:0] agent_pipeline_062_source0_channel;                                                              // agent_pipeline_062:out_channel -> avl_adxcfg_3_rcfg_s0_agent:cp_channel
	wire          agent_pipeline_062_source0_startofpacket;                                                        // agent_pipeline_062:out_startofpacket -> avl_adxcfg_3_rcfg_s0_agent:cp_startofpacket
	wire          agent_pipeline_062_source0_endofpacket;                                                          // agent_pipeline_062:out_endofpacket -> avl_adxcfg_3_rcfg_s0_agent:cp_endofpacket
	wire          avl_adxcfg_3_rcfg_s0_agent_rp_valid;                                                             // avl_adxcfg_3_rcfg_s0_agent:rp_valid -> agent_pipeline_063:in_valid
	wire  [129:0] avl_adxcfg_3_rcfg_s0_agent_rp_data;                                                              // avl_adxcfg_3_rcfg_s0_agent:rp_data -> agent_pipeline_063:in_data
	wire          avl_adxcfg_3_rcfg_s0_agent_rp_ready;                                                             // agent_pipeline_063:in_ready -> avl_adxcfg_3_rcfg_s0_agent:rp_ready
	wire          avl_adxcfg_3_rcfg_s0_agent_rp_startofpacket;                                                     // avl_adxcfg_3_rcfg_s0_agent:rp_startofpacket -> agent_pipeline_063:in_startofpacket
	wire          avl_adxcfg_3_rcfg_s0_agent_rp_endofpacket;                                                       // avl_adxcfg_3_rcfg_s0_agent:rp_endofpacket -> agent_pipeline_063:in_endofpacket
	wire          agent_pipeline_063_source0_valid;                                                                // agent_pipeline_063:out_valid -> router_039:sink_valid
	wire  [129:0] agent_pipeline_063_source0_data;                                                                 // agent_pipeline_063:out_data -> router_039:sink_data
	wire          agent_pipeline_063_source0_ready;                                                                // router_039:sink_ready -> agent_pipeline_063:out_ready
	wire          agent_pipeline_063_source0_startofpacket;                                                        // agent_pipeline_063:out_startofpacket -> router_039:sink_startofpacket
	wire          agent_pipeline_063_source0_endofpacket;                                                          // agent_pipeline_063:out_endofpacket -> router_039:sink_endofpacket
	wire          cmd_mux_032_src_valid;                                                                           // cmd_mux_032:src_valid -> agent_pipeline_064:in_valid
	wire  [129:0] cmd_mux_032_src_data;                                                                            // cmd_mux_032:src_data -> agent_pipeline_064:in_data
	wire          cmd_mux_032_src_ready;                                                                           // agent_pipeline_064:in_ready -> cmd_mux_032:src_ready
	wire   [44:0] cmd_mux_032_src_channel;                                                                         // cmd_mux_032:src_channel -> agent_pipeline_064:in_channel
	wire          cmd_mux_032_src_startofpacket;                                                                   // cmd_mux_032:src_startofpacket -> agent_pipeline_064:in_startofpacket
	wire          cmd_mux_032_src_endofpacket;                                                                     // cmd_mux_032:src_endofpacket -> agent_pipeline_064:in_endofpacket
	wire          agent_pipeline_064_source0_valid;                                                                // agent_pipeline_064:out_valid -> avl_adxcfg_0_rcfg_s1_agent:cp_valid
	wire  [129:0] agent_pipeline_064_source0_data;                                                                 // agent_pipeline_064:out_data -> avl_adxcfg_0_rcfg_s1_agent:cp_data
	wire          agent_pipeline_064_source0_ready;                                                                // avl_adxcfg_0_rcfg_s1_agent:cp_ready -> agent_pipeline_064:out_ready
	wire   [44:0] agent_pipeline_064_source0_channel;                                                              // agent_pipeline_064:out_channel -> avl_adxcfg_0_rcfg_s1_agent:cp_channel
	wire          agent_pipeline_064_source0_startofpacket;                                                        // agent_pipeline_064:out_startofpacket -> avl_adxcfg_0_rcfg_s1_agent:cp_startofpacket
	wire          agent_pipeline_064_source0_endofpacket;                                                          // agent_pipeline_064:out_endofpacket -> avl_adxcfg_0_rcfg_s1_agent:cp_endofpacket
	wire          avl_adxcfg_0_rcfg_s1_agent_rp_valid;                                                             // avl_adxcfg_0_rcfg_s1_agent:rp_valid -> agent_pipeline_065:in_valid
	wire  [129:0] avl_adxcfg_0_rcfg_s1_agent_rp_data;                                                              // avl_adxcfg_0_rcfg_s1_agent:rp_data -> agent_pipeline_065:in_data
	wire          avl_adxcfg_0_rcfg_s1_agent_rp_ready;                                                             // agent_pipeline_065:in_ready -> avl_adxcfg_0_rcfg_s1_agent:rp_ready
	wire          avl_adxcfg_0_rcfg_s1_agent_rp_startofpacket;                                                     // avl_adxcfg_0_rcfg_s1_agent:rp_startofpacket -> agent_pipeline_065:in_startofpacket
	wire          avl_adxcfg_0_rcfg_s1_agent_rp_endofpacket;                                                       // avl_adxcfg_0_rcfg_s1_agent:rp_endofpacket -> agent_pipeline_065:in_endofpacket
	wire          agent_pipeline_065_source0_valid;                                                                // agent_pipeline_065:out_valid -> router_040:sink_valid
	wire  [129:0] agent_pipeline_065_source0_data;                                                                 // agent_pipeline_065:out_data -> router_040:sink_data
	wire          agent_pipeline_065_source0_ready;                                                                // router_040:sink_ready -> agent_pipeline_065:out_ready
	wire          agent_pipeline_065_source0_startofpacket;                                                        // agent_pipeline_065:out_startofpacket -> router_040:sink_startofpacket
	wire          agent_pipeline_065_source0_endofpacket;                                                          // agent_pipeline_065:out_endofpacket -> router_040:sink_endofpacket
	wire          cmd_mux_033_src_valid;                                                                           // cmd_mux_033:src_valid -> agent_pipeline_066:in_valid
	wire  [129:0] cmd_mux_033_src_data;                                                                            // cmd_mux_033:src_data -> agent_pipeline_066:in_data
	wire          cmd_mux_033_src_ready;                                                                           // agent_pipeline_066:in_ready -> cmd_mux_033:src_ready
	wire   [44:0] cmd_mux_033_src_channel;                                                                         // cmd_mux_033:src_channel -> agent_pipeline_066:in_channel
	wire          cmd_mux_033_src_startofpacket;                                                                   // cmd_mux_033:src_startofpacket -> agent_pipeline_066:in_startofpacket
	wire          cmd_mux_033_src_endofpacket;                                                                     // cmd_mux_033:src_endofpacket -> agent_pipeline_066:in_endofpacket
	wire          agent_pipeline_066_source0_valid;                                                                // agent_pipeline_066:out_valid -> avl_adxcfg_1_rcfg_s1_agent:cp_valid
	wire  [129:0] agent_pipeline_066_source0_data;                                                                 // agent_pipeline_066:out_data -> avl_adxcfg_1_rcfg_s1_agent:cp_data
	wire          agent_pipeline_066_source0_ready;                                                                // avl_adxcfg_1_rcfg_s1_agent:cp_ready -> agent_pipeline_066:out_ready
	wire   [44:0] agent_pipeline_066_source0_channel;                                                              // agent_pipeline_066:out_channel -> avl_adxcfg_1_rcfg_s1_agent:cp_channel
	wire          agent_pipeline_066_source0_startofpacket;                                                        // agent_pipeline_066:out_startofpacket -> avl_adxcfg_1_rcfg_s1_agent:cp_startofpacket
	wire          agent_pipeline_066_source0_endofpacket;                                                          // agent_pipeline_066:out_endofpacket -> avl_adxcfg_1_rcfg_s1_agent:cp_endofpacket
	wire          avl_adxcfg_1_rcfg_s1_agent_rp_valid;                                                             // avl_adxcfg_1_rcfg_s1_agent:rp_valid -> agent_pipeline_067:in_valid
	wire  [129:0] avl_adxcfg_1_rcfg_s1_agent_rp_data;                                                              // avl_adxcfg_1_rcfg_s1_agent:rp_data -> agent_pipeline_067:in_data
	wire          avl_adxcfg_1_rcfg_s1_agent_rp_ready;                                                             // agent_pipeline_067:in_ready -> avl_adxcfg_1_rcfg_s1_agent:rp_ready
	wire          avl_adxcfg_1_rcfg_s1_agent_rp_startofpacket;                                                     // avl_adxcfg_1_rcfg_s1_agent:rp_startofpacket -> agent_pipeline_067:in_startofpacket
	wire          avl_adxcfg_1_rcfg_s1_agent_rp_endofpacket;                                                       // avl_adxcfg_1_rcfg_s1_agent:rp_endofpacket -> agent_pipeline_067:in_endofpacket
	wire          agent_pipeline_067_source0_valid;                                                                // agent_pipeline_067:out_valid -> router_041:sink_valid
	wire  [129:0] agent_pipeline_067_source0_data;                                                                 // agent_pipeline_067:out_data -> router_041:sink_data
	wire          agent_pipeline_067_source0_ready;                                                                // router_041:sink_ready -> agent_pipeline_067:out_ready
	wire          agent_pipeline_067_source0_startofpacket;                                                        // agent_pipeline_067:out_startofpacket -> router_041:sink_startofpacket
	wire          agent_pipeline_067_source0_endofpacket;                                                          // agent_pipeline_067:out_endofpacket -> router_041:sink_endofpacket
	wire          cmd_mux_034_src_valid;                                                                           // cmd_mux_034:src_valid -> agent_pipeline_068:in_valid
	wire  [129:0] cmd_mux_034_src_data;                                                                            // cmd_mux_034:src_data -> agent_pipeline_068:in_data
	wire          cmd_mux_034_src_ready;                                                                           // agent_pipeline_068:in_ready -> cmd_mux_034:src_ready
	wire   [44:0] cmd_mux_034_src_channel;                                                                         // cmd_mux_034:src_channel -> agent_pipeline_068:in_channel
	wire          cmd_mux_034_src_startofpacket;                                                                   // cmd_mux_034:src_startofpacket -> agent_pipeline_068:in_startofpacket
	wire          cmd_mux_034_src_endofpacket;                                                                     // cmd_mux_034:src_endofpacket -> agent_pipeline_068:in_endofpacket
	wire          agent_pipeline_068_source0_valid;                                                                // agent_pipeline_068:out_valid -> avl_adxcfg_2_rcfg_s1_agent:cp_valid
	wire  [129:0] agent_pipeline_068_source0_data;                                                                 // agent_pipeline_068:out_data -> avl_adxcfg_2_rcfg_s1_agent:cp_data
	wire          agent_pipeline_068_source0_ready;                                                                // avl_adxcfg_2_rcfg_s1_agent:cp_ready -> agent_pipeline_068:out_ready
	wire   [44:0] agent_pipeline_068_source0_channel;                                                              // agent_pipeline_068:out_channel -> avl_adxcfg_2_rcfg_s1_agent:cp_channel
	wire          agent_pipeline_068_source0_startofpacket;                                                        // agent_pipeline_068:out_startofpacket -> avl_adxcfg_2_rcfg_s1_agent:cp_startofpacket
	wire          agent_pipeline_068_source0_endofpacket;                                                          // agent_pipeline_068:out_endofpacket -> avl_adxcfg_2_rcfg_s1_agent:cp_endofpacket
	wire          avl_adxcfg_2_rcfg_s1_agent_rp_valid;                                                             // avl_adxcfg_2_rcfg_s1_agent:rp_valid -> agent_pipeline_069:in_valid
	wire  [129:0] avl_adxcfg_2_rcfg_s1_agent_rp_data;                                                              // avl_adxcfg_2_rcfg_s1_agent:rp_data -> agent_pipeline_069:in_data
	wire          avl_adxcfg_2_rcfg_s1_agent_rp_ready;                                                             // agent_pipeline_069:in_ready -> avl_adxcfg_2_rcfg_s1_agent:rp_ready
	wire          avl_adxcfg_2_rcfg_s1_agent_rp_startofpacket;                                                     // avl_adxcfg_2_rcfg_s1_agent:rp_startofpacket -> agent_pipeline_069:in_startofpacket
	wire          avl_adxcfg_2_rcfg_s1_agent_rp_endofpacket;                                                       // avl_adxcfg_2_rcfg_s1_agent:rp_endofpacket -> agent_pipeline_069:in_endofpacket
	wire          agent_pipeline_069_source0_valid;                                                                // agent_pipeline_069:out_valid -> router_042:sink_valid
	wire  [129:0] agent_pipeline_069_source0_data;                                                                 // agent_pipeline_069:out_data -> router_042:sink_data
	wire          agent_pipeline_069_source0_ready;                                                                // router_042:sink_ready -> agent_pipeline_069:out_ready
	wire          agent_pipeline_069_source0_startofpacket;                                                        // agent_pipeline_069:out_startofpacket -> router_042:sink_startofpacket
	wire          agent_pipeline_069_source0_endofpacket;                                                          // agent_pipeline_069:out_endofpacket -> router_042:sink_endofpacket
	wire          cmd_mux_035_src_valid;                                                                           // cmd_mux_035:src_valid -> agent_pipeline_070:in_valid
	wire  [129:0] cmd_mux_035_src_data;                                                                            // cmd_mux_035:src_data -> agent_pipeline_070:in_data
	wire          cmd_mux_035_src_ready;                                                                           // agent_pipeline_070:in_ready -> cmd_mux_035:src_ready
	wire   [44:0] cmd_mux_035_src_channel;                                                                         // cmd_mux_035:src_channel -> agent_pipeline_070:in_channel
	wire          cmd_mux_035_src_startofpacket;                                                                   // cmd_mux_035:src_startofpacket -> agent_pipeline_070:in_startofpacket
	wire          cmd_mux_035_src_endofpacket;                                                                     // cmd_mux_035:src_endofpacket -> agent_pipeline_070:in_endofpacket
	wire          agent_pipeline_070_source0_valid;                                                                // agent_pipeline_070:out_valid -> avl_adxcfg_3_rcfg_s1_agent:cp_valid
	wire  [129:0] agent_pipeline_070_source0_data;                                                                 // agent_pipeline_070:out_data -> avl_adxcfg_3_rcfg_s1_agent:cp_data
	wire          agent_pipeline_070_source0_ready;                                                                // avl_adxcfg_3_rcfg_s1_agent:cp_ready -> agent_pipeline_070:out_ready
	wire   [44:0] agent_pipeline_070_source0_channel;                                                              // agent_pipeline_070:out_channel -> avl_adxcfg_3_rcfg_s1_agent:cp_channel
	wire          agent_pipeline_070_source0_startofpacket;                                                        // agent_pipeline_070:out_startofpacket -> avl_adxcfg_3_rcfg_s1_agent:cp_startofpacket
	wire          agent_pipeline_070_source0_endofpacket;                                                          // agent_pipeline_070:out_endofpacket -> avl_adxcfg_3_rcfg_s1_agent:cp_endofpacket
	wire          avl_adxcfg_3_rcfg_s1_agent_rp_valid;                                                             // avl_adxcfg_3_rcfg_s1_agent:rp_valid -> agent_pipeline_071:in_valid
	wire  [129:0] avl_adxcfg_3_rcfg_s1_agent_rp_data;                                                              // avl_adxcfg_3_rcfg_s1_agent:rp_data -> agent_pipeline_071:in_data
	wire          avl_adxcfg_3_rcfg_s1_agent_rp_ready;                                                             // agent_pipeline_071:in_ready -> avl_adxcfg_3_rcfg_s1_agent:rp_ready
	wire          avl_adxcfg_3_rcfg_s1_agent_rp_startofpacket;                                                     // avl_adxcfg_3_rcfg_s1_agent:rp_startofpacket -> agent_pipeline_071:in_startofpacket
	wire          avl_adxcfg_3_rcfg_s1_agent_rp_endofpacket;                                                       // avl_adxcfg_3_rcfg_s1_agent:rp_endofpacket -> agent_pipeline_071:in_endofpacket
	wire          agent_pipeline_071_source0_valid;                                                                // agent_pipeline_071:out_valid -> router_043:sink_valid
	wire  [129:0] agent_pipeline_071_source0_data;                                                                 // agent_pipeline_071:out_data -> router_043:sink_data
	wire          agent_pipeline_071_source0_ready;                                                                // router_043:sink_ready -> agent_pipeline_071:out_ready
	wire          agent_pipeline_071_source0_startofpacket;                                                        // agent_pipeline_071:out_startofpacket -> router_043:sink_startofpacket
	wire          agent_pipeline_071_source0_endofpacket;                                                          // agent_pipeline_071:out_endofpacket -> router_043:sink_endofpacket
	wire          cmd_mux_036_src_valid;                                                                           // cmd_mux_036:src_valid -> agent_pipeline_072:in_valid
	wire  [129:0] cmd_mux_036_src_data;                                                                            // cmd_mux_036:src_data -> agent_pipeline_072:in_data
	wire          cmd_mux_036_src_ready;                                                                           // agent_pipeline_072:in_ready -> cmd_mux_036:src_ready
	wire   [44:0] cmd_mux_036_src_channel;                                                                         // cmd_mux_036:src_channel -> agent_pipeline_072:in_channel
	wire          cmd_mux_036_src_startofpacket;                                                                   // cmd_mux_036:src_startofpacket -> agent_pipeline_072:in_startofpacket
	wire          cmd_mux_036_src_endofpacket;                                                                     // cmd_mux_036:src_endofpacket -> agent_pipeline_072:in_endofpacket
	wire          agent_pipeline_072_source0_valid;                                                                // agent_pipeline_072:out_valid -> sys_ethernet_dma_rx_response_agent:cp_valid
	wire  [129:0] agent_pipeline_072_source0_data;                                                                 // agent_pipeline_072:out_data -> sys_ethernet_dma_rx_response_agent:cp_data
	wire          agent_pipeline_072_source0_ready;                                                                // sys_ethernet_dma_rx_response_agent:cp_ready -> agent_pipeline_072:out_ready
	wire   [44:0] agent_pipeline_072_source0_channel;                                                              // agent_pipeline_072:out_channel -> sys_ethernet_dma_rx_response_agent:cp_channel
	wire          agent_pipeline_072_source0_startofpacket;                                                        // agent_pipeline_072:out_startofpacket -> sys_ethernet_dma_rx_response_agent:cp_startofpacket
	wire          agent_pipeline_072_source0_endofpacket;                                                          // agent_pipeline_072:out_endofpacket -> sys_ethernet_dma_rx_response_agent:cp_endofpacket
	wire          sys_ethernet_dma_rx_response_agent_rp_valid;                                                     // sys_ethernet_dma_rx_response_agent:rp_valid -> agent_pipeline_073:in_valid
	wire  [129:0] sys_ethernet_dma_rx_response_agent_rp_data;                                                      // sys_ethernet_dma_rx_response_agent:rp_data -> agent_pipeline_073:in_data
	wire          sys_ethernet_dma_rx_response_agent_rp_ready;                                                     // agent_pipeline_073:in_ready -> sys_ethernet_dma_rx_response_agent:rp_ready
	wire          sys_ethernet_dma_rx_response_agent_rp_startofpacket;                                             // sys_ethernet_dma_rx_response_agent:rp_startofpacket -> agent_pipeline_073:in_startofpacket
	wire          sys_ethernet_dma_rx_response_agent_rp_endofpacket;                                               // sys_ethernet_dma_rx_response_agent:rp_endofpacket -> agent_pipeline_073:in_endofpacket
	wire          agent_pipeline_073_source0_valid;                                                                // agent_pipeline_073:out_valid -> router_044:sink_valid
	wire  [129:0] agent_pipeline_073_source0_data;                                                                 // agent_pipeline_073:out_data -> router_044:sink_data
	wire          agent_pipeline_073_source0_ready;                                                                // router_044:sink_ready -> agent_pipeline_073:out_ready
	wire          agent_pipeline_073_source0_startofpacket;                                                        // agent_pipeline_073:out_startofpacket -> router_044:sink_startofpacket
	wire          agent_pipeline_073_source0_endofpacket;                                                          // agent_pipeline_073:out_endofpacket -> router_044:sink_endofpacket
	wire          cmd_mux_037_src_valid;                                                                           // cmd_mux_037:src_valid -> agent_pipeline_074:in_valid
	wire  [129:0] cmd_mux_037_src_data;                                                                            // cmd_mux_037:src_data -> agent_pipeline_074:in_data
	wire          cmd_mux_037_src_ready;                                                                           // agent_pipeline_074:in_ready -> cmd_mux_037:src_ready
	wire   [44:0] cmd_mux_037_src_channel;                                                                         // cmd_mux_037:src_channel -> agent_pipeline_074:in_channel
	wire          cmd_mux_037_src_startofpacket;                                                                   // cmd_mux_037:src_startofpacket -> agent_pipeline_074:in_startofpacket
	wire          cmd_mux_037_src_endofpacket;                                                                     // cmd_mux_037:src_endofpacket -> agent_pipeline_074:in_endofpacket
	wire          agent_pipeline_074_source0_valid;                                                                // agent_pipeline_074:out_valid -> sys_int_mem_s1_agent:cp_valid
	wire  [129:0] agent_pipeline_074_source0_data;                                                                 // agent_pipeline_074:out_data -> sys_int_mem_s1_agent:cp_data
	wire          agent_pipeline_074_source0_ready;                                                                // sys_int_mem_s1_agent:cp_ready -> agent_pipeline_074:out_ready
	wire   [44:0] agent_pipeline_074_source0_channel;                                                              // agent_pipeline_074:out_channel -> sys_int_mem_s1_agent:cp_channel
	wire          agent_pipeline_074_source0_startofpacket;                                                        // agent_pipeline_074:out_startofpacket -> sys_int_mem_s1_agent:cp_startofpacket
	wire          agent_pipeline_074_source0_endofpacket;                                                          // agent_pipeline_074:out_endofpacket -> sys_int_mem_s1_agent:cp_endofpacket
	wire          sys_int_mem_s1_agent_rp_valid;                                                                   // sys_int_mem_s1_agent:rp_valid -> agent_pipeline_075:in_valid
	wire  [129:0] sys_int_mem_s1_agent_rp_data;                                                                    // sys_int_mem_s1_agent:rp_data -> agent_pipeline_075:in_data
	wire          sys_int_mem_s1_agent_rp_ready;                                                                   // agent_pipeline_075:in_ready -> sys_int_mem_s1_agent:rp_ready
	wire          sys_int_mem_s1_agent_rp_startofpacket;                                                           // sys_int_mem_s1_agent:rp_startofpacket -> agent_pipeline_075:in_startofpacket
	wire          sys_int_mem_s1_agent_rp_endofpacket;                                                             // sys_int_mem_s1_agent:rp_endofpacket -> agent_pipeline_075:in_endofpacket
	wire          agent_pipeline_075_source0_valid;                                                                // agent_pipeline_075:out_valid -> router_045:sink_valid
	wire  [129:0] agent_pipeline_075_source0_data;                                                                 // agent_pipeline_075:out_data -> router_045:sink_data
	wire          agent_pipeline_075_source0_ready;                                                                // router_045:sink_ready -> agent_pipeline_075:out_ready
	wire          agent_pipeline_075_source0_startofpacket;                                                        // agent_pipeline_075:out_startofpacket -> router_045:sink_startofpacket
	wire          agent_pipeline_075_source0_endofpacket;                                                          // agent_pipeline_075:out_endofpacket -> router_045:sink_endofpacket
	wire          cmd_mux_038_src_valid;                                                                           // cmd_mux_038:src_valid -> agent_pipeline_076:in_valid
	wire  [129:0] cmd_mux_038_src_data;                                                                            // cmd_mux_038:src_data -> agent_pipeline_076:in_data
	wire          cmd_mux_038_src_ready;                                                                           // agent_pipeline_076:in_ready -> cmd_mux_038:src_ready
	wire   [44:0] cmd_mux_038_src_channel;                                                                         // cmd_mux_038:src_channel -> agent_pipeline_076:in_channel
	wire          cmd_mux_038_src_startofpacket;                                                                   // cmd_mux_038:src_startofpacket -> agent_pipeline_076:in_startofpacket
	wire          cmd_mux_038_src_endofpacket;                                                                     // cmd_mux_038:src_endofpacket -> agent_pipeline_076:in_endofpacket
	wire          agent_pipeline_076_source0_valid;                                                                // agent_pipeline_076:out_valid -> sys_timer_1_s1_agent:cp_valid
	wire  [129:0] agent_pipeline_076_source0_data;                                                                 // agent_pipeline_076:out_data -> sys_timer_1_s1_agent:cp_data
	wire          agent_pipeline_076_source0_ready;                                                                // sys_timer_1_s1_agent:cp_ready -> agent_pipeline_076:out_ready
	wire   [44:0] agent_pipeline_076_source0_channel;                                                              // agent_pipeline_076:out_channel -> sys_timer_1_s1_agent:cp_channel
	wire          agent_pipeline_076_source0_startofpacket;                                                        // agent_pipeline_076:out_startofpacket -> sys_timer_1_s1_agent:cp_startofpacket
	wire          agent_pipeline_076_source0_endofpacket;                                                          // agent_pipeline_076:out_endofpacket -> sys_timer_1_s1_agent:cp_endofpacket
	wire          sys_timer_1_s1_agent_rp_valid;                                                                   // sys_timer_1_s1_agent:rp_valid -> agent_pipeline_077:in_valid
	wire  [129:0] sys_timer_1_s1_agent_rp_data;                                                                    // sys_timer_1_s1_agent:rp_data -> agent_pipeline_077:in_data
	wire          sys_timer_1_s1_agent_rp_ready;                                                                   // agent_pipeline_077:in_ready -> sys_timer_1_s1_agent:rp_ready
	wire          sys_timer_1_s1_agent_rp_startofpacket;                                                           // sys_timer_1_s1_agent:rp_startofpacket -> agent_pipeline_077:in_startofpacket
	wire          sys_timer_1_s1_agent_rp_endofpacket;                                                             // sys_timer_1_s1_agent:rp_endofpacket -> agent_pipeline_077:in_endofpacket
	wire          agent_pipeline_077_source0_valid;                                                                // agent_pipeline_077:out_valid -> router_046:sink_valid
	wire  [129:0] agent_pipeline_077_source0_data;                                                                 // agent_pipeline_077:out_data -> router_046:sink_data
	wire          agent_pipeline_077_source0_ready;                                                                // router_046:sink_ready -> agent_pipeline_077:out_ready
	wire          agent_pipeline_077_source0_startofpacket;                                                        // agent_pipeline_077:out_startofpacket -> router_046:sink_startofpacket
	wire          agent_pipeline_077_source0_endofpacket;                                                          // agent_pipeline_077:out_endofpacket -> router_046:sink_endofpacket
	wire          cmd_mux_039_src_valid;                                                                           // cmd_mux_039:src_valid -> agent_pipeline_078:in_valid
	wire  [129:0] cmd_mux_039_src_data;                                                                            // cmd_mux_039:src_data -> agent_pipeline_078:in_data
	wire          cmd_mux_039_src_ready;                                                                           // agent_pipeline_078:in_ready -> cmd_mux_039:src_ready
	wire   [44:0] cmd_mux_039_src_channel;                                                                         // cmd_mux_039:src_channel -> agent_pipeline_078:in_channel
	wire          cmd_mux_039_src_startofpacket;                                                                   // cmd_mux_039:src_startofpacket -> agent_pipeline_078:in_startofpacket
	wire          cmd_mux_039_src_endofpacket;                                                                     // cmd_mux_039:src_endofpacket -> agent_pipeline_078:in_endofpacket
	wire          agent_pipeline_078_source0_valid;                                                                // agent_pipeline_078:out_valid -> sys_timer_2_s1_agent:cp_valid
	wire  [129:0] agent_pipeline_078_source0_data;                                                                 // agent_pipeline_078:out_data -> sys_timer_2_s1_agent:cp_data
	wire          agent_pipeline_078_source0_ready;                                                                // sys_timer_2_s1_agent:cp_ready -> agent_pipeline_078:out_ready
	wire   [44:0] agent_pipeline_078_source0_channel;                                                              // agent_pipeline_078:out_channel -> sys_timer_2_s1_agent:cp_channel
	wire          agent_pipeline_078_source0_startofpacket;                                                        // agent_pipeline_078:out_startofpacket -> sys_timer_2_s1_agent:cp_startofpacket
	wire          agent_pipeline_078_source0_endofpacket;                                                          // agent_pipeline_078:out_endofpacket -> sys_timer_2_s1_agent:cp_endofpacket
	wire          sys_timer_2_s1_agent_rp_valid;                                                                   // sys_timer_2_s1_agent:rp_valid -> agent_pipeline_079:in_valid
	wire  [129:0] sys_timer_2_s1_agent_rp_data;                                                                    // sys_timer_2_s1_agent:rp_data -> agent_pipeline_079:in_data
	wire          sys_timer_2_s1_agent_rp_ready;                                                                   // agent_pipeline_079:in_ready -> sys_timer_2_s1_agent:rp_ready
	wire          sys_timer_2_s1_agent_rp_startofpacket;                                                           // sys_timer_2_s1_agent:rp_startofpacket -> agent_pipeline_079:in_startofpacket
	wire          sys_timer_2_s1_agent_rp_endofpacket;                                                             // sys_timer_2_s1_agent:rp_endofpacket -> agent_pipeline_079:in_endofpacket
	wire          agent_pipeline_079_source0_valid;                                                                // agent_pipeline_079:out_valid -> router_047:sink_valid
	wire  [129:0] agent_pipeline_079_source0_data;                                                                 // agent_pipeline_079:out_data -> router_047:sink_data
	wire          agent_pipeline_079_source0_ready;                                                                // router_047:sink_ready -> agent_pipeline_079:out_ready
	wire          agent_pipeline_079_source0_startofpacket;                                                        // agent_pipeline_079:out_startofpacket -> router_047:sink_startofpacket
	wire          agent_pipeline_079_source0_endofpacket;                                                          // agent_pipeline_079:out_endofpacket -> router_047:sink_endofpacket
	wire          cmd_mux_040_src_valid;                                                                           // cmd_mux_040:src_valid -> agent_pipeline_080:in_valid
	wire  [129:0] cmd_mux_040_src_data;                                                                            // cmd_mux_040:src_data -> agent_pipeline_080:in_data
	wire          cmd_mux_040_src_ready;                                                                           // agent_pipeline_080:in_ready -> cmd_mux_040:src_ready
	wire   [44:0] cmd_mux_040_src_channel;                                                                         // cmd_mux_040:src_channel -> agent_pipeline_080:in_channel
	wire          cmd_mux_040_src_startofpacket;                                                                   // cmd_mux_040:src_startofpacket -> agent_pipeline_080:in_startofpacket
	wire          cmd_mux_040_src_endofpacket;                                                                     // cmd_mux_040:src_endofpacket -> agent_pipeline_080:in_endofpacket
	wire          agent_pipeline_080_source0_valid;                                                                // agent_pipeline_080:out_valid -> sys_gpio_bd_s1_agent:cp_valid
	wire  [129:0] agent_pipeline_080_source0_data;                                                                 // agent_pipeline_080:out_data -> sys_gpio_bd_s1_agent:cp_data
	wire          agent_pipeline_080_source0_ready;                                                                // sys_gpio_bd_s1_agent:cp_ready -> agent_pipeline_080:out_ready
	wire   [44:0] agent_pipeline_080_source0_channel;                                                              // agent_pipeline_080:out_channel -> sys_gpio_bd_s1_agent:cp_channel
	wire          agent_pipeline_080_source0_startofpacket;                                                        // agent_pipeline_080:out_startofpacket -> sys_gpio_bd_s1_agent:cp_startofpacket
	wire          agent_pipeline_080_source0_endofpacket;                                                          // agent_pipeline_080:out_endofpacket -> sys_gpio_bd_s1_agent:cp_endofpacket
	wire          sys_gpio_bd_s1_agent_rp_valid;                                                                   // sys_gpio_bd_s1_agent:rp_valid -> agent_pipeline_081:in_valid
	wire  [129:0] sys_gpio_bd_s1_agent_rp_data;                                                                    // sys_gpio_bd_s1_agent:rp_data -> agent_pipeline_081:in_data
	wire          sys_gpio_bd_s1_agent_rp_ready;                                                                   // agent_pipeline_081:in_ready -> sys_gpio_bd_s1_agent:rp_ready
	wire          sys_gpio_bd_s1_agent_rp_startofpacket;                                                           // sys_gpio_bd_s1_agent:rp_startofpacket -> agent_pipeline_081:in_startofpacket
	wire          sys_gpio_bd_s1_agent_rp_endofpacket;                                                             // sys_gpio_bd_s1_agent:rp_endofpacket -> agent_pipeline_081:in_endofpacket
	wire          agent_pipeline_081_source0_valid;                                                                // agent_pipeline_081:out_valid -> router_048:sink_valid
	wire  [129:0] agent_pipeline_081_source0_data;                                                                 // agent_pipeline_081:out_data -> router_048:sink_data
	wire          agent_pipeline_081_source0_ready;                                                                // router_048:sink_ready -> agent_pipeline_081:out_ready
	wire          agent_pipeline_081_source0_startofpacket;                                                        // agent_pipeline_081:out_startofpacket -> router_048:sink_startofpacket
	wire          agent_pipeline_081_source0_endofpacket;                                                          // agent_pipeline_081:out_endofpacket -> router_048:sink_endofpacket
	wire          cmd_mux_041_src_valid;                                                                           // cmd_mux_041:src_valid -> agent_pipeline_082:in_valid
	wire  [129:0] cmd_mux_041_src_data;                                                                            // cmd_mux_041:src_data -> agent_pipeline_082:in_data
	wire          cmd_mux_041_src_ready;                                                                           // agent_pipeline_082:in_ready -> cmd_mux_041:src_ready
	wire   [44:0] cmd_mux_041_src_channel;                                                                         // cmd_mux_041:src_channel -> agent_pipeline_082:in_channel
	wire          cmd_mux_041_src_startofpacket;                                                                   // cmd_mux_041:src_startofpacket -> agent_pipeline_082:in_startofpacket
	wire          cmd_mux_041_src_endofpacket;                                                                     // cmd_mux_041:src_endofpacket -> agent_pipeline_082:in_endofpacket
	wire          agent_pipeline_082_source0_valid;                                                                // agent_pipeline_082:out_valid -> sys_gpio_in_s1_agent:cp_valid
	wire  [129:0] agent_pipeline_082_source0_data;                                                                 // agent_pipeline_082:out_data -> sys_gpio_in_s1_agent:cp_data
	wire          agent_pipeline_082_source0_ready;                                                                // sys_gpio_in_s1_agent:cp_ready -> agent_pipeline_082:out_ready
	wire   [44:0] agent_pipeline_082_source0_channel;                                                              // agent_pipeline_082:out_channel -> sys_gpio_in_s1_agent:cp_channel
	wire          agent_pipeline_082_source0_startofpacket;                                                        // agent_pipeline_082:out_startofpacket -> sys_gpio_in_s1_agent:cp_startofpacket
	wire          agent_pipeline_082_source0_endofpacket;                                                          // agent_pipeline_082:out_endofpacket -> sys_gpio_in_s1_agent:cp_endofpacket
	wire          sys_gpio_in_s1_agent_rp_valid;                                                                   // sys_gpio_in_s1_agent:rp_valid -> agent_pipeline_083:in_valid
	wire  [129:0] sys_gpio_in_s1_agent_rp_data;                                                                    // sys_gpio_in_s1_agent:rp_data -> agent_pipeline_083:in_data
	wire          sys_gpio_in_s1_agent_rp_ready;                                                                   // agent_pipeline_083:in_ready -> sys_gpio_in_s1_agent:rp_ready
	wire          sys_gpio_in_s1_agent_rp_startofpacket;                                                           // sys_gpio_in_s1_agent:rp_startofpacket -> agent_pipeline_083:in_startofpacket
	wire          sys_gpio_in_s1_agent_rp_endofpacket;                                                             // sys_gpio_in_s1_agent:rp_endofpacket -> agent_pipeline_083:in_endofpacket
	wire          agent_pipeline_083_source0_valid;                                                                // agent_pipeline_083:out_valid -> router_049:sink_valid
	wire  [129:0] agent_pipeline_083_source0_data;                                                                 // agent_pipeline_083:out_data -> router_049:sink_data
	wire          agent_pipeline_083_source0_ready;                                                                // router_049:sink_ready -> agent_pipeline_083:out_ready
	wire          agent_pipeline_083_source0_startofpacket;                                                        // agent_pipeline_083:out_startofpacket -> router_049:sink_startofpacket
	wire          agent_pipeline_083_source0_endofpacket;                                                          // agent_pipeline_083:out_endofpacket -> router_049:sink_endofpacket
	wire          cmd_mux_042_src_valid;                                                                           // cmd_mux_042:src_valid -> agent_pipeline_084:in_valid
	wire  [129:0] cmd_mux_042_src_data;                                                                            // cmd_mux_042:src_data -> agent_pipeline_084:in_data
	wire          cmd_mux_042_src_ready;                                                                           // agent_pipeline_084:in_ready -> cmd_mux_042:src_ready
	wire   [44:0] cmd_mux_042_src_channel;                                                                         // cmd_mux_042:src_channel -> agent_pipeline_084:in_channel
	wire          cmd_mux_042_src_startofpacket;                                                                   // cmd_mux_042:src_startofpacket -> agent_pipeline_084:in_startofpacket
	wire          cmd_mux_042_src_endofpacket;                                                                     // cmd_mux_042:src_endofpacket -> agent_pipeline_084:in_endofpacket
	wire          agent_pipeline_084_source0_valid;                                                                // agent_pipeline_084:out_valid -> sys_gpio_out_s1_agent:cp_valid
	wire  [129:0] agent_pipeline_084_source0_data;                                                                 // agent_pipeline_084:out_data -> sys_gpio_out_s1_agent:cp_data
	wire          agent_pipeline_084_source0_ready;                                                                // sys_gpio_out_s1_agent:cp_ready -> agent_pipeline_084:out_ready
	wire   [44:0] agent_pipeline_084_source0_channel;                                                              // agent_pipeline_084:out_channel -> sys_gpio_out_s1_agent:cp_channel
	wire          agent_pipeline_084_source0_startofpacket;                                                        // agent_pipeline_084:out_startofpacket -> sys_gpio_out_s1_agent:cp_startofpacket
	wire          agent_pipeline_084_source0_endofpacket;                                                          // agent_pipeline_084:out_endofpacket -> sys_gpio_out_s1_agent:cp_endofpacket
	wire          sys_gpio_out_s1_agent_rp_valid;                                                                  // sys_gpio_out_s1_agent:rp_valid -> agent_pipeline_085:in_valid
	wire  [129:0] sys_gpio_out_s1_agent_rp_data;                                                                   // sys_gpio_out_s1_agent:rp_data -> agent_pipeline_085:in_data
	wire          sys_gpio_out_s1_agent_rp_ready;                                                                  // agent_pipeline_085:in_ready -> sys_gpio_out_s1_agent:rp_ready
	wire          sys_gpio_out_s1_agent_rp_startofpacket;                                                          // sys_gpio_out_s1_agent:rp_startofpacket -> agent_pipeline_085:in_startofpacket
	wire          sys_gpio_out_s1_agent_rp_endofpacket;                                                            // sys_gpio_out_s1_agent:rp_endofpacket -> agent_pipeline_085:in_endofpacket
	wire          agent_pipeline_085_source0_valid;                                                                // agent_pipeline_085:out_valid -> router_050:sink_valid
	wire  [129:0] agent_pipeline_085_source0_data;                                                                 // agent_pipeline_085:out_data -> router_050:sink_data
	wire          agent_pipeline_085_source0_ready;                                                                // router_050:sink_ready -> agent_pipeline_085:out_ready
	wire          agent_pipeline_085_source0_startofpacket;                                                        // agent_pipeline_085:out_startofpacket -> router_050:sink_startofpacket
	wire          agent_pipeline_085_source0_endofpacket;                                                          // agent_pipeline_085:out_endofpacket -> router_050:sink_endofpacket
	wire          cmd_mux_043_src_valid;                                                                           // cmd_mux_043:src_valid -> agent_pipeline_086:in_valid
	wire  [129:0] cmd_mux_043_src_data;                                                                            // cmd_mux_043:src_data -> agent_pipeline_086:in_data
	wire          cmd_mux_043_src_ready;                                                                           // agent_pipeline_086:in_ready -> cmd_mux_043:src_ready
	wire   [44:0] cmd_mux_043_src_channel;                                                                         // cmd_mux_043:src_channel -> agent_pipeline_086:in_channel
	wire          cmd_mux_043_src_startofpacket;                                                                   // cmd_mux_043:src_startofpacket -> agent_pipeline_086:in_startofpacket
	wire          cmd_mux_043_src_endofpacket;                                                                     // cmd_mux_043:src_endofpacket -> agent_pipeline_086:in_endofpacket
	wire          agent_pipeline_086_source0_valid;                                                                // agent_pipeline_086:out_valid -> sys_spi_spi_control_port_agent:cp_valid
	wire  [129:0] agent_pipeline_086_source0_data;                                                                 // agent_pipeline_086:out_data -> sys_spi_spi_control_port_agent:cp_data
	wire          agent_pipeline_086_source0_ready;                                                                // sys_spi_spi_control_port_agent:cp_ready -> agent_pipeline_086:out_ready
	wire   [44:0] agent_pipeline_086_source0_channel;                                                              // agent_pipeline_086:out_channel -> sys_spi_spi_control_port_agent:cp_channel
	wire          agent_pipeline_086_source0_startofpacket;                                                        // agent_pipeline_086:out_startofpacket -> sys_spi_spi_control_port_agent:cp_startofpacket
	wire          agent_pipeline_086_source0_endofpacket;                                                          // agent_pipeline_086:out_endofpacket -> sys_spi_spi_control_port_agent:cp_endofpacket
	wire          sys_spi_spi_control_port_agent_rp_valid;                                                         // sys_spi_spi_control_port_agent:rp_valid -> agent_pipeline_087:in_valid
	wire  [129:0] sys_spi_spi_control_port_agent_rp_data;                                                          // sys_spi_spi_control_port_agent:rp_data -> agent_pipeline_087:in_data
	wire          sys_spi_spi_control_port_agent_rp_ready;                                                         // agent_pipeline_087:in_ready -> sys_spi_spi_control_port_agent:rp_ready
	wire          sys_spi_spi_control_port_agent_rp_startofpacket;                                                 // sys_spi_spi_control_port_agent:rp_startofpacket -> agent_pipeline_087:in_startofpacket
	wire          sys_spi_spi_control_port_agent_rp_endofpacket;                                                   // sys_spi_spi_control_port_agent:rp_endofpacket -> agent_pipeline_087:in_endofpacket
	wire          agent_pipeline_087_source0_valid;                                                                // agent_pipeline_087:out_valid -> router_051:sink_valid
	wire  [129:0] agent_pipeline_087_source0_data;                                                                 // agent_pipeline_087:out_data -> router_051:sink_data
	wire          agent_pipeline_087_source0_ready;                                                                // router_051:sink_ready -> agent_pipeline_087:out_ready
	wire          agent_pipeline_087_source0_startofpacket;                                                        // agent_pipeline_087:out_startofpacket -> router_051:sink_startofpacket
	wire          agent_pipeline_087_source0_endofpacket;                                                          // agent_pipeline_087:out_endofpacket -> router_051:sink_endofpacket
	wire          cmd_mux_044_src_valid;                                                                           // cmd_mux_044:src_valid -> agent_pipeline_088:in_valid
	wire  [129:0] cmd_mux_044_src_data;                                                                            // cmd_mux_044:src_data -> agent_pipeline_088:in_data
	wire          cmd_mux_044_src_ready;                                                                           // agent_pipeline_088:in_ready -> cmd_mux_044:src_ready
	wire   [44:0] cmd_mux_044_src_channel;                                                                         // cmd_mux_044:src_channel -> agent_pipeline_088:in_channel
	wire          cmd_mux_044_src_startofpacket;                                                                   // cmd_mux_044:src_startofpacket -> agent_pipeline_088:in_startofpacket
	wire          cmd_mux_044_src_endofpacket;                                                                     // cmd_mux_044:src_endofpacket -> agent_pipeline_088:in_endofpacket
	wire          agent_pipeline_088_source0_valid;                                                                // agent_pipeline_088:out_valid -> sys_flash_uas_agent:cp_valid
	wire  [129:0] agent_pipeline_088_source0_data;                                                                 // agent_pipeline_088:out_data -> sys_flash_uas_agent:cp_data
	wire          agent_pipeline_088_source0_ready;                                                                // sys_flash_uas_agent:cp_ready -> agent_pipeline_088:out_ready
	wire   [44:0] agent_pipeline_088_source0_channel;                                                              // agent_pipeline_088:out_channel -> sys_flash_uas_agent:cp_channel
	wire          agent_pipeline_088_source0_startofpacket;                                                        // agent_pipeline_088:out_startofpacket -> sys_flash_uas_agent:cp_startofpacket
	wire          agent_pipeline_088_source0_endofpacket;                                                          // agent_pipeline_088:out_endofpacket -> sys_flash_uas_agent:cp_endofpacket
	wire          sys_flash_uas_agent_rp_valid;                                                                    // sys_flash_uas_agent:rp_valid -> agent_pipeline_089:in_valid
	wire  [129:0] sys_flash_uas_agent_rp_data;                                                                     // sys_flash_uas_agent:rp_data -> agent_pipeline_089:in_data
	wire          sys_flash_uas_agent_rp_ready;                                                                    // agent_pipeline_089:in_ready -> sys_flash_uas_agent:rp_ready
	wire          sys_flash_uas_agent_rp_startofpacket;                                                            // sys_flash_uas_agent:rp_startofpacket -> agent_pipeline_089:in_startofpacket
	wire          sys_flash_uas_agent_rp_endofpacket;                                                              // sys_flash_uas_agent:rp_endofpacket -> agent_pipeline_089:in_endofpacket
	wire          agent_pipeline_089_source0_valid;                                                                // agent_pipeline_089:out_valid -> router_052:sink_valid
	wire  [129:0] agent_pipeline_089_source0_data;                                                                 // agent_pipeline_089:out_data -> router_052:sink_data
	wire          agent_pipeline_089_source0_ready;                                                                // router_052:sink_ready -> agent_pipeline_089:out_ready
	wire          agent_pipeline_089_source0_startofpacket;                                                        // agent_pipeline_089:out_startofpacket -> router_052:sink_startofpacket
	wire          agent_pipeline_089_source0_endofpacket;                                                          // agent_pipeline_089:out_endofpacket -> router_052:sink_endofpacket
	wire          cmd_demux_src0_valid;                                                                            // cmd_demux:src0_valid -> mux_pipeline:in_valid
	wire  [129:0] cmd_demux_src0_data;                                                                             // cmd_demux:src0_data -> mux_pipeline:in_data
	wire          cmd_demux_src0_ready;                                                                            // mux_pipeline:in_ready -> cmd_demux:src0_ready
	wire   [44:0] cmd_demux_src0_channel;                                                                          // cmd_demux:src0_channel -> mux_pipeline:in_channel
	wire          cmd_demux_src0_startofpacket;                                                                    // cmd_demux:src0_startofpacket -> mux_pipeline:in_startofpacket
	wire          cmd_demux_src0_endofpacket;                                                                      // cmd_demux:src0_endofpacket -> mux_pipeline:in_endofpacket
	wire          mux_pipeline_source0_valid;                                                                      // mux_pipeline:out_valid -> cmd_mux:sink0_valid
	wire  [129:0] mux_pipeline_source0_data;                                                                       // mux_pipeline:out_data -> cmd_mux:sink0_data
	wire          mux_pipeline_source0_ready;                                                                      // cmd_mux:sink0_ready -> mux_pipeline:out_ready
	wire   [44:0] mux_pipeline_source0_channel;                                                                    // mux_pipeline:out_channel -> cmd_mux:sink0_channel
	wire          mux_pipeline_source0_startofpacket;                                                              // mux_pipeline:out_startofpacket -> cmd_mux:sink0_startofpacket
	wire          mux_pipeline_source0_endofpacket;                                                                // mux_pipeline:out_endofpacket -> cmd_mux:sink0_endofpacket
	wire          cmd_demux_src1_valid;                                                                            // cmd_demux:src1_valid -> mux_pipeline_001:in_valid
	wire  [129:0] cmd_demux_src1_data;                                                                             // cmd_demux:src1_data -> mux_pipeline_001:in_data
	wire          cmd_demux_src1_ready;                                                                            // mux_pipeline_001:in_ready -> cmd_demux:src1_ready
	wire   [44:0] cmd_demux_src1_channel;                                                                          // cmd_demux:src1_channel -> mux_pipeline_001:in_channel
	wire          cmd_demux_src1_startofpacket;                                                                    // cmd_demux:src1_startofpacket -> mux_pipeline_001:in_startofpacket
	wire          cmd_demux_src1_endofpacket;                                                                      // cmd_demux:src1_endofpacket -> mux_pipeline_001:in_endofpacket
	wire          mux_pipeline_001_source0_valid;                                                                  // mux_pipeline_001:out_valid -> cmd_mux_001:sink0_valid
	wire  [129:0] mux_pipeline_001_source0_data;                                                                   // mux_pipeline_001:out_data -> cmd_mux_001:sink0_data
	wire          mux_pipeline_001_source0_ready;                                                                  // cmd_mux_001:sink0_ready -> mux_pipeline_001:out_ready
	wire   [44:0] mux_pipeline_001_source0_channel;                                                                // mux_pipeline_001:out_channel -> cmd_mux_001:sink0_channel
	wire          mux_pipeline_001_source0_startofpacket;                                                          // mux_pipeline_001:out_startofpacket -> cmd_mux_001:sink0_startofpacket
	wire          mux_pipeline_001_source0_endofpacket;                                                            // mux_pipeline_001:out_endofpacket -> cmd_mux_001:sink0_endofpacket
	wire          cmd_demux_src2_valid;                                                                            // cmd_demux:src2_valid -> mux_pipeline_002:in_valid
	wire  [129:0] cmd_demux_src2_data;                                                                             // cmd_demux:src2_data -> mux_pipeline_002:in_data
	wire          cmd_demux_src2_ready;                                                                            // mux_pipeline_002:in_ready -> cmd_demux:src2_ready
	wire   [44:0] cmd_demux_src2_channel;                                                                          // cmd_demux:src2_channel -> mux_pipeline_002:in_channel
	wire          cmd_demux_src2_startofpacket;                                                                    // cmd_demux:src2_startofpacket -> mux_pipeline_002:in_startofpacket
	wire          cmd_demux_src2_endofpacket;                                                                      // cmd_demux:src2_endofpacket -> mux_pipeline_002:in_endofpacket
	wire          mux_pipeline_002_source0_valid;                                                                  // mux_pipeline_002:out_valid -> cmd_mux_002:sink0_valid
	wire  [129:0] mux_pipeline_002_source0_data;                                                                   // mux_pipeline_002:out_data -> cmd_mux_002:sink0_data
	wire          mux_pipeline_002_source0_ready;                                                                  // cmd_mux_002:sink0_ready -> mux_pipeline_002:out_ready
	wire   [44:0] mux_pipeline_002_source0_channel;                                                                // mux_pipeline_002:out_channel -> cmd_mux_002:sink0_channel
	wire          mux_pipeline_002_source0_startofpacket;                                                          // mux_pipeline_002:out_startofpacket -> cmd_mux_002:sink0_startofpacket
	wire          mux_pipeline_002_source0_endofpacket;                                                            // mux_pipeline_002:out_endofpacket -> cmd_mux_002:sink0_endofpacket
	wire          cmd_demux_src3_valid;                                                                            // cmd_demux:src3_valid -> mux_pipeline_003:in_valid
	wire  [129:0] cmd_demux_src3_data;                                                                             // cmd_demux:src3_data -> mux_pipeline_003:in_data
	wire          cmd_demux_src3_ready;                                                                            // mux_pipeline_003:in_ready -> cmd_demux:src3_ready
	wire   [44:0] cmd_demux_src3_channel;                                                                          // cmd_demux:src3_channel -> mux_pipeline_003:in_channel
	wire          cmd_demux_src3_startofpacket;                                                                    // cmd_demux:src3_startofpacket -> mux_pipeline_003:in_startofpacket
	wire          cmd_demux_src3_endofpacket;                                                                      // cmd_demux:src3_endofpacket -> mux_pipeline_003:in_endofpacket
	wire          mux_pipeline_003_source0_valid;                                                                  // mux_pipeline_003:out_valid -> cmd_mux_003:sink0_valid
	wire  [129:0] mux_pipeline_003_source0_data;                                                                   // mux_pipeline_003:out_data -> cmd_mux_003:sink0_data
	wire          mux_pipeline_003_source0_ready;                                                                  // cmd_mux_003:sink0_ready -> mux_pipeline_003:out_ready
	wire   [44:0] mux_pipeline_003_source0_channel;                                                                // mux_pipeline_003:out_channel -> cmd_mux_003:sink0_channel
	wire          mux_pipeline_003_source0_startofpacket;                                                          // mux_pipeline_003:out_startofpacket -> cmd_mux_003:sink0_startofpacket
	wire          mux_pipeline_003_source0_endofpacket;                                                            // mux_pipeline_003:out_endofpacket -> cmd_mux_003:sink0_endofpacket
	wire          cmd_demux_src4_valid;                                                                            // cmd_demux:src4_valid -> mux_pipeline_004:in_valid
	wire  [129:0] cmd_demux_src4_data;                                                                             // cmd_demux:src4_data -> mux_pipeline_004:in_data
	wire          cmd_demux_src4_ready;                                                                            // mux_pipeline_004:in_ready -> cmd_demux:src4_ready
	wire   [44:0] cmd_demux_src4_channel;                                                                          // cmd_demux:src4_channel -> mux_pipeline_004:in_channel
	wire          cmd_demux_src4_startofpacket;                                                                    // cmd_demux:src4_startofpacket -> mux_pipeline_004:in_startofpacket
	wire          cmd_demux_src4_endofpacket;                                                                      // cmd_demux:src4_endofpacket -> mux_pipeline_004:in_endofpacket
	wire          mux_pipeline_004_source0_valid;                                                                  // mux_pipeline_004:out_valid -> cmd_mux_004:sink0_valid
	wire  [129:0] mux_pipeline_004_source0_data;                                                                   // mux_pipeline_004:out_data -> cmd_mux_004:sink0_data
	wire          mux_pipeline_004_source0_ready;                                                                  // cmd_mux_004:sink0_ready -> mux_pipeline_004:out_ready
	wire   [44:0] mux_pipeline_004_source0_channel;                                                                // mux_pipeline_004:out_channel -> cmd_mux_004:sink0_channel
	wire          mux_pipeline_004_source0_startofpacket;                                                          // mux_pipeline_004:out_startofpacket -> cmd_mux_004:sink0_startofpacket
	wire          mux_pipeline_004_source0_endofpacket;                                                            // mux_pipeline_004:out_endofpacket -> cmd_mux_004:sink0_endofpacket
	wire          cmd_demux_src5_valid;                                                                            // cmd_demux:src5_valid -> mux_pipeline_005:in_valid
	wire  [129:0] cmd_demux_src5_data;                                                                             // cmd_demux:src5_data -> mux_pipeline_005:in_data
	wire          cmd_demux_src5_ready;                                                                            // mux_pipeline_005:in_ready -> cmd_demux:src5_ready
	wire   [44:0] cmd_demux_src5_channel;                                                                          // cmd_demux:src5_channel -> mux_pipeline_005:in_channel
	wire          cmd_demux_src5_startofpacket;                                                                    // cmd_demux:src5_startofpacket -> mux_pipeline_005:in_startofpacket
	wire          cmd_demux_src5_endofpacket;                                                                      // cmd_demux:src5_endofpacket -> mux_pipeline_005:in_endofpacket
	wire          mux_pipeline_005_source0_valid;                                                                  // mux_pipeline_005:out_valid -> cmd_mux_005:sink0_valid
	wire  [129:0] mux_pipeline_005_source0_data;                                                                   // mux_pipeline_005:out_data -> cmd_mux_005:sink0_data
	wire          mux_pipeline_005_source0_ready;                                                                  // cmd_mux_005:sink0_ready -> mux_pipeline_005:out_ready
	wire   [44:0] mux_pipeline_005_source0_channel;                                                                // mux_pipeline_005:out_channel -> cmd_mux_005:sink0_channel
	wire          mux_pipeline_005_source0_startofpacket;                                                          // mux_pipeline_005:out_startofpacket -> cmd_mux_005:sink0_startofpacket
	wire          mux_pipeline_005_source0_endofpacket;                                                            // mux_pipeline_005:out_endofpacket -> cmd_mux_005:sink0_endofpacket
	wire          cmd_demux_src6_valid;                                                                            // cmd_demux:src6_valid -> mux_pipeline_006:in_valid
	wire  [129:0] cmd_demux_src6_data;                                                                             // cmd_demux:src6_data -> mux_pipeline_006:in_data
	wire          cmd_demux_src6_ready;                                                                            // mux_pipeline_006:in_ready -> cmd_demux:src6_ready
	wire   [44:0] cmd_demux_src6_channel;                                                                          // cmd_demux:src6_channel -> mux_pipeline_006:in_channel
	wire          cmd_demux_src6_startofpacket;                                                                    // cmd_demux:src6_startofpacket -> mux_pipeline_006:in_startofpacket
	wire          cmd_demux_src6_endofpacket;                                                                      // cmd_demux:src6_endofpacket -> mux_pipeline_006:in_endofpacket
	wire          mux_pipeline_006_source0_valid;                                                                  // mux_pipeline_006:out_valid -> cmd_mux_006:sink0_valid
	wire  [129:0] mux_pipeline_006_source0_data;                                                                   // mux_pipeline_006:out_data -> cmd_mux_006:sink0_data
	wire          mux_pipeline_006_source0_ready;                                                                  // cmd_mux_006:sink0_ready -> mux_pipeline_006:out_ready
	wire   [44:0] mux_pipeline_006_source0_channel;                                                                // mux_pipeline_006:out_channel -> cmd_mux_006:sink0_channel
	wire          mux_pipeline_006_source0_startofpacket;                                                          // mux_pipeline_006:out_startofpacket -> cmd_mux_006:sink0_startofpacket
	wire          mux_pipeline_006_source0_endofpacket;                                                            // mux_pipeline_006:out_endofpacket -> cmd_mux_006:sink0_endofpacket
	wire          cmd_demux_src7_valid;                                                                            // cmd_demux:src7_valid -> mux_pipeline_007:in_valid
	wire  [129:0] cmd_demux_src7_data;                                                                             // cmd_demux:src7_data -> mux_pipeline_007:in_data
	wire          cmd_demux_src7_ready;                                                                            // mux_pipeline_007:in_ready -> cmd_demux:src7_ready
	wire   [44:0] cmd_demux_src7_channel;                                                                          // cmd_demux:src7_channel -> mux_pipeline_007:in_channel
	wire          cmd_demux_src7_startofpacket;                                                                    // cmd_demux:src7_startofpacket -> mux_pipeline_007:in_startofpacket
	wire          cmd_demux_src7_endofpacket;                                                                      // cmd_demux:src7_endofpacket -> mux_pipeline_007:in_endofpacket
	wire          mux_pipeline_007_source0_valid;                                                                  // mux_pipeline_007:out_valid -> cmd_mux_007:sink0_valid
	wire  [129:0] mux_pipeline_007_source0_data;                                                                   // mux_pipeline_007:out_data -> cmd_mux_007:sink0_data
	wire          mux_pipeline_007_source0_ready;                                                                  // cmd_mux_007:sink0_ready -> mux_pipeline_007:out_ready
	wire   [44:0] mux_pipeline_007_source0_channel;                                                                // mux_pipeline_007:out_channel -> cmd_mux_007:sink0_channel
	wire          mux_pipeline_007_source0_startofpacket;                                                          // mux_pipeline_007:out_startofpacket -> cmd_mux_007:sink0_startofpacket
	wire          mux_pipeline_007_source0_endofpacket;                                                            // mux_pipeline_007:out_endofpacket -> cmd_mux_007:sink0_endofpacket
	wire          cmd_demux_src8_valid;                                                                            // cmd_demux:src8_valid -> mux_pipeline_008:in_valid
	wire  [129:0] cmd_demux_src8_data;                                                                             // cmd_demux:src8_data -> mux_pipeline_008:in_data
	wire          cmd_demux_src8_ready;                                                                            // mux_pipeline_008:in_ready -> cmd_demux:src8_ready
	wire   [44:0] cmd_demux_src8_channel;                                                                          // cmd_demux:src8_channel -> mux_pipeline_008:in_channel
	wire          cmd_demux_src8_startofpacket;                                                                    // cmd_demux:src8_startofpacket -> mux_pipeline_008:in_startofpacket
	wire          cmd_demux_src8_endofpacket;                                                                      // cmd_demux:src8_endofpacket -> mux_pipeline_008:in_endofpacket
	wire          mux_pipeline_008_source0_valid;                                                                  // mux_pipeline_008:out_valid -> cmd_mux_008:sink0_valid
	wire  [129:0] mux_pipeline_008_source0_data;                                                                   // mux_pipeline_008:out_data -> cmd_mux_008:sink0_data
	wire          mux_pipeline_008_source0_ready;                                                                  // cmd_mux_008:sink0_ready -> mux_pipeline_008:out_ready
	wire   [44:0] mux_pipeline_008_source0_channel;                                                                // mux_pipeline_008:out_channel -> cmd_mux_008:sink0_channel
	wire          mux_pipeline_008_source0_startofpacket;                                                          // mux_pipeline_008:out_startofpacket -> cmd_mux_008:sink0_startofpacket
	wire          mux_pipeline_008_source0_endofpacket;                                                            // mux_pipeline_008:out_endofpacket -> cmd_mux_008:sink0_endofpacket
	wire          cmd_demux_src9_valid;                                                                            // cmd_demux:src9_valid -> mux_pipeline_009:in_valid
	wire  [129:0] cmd_demux_src9_data;                                                                             // cmd_demux:src9_data -> mux_pipeline_009:in_data
	wire          cmd_demux_src9_ready;                                                                            // mux_pipeline_009:in_ready -> cmd_demux:src9_ready
	wire   [44:0] cmd_demux_src9_channel;                                                                          // cmd_demux:src9_channel -> mux_pipeline_009:in_channel
	wire          cmd_demux_src9_startofpacket;                                                                    // cmd_demux:src9_startofpacket -> mux_pipeline_009:in_startofpacket
	wire          cmd_demux_src9_endofpacket;                                                                      // cmd_demux:src9_endofpacket -> mux_pipeline_009:in_endofpacket
	wire          mux_pipeline_009_source0_valid;                                                                  // mux_pipeline_009:out_valid -> cmd_mux_009:sink0_valid
	wire  [129:0] mux_pipeline_009_source0_data;                                                                   // mux_pipeline_009:out_data -> cmd_mux_009:sink0_data
	wire          mux_pipeline_009_source0_ready;                                                                  // cmd_mux_009:sink0_ready -> mux_pipeline_009:out_ready
	wire   [44:0] mux_pipeline_009_source0_channel;                                                                // mux_pipeline_009:out_channel -> cmd_mux_009:sink0_channel
	wire          mux_pipeline_009_source0_startofpacket;                                                          // mux_pipeline_009:out_startofpacket -> cmd_mux_009:sink0_startofpacket
	wire          mux_pipeline_009_source0_endofpacket;                                                            // mux_pipeline_009:out_endofpacket -> cmd_mux_009:sink0_endofpacket
	wire          cmd_demux_src10_valid;                                                                           // cmd_demux:src10_valid -> mux_pipeline_010:in_valid
	wire  [129:0] cmd_demux_src10_data;                                                                            // cmd_demux:src10_data -> mux_pipeline_010:in_data
	wire          cmd_demux_src10_ready;                                                                           // mux_pipeline_010:in_ready -> cmd_demux:src10_ready
	wire   [44:0] cmd_demux_src10_channel;                                                                         // cmd_demux:src10_channel -> mux_pipeline_010:in_channel
	wire          cmd_demux_src10_startofpacket;                                                                   // cmd_demux:src10_startofpacket -> mux_pipeline_010:in_startofpacket
	wire          cmd_demux_src10_endofpacket;                                                                     // cmd_demux:src10_endofpacket -> mux_pipeline_010:in_endofpacket
	wire          mux_pipeline_010_source0_valid;                                                                  // mux_pipeline_010:out_valid -> cmd_mux_010:sink0_valid
	wire  [129:0] mux_pipeline_010_source0_data;                                                                   // mux_pipeline_010:out_data -> cmd_mux_010:sink0_data
	wire          mux_pipeline_010_source0_ready;                                                                  // cmd_mux_010:sink0_ready -> mux_pipeline_010:out_ready
	wire   [44:0] mux_pipeline_010_source0_channel;                                                                // mux_pipeline_010:out_channel -> cmd_mux_010:sink0_channel
	wire          mux_pipeline_010_source0_startofpacket;                                                          // mux_pipeline_010:out_startofpacket -> cmd_mux_010:sink0_startofpacket
	wire          mux_pipeline_010_source0_endofpacket;                                                            // mux_pipeline_010:out_endofpacket -> cmd_mux_010:sink0_endofpacket
	wire          cmd_demux_src11_valid;                                                                           // cmd_demux:src11_valid -> mux_pipeline_011:in_valid
	wire  [129:0] cmd_demux_src11_data;                                                                            // cmd_demux:src11_data -> mux_pipeline_011:in_data
	wire          cmd_demux_src11_ready;                                                                           // mux_pipeline_011:in_ready -> cmd_demux:src11_ready
	wire   [44:0] cmd_demux_src11_channel;                                                                         // cmd_demux:src11_channel -> mux_pipeline_011:in_channel
	wire          cmd_demux_src11_startofpacket;                                                                   // cmd_demux:src11_startofpacket -> mux_pipeline_011:in_startofpacket
	wire          cmd_demux_src11_endofpacket;                                                                     // cmd_demux:src11_endofpacket -> mux_pipeline_011:in_endofpacket
	wire          mux_pipeline_011_source0_valid;                                                                  // mux_pipeline_011:out_valid -> cmd_mux_011:sink0_valid
	wire  [129:0] mux_pipeline_011_source0_data;                                                                   // mux_pipeline_011:out_data -> cmd_mux_011:sink0_data
	wire          mux_pipeline_011_source0_ready;                                                                  // cmd_mux_011:sink0_ready -> mux_pipeline_011:out_ready
	wire   [44:0] mux_pipeline_011_source0_channel;                                                                // mux_pipeline_011:out_channel -> cmd_mux_011:sink0_channel
	wire          mux_pipeline_011_source0_startofpacket;                                                          // mux_pipeline_011:out_startofpacket -> cmd_mux_011:sink0_startofpacket
	wire          mux_pipeline_011_source0_endofpacket;                                                            // mux_pipeline_011:out_endofpacket -> cmd_mux_011:sink0_endofpacket
	wire          cmd_demux_src12_valid;                                                                           // cmd_demux:src12_valid -> mux_pipeline_012:in_valid
	wire  [129:0] cmd_demux_src12_data;                                                                            // cmd_demux:src12_data -> mux_pipeline_012:in_data
	wire          cmd_demux_src12_ready;                                                                           // mux_pipeline_012:in_ready -> cmd_demux:src12_ready
	wire   [44:0] cmd_demux_src12_channel;                                                                         // cmd_demux:src12_channel -> mux_pipeline_012:in_channel
	wire          cmd_demux_src12_startofpacket;                                                                   // cmd_demux:src12_startofpacket -> mux_pipeline_012:in_startofpacket
	wire          cmd_demux_src12_endofpacket;                                                                     // cmd_demux:src12_endofpacket -> mux_pipeline_012:in_endofpacket
	wire          mux_pipeline_012_source0_valid;                                                                  // mux_pipeline_012:out_valid -> cmd_mux_012:sink0_valid
	wire  [129:0] mux_pipeline_012_source0_data;                                                                   // mux_pipeline_012:out_data -> cmd_mux_012:sink0_data
	wire          mux_pipeline_012_source0_ready;                                                                  // cmd_mux_012:sink0_ready -> mux_pipeline_012:out_ready
	wire   [44:0] mux_pipeline_012_source0_channel;                                                                // mux_pipeline_012:out_channel -> cmd_mux_012:sink0_channel
	wire          mux_pipeline_012_source0_startofpacket;                                                          // mux_pipeline_012:out_startofpacket -> cmd_mux_012:sink0_startofpacket
	wire          mux_pipeline_012_source0_endofpacket;                                                            // mux_pipeline_012:out_endofpacket -> cmd_mux_012:sink0_endofpacket
	wire          cmd_demux_src13_valid;                                                                           // cmd_demux:src13_valid -> mux_pipeline_013:in_valid
	wire  [129:0] cmd_demux_src13_data;                                                                            // cmd_demux:src13_data -> mux_pipeline_013:in_data
	wire          cmd_demux_src13_ready;                                                                           // mux_pipeline_013:in_ready -> cmd_demux:src13_ready
	wire   [44:0] cmd_demux_src13_channel;                                                                         // cmd_demux:src13_channel -> mux_pipeline_013:in_channel
	wire          cmd_demux_src13_startofpacket;                                                                   // cmd_demux:src13_startofpacket -> mux_pipeline_013:in_startofpacket
	wire          cmd_demux_src13_endofpacket;                                                                     // cmd_demux:src13_endofpacket -> mux_pipeline_013:in_endofpacket
	wire          mux_pipeline_013_source0_valid;                                                                  // mux_pipeline_013:out_valid -> cmd_mux_013:sink0_valid
	wire  [129:0] mux_pipeline_013_source0_data;                                                                   // mux_pipeline_013:out_data -> cmd_mux_013:sink0_data
	wire          mux_pipeline_013_source0_ready;                                                                  // cmd_mux_013:sink0_ready -> mux_pipeline_013:out_ready
	wire   [44:0] mux_pipeline_013_source0_channel;                                                                // mux_pipeline_013:out_channel -> cmd_mux_013:sink0_channel
	wire          mux_pipeline_013_source0_startofpacket;                                                          // mux_pipeline_013:out_startofpacket -> cmd_mux_013:sink0_startofpacket
	wire          mux_pipeline_013_source0_endofpacket;                                                            // mux_pipeline_013:out_endofpacket -> cmd_mux_013:sink0_endofpacket
	wire          cmd_demux_src14_valid;                                                                           // cmd_demux:src14_valid -> mux_pipeline_014:in_valid
	wire  [129:0] cmd_demux_src14_data;                                                                            // cmd_demux:src14_data -> mux_pipeline_014:in_data
	wire          cmd_demux_src14_ready;                                                                           // mux_pipeline_014:in_ready -> cmd_demux:src14_ready
	wire   [44:0] cmd_demux_src14_channel;                                                                         // cmd_demux:src14_channel -> mux_pipeline_014:in_channel
	wire          cmd_demux_src14_startofpacket;                                                                   // cmd_demux:src14_startofpacket -> mux_pipeline_014:in_startofpacket
	wire          cmd_demux_src14_endofpacket;                                                                     // cmd_demux:src14_endofpacket -> mux_pipeline_014:in_endofpacket
	wire          mux_pipeline_014_source0_valid;                                                                  // mux_pipeline_014:out_valid -> cmd_mux_014:sink0_valid
	wire  [129:0] mux_pipeline_014_source0_data;                                                                   // mux_pipeline_014:out_data -> cmd_mux_014:sink0_data
	wire          mux_pipeline_014_source0_ready;                                                                  // cmd_mux_014:sink0_ready -> mux_pipeline_014:out_ready
	wire   [44:0] mux_pipeline_014_source0_channel;                                                                // mux_pipeline_014:out_channel -> cmd_mux_014:sink0_channel
	wire          mux_pipeline_014_source0_startofpacket;                                                          // mux_pipeline_014:out_startofpacket -> cmd_mux_014:sink0_startofpacket
	wire          mux_pipeline_014_source0_endofpacket;                                                            // mux_pipeline_014:out_endofpacket -> cmd_mux_014:sink0_endofpacket
	wire          cmd_demux_src15_valid;                                                                           // cmd_demux:src15_valid -> mux_pipeline_015:in_valid
	wire  [129:0] cmd_demux_src15_data;                                                                            // cmd_demux:src15_data -> mux_pipeline_015:in_data
	wire          cmd_demux_src15_ready;                                                                           // mux_pipeline_015:in_ready -> cmd_demux:src15_ready
	wire   [44:0] cmd_demux_src15_channel;                                                                         // cmd_demux:src15_channel -> mux_pipeline_015:in_channel
	wire          cmd_demux_src15_startofpacket;                                                                   // cmd_demux:src15_startofpacket -> mux_pipeline_015:in_startofpacket
	wire          cmd_demux_src15_endofpacket;                                                                     // cmd_demux:src15_endofpacket -> mux_pipeline_015:in_endofpacket
	wire          mux_pipeline_015_source0_valid;                                                                  // mux_pipeline_015:out_valid -> cmd_mux_015:sink0_valid
	wire  [129:0] mux_pipeline_015_source0_data;                                                                   // mux_pipeline_015:out_data -> cmd_mux_015:sink0_data
	wire          mux_pipeline_015_source0_ready;                                                                  // cmd_mux_015:sink0_ready -> mux_pipeline_015:out_ready
	wire   [44:0] mux_pipeline_015_source0_channel;                                                                // mux_pipeline_015:out_channel -> cmd_mux_015:sink0_channel
	wire          mux_pipeline_015_source0_startofpacket;                                                          // mux_pipeline_015:out_startofpacket -> cmd_mux_015:sink0_startofpacket
	wire          mux_pipeline_015_source0_endofpacket;                                                            // mux_pipeline_015:out_endofpacket -> cmd_mux_015:sink0_endofpacket
	wire          cmd_demux_src16_valid;                                                                           // cmd_demux:src16_valid -> mux_pipeline_016:in_valid
	wire  [129:0] cmd_demux_src16_data;                                                                            // cmd_demux:src16_data -> mux_pipeline_016:in_data
	wire          cmd_demux_src16_ready;                                                                           // mux_pipeline_016:in_ready -> cmd_demux:src16_ready
	wire   [44:0] cmd_demux_src16_channel;                                                                         // cmd_demux:src16_channel -> mux_pipeline_016:in_channel
	wire          cmd_demux_src16_startofpacket;                                                                   // cmd_demux:src16_startofpacket -> mux_pipeline_016:in_startofpacket
	wire          cmd_demux_src16_endofpacket;                                                                     // cmd_demux:src16_endofpacket -> mux_pipeline_016:in_endofpacket
	wire          mux_pipeline_016_source0_valid;                                                                  // mux_pipeline_016:out_valid -> cmd_mux_016:sink0_valid
	wire  [129:0] mux_pipeline_016_source0_data;                                                                   // mux_pipeline_016:out_data -> cmd_mux_016:sink0_data
	wire          mux_pipeline_016_source0_ready;                                                                  // cmd_mux_016:sink0_ready -> mux_pipeline_016:out_ready
	wire   [44:0] mux_pipeline_016_source0_channel;                                                                // mux_pipeline_016:out_channel -> cmd_mux_016:sink0_channel
	wire          mux_pipeline_016_source0_startofpacket;                                                          // mux_pipeline_016:out_startofpacket -> cmd_mux_016:sink0_startofpacket
	wire          mux_pipeline_016_source0_endofpacket;                                                            // mux_pipeline_016:out_endofpacket -> cmd_mux_016:sink0_endofpacket
	wire          cmd_demux_src17_valid;                                                                           // cmd_demux:src17_valid -> mux_pipeline_017:in_valid
	wire  [129:0] cmd_demux_src17_data;                                                                            // cmd_demux:src17_data -> mux_pipeline_017:in_data
	wire          cmd_demux_src17_ready;                                                                           // mux_pipeline_017:in_ready -> cmd_demux:src17_ready
	wire   [44:0] cmd_demux_src17_channel;                                                                         // cmd_demux:src17_channel -> mux_pipeline_017:in_channel
	wire          cmd_demux_src17_startofpacket;                                                                   // cmd_demux:src17_startofpacket -> mux_pipeline_017:in_startofpacket
	wire          cmd_demux_src17_endofpacket;                                                                     // cmd_demux:src17_endofpacket -> mux_pipeline_017:in_endofpacket
	wire          mux_pipeline_017_source0_valid;                                                                  // mux_pipeline_017:out_valid -> cmd_mux_017:sink0_valid
	wire  [129:0] mux_pipeline_017_source0_data;                                                                   // mux_pipeline_017:out_data -> cmd_mux_017:sink0_data
	wire          mux_pipeline_017_source0_ready;                                                                  // cmd_mux_017:sink0_ready -> mux_pipeline_017:out_ready
	wire   [44:0] mux_pipeline_017_source0_channel;                                                                // mux_pipeline_017:out_channel -> cmd_mux_017:sink0_channel
	wire          mux_pipeline_017_source0_startofpacket;                                                          // mux_pipeline_017:out_startofpacket -> cmd_mux_017:sink0_startofpacket
	wire          mux_pipeline_017_source0_endofpacket;                                                            // mux_pipeline_017:out_endofpacket -> cmd_mux_017:sink0_endofpacket
	wire          cmd_demux_src18_valid;                                                                           // cmd_demux:src18_valid -> mux_pipeline_018:in_valid
	wire  [129:0] cmd_demux_src18_data;                                                                            // cmd_demux:src18_data -> mux_pipeline_018:in_data
	wire          cmd_demux_src18_ready;                                                                           // mux_pipeline_018:in_ready -> cmd_demux:src18_ready
	wire   [44:0] cmd_demux_src18_channel;                                                                         // cmd_demux:src18_channel -> mux_pipeline_018:in_channel
	wire          cmd_demux_src18_startofpacket;                                                                   // cmd_demux:src18_startofpacket -> mux_pipeline_018:in_startofpacket
	wire          cmd_demux_src18_endofpacket;                                                                     // cmd_demux:src18_endofpacket -> mux_pipeline_018:in_endofpacket
	wire          mux_pipeline_018_source0_valid;                                                                  // mux_pipeline_018:out_valid -> cmd_mux_018:sink0_valid
	wire  [129:0] mux_pipeline_018_source0_data;                                                                   // mux_pipeline_018:out_data -> cmd_mux_018:sink0_data
	wire          mux_pipeline_018_source0_ready;                                                                  // cmd_mux_018:sink0_ready -> mux_pipeline_018:out_ready
	wire   [44:0] mux_pipeline_018_source0_channel;                                                                // mux_pipeline_018:out_channel -> cmd_mux_018:sink0_channel
	wire          mux_pipeline_018_source0_startofpacket;                                                          // mux_pipeline_018:out_startofpacket -> cmd_mux_018:sink0_startofpacket
	wire          mux_pipeline_018_source0_endofpacket;                                                            // mux_pipeline_018:out_endofpacket -> cmd_mux_018:sink0_endofpacket
	wire          cmd_demux_src19_valid;                                                                           // cmd_demux:src19_valid -> mux_pipeline_019:in_valid
	wire  [129:0] cmd_demux_src19_data;                                                                            // cmd_demux:src19_data -> mux_pipeline_019:in_data
	wire          cmd_demux_src19_ready;                                                                           // mux_pipeline_019:in_ready -> cmd_demux:src19_ready
	wire   [44:0] cmd_demux_src19_channel;                                                                         // cmd_demux:src19_channel -> mux_pipeline_019:in_channel
	wire          cmd_demux_src19_startofpacket;                                                                   // cmd_demux:src19_startofpacket -> mux_pipeline_019:in_startofpacket
	wire          cmd_demux_src19_endofpacket;                                                                     // cmd_demux:src19_endofpacket -> mux_pipeline_019:in_endofpacket
	wire          mux_pipeline_019_source0_valid;                                                                  // mux_pipeline_019:out_valid -> cmd_mux_019:sink0_valid
	wire  [129:0] mux_pipeline_019_source0_data;                                                                   // mux_pipeline_019:out_data -> cmd_mux_019:sink0_data
	wire          mux_pipeline_019_source0_ready;                                                                  // cmd_mux_019:sink0_ready -> mux_pipeline_019:out_ready
	wire   [44:0] mux_pipeline_019_source0_channel;                                                                // mux_pipeline_019:out_channel -> cmd_mux_019:sink0_channel
	wire          mux_pipeline_019_source0_startofpacket;                                                          // mux_pipeline_019:out_startofpacket -> cmd_mux_019:sink0_startofpacket
	wire          mux_pipeline_019_source0_endofpacket;                                                            // mux_pipeline_019:out_endofpacket -> cmd_mux_019:sink0_endofpacket
	wire          cmd_demux_src20_valid;                                                                           // cmd_demux:src20_valid -> mux_pipeline_020:in_valid
	wire  [129:0] cmd_demux_src20_data;                                                                            // cmd_demux:src20_data -> mux_pipeline_020:in_data
	wire          cmd_demux_src20_ready;                                                                           // mux_pipeline_020:in_ready -> cmd_demux:src20_ready
	wire   [44:0] cmd_demux_src20_channel;                                                                         // cmd_demux:src20_channel -> mux_pipeline_020:in_channel
	wire          cmd_demux_src20_startofpacket;                                                                   // cmd_demux:src20_startofpacket -> mux_pipeline_020:in_startofpacket
	wire          cmd_demux_src20_endofpacket;                                                                     // cmd_demux:src20_endofpacket -> mux_pipeline_020:in_endofpacket
	wire          mux_pipeline_020_source0_valid;                                                                  // mux_pipeline_020:out_valid -> cmd_mux_020:sink0_valid
	wire  [129:0] mux_pipeline_020_source0_data;                                                                   // mux_pipeline_020:out_data -> cmd_mux_020:sink0_data
	wire          mux_pipeline_020_source0_ready;                                                                  // cmd_mux_020:sink0_ready -> mux_pipeline_020:out_ready
	wire   [44:0] mux_pipeline_020_source0_channel;                                                                // mux_pipeline_020:out_channel -> cmd_mux_020:sink0_channel
	wire          mux_pipeline_020_source0_startofpacket;                                                          // mux_pipeline_020:out_startofpacket -> cmd_mux_020:sink0_startofpacket
	wire          mux_pipeline_020_source0_endofpacket;                                                            // mux_pipeline_020:out_endofpacket -> cmd_mux_020:sink0_endofpacket
	wire          crosser_out_valid;                                                                               // crosser:out_valid -> mux_pipeline_021:in_valid
	wire  [669:0] crosser_out_data;                                                                                // crosser:out_data -> mux_pipeline_021:in_data
	wire          crosser_out_ready;                                                                               // mux_pipeline_021:in_ready -> crosser:out_ready
	wire   [44:0] crosser_out_channel;                                                                             // crosser:out_channel -> mux_pipeline_021:in_channel
	wire          crosser_out_startofpacket;                                                                       // crosser:out_startofpacket -> mux_pipeline_021:in_startofpacket
	wire          crosser_out_endofpacket;                                                                         // crosser:out_endofpacket -> mux_pipeline_021:in_endofpacket
	wire          mux_pipeline_021_source0_valid;                                                                  // mux_pipeline_021:out_valid -> cmd_mux_021:sink0_valid
	wire  [669:0] mux_pipeline_021_source0_data;                                                                   // mux_pipeline_021:out_data -> cmd_mux_021:sink0_data
	wire          mux_pipeline_021_source0_ready;                                                                  // cmd_mux_021:sink0_ready -> mux_pipeline_021:out_ready
	wire   [44:0] mux_pipeline_021_source0_channel;                                                                // mux_pipeline_021:out_channel -> cmd_mux_021:sink0_channel
	wire          mux_pipeline_021_source0_startofpacket;                                                          // mux_pipeline_021:out_startofpacket -> cmd_mux_021:sink0_startofpacket
	wire          mux_pipeline_021_source0_endofpacket;                                                            // mux_pipeline_021:out_endofpacket -> cmd_mux_021:sink0_endofpacket
	wire          crosser_001_out_valid;                                                                           // crosser_001:out_valid -> mux_pipeline_022:in_valid
	wire  [669:0] crosser_001_out_data;                                                                            // crosser_001:out_data -> mux_pipeline_022:in_data
	wire          crosser_001_out_ready;                                                                           // mux_pipeline_022:in_ready -> crosser_001:out_ready
	wire   [44:0] crosser_001_out_channel;                                                                         // crosser_001:out_channel -> mux_pipeline_022:in_channel
	wire          crosser_001_out_startofpacket;                                                                   // crosser_001:out_startofpacket -> mux_pipeline_022:in_startofpacket
	wire          crosser_001_out_endofpacket;                                                                     // crosser_001:out_endofpacket -> mux_pipeline_022:in_endofpacket
	wire          mux_pipeline_022_source0_valid;                                                                  // mux_pipeline_022:out_valid -> cmd_mux_021:sink1_valid
	wire  [669:0] mux_pipeline_022_source0_data;                                                                   // mux_pipeline_022:out_data -> cmd_mux_021:sink1_data
	wire          mux_pipeline_022_source0_ready;                                                                  // cmd_mux_021:sink1_ready -> mux_pipeline_022:out_ready
	wire   [44:0] mux_pipeline_022_source0_channel;                                                                // mux_pipeline_022:out_channel -> cmd_mux_021:sink1_channel
	wire          mux_pipeline_022_source0_startofpacket;                                                          // mux_pipeline_022:out_startofpacket -> cmd_mux_021:sink1_startofpacket
	wire          mux_pipeline_022_source0_endofpacket;                                                            // mux_pipeline_022:out_endofpacket -> cmd_mux_021:sink1_endofpacket
	wire          async_fifo_out_valid;                                                                            // async_fifo:out_valid -> mux_pipeline_023:in_valid
	wire  [669:0] async_fifo_out_data;                                                                             // async_fifo:out_data -> mux_pipeline_023:in_data
	wire          async_fifo_out_ready;                                                                            // mux_pipeline_023:in_ready -> async_fifo:out_ready
	wire   [44:0] async_fifo_out_channel;                                                                          // async_fifo:out_channel -> mux_pipeline_023:in_channel
	wire          async_fifo_out_startofpacket;                                                                    // async_fifo:out_startofpacket -> mux_pipeline_023:in_startofpacket
	wire          async_fifo_out_endofpacket;                                                                      // async_fifo:out_endofpacket -> mux_pipeline_023:in_endofpacket
	wire          mux_pipeline_023_source0_valid;                                                                  // mux_pipeline_023:out_valid -> cmd_mux_021:sink2_valid
	wire  [669:0] mux_pipeline_023_source0_data;                                                                   // mux_pipeline_023:out_data -> cmd_mux_021:sink2_data
	wire          mux_pipeline_023_source0_ready;                                                                  // cmd_mux_021:sink2_ready -> mux_pipeline_023:out_ready
	wire   [44:0] mux_pipeline_023_source0_channel;                                                                // mux_pipeline_023:out_channel -> cmd_mux_021:sink2_channel
	wire          mux_pipeline_023_source0_startofpacket;                                                          // mux_pipeline_023:out_startofpacket -> cmd_mux_021:sink2_startofpacket
	wire          mux_pipeline_023_source0_endofpacket;                                                            // mux_pipeline_023:out_endofpacket -> cmd_mux_021:sink2_endofpacket
	wire          async_fifo_001_out_valid;                                                                        // async_fifo_001:out_valid -> mux_pipeline_024:in_valid
	wire  [669:0] async_fifo_001_out_data;                                                                         // async_fifo_001:out_data -> mux_pipeline_024:in_data
	wire          async_fifo_001_out_ready;                                                                        // mux_pipeline_024:in_ready -> async_fifo_001:out_ready
	wire   [44:0] async_fifo_001_out_channel;                                                                      // async_fifo_001:out_channel -> mux_pipeline_024:in_channel
	wire          async_fifo_001_out_startofpacket;                                                                // async_fifo_001:out_startofpacket -> mux_pipeline_024:in_startofpacket
	wire          async_fifo_001_out_endofpacket;                                                                  // async_fifo_001:out_endofpacket -> mux_pipeline_024:in_endofpacket
	wire          mux_pipeline_024_source0_valid;                                                                  // mux_pipeline_024:out_valid -> cmd_mux_021:sink3_valid
	wire  [669:0] mux_pipeline_024_source0_data;                                                                   // mux_pipeline_024:out_data -> cmd_mux_021:sink3_data
	wire          mux_pipeline_024_source0_ready;                                                                  // cmd_mux_021:sink3_ready -> mux_pipeline_024:out_ready
	wire   [44:0] mux_pipeline_024_source0_channel;                                                                // mux_pipeline_024:out_channel -> cmd_mux_021:sink3_channel
	wire          mux_pipeline_024_source0_startofpacket;                                                          // mux_pipeline_024:out_startofpacket -> cmd_mux_021:sink3_startofpacket
	wire          mux_pipeline_024_source0_endofpacket;                                                            // mux_pipeline_024:out_endofpacket -> cmd_mux_021:sink3_endofpacket
	wire          async_fifo_002_out_valid;                                                                        // async_fifo_002:out_valid -> mux_pipeline_025:in_valid
	wire  [669:0] async_fifo_002_out_data;                                                                         // async_fifo_002:out_data -> mux_pipeline_025:in_data
	wire          async_fifo_002_out_ready;                                                                        // mux_pipeline_025:in_ready -> async_fifo_002:out_ready
	wire   [44:0] async_fifo_002_out_channel;                                                                      // async_fifo_002:out_channel -> mux_pipeline_025:in_channel
	wire          async_fifo_002_out_startofpacket;                                                                // async_fifo_002:out_startofpacket -> mux_pipeline_025:in_startofpacket
	wire          async_fifo_002_out_endofpacket;                                                                  // async_fifo_002:out_endofpacket -> mux_pipeline_025:in_endofpacket
	wire          mux_pipeline_025_source0_valid;                                                                  // mux_pipeline_025:out_valid -> cmd_mux_021:sink4_valid
	wire  [669:0] mux_pipeline_025_source0_data;                                                                   // mux_pipeline_025:out_data -> cmd_mux_021:sink4_data
	wire          mux_pipeline_025_source0_ready;                                                                  // cmd_mux_021:sink4_ready -> mux_pipeline_025:out_ready
	wire   [44:0] mux_pipeline_025_source0_channel;                                                                // mux_pipeline_025:out_channel -> cmd_mux_021:sink4_channel
	wire          mux_pipeline_025_source0_startofpacket;                                                          // mux_pipeline_025:out_startofpacket -> cmd_mux_021:sink4_startofpacket
	wire          mux_pipeline_025_source0_endofpacket;                                                            // mux_pipeline_025:out_endofpacket -> cmd_mux_021:sink4_endofpacket
	wire          async_fifo_003_out_valid;                                                                        // async_fifo_003:out_valid -> mux_pipeline_026:in_valid
	wire  [669:0] async_fifo_003_out_data;                                                                         // async_fifo_003:out_data -> mux_pipeline_026:in_data
	wire          async_fifo_003_out_ready;                                                                        // mux_pipeline_026:in_ready -> async_fifo_003:out_ready
	wire   [44:0] async_fifo_003_out_channel;                                                                      // async_fifo_003:out_channel -> mux_pipeline_026:in_channel
	wire          async_fifo_003_out_startofpacket;                                                                // async_fifo_003:out_startofpacket -> mux_pipeline_026:in_startofpacket
	wire          async_fifo_003_out_endofpacket;                                                                  // async_fifo_003:out_endofpacket -> mux_pipeline_026:in_endofpacket
	wire          mux_pipeline_026_source0_valid;                                                                  // mux_pipeline_026:out_valid -> cmd_mux_021:sink5_valid
	wire  [669:0] mux_pipeline_026_source0_data;                                                                   // mux_pipeline_026:out_data -> cmd_mux_021:sink5_data
	wire          mux_pipeline_026_source0_ready;                                                                  // cmd_mux_021:sink5_ready -> mux_pipeline_026:out_ready
	wire   [44:0] mux_pipeline_026_source0_channel;                                                                // mux_pipeline_026:out_channel -> cmd_mux_021:sink5_channel
	wire          mux_pipeline_026_source0_startofpacket;                                                          // mux_pipeline_026:out_startofpacket -> cmd_mux_021:sink5_startofpacket
	wire          mux_pipeline_026_source0_endofpacket;                                                            // mux_pipeline_026:out_endofpacket -> cmd_mux_021:sink5_endofpacket
	wire          async_fifo_004_out_valid;                                                                        // async_fifo_004:out_valid -> mux_pipeline_027:in_valid
	wire  [669:0] async_fifo_004_out_data;                                                                         // async_fifo_004:out_data -> mux_pipeline_027:in_data
	wire          async_fifo_004_out_ready;                                                                        // mux_pipeline_027:in_ready -> async_fifo_004:out_ready
	wire   [44:0] async_fifo_004_out_channel;                                                                      // async_fifo_004:out_channel -> mux_pipeline_027:in_channel
	wire          async_fifo_004_out_startofpacket;                                                                // async_fifo_004:out_startofpacket -> mux_pipeline_027:in_startofpacket
	wire          async_fifo_004_out_endofpacket;                                                                  // async_fifo_004:out_endofpacket -> mux_pipeline_027:in_endofpacket
	wire          mux_pipeline_027_source0_valid;                                                                  // mux_pipeline_027:out_valid -> cmd_mux_021:sink6_valid
	wire  [669:0] mux_pipeline_027_source0_data;                                                                   // mux_pipeline_027:out_data -> cmd_mux_021:sink6_data
	wire          mux_pipeline_027_source0_ready;                                                                  // cmd_mux_021:sink6_ready -> mux_pipeline_027:out_ready
	wire   [44:0] mux_pipeline_027_source0_channel;                                                                // mux_pipeline_027:out_channel -> cmd_mux_021:sink6_channel
	wire          mux_pipeline_027_source0_startofpacket;                                                          // mux_pipeline_027:out_startofpacket -> cmd_mux_021:sink6_startofpacket
	wire          mux_pipeline_027_source0_endofpacket;                                                            // mux_pipeline_027:out_endofpacket -> cmd_mux_021:sink6_endofpacket
	wire          async_fifo_005_out_valid;                                                                        // async_fifo_005:out_valid -> mux_pipeline_028:in_valid
	wire  [669:0] async_fifo_005_out_data;                                                                         // async_fifo_005:out_data -> mux_pipeline_028:in_data
	wire          async_fifo_005_out_ready;                                                                        // mux_pipeline_028:in_ready -> async_fifo_005:out_ready
	wire   [44:0] async_fifo_005_out_channel;                                                                      // async_fifo_005:out_channel -> mux_pipeline_028:in_channel
	wire          async_fifo_005_out_startofpacket;                                                                // async_fifo_005:out_startofpacket -> mux_pipeline_028:in_startofpacket
	wire          async_fifo_005_out_endofpacket;                                                                  // async_fifo_005:out_endofpacket -> mux_pipeline_028:in_endofpacket
	wire          mux_pipeline_028_source0_valid;                                                                  // mux_pipeline_028:out_valid -> cmd_mux_021:sink7_valid
	wire  [669:0] mux_pipeline_028_source0_data;                                                                   // mux_pipeline_028:out_data -> cmd_mux_021:sink7_data
	wire          mux_pipeline_028_source0_ready;                                                                  // cmd_mux_021:sink7_ready -> mux_pipeline_028:out_ready
	wire   [44:0] mux_pipeline_028_source0_channel;                                                                // mux_pipeline_028:out_channel -> cmd_mux_021:sink7_channel
	wire          mux_pipeline_028_source0_startofpacket;                                                          // mux_pipeline_028:out_startofpacket -> cmd_mux_021:sink7_startofpacket
	wire          mux_pipeline_028_source0_endofpacket;                                                            // mux_pipeline_028:out_endofpacket -> cmd_mux_021:sink7_endofpacket
	wire          cmd_demux_src22_valid;                                                                           // cmd_demux:src22_valid -> mux_pipeline_029:in_valid
	wire  [129:0] cmd_demux_src22_data;                                                                            // cmd_demux:src22_data -> mux_pipeline_029:in_data
	wire          cmd_demux_src22_ready;                                                                           // mux_pipeline_029:in_ready -> cmd_demux:src22_ready
	wire   [44:0] cmd_demux_src22_channel;                                                                         // cmd_demux:src22_channel -> mux_pipeline_029:in_channel
	wire          cmd_demux_src22_startofpacket;                                                                   // cmd_demux:src22_startofpacket -> mux_pipeline_029:in_startofpacket
	wire          cmd_demux_src22_endofpacket;                                                                     // cmd_demux:src22_endofpacket -> mux_pipeline_029:in_endofpacket
	wire          mux_pipeline_029_source0_valid;                                                                  // mux_pipeline_029:out_valid -> cmd_mux_022:sink0_valid
	wire  [129:0] mux_pipeline_029_source0_data;                                                                   // mux_pipeline_029:out_data -> cmd_mux_022:sink0_data
	wire          mux_pipeline_029_source0_ready;                                                                  // cmd_mux_022:sink0_ready -> mux_pipeline_029:out_ready
	wire   [44:0] mux_pipeline_029_source0_channel;                                                                // mux_pipeline_029:out_channel -> cmd_mux_022:sink0_channel
	wire          mux_pipeline_029_source0_startofpacket;                                                          // mux_pipeline_029:out_startofpacket -> cmd_mux_022:sink0_startofpacket
	wire          mux_pipeline_029_source0_endofpacket;                                                            // mux_pipeline_029:out_endofpacket -> cmd_mux_022:sink0_endofpacket
	wire          cmd_demux_001_src1_valid;                                                                        // cmd_demux_001:src1_valid -> mux_pipeline_030:in_valid
	wire  [129:0] cmd_demux_001_src1_data;                                                                         // cmd_demux_001:src1_data -> mux_pipeline_030:in_data
	wire          cmd_demux_001_src1_ready;                                                                        // mux_pipeline_030:in_ready -> cmd_demux_001:src1_ready
	wire   [44:0] cmd_demux_001_src1_channel;                                                                      // cmd_demux_001:src1_channel -> mux_pipeline_030:in_channel
	wire          cmd_demux_001_src1_startofpacket;                                                                // cmd_demux_001:src1_startofpacket -> mux_pipeline_030:in_startofpacket
	wire          cmd_demux_001_src1_endofpacket;                                                                  // cmd_demux_001:src1_endofpacket -> mux_pipeline_030:in_endofpacket
	wire          mux_pipeline_030_source0_valid;                                                                  // mux_pipeline_030:out_valid -> cmd_mux_022:sink1_valid
	wire  [129:0] mux_pipeline_030_source0_data;                                                                   // mux_pipeline_030:out_data -> cmd_mux_022:sink1_data
	wire          mux_pipeline_030_source0_ready;                                                                  // cmd_mux_022:sink1_ready -> mux_pipeline_030:out_ready
	wire   [44:0] mux_pipeline_030_source0_channel;                                                                // mux_pipeline_030:out_channel -> cmd_mux_022:sink1_channel
	wire          mux_pipeline_030_source0_startofpacket;                                                          // mux_pipeline_030:out_startofpacket -> cmd_mux_022:sink1_startofpacket
	wire          mux_pipeline_030_source0_endofpacket;                                                            // mux_pipeline_030:out_endofpacket -> cmd_mux_022:sink1_endofpacket
	wire          sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter_src_valid;         // sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter:out_valid -> mux_pipeline_031:in_valid
	wire  [381:0] sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter_src_data;          // sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter:out_data -> mux_pipeline_031:in_data
	wire          sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter_src_ready;         // mux_pipeline_031:in_ready -> sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter:out_ready
	wire   [44:0] sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter_src_channel;       // sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter:out_channel -> mux_pipeline_031:in_channel
	wire          sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter_src_startofpacket; // sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter:out_startofpacket -> mux_pipeline_031:in_startofpacket
	wire          sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter_src_endofpacket;   // sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter:out_endofpacket -> mux_pipeline_031:in_endofpacket
	wire          mux_pipeline_031_source0_valid;                                                                  // mux_pipeline_031:out_valid -> cmd_mux_023:sink0_valid
	wire  [381:0] mux_pipeline_031_source0_data;                                                                   // mux_pipeline_031:out_data -> cmd_mux_023:sink0_data
	wire          mux_pipeline_031_source0_ready;                                                                  // cmd_mux_023:sink0_ready -> mux_pipeline_031:out_ready
	wire   [44:0] mux_pipeline_031_source0_channel;                                                                // mux_pipeline_031:out_channel -> cmd_mux_023:sink0_channel
	wire          mux_pipeline_031_source0_startofpacket;                                                          // mux_pipeline_031:out_startofpacket -> cmd_mux_023:sink0_startofpacket
	wire          mux_pipeline_031_source0_endofpacket;                                                            // mux_pipeline_031:out_endofpacket -> cmd_mux_023:sink0_endofpacket
	wire          sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter_src_valid;         // sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter:out_valid -> mux_pipeline_032:in_valid
	wire  [381:0] sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter_src_data;          // sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter:out_data -> mux_pipeline_032:in_data
	wire          sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter_src_ready;         // mux_pipeline_032:in_ready -> sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter:out_ready
	wire   [44:0] sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter_src_channel;       // sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter:out_channel -> mux_pipeline_032:in_channel
	wire          sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter_src_startofpacket; // sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter:out_startofpacket -> mux_pipeline_032:in_startofpacket
	wire          sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter_src_endofpacket;   // sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter:out_endofpacket -> mux_pipeline_032:in_endofpacket
	wire          mux_pipeline_032_source0_valid;                                                                  // mux_pipeline_032:out_valid -> cmd_mux_024:sink0_valid
	wire  [381:0] mux_pipeline_032_source0_data;                                                                   // mux_pipeline_032:out_data -> cmd_mux_024:sink0_data
	wire          mux_pipeline_032_source0_ready;                                                                  // cmd_mux_024:sink0_ready -> mux_pipeline_032:out_ready
	wire   [44:0] mux_pipeline_032_source0_channel;                                                                // mux_pipeline_032:out_channel -> cmd_mux_024:sink0_channel
	wire          mux_pipeline_032_source0_startofpacket;                                                          // mux_pipeline_032:out_startofpacket -> cmd_mux_024:sink0_startofpacket
	wire          mux_pipeline_032_source0_endofpacket;                                                            // mux_pipeline_032:out_endofpacket -> cmd_mux_024:sink0_endofpacket
	wire          cmd_demux_src25_valid;                                                                           // cmd_demux:src25_valid -> mux_pipeline_033:in_valid
	wire  [129:0] cmd_demux_src25_data;                                                                            // cmd_demux:src25_data -> mux_pipeline_033:in_data
	wire          cmd_demux_src25_ready;                                                                           // mux_pipeline_033:in_ready -> cmd_demux:src25_ready
	wire   [44:0] cmd_demux_src25_channel;                                                                         // cmd_demux:src25_channel -> mux_pipeline_033:in_channel
	wire          cmd_demux_src25_startofpacket;                                                                   // cmd_demux:src25_startofpacket -> mux_pipeline_033:in_startofpacket
	wire          cmd_demux_src25_endofpacket;                                                                     // cmd_demux:src25_endofpacket -> mux_pipeline_033:in_endofpacket
	wire          mux_pipeline_033_source0_valid;                                                                  // mux_pipeline_033:out_valid -> cmd_mux_025:sink0_valid
	wire  [129:0] mux_pipeline_033_source0_data;                                                                   // mux_pipeline_033:out_data -> cmd_mux_025:sink0_data
	wire          mux_pipeline_033_source0_ready;                                                                  // cmd_mux_025:sink0_ready -> mux_pipeline_033:out_ready
	wire   [44:0] mux_pipeline_033_source0_channel;                                                                // mux_pipeline_033:out_channel -> cmd_mux_025:sink0_channel
	wire          mux_pipeline_033_source0_startofpacket;                                                          // mux_pipeline_033:out_startofpacket -> cmd_mux_025:sink0_startofpacket
	wire          mux_pipeline_033_source0_endofpacket;                                                            // mux_pipeline_033:out_endofpacket -> cmd_mux_025:sink0_endofpacket
	wire          cmd_demux_src26_valid;                                                                           // cmd_demux:src26_valid -> mux_pipeline_034:in_valid
	wire  [129:0] cmd_demux_src26_data;                                                                            // cmd_demux:src26_data -> mux_pipeline_034:in_data
	wire          cmd_demux_src26_ready;                                                                           // mux_pipeline_034:in_ready -> cmd_demux:src26_ready
	wire   [44:0] cmd_demux_src26_channel;                                                                         // cmd_demux:src26_channel -> mux_pipeline_034:in_channel
	wire          cmd_demux_src26_startofpacket;                                                                   // cmd_demux:src26_startofpacket -> mux_pipeline_034:in_startofpacket
	wire          cmd_demux_src26_endofpacket;                                                                     // cmd_demux:src26_endofpacket -> mux_pipeline_034:in_endofpacket
	wire          mux_pipeline_034_source0_valid;                                                                  // mux_pipeline_034:out_valid -> cmd_mux_026:sink0_valid
	wire  [129:0] mux_pipeline_034_source0_data;                                                                   // mux_pipeline_034:out_data -> cmd_mux_026:sink0_data
	wire          mux_pipeline_034_source0_ready;                                                                  // cmd_mux_026:sink0_ready -> mux_pipeline_034:out_ready
	wire   [44:0] mux_pipeline_034_source0_channel;                                                                // mux_pipeline_034:out_channel -> cmd_mux_026:sink0_channel
	wire          mux_pipeline_034_source0_startofpacket;                                                          // mux_pipeline_034:out_startofpacket -> cmd_mux_026:sink0_startofpacket
	wire          mux_pipeline_034_source0_endofpacket;                                                            // mux_pipeline_034:out_endofpacket -> cmd_mux_026:sink0_endofpacket
	wire          cmd_demux_src27_valid;                                                                           // cmd_demux:src27_valid -> mux_pipeline_035:in_valid
	wire  [129:0] cmd_demux_src27_data;                                                                            // cmd_demux:src27_data -> mux_pipeline_035:in_data
	wire          cmd_demux_src27_ready;                                                                           // mux_pipeline_035:in_ready -> cmd_demux:src27_ready
	wire   [44:0] cmd_demux_src27_channel;                                                                         // cmd_demux:src27_channel -> mux_pipeline_035:in_channel
	wire          cmd_demux_src27_startofpacket;                                                                   // cmd_demux:src27_startofpacket -> mux_pipeline_035:in_startofpacket
	wire          cmd_demux_src27_endofpacket;                                                                     // cmd_demux:src27_endofpacket -> mux_pipeline_035:in_endofpacket
	wire          mux_pipeline_035_source0_valid;                                                                  // mux_pipeline_035:out_valid -> cmd_mux_027:sink0_valid
	wire  [129:0] mux_pipeline_035_source0_data;                                                                   // mux_pipeline_035:out_data -> cmd_mux_027:sink0_data
	wire          mux_pipeline_035_source0_ready;                                                                  // cmd_mux_027:sink0_ready -> mux_pipeline_035:out_ready
	wire   [44:0] mux_pipeline_035_source0_channel;                                                                // mux_pipeline_035:out_channel -> cmd_mux_027:sink0_channel
	wire          mux_pipeline_035_source0_startofpacket;                                                          // mux_pipeline_035:out_startofpacket -> cmd_mux_027:sink0_startofpacket
	wire          mux_pipeline_035_source0_endofpacket;                                                            // mux_pipeline_035:out_endofpacket -> cmd_mux_027:sink0_endofpacket
	wire          cmd_demux_src28_valid;                                                                           // cmd_demux:src28_valid -> mux_pipeline_036:in_valid
	wire  [129:0] cmd_demux_src28_data;                                                                            // cmd_demux:src28_data -> mux_pipeline_036:in_data
	wire          cmd_demux_src28_ready;                                                                           // mux_pipeline_036:in_ready -> cmd_demux:src28_ready
	wire   [44:0] cmd_demux_src28_channel;                                                                         // cmd_demux:src28_channel -> mux_pipeline_036:in_channel
	wire          cmd_demux_src28_startofpacket;                                                                   // cmd_demux:src28_startofpacket -> mux_pipeline_036:in_startofpacket
	wire          cmd_demux_src28_endofpacket;                                                                     // cmd_demux:src28_endofpacket -> mux_pipeline_036:in_endofpacket
	wire          mux_pipeline_036_source0_valid;                                                                  // mux_pipeline_036:out_valid -> cmd_mux_028:sink0_valid
	wire  [129:0] mux_pipeline_036_source0_data;                                                                   // mux_pipeline_036:out_data -> cmd_mux_028:sink0_data
	wire          mux_pipeline_036_source0_ready;                                                                  // cmd_mux_028:sink0_ready -> mux_pipeline_036:out_ready
	wire   [44:0] mux_pipeline_036_source0_channel;                                                                // mux_pipeline_036:out_channel -> cmd_mux_028:sink0_channel
	wire          mux_pipeline_036_source0_startofpacket;                                                          // mux_pipeline_036:out_startofpacket -> cmd_mux_028:sink0_startofpacket
	wire          mux_pipeline_036_source0_endofpacket;                                                            // mux_pipeline_036:out_endofpacket -> cmd_mux_028:sink0_endofpacket
	wire          cmd_demux_src29_valid;                                                                           // cmd_demux:src29_valid -> mux_pipeline_037:in_valid
	wire  [129:0] cmd_demux_src29_data;                                                                            // cmd_demux:src29_data -> mux_pipeline_037:in_data
	wire          cmd_demux_src29_ready;                                                                           // mux_pipeline_037:in_ready -> cmd_demux:src29_ready
	wire   [44:0] cmd_demux_src29_channel;                                                                         // cmd_demux:src29_channel -> mux_pipeline_037:in_channel
	wire          cmd_demux_src29_startofpacket;                                                                   // cmd_demux:src29_startofpacket -> mux_pipeline_037:in_startofpacket
	wire          cmd_demux_src29_endofpacket;                                                                     // cmd_demux:src29_endofpacket -> mux_pipeline_037:in_endofpacket
	wire          mux_pipeline_037_source0_valid;                                                                  // mux_pipeline_037:out_valid -> cmd_mux_029:sink0_valid
	wire  [129:0] mux_pipeline_037_source0_data;                                                                   // mux_pipeline_037:out_data -> cmd_mux_029:sink0_data
	wire          mux_pipeline_037_source0_ready;                                                                  // cmd_mux_029:sink0_ready -> mux_pipeline_037:out_ready
	wire   [44:0] mux_pipeline_037_source0_channel;                                                                // mux_pipeline_037:out_channel -> cmd_mux_029:sink0_channel
	wire          mux_pipeline_037_source0_startofpacket;                                                          // mux_pipeline_037:out_startofpacket -> cmd_mux_029:sink0_startofpacket
	wire          mux_pipeline_037_source0_endofpacket;                                                            // mux_pipeline_037:out_endofpacket -> cmd_mux_029:sink0_endofpacket
	wire          cmd_demux_src30_valid;                                                                           // cmd_demux:src30_valid -> mux_pipeline_038:in_valid
	wire  [129:0] cmd_demux_src30_data;                                                                            // cmd_demux:src30_data -> mux_pipeline_038:in_data
	wire          cmd_demux_src30_ready;                                                                           // mux_pipeline_038:in_ready -> cmd_demux:src30_ready
	wire   [44:0] cmd_demux_src30_channel;                                                                         // cmd_demux:src30_channel -> mux_pipeline_038:in_channel
	wire          cmd_demux_src30_startofpacket;                                                                   // cmd_demux:src30_startofpacket -> mux_pipeline_038:in_startofpacket
	wire          cmd_demux_src30_endofpacket;                                                                     // cmd_demux:src30_endofpacket -> mux_pipeline_038:in_endofpacket
	wire          mux_pipeline_038_source0_valid;                                                                  // mux_pipeline_038:out_valid -> cmd_mux_030:sink0_valid
	wire  [129:0] mux_pipeline_038_source0_data;                                                                   // mux_pipeline_038:out_data -> cmd_mux_030:sink0_data
	wire          mux_pipeline_038_source0_ready;                                                                  // cmd_mux_030:sink0_ready -> mux_pipeline_038:out_ready
	wire   [44:0] mux_pipeline_038_source0_channel;                                                                // mux_pipeline_038:out_channel -> cmd_mux_030:sink0_channel
	wire          mux_pipeline_038_source0_startofpacket;                                                          // mux_pipeline_038:out_startofpacket -> cmd_mux_030:sink0_startofpacket
	wire          mux_pipeline_038_source0_endofpacket;                                                            // mux_pipeline_038:out_endofpacket -> cmd_mux_030:sink0_endofpacket
	wire          cmd_demux_src31_valid;                                                                           // cmd_demux:src31_valid -> mux_pipeline_039:in_valid
	wire  [129:0] cmd_demux_src31_data;                                                                            // cmd_demux:src31_data -> mux_pipeline_039:in_data
	wire          cmd_demux_src31_ready;                                                                           // mux_pipeline_039:in_ready -> cmd_demux:src31_ready
	wire   [44:0] cmd_demux_src31_channel;                                                                         // cmd_demux:src31_channel -> mux_pipeline_039:in_channel
	wire          cmd_demux_src31_startofpacket;                                                                   // cmd_demux:src31_startofpacket -> mux_pipeline_039:in_startofpacket
	wire          cmd_demux_src31_endofpacket;                                                                     // cmd_demux:src31_endofpacket -> mux_pipeline_039:in_endofpacket
	wire          mux_pipeline_039_source0_valid;                                                                  // mux_pipeline_039:out_valid -> cmd_mux_031:sink0_valid
	wire  [129:0] mux_pipeline_039_source0_data;                                                                   // mux_pipeline_039:out_data -> cmd_mux_031:sink0_data
	wire          mux_pipeline_039_source0_ready;                                                                  // cmd_mux_031:sink0_ready -> mux_pipeline_039:out_ready
	wire   [44:0] mux_pipeline_039_source0_channel;                                                                // mux_pipeline_039:out_channel -> cmd_mux_031:sink0_channel
	wire          mux_pipeline_039_source0_startofpacket;                                                          // mux_pipeline_039:out_startofpacket -> cmd_mux_031:sink0_startofpacket
	wire          mux_pipeline_039_source0_endofpacket;                                                            // mux_pipeline_039:out_endofpacket -> cmd_mux_031:sink0_endofpacket
	wire          cmd_demux_src32_valid;                                                                           // cmd_demux:src32_valid -> mux_pipeline_040:in_valid
	wire  [129:0] cmd_demux_src32_data;                                                                            // cmd_demux:src32_data -> mux_pipeline_040:in_data
	wire          cmd_demux_src32_ready;                                                                           // mux_pipeline_040:in_ready -> cmd_demux:src32_ready
	wire   [44:0] cmd_demux_src32_channel;                                                                         // cmd_demux:src32_channel -> mux_pipeline_040:in_channel
	wire          cmd_demux_src32_startofpacket;                                                                   // cmd_demux:src32_startofpacket -> mux_pipeline_040:in_startofpacket
	wire          cmd_demux_src32_endofpacket;                                                                     // cmd_demux:src32_endofpacket -> mux_pipeline_040:in_endofpacket
	wire          mux_pipeline_040_source0_valid;                                                                  // mux_pipeline_040:out_valid -> cmd_mux_032:sink0_valid
	wire  [129:0] mux_pipeline_040_source0_data;                                                                   // mux_pipeline_040:out_data -> cmd_mux_032:sink0_data
	wire          mux_pipeline_040_source0_ready;                                                                  // cmd_mux_032:sink0_ready -> mux_pipeline_040:out_ready
	wire   [44:0] mux_pipeline_040_source0_channel;                                                                // mux_pipeline_040:out_channel -> cmd_mux_032:sink0_channel
	wire          mux_pipeline_040_source0_startofpacket;                                                          // mux_pipeline_040:out_startofpacket -> cmd_mux_032:sink0_startofpacket
	wire          mux_pipeline_040_source0_endofpacket;                                                            // mux_pipeline_040:out_endofpacket -> cmd_mux_032:sink0_endofpacket
	wire          cmd_demux_src33_valid;                                                                           // cmd_demux:src33_valid -> mux_pipeline_041:in_valid
	wire  [129:0] cmd_demux_src33_data;                                                                            // cmd_demux:src33_data -> mux_pipeline_041:in_data
	wire          cmd_demux_src33_ready;                                                                           // mux_pipeline_041:in_ready -> cmd_demux:src33_ready
	wire   [44:0] cmd_demux_src33_channel;                                                                         // cmd_demux:src33_channel -> mux_pipeline_041:in_channel
	wire          cmd_demux_src33_startofpacket;                                                                   // cmd_demux:src33_startofpacket -> mux_pipeline_041:in_startofpacket
	wire          cmd_demux_src33_endofpacket;                                                                     // cmd_demux:src33_endofpacket -> mux_pipeline_041:in_endofpacket
	wire          mux_pipeline_041_source0_valid;                                                                  // mux_pipeline_041:out_valid -> cmd_mux_033:sink0_valid
	wire  [129:0] mux_pipeline_041_source0_data;                                                                   // mux_pipeline_041:out_data -> cmd_mux_033:sink0_data
	wire          mux_pipeline_041_source0_ready;                                                                  // cmd_mux_033:sink0_ready -> mux_pipeline_041:out_ready
	wire   [44:0] mux_pipeline_041_source0_channel;                                                                // mux_pipeline_041:out_channel -> cmd_mux_033:sink0_channel
	wire          mux_pipeline_041_source0_startofpacket;                                                          // mux_pipeline_041:out_startofpacket -> cmd_mux_033:sink0_startofpacket
	wire          mux_pipeline_041_source0_endofpacket;                                                            // mux_pipeline_041:out_endofpacket -> cmd_mux_033:sink0_endofpacket
	wire          cmd_demux_src34_valid;                                                                           // cmd_demux:src34_valid -> mux_pipeline_042:in_valid
	wire  [129:0] cmd_demux_src34_data;                                                                            // cmd_demux:src34_data -> mux_pipeline_042:in_data
	wire          cmd_demux_src34_ready;                                                                           // mux_pipeline_042:in_ready -> cmd_demux:src34_ready
	wire   [44:0] cmd_demux_src34_channel;                                                                         // cmd_demux:src34_channel -> mux_pipeline_042:in_channel
	wire          cmd_demux_src34_startofpacket;                                                                   // cmd_demux:src34_startofpacket -> mux_pipeline_042:in_startofpacket
	wire          cmd_demux_src34_endofpacket;                                                                     // cmd_demux:src34_endofpacket -> mux_pipeline_042:in_endofpacket
	wire          mux_pipeline_042_source0_valid;                                                                  // mux_pipeline_042:out_valid -> cmd_mux_034:sink0_valid
	wire  [129:0] mux_pipeline_042_source0_data;                                                                   // mux_pipeline_042:out_data -> cmd_mux_034:sink0_data
	wire          mux_pipeline_042_source0_ready;                                                                  // cmd_mux_034:sink0_ready -> mux_pipeline_042:out_ready
	wire   [44:0] mux_pipeline_042_source0_channel;                                                                // mux_pipeline_042:out_channel -> cmd_mux_034:sink0_channel
	wire          mux_pipeline_042_source0_startofpacket;                                                          // mux_pipeline_042:out_startofpacket -> cmd_mux_034:sink0_startofpacket
	wire          mux_pipeline_042_source0_endofpacket;                                                            // mux_pipeline_042:out_endofpacket -> cmd_mux_034:sink0_endofpacket
	wire          cmd_demux_src35_valid;                                                                           // cmd_demux:src35_valid -> mux_pipeline_043:in_valid
	wire  [129:0] cmd_demux_src35_data;                                                                            // cmd_demux:src35_data -> mux_pipeline_043:in_data
	wire          cmd_demux_src35_ready;                                                                           // mux_pipeline_043:in_ready -> cmd_demux:src35_ready
	wire   [44:0] cmd_demux_src35_channel;                                                                         // cmd_demux:src35_channel -> mux_pipeline_043:in_channel
	wire          cmd_demux_src35_startofpacket;                                                                   // cmd_demux:src35_startofpacket -> mux_pipeline_043:in_startofpacket
	wire          cmd_demux_src35_endofpacket;                                                                     // cmd_demux:src35_endofpacket -> mux_pipeline_043:in_endofpacket
	wire          mux_pipeline_043_source0_valid;                                                                  // mux_pipeline_043:out_valid -> cmd_mux_035:sink0_valid
	wire  [129:0] mux_pipeline_043_source0_data;                                                                   // mux_pipeline_043:out_data -> cmd_mux_035:sink0_data
	wire          mux_pipeline_043_source0_ready;                                                                  // cmd_mux_035:sink0_ready -> mux_pipeline_043:out_ready
	wire   [44:0] mux_pipeline_043_source0_channel;                                                                // mux_pipeline_043:out_channel -> cmd_mux_035:sink0_channel
	wire          mux_pipeline_043_source0_startofpacket;                                                          // mux_pipeline_043:out_startofpacket -> cmd_mux_035:sink0_startofpacket
	wire          mux_pipeline_043_source0_endofpacket;                                                            // mux_pipeline_043:out_endofpacket -> cmd_mux_035:sink0_endofpacket
	wire          cmd_demux_src36_valid;                                                                           // cmd_demux:src36_valid -> mux_pipeline_044:in_valid
	wire  [129:0] cmd_demux_src36_data;                                                                            // cmd_demux:src36_data -> mux_pipeline_044:in_data
	wire          cmd_demux_src36_ready;                                                                           // mux_pipeline_044:in_ready -> cmd_demux:src36_ready
	wire   [44:0] cmd_demux_src36_channel;                                                                         // cmd_demux:src36_channel -> mux_pipeline_044:in_channel
	wire          cmd_demux_src36_startofpacket;                                                                   // cmd_demux:src36_startofpacket -> mux_pipeline_044:in_startofpacket
	wire          cmd_demux_src36_endofpacket;                                                                     // cmd_demux:src36_endofpacket -> mux_pipeline_044:in_endofpacket
	wire          mux_pipeline_044_source0_valid;                                                                  // mux_pipeline_044:out_valid -> cmd_mux_036:sink0_valid
	wire  [129:0] mux_pipeline_044_source0_data;                                                                   // mux_pipeline_044:out_data -> cmd_mux_036:sink0_data
	wire          mux_pipeline_044_source0_ready;                                                                  // cmd_mux_036:sink0_ready -> mux_pipeline_044:out_ready
	wire   [44:0] mux_pipeline_044_source0_channel;                                                                // mux_pipeline_044:out_channel -> cmd_mux_036:sink0_channel
	wire          mux_pipeline_044_source0_startofpacket;                                                          // mux_pipeline_044:out_startofpacket -> cmd_mux_036:sink0_startofpacket
	wire          mux_pipeline_044_source0_endofpacket;                                                            // mux_pipeline_044:out_endofpacket -> cmd_mux_036:sink0_endofpacket
	wire          cmd_demux_src37_valid;                                                                           // cmd_demux:src37_valid -> mux_pipeline_045:in_valid
	wire  [129:0] cmd_demux_src37_data;                                                                            // cmd_demux:src37_data -> mux_pipeline_045:in_data
	wire          cmd_demux_src37_ready;                                                                           // mux_pipeline_045:in_ready -> cmd_demux:src37_ready
	wire   [44:0] cmd_demux_src37_channel;                                                                         // cmd_demux:src37_channel -> mux_pipeline_045:in_channel
	wire          cmd_demux_src37_startofpacket;                                                                   // cmd_demux:src37_startofpacket -> mux_pipeline_045:in_startofpacket
	wire          cmd_demux_src37_endofpacket;                                                                     // cmd_demux:src37_endofpacket -> mux_pipeline_045:in_endofpacket
	wire          mux_pipeline_045_source0_valid;                                                                  // mux_pipeline_045:out_valid -> cmd_mux_037:sink0_valid
	wire  [129:0] mux_pipeline_045_source0_data;                                                                   // mux_pipeline_045:out_data -> cmd_mux_037:sink0_data
	wire          mux_pipeline_045_source0_ready;                                                                  // cmd_mux_037:sink0_ready -> mux_pipeline_045:out_ready
	wire   [44:0] mux_pipeline_045_source0_channel;                                                                // mux_pipeline_045:out_channel -> cmd_mux_037:sink0_channel
	wire          mux_pipeline_045_source0_startofpacket;                                                          // mux_pipeline_045:out_startofpacket -> cmd_mux_037:sink0_startofpacket
	wire          mux_pipeline_045_source0_endofpacket;                                                            // mux_pipeline_045:out_endofpacket -> cmd_mux_037:sink0_endofpacket
	wire          cmd_demux_001_src2_valid;                                                                        // cmd_demux_001:src2_valid -> mux_pipeline_046:in_valid
	wire  [129:0] cmd_demux_001_src2_data;                                                                         // cmd_demux_001:src2_data -> mux_pipeline_046:in_data
	wire          cmd_demux_001_src2_ready;                                                                        // mux_pipeline_046:in_ready -> cmd_demux_001:src2_ready
	wire   [44:0] cmd_demux_001_src2_channel;                                                                      // cmd_demux_001:src2_channel -> mux_pipeline_046:in_channel
	wire          cmd_demux_001_src2_startofpacket;                                                                // cmd_demux_001:src2_startofpacket -> mux_pipeline_046:in_startofpacket
	wire          cmd_demux_001_src2_endofpacket;                                                                  // cmd_demux_001:src2_endofpacket -> mux_pipeline_046:in_endofpacket
	wire          mux_pipeline_046_source0_valid;                                                                  // mux_pipeline_046:out_valid -> cmd_mux_037:sink1_valid
	wire  [129:0] mux_pipeline_046_source0_data;                                                                   // mux_pipeline_046:out_data -> cmd_mux_037:sink1_data
	wire          mux_pipeline_046_source0_ready;                                                                  // cmd_mux_037:sink1_ready -> mux_pipeline_046:out_ready
	wire   [44:0] mux_pipeline_046_source0_channel;                                                                // mux_pipeline_046:out_channel -> cmd_mux_037:sink1_channel
	wire          mux_pipeline_046_source0_startofpacket;                                                          // mux_pipeline_046:out_startofpacket -> cmd_mux_037:sink1_startofpacket
	wire          mux_pipeline_046_source0_endofpacket;                                                            // mux_pipeline_046:out_endofpacket -> cmd_mux_037:sink1_endofpacket
	wire          cmd_demux_src38_valid;                                                                           // cmd_demux:src38_valid -> mux_pipeline_047:in_valid
	wire  [129:0] cmd_demux_src38_data;                                                                            // cmd_demux:src38_data -> mux_pipeline_047:in_data
	wire          cmd_demux_src38_ready;                                                                           // mux_pipeline_047:in_ready -> cmd_demux:src38_ready
	wire   [44:0] cmd_demux_src38_channel;                                                                         // cmd_demux:src38_channel -> mux_pipeline_047:in_channel
	wire          cmd_demux_src38_startofpacket;                                                                   // cmd_demux:src38_startofpacket -> mux_pipeline_047:in_startofpacket
	wire          cmd_demux_src38_endofpacket;                                                                     // cmd_demux:src38_endofpacket -> mux_pipeline_047:in_endofpacket
	wire          mux_pipeline_047_source0_valid;                                                                  // mux_pipeline_047:out_valid -> cmd_mux_038:sink0_valid
	wire  [129:0] mux_pipeline_047_source0_data;                                                                   // mux_pipeline_047:out_data -> cmd_mux_038:sink0_data
	wire          mux_pipeline_047_source0_ready;                                                                  // cmd_mux_038:sink0_ready -> mux_pipeline_047:out_ready
	wire   [44:0] mux_pipeline_047_source0_channel;                                                                // mux_pipeline_047:out_channel -> cmd_mux_038:sink0_channel
	wire          mux_pipeline_047_source0_startofpacket;                                                          // mux_pipeline_047:out_startofpacket -> cmd_mux_038:sink0_startofpacket
	wire          mux_pipeline_047_source0_endofpacket;                                                            // mux_pipeline_047:out_endofpacket -> cmd_mux_038:sink0_endofpacket
	wire          cmd_demux_src39_valid;                                                                           // cmd_demux:src39_valid -> mux_pipeline_048:in_valid
	wire  [129:0] cmd_demux_src39_data;                                                                            // cmd_demux:src39_data -> mux_pipeline_048:in_data
	wire          cmd_demux_src39_ready;                                                                           // mux_pipeline_048:in_ready -> cmd_demux:src39_ready
	wire   [44:0] cmd_demux_src39_channel;                                                                         // cmd_demux:src39_channel -> mux_pipeline_048:in_channel
	wire          cmd_demux_src39_startofpacket;                                                                   // cmd_demux:src39_startofpacket -> mux_pipeline_048:in_startofpacket
	wire          cmd_demux_src39_endofpacket;                                                                     // cmd_demux:src39_endofpacket -> mux_pipeline_048:in_endofpacket
	wire          mux_pipeline_048_source0_valid;                                                                  // mux_pipeline_048:out_valid -> cmd_mux_039:sink0_valid
	wire  [129:0] mux_pipeline_048_source0_data;                                                                   // mux_pipeline_048:out_data -> cmd_mux_039:sink0_data
	wire          mux_pipeline_048_source0_ready;                                                                  // cmd_mux_039:sink0_ready -> mux_pipeline_048:out_ready
	wire   [44:0] mux_pipeline_048_source0_channel;                                                                // mux_pipeline_048:out_channel -> cmd_mux_039:sink0_channel
	wire          mux_pipeline_048_source0_startofpacket;                                                          // mux_pipeline_048:out_startofpacket -> cmd_mux_039:sink0_startofpacket
	wire          mux_pipeline_048_source0_endofpacket;                                                            // mux_pipeline_048:out_endofpacket -> cmd_mux_039:sink0_endofpacket
	wire          cmd_demux_src40_valid;                                                                           // cmd_demux:src40_valid -> mux_pipeline_049:in_valid
	wire  [129:0] cmd_demux_src40_data;                                                                            // cmd_demux:src40_data -> mux_pipeline_049:in_data
	wire          cmd_demux_src40_ready;                                                                           // mux_pipeline_049:in_ready -> cmd_demux:src40_ready
	wire   [44:0] cmd_demux_src40_channel;                                                                         // cmd_demux:src40_channel -> mux_pipeline_049:in_channel
	wire          cmd_demux_src40_startofpacket;                                                                   // cmd_demux:src40_startofpacket -> mux_pipeline_049:in_startofpacket
	wire          cmd_demux_src40_endofpacket;                                                                     // cmd_demux:src40_endofpacket -> mux_pipeline_049:in_endofpacket
	wire          mux_pipeline_049_source0_valid;                                                                  // mux_pipeline_049:out_valid -> cmd_mux_040:sink0_valid
	wire  [129:0] mux_pipeline_049_source0_data;                                                                   // mux_pipeline_049:out_data -> cmd_mux_040:sink0_data
	wire          mux_pipeline_049_source0_ready;                                                                  // cmd_mux_040:sink0_ready -> mux_pipeline_049:out_ready
	wire   [44:0] mux_pipeline_049_source0_channel;                                                                // mux_pipeline_049:out_channel -> cmd_mux_040:sink0_channel
	wire          mux_pipeline_049_source0_startofpacket;                                                          // mux_pipeline_049:out_startofpacket -> cmd_mux_040:sink0_startofpacket
	wire          mux_pipeline_049_source0_endofpacket;                                                            // mux_pipeline_049:out_endofpacket -> cmd_mux_040:sink0_endofpacket
	wire          cmd_demux_src41_valid;                                                                           // cmd_demux:src41_valid -> mux_pipeline_050:in_valid
	wire  [129:0] cmd_demux_src41_data;                                                                            // cmd_demux:src41_data -> mux_pipeline_050:in_data
	wire          cmd_demux_src41_ready;                                                                           // mux_pipeline_050:in_ready -> cmd_demux:src41_ready
	wire   [44:0] cmd_demux_src41_channel;                                                                         // cmd_demux:src41_channel -> mux_pipeline_050:in_channel
	wire          cmd_demux_src41_startofpacket;                                                                   // cmd_demux:src41_startofpacket -> mux_pipeline_050:in_startofpacket
	wire          cmd_demux_src41_endofpacket;                                                                     // cmd_demux:src41_endofpacket -> mux_pipeline_050:in_endofpacket
	wire          mux_pipeline_050_source0_valid;                                                                  // mux_pipeline_050:out_valid -> cmd_mux_041:sink0_valid
	wire  [129:0] mux_pipeline_050_source0_data;                                                                   // mux_pipeline_050:out_data -> cmd_mux_041:sink0_data
	wire          mux_pipeline_050_source0_ready;                                                                  // cmd_mux_041:sink0_ready -> mux_pipeline_050:out_ready
	wire   [44:0] mux_pipeline_050_source0_channel;                                                                // mux_pipeline_050:out_channel -> cmd_mux_041:sink0_channel
	wire          mux_pipeline_050_source0_startofpacket;                                                          // mux_pipeline_050:out_startofpacket -> cmd_mux_041:sink0_startofpacket
	wire          mux_pipeline_050_source0_endofpacket;                                                            // mux_pipeline_050:out_endofpacket -> cmd_mux_041:sink0_endofpacket
	wire          cmd_demux_src42_valid;                                                                           // cmd_demux:src42_valid -> mux_pipeline_051:in_valid
	wire  [129:0] cmd_demux_src42_data;                                                                            // cmd_demux:src42_data -> mux_pipeline_051:in_data
	wire          cmd_demux_src42_ready;                                                                           // mux_pipeline_051:in_ready -> cmd_demux:src42_ready
	wire   [44:0] cmd_demux_src42_channel;                                                                         // cmd_demux:src42_channel -> mux_pipeline_051:in_channel
	wire          cmd_demux_src42_startofpacket;                                                                   // cmd_demux:src42_startofpacket -> mux_pipeline_051:in_startofpacket
	wire          cmd_demux_src42_endofpacket;                                                                     // cmd_demux:src42_endofpacket -> mux_pipeline_051:in_endofpacket
	wire          mux_pipeline_051_source0_valid;                                                                  // mux_pipeline_051:out_valid -> cmd_mux_042:sink0_valid
	wire  [129:0] mux_pipeline_051_source0_data;                                                                   // mux_pipeline_051:out_data -> cmd_mux_042:sink0_data
	wire          mux_pipeline_051_source0_ready;                                                                  // cmd_mux_042:sink0_ready -> mux_pipeline_051:out_ready
	wire   [44:0] mux_pipeline_051_source0_channel;                                                                // mux_pipeline_051:out_channel -> cmd_mux_042:sink0_channel
	wire          mux_pipeline_051_source0_startofpacket;                                                          // mux_pipeline_051:out_startofpacket -> cmd_mux_042:sink0_startofpacket
	wire          mux_pipeline_051_source0_endofpacket;                                                            // mux_pipeline_051:out_endofpacket -> cmd_mux_042:sink0_endofpacket
	wire          cmd_demux_src43_valid;                                                                           // cmd_demux:src43_valid -> mux_pipeline_052:in_valid
	wire  [129:0] cmd_demux_src43_data;                                                                            // cmd_demux:src43_data -> mux_pipeline_052:in_data
	wire          cmd_demux_src43_ready;                                                                           // mux_pipeline_052:in_ready -> cmd_demux:src43_ready
	wire   [44:0] cmd_demux_src43_channel;                                                                         // cmd_demux:src43_channel -> mux_pipeline_052:in_channel
	wire          cmd_demux_src43_startofpacket;                                                                   // cmd_demux:src43_startofpacket -> mux_pipeline_052:in_startofpacket
	wire          cmd_demux_src43_endofpacket;                                                                     // cmd_demux:src43_endofpacket -> mux_pipeline_052:in_endofpacket
	wire          mux_pipeline_052_source0_valid;                                                                  // mux_pipeline_052:out_valid -> cmd_mux_043:sink0_valid
	wire  [129:0] mux_pipeline_052_source0_data;                                                                   // mux_pipeline_052:out_data -> cmd_mux_043:sink0_data
	wire          mux_pipeline_052_source0_ready;                                                                  // cmd_mux_043:sink0_ready -> mux_pipeline_052:out_ready
	wire   [44:0] mux_pipeline_052_source0_channel;                                                                // mux_pipeline_052:out_channel -> cmd_mux_043:sink0_channel
	wire          mux_pipeline_052_source0_startofpacket;                                                          // mux_pipeline_052:out_startofpacket -> cmd_mux_043:sink0_startofpacket
	wire          mux_pipeline_052_source0_endofpacket;                                                            // mux_pipeline_052:out_endofpacket -> cmd_mux_043:sink0_endofpacket
	wire          cmd_demux_src44_valid;                                                                           // cmd_demux:src44_valid -> mux_pipeline_053:in_valid
	wire  [129:0] cmd_demux_src44_data;                                                                            // cmd_demux:src44_data -> mux_pipeline_053:in_data
	wire          cmd_demux_src44_ready;                                                                           // mux_pipeline_053:in_ready -> cmd_demux:src44_ready
	wire   [44:0] cmd_demux_src44_channel;                                                                         // cmd_demux:src44_channel -> mux_pipeline_053:in_channel
	wire          cmd_demux_src44_startofpacket;                                                                   // cmd_demux:src44_startofpacket -> mux_pipeline_053:in_startofpacket
	wire          cmd_demux_src44_endofpacket;                                                                     // cmd_demux:src44_endofpacket -> mux_pipeline_053:in_endofpacket
	wire          mux_pipeline_053_source0_valid;                                                                  // mux_pipeline_053:out_valid -> cmd_mux_044:sink0_valid
	wire  [129:0] mux_pipeline_053_source0_data;                                                                   // mux_pipeline_053:out_data -> cmd_mux_044:sink0_data
	wire          mux_pipeline_053_source0_ready;                                                                  // cmd_mux_044:sink0_ready -> mux_pipeline_053:out_ready
	wire   [44:0] mux_pipeline_053_source0_channel;                                                                // mux_pipeline_053:out_channel -> cmd_mux_044:sink0_channel
	wire          mux_pipeline_053_source0_startofpacket;                                                          // mux_pipeline_053:out_startofpacket -> cmd_mux_044:sink0_startofpacket
	wire          mux_pipeline_053_source0_endofpacket;                                                            // mux_pipeline_053:out_endofpacket -> cmd_mux_044:sink0_endofpacket
	wire          cmd_demux_001_src3_valid;                                                                        // cmd_demux_001:src3_valid -> mux_pipeline_054:in_valid
	wire  [129:0] cmd_demux_001_src3_data;                                                                         // cmd_demux_001:src3_data -> mux_pipeline_054:in_data
	wire          cmd_demux_001_src3_ready;                                                                        // mux_pipeline_054:in_ready -> cmd_demux_001:src3_ready
	wire   [44:0] cmd_demux_001_src3_channel;                                                                      // cmd_demux_001:src3_channel -> mux_pipeline_054:in_channel
	wire          cmd_demux_001_src3_startofpacket;                                                                // cmd_demux_001:src3_startofpacket -> mux_pipeline_054:in_startofpacket
	wire          cmd_demux_001_src3_endofpacket;                                                                  // cmd_demux_001:src3_endofpacket -> mux_pipeline_054:in_endofpacket
	wire          mux_pipeline_054_source0_valid;                                                                  // mux_pipeline_054:out_valid -> cmd_mux_044:sink1_valid
	wire  [129:0] mux_pipeline_054_source0_data;                                                                   // mux_pipeline_054:out_data -> cmd_mux_044:sink1_data
	wire          mux_pipeline_054_source0_ready;                                                                  // cmd_mux_044:sink1_ready -> mux_pipeline_054:out_ready
	wire   [44:0] mux_pipeline_054_source0_channel;                                                                // mux_pipeline_054:out_channel -> cmd_mux_044:sink1_channel
	wire          mux_pipeline_054_source0_startofpacket;                                                          // mux_pipeline_054:out_startofpacket -> cmd_mux_044:sink1_startofpacket
	wire          mux_pipeline_054_source0_endofpacket;                                                            // mux_pipeline_054:out_endofpacket -> cmd_mux_044:sink1_endofpacket
	wire          rsp_demux_src0_valid;                                                                            // rsp_demux:src0_valid -> mux_pipeline_055:in_valid
	wire  [129:0] rsp_demux_src0_data;                                                                             // rsp_demux:src0_data -> mux_pipeline_055:in_data
	wire          rsp_demux_src0_ready;                                                                            // mux_pipeline_055:in_ready -> rsp_demux:src0_ready
	wire   [44:0] rsp_demux_src0_channel;                                                                          // rsp_demux:src0_channel -> mux_pipeline_055:in_channel
	wire          rsp_demux_src0_startofpacket;                                                                    // rsp_demux:src0_startofpacket -> mux_pipeline_055:in_startofpacket
	wire          rsp_demux_src0_endofpacket;                                                                      // rsp_demux:src0_endofpacket -> mux_pipeline_055:in_endofpacket
	wire          mux_pipeline_055_source0_valid;                                                                  // mux_pipeline_055:out_valid -> rsp_mux:sink0_valid
	wire  [129:0] mux_pipeline_055_source0_data;                                                                   // mux_pipeline_055:out_data -> rsp_mux:sink0_data
	wire          mux_pipeline_055_source0_ready;                                                                  // rsp_mux:sink0_ready -> mux_pipeline_055:out_ready
	wire   [44:0] mux_pipeline_055_source0_channel;                                                                // mux_pipeline_055:out_channel -> rsp_mux:sink0_channel
	wire          mux_pipeline_055_source0_startofpacket;                                                          // mux_pipeline_055:out_startofpacket -> rsp_mux:sink0_startofpacket
	wire          mux_pipeline_055_source0_endofpacket;                                                            // mux_pipeline_055:out_endofpacket -> rsp_mux:sink0_endofpacket
	wire          rsp_demux_001_src0_valid;                                                                        // rsp_demux_001:src0_valid -> mux_pipeline_056:in_valid
	wire  [129:0] rsp_demux_001_src0_data;                                                                         // rsp_demux_001:src0_data -> mux_pipeline_056:in_data
	wire          rsp_demux_001_src0_ready;                                                                        // mux_pipeline_056:in_ready -> rsp_demux_001:src0_ready
	wire   [44:0] rsp_demux_001_src0_channel;                                                                      // rsp_demux_001:src0_channel -> mux_pipeline_056:in_channel
	wire          rsp_demux_001_src0_startofpacket;                                                                // rsp_demux_001:src0_startofpacket -> mux_pipeline_056:in_startofpacket
	wire          rsp_demux_001_src0_endofpacket;                                                                  // rsp_demux_001:src0_endofpacket -> mux_pipeline_056:in_endofpacket
	wire          mux_pipeline_056_source0_valid;                                                                  // mux_pipeline_056:out_valid -> rsp_mux:sink1_valid
	wire  [129:0] mux_pipeline_056_source0_data;                                                                   // mux_pipeline_056:out_data -> rsp_mux:sink1_data
	wire          mux_pipeline_056_source0_ready;                                                                  // rsp_mux:sink1_ready -> mux_pipeline_056:out_ready
	wire   [44:0] mux_pipeline_056_source0_channel;                                                                // mux_pipeline_056:out_channel -> rsp_mux:sink1_channel
	wire          mux_pipeline_056_source0_startofpacket;                                                          // mux_pipeline_056:out_startofpacket -> rsp_mux:sink1_startofpacket
	wire          mux_pipeline_056_source0_endofpacket;                                                            // mux_pipeline_056:out_endofpacket -> rsp_mux:sink1_endofpacket
	wire          rsp_demux_002_src0_valid;                                                                        // rsp_demux_002:src0_valid -> mux_pipeline_057:in_valid
	wire  [129:0] rsp_demux_002_src0_data;                                                                         // rsp_demux_002:src0_data -> mux_pipeline_057:in_data
	wire          rsp_demux_002_src0_ready;                                                                        // mux_pipeline_057:in_ready -> rsp_demux_002:src0_ready
	wire   [44:0] rsp_demux_002_src0_channel;                                                                      // rsp_demux_002:src0_channel -> mux_pipeline_057:in_channel
	wire          rsp_demux_002_src0_startofpacket;                                                                // rsp_demux_002:src0_startofpacket -> mux_pipeline_057:in_startofpacket
	wire          rsp_demux_002_src0_endofpacket;                                                                  // rsp_demux_002:src0_endofpacket -> mux_pipeline_057:in_endofpacket
	wire          mux_pipeline_057_source0_valid;                                                                  // mux_pipeline_057:out_valid -> rsp_mux:sink2_valid
	wire  [129:0] mux_pipeline_057_source0_data;                                                                   // mux_pipeline_057:out_data -> rsp_mux:sink2_data
	wire          mux_pipeline_057_source0_ready;                                                                  // rsp_mux:sink2_ready -> mux_pipeline_057:out_ready
	wire   [44:0] mux_pipeline_057_source0_channel;                                                                // mux_pipeline_057:out_channel -> rsp_mux:sink2_channel
	wire          mux_pipeline_057_source0_startofpacket;                                                          // mux_pipeline_057:out_startofpacket -> rsp_mux:sink2_startofpacket
	wire          mux_pipeline_057_source0_endofpacket;                                                            // mux_pipeline_057:out_endofpacket -> rsp_mux:sink2_endofpacket
	wire          rsp_demux_003_src0_valid;                                                                        // rsp_demux_003:src0_valid -> mux_pipeline_058:in_valid
	wire  [129:0] rsp_demux_003_src0_data;                                                                         // rsp_demux_003:src0_data -> mux_pipeline_058:in_data
	wire          rsp_demux_003_src0_ready;                                                                        // mux_pipeline_058:in_ready -> rsp_demux_003:src0_ready
	wire   [44:0] rsp_demux_003_src0_channel;                                                                      // rsp_demux_003:src0_channel -> mux_pipeline_058:in_channel
	wire          rsp_demux_003_src0_startofpacket;                                                                // rsp_demux_003:src0_startofpacket -> mux_pipeline_058:in_startofpacket
	wire          rsp_demux_003_src0_endofpacket;                                                                  // rsp_demux_003:src0_endofpacket -> mux_pipeline_058:in_endofpacket
	wire          mux_pipeline_058_source0_valid;                                                                  // mux_pipeline_058:out_valid -> rsp_mux:sink3_valid
	wire  [129:0] mux_pipeline_058_source0_data;                                                                   // mux_pipeline_058:out_data -> rsp_mux:sink3_data
	wire          mux_pipeline_058_source0_ready;                                                                  // rsp_mux:sink3_ready -> mux_pipeline_058:out_ready
	wire   [44:0] mux_pipeline_058_source0_channel;                                                                // mux_pipeline_058:out_channel -> rsp_mux:sink3_channel
	wire          mux_pipeline_058_source0_startofpacket;                                                          // mux_pipeline_058:out_startofpacket -> rsp_mux:sink3_startofpacket
	wire          mux_pipeline_058_source0_endofpacket;                                                            // mux_pipeline_058:out_endofpacket -> rsp_mux:sink3_endofpacket
	wire          rsp_demux_004_src0_valid;                                                                        // rsp_demux_004:src0_valid -> mux_pipeline_059:in_valid
	wire  [129:0] rsp_demux_004_src0_data;                                                                         // rsp_demux_004:src0_data -> mux_pipeline_059:in_data
	wire          rsp_demux_004_src0_ready;                                                                        // mux_pipeline_059:in_ready -> rsp_demux_004:src0_ready
	wire   [44:0] rsp_demux_004_src0_channel;                                                                      // rsp_demux_004:src0_channel -> mux_pipeline_059:in_channel
	wire          rsp_demux_004_src0_startofpacket;                                                                // rsp_demux_004:src0_startofpacket -> mux_pipeline_059:in_startofpacket
	wire          rsp_demux_004_src0_endofpacket;                                                                  // rsp_demux_004:src0_endofpacket -> mux_pipeline_059:in_endofpacket
	wire          mux_pipeline_059_source0_valid;                                                                  // mux_pipeline_059:out_valid -> rsp_mux:sink4_valid
	wire  [129:0] mux_pipeline_059_source0_data;                                                                   // mux_pipeline_059:out_data -> rsp_mux:sink4_data
	wire          mux_pipeline_059_source0_ready;                                                                  // rsp_mux:sink4_ready -> mux_pipeline_059:out_ready
	wire   [44:0] mux_pipeline_059_source0_channel;                                                                // mux_pipeline_059:out_channel -> rsp_mux:sink4_channel
	wire          mux_pipeline_059_source0_startofpacket;                                                          // mux_pipeline_059:out_startofpacket -> rsp_mux:sink4_startofpacket
	wire          mux_pipeline_059_source0_endofpacket;                                                            // mux_pipeline_059:out_endofpacket -> rsp_mux:sink4_endofpacket
	wire          rsp_demux_005_src0_valid;                                                                        // rsp_demux_005:src0_valid -> mux_pipeline_060:in_valid
	wire  [129:0] rsp_demux_005_src0_data;                                                                         // rsp_demux_005:src0_data -> mux_pipeline_060:in_data
	wire          rsp_demux_005_src0_ready;                                                                        // mux_pipeline_060:in_ready -> rsp_demux_005:src0_ready
	wire   [44:0] rsp_demux_005_src0_channel;                                                                      // rsp_demux_005:src0_channel -> mux_pipeline_060:in_channel
	wire          rsp_demux_005_src0_startofpacket;                                                                // rsp_demux_005:src0_startofpacket -> mux_pipeline_060:in_startofpacket
	wire          rsp_demux_005_src0_endofpacket;                                                                  // rsp_demux_005:src0_endofpacket -> mux_pipeline_060:in_endofpacket
	wire          mux_pipeline_060_source0_valid;                                                                  // mux_pipeline_060:out_valid -> rsp_mux:sink5_valid
	wire  [129:0] mux_pipeline_060_source0_data;                                                                   // mux_pipeline_060:out_data -> rsp_mux:sink5_data
	wire          mux_pipeline_060_source0_ready;                                                                  // rsp_mux:sink5_ready -> mux_pipeline_060:out_ready
	wire   [44:0] mux_pipeline_060_source0_channel;                                                                // mux_pipeline_060:out_channel -> rsp_mux:sink5_channel
	wire          mux_pipeline_060_source0_startofpacket;                                                          // mux_pipeline_060:out_startofpacket -> rsp_mux:sink5_startofpacket
	wire          mux_pipeline_060_source0_endofpacket;                                                            // mux_pipeline_060:out_endofpacket -> rsp_mux:sink5_endofpacket
	wire          rsp_demux_006_src0_valid;                                                                        // rsp_demux_006:src0_valid -> mux_pipeline_061:in_valid
	wire  [129:0] rsp_demux_006_src0_data;                                                                         // rsp_demux_006:src0_data -> mux_pipeline_061:in_data
	wire          rsp_demux_006_src0_ready;                                                                        // mux_pipeline_061:in_ready -> rsp_demux_006:src0_ready
	wire   [44:0] rsp_demux_006_src0_channel;                                                                      // rsp_demux_006:src0_channel -> mux_pipeline_061:in_channel
	wire          rsp_demux_006_src0_startofpacket;                                                                // rsp_demux_006:src0_startofpacket -> mux_pipeline_061:in_startofpacket
	wire          rsp_demux_006_src0_endofpacket;                                                                  // rsp_demux_006:src0_endofpacket -> mux_pipeline_061:in_endofpacket
	wire          mux_pipeline_061_source0_valid;                                                                  // mux_pipeline_061:out_valid -> rsp_mux:sink6_valid
	wire  [129:0] mux_pipeline_061_source0_data;                                                                   // mux_pipeline_061:out_data -> rsp_mux:sink6_data
	wire          mux_pipeline_061_source0_ready;                                                                  // rsp_mux:sink6_ready -> mux_pipeline_061:out_ready
	wire   [44:0] mux_pipeline_061_source0_channel;                                                                // mux_pipeline_061:out_channel -> rsp_mux:sink6_channel
	wire          mux_pipeline_061_source0_startofpacket;                                                          // mux_pipeline_061:out_startofpacket -> rsp_mux:sink6_startofpacket
	wire          mux_pipeline_061_source0_endofpacket;                                                            // mux_pipeline_061:out_endofpacket -> rsp_mux:sink6_endofpacket
	wire          rsp_demux_007_src0_valid;                                                                        // rsp_demux_007:src0_valid -> mux_pipeline_062:in_valid
	wire  [129:0] rsp_demux_007_src0_data;                                                                         // rsp_demux_007:src0_data -> mux_pipeline_062:in_data
	wire          rsp_demux_007_src0_ready;                                                                        // mux_pipeline_062:in_ready -> rsp_demux_007:src0_ready
	wire   [44:0] rsp_demux_007_src0_channel;                                                                      // rsp_demux_007:src0_channel -> mux_pipeline_062:in_channel
	wire          rsp_demux_007_src0_startofpacket;                                                                // rsp_demux_007:src0_startofpacket -> mux_pipeline_062:in_startofpacket
	wire          rsp_demux_007_src0_endofpacket;                                                                  // rsp_demux_007:src0_endofpacket -> mux_pipeline_062:in_endofpacket
	wire          mux_pipeline_062_source0_valid;                                                                  // mux_pipeline_062:out_valid -> rsp_mux:sink7_valid
	wire  [129:0] mux_pipeline_062_source0_data;                                                                   // mux_pipeline_062:out_data -> rsp_mux:sink7_data
	wire          mux_pipeline_062_source0_ready;                                                                  // rsp_mux:sink7_ready -> mux_pipeline_062:out_ready
	wire   [44:0] mux_pipeline_062_source0_channel;                                                                // mux_pipeline_062:out_channel -> rsp_mux:sink7_channel
	wire          mux_pipeline_062_source0_startofpacket;                                                          // mux_pipeline_062:out_startofpacket -> rsp_mux:sink7_startofpacket
	wire          mux_pipeline_062_source0_endofpacket;                                                            // mux_pipeline_062:out_endofpacket -> rsp_mux:sink7_endofpacket
	wire          rsp_demux_008_src0_valid;                                                                        // rsp_demux_008:src0_valid -> mux_pipeline_063:in_valid
	wire  [129:0] rsp_demux_008_src0_data;                                                                         // rsp_demux_008:src0_data -> mux_pipeline_063:in_data
	wire          rsp_demux_008_src0_ready;                                                                        // mux_pipeline_063:in_ready -> rsp_demux_008:src0_ready
	wire   [44:0] rsp_demux_008_src0_channel;                                                                      // rsp_demux_008:src0_channel -> mux_pipeline_063:in_channel
	wire          rsp_demux_008_src0_startofpacket;                                                                // rsp_demux_008:src0_startofpacket -> mux_pipeline_063:in_startofpacket
	wire          rsp_demux_008_src0_endofpacket;                                                                  // rsp_demux_008:src0_endofpacket -> mux_pipeline_063:in_endofpacket
	wire          mux_pipeline_063_source0_valid;                                                                  // mux_pipeline_063:out_valid -> rsp_mux:sink8_valid
	wire  [129:0] mux_pipeline_063_source0_data;                                                                   // mux_pipeline_063:out_data -> rsp_mux:sink8_data
	wire          mux_pipeline_063_source0_ready;                                                                  // rsp_mux:sink8_ready -> mux_pipeline_063:out_ready
	wire   [44:0] mux_pipeline_063_source0_channel;                                                                // mux_pipeline_063:out_channel -> rsp_mux:sink8_channel
	wire          mux_pipeline_063_source0_startofpacket;                                                          // mux_pipeline_063:out_startofpacket -> rsp_mux:sink8_startofpacket
	wire          mux_pipeline_063_source0_endofpacket;                                                            // mux_pipeline_063:out_endofpacket -> rsp_mux:sink8_endofpacket
	wire          rsp_demux_009_src0_valid;                                                                        // rsp_demux_009:src0_valid -> mux_pipeline_064:in_valid
	wire  [129:0] rsp_demux_009_src0_data;                                                                         // rsp_demux_009:src0_data -> mux_pipeline_064:in_data
	wire          rsp_demux_009_src0_ready;                                                                        // mux_pipeline_064:in_ready -> rsp_demux_009:src0_ready
	wire   [44:0] rsp_demux_009_src0_channel;                                                                      // rsp_demux_009:src0_channel -> mux_pipeline_064:in_channel
	wire          rsp_demux_009_src0_startofpacket;                                                                // rsp_demux_009:src0_startofpacket -> mux_pipeline_064:in_startofpacket
	wire          rsp_demux_009_src0_endofpacket;                                                                  // rsp_demux_009:src0_endofpacket -> mux_pipeline_064:in_endofpacket
	wire          mux_pipeline_064_source0_valid;                                                                  // mux_pipeline_064:out_valid -> rsp_mux:sink9_valid
	wire  [129:0] mux_pipeline_064_source0_data;                                                                   // mux_pipeline_064:out_data -> rsp_mux:sink9_data
	wire          mux_pipeline_064_source0_ready;                                                                  // rsp_mux:sink9_ready -> mux_pipeline_064:out_ready
	wire   [44:0] mux_pipeline_064_source0_channel;                                                                // mux_pipeline_064:out_channel -> rsp_mux:sink9_channel
	wire          mux_pipeline_064_source0_startofpacket;                                                          // mux_pipeline_064:out_startofpacket -> rsp_mux:sink9_startofpacket
	wire          mux_pipeline_064_source0_endofpacket;                                                            // mux_pipeline_064:out_endofpacket -> rsp_mux:sink9_endofpacket
	wire          rsp_demux_010_src0_valid;                                                                        // rsp_demux_010:src0_valid -> mux_pipeline_065:in_valid
	wire  [129:0] rsp_demux_010_src0_data;                                                                         // rsp_demux_010:src0_data -> mux_pipeline_065:in_data
	wire          rsp_demux_010_src0_ready;                                                                        // mux_pipeline_065:in_ready -> rsp_demux_010:src0_ready
	wire   [44:0] rsp_demux_010_src0_channel;                                                                      // rsp_demux_010:src0_channel -> mux_pipeline_065:in_channel
	wire          rsp_demux_010_src0_startofpacket;                                                                // rsp_demux_010:src0_startofpacket -> mux_pipeline_065:in_startofpacket
	wire          rsp_demux_010_src0_endofpacket;                                                                  // rsp_demux_010:src0_endofpacket -> mux_pipeline_065:in_endofpacket
	wire          mux_pipeline_065_source0_valid;                                                                  // mux_pipeline_065:out_valid -> rsp_mux:sink10_valid
	wire  [129:0] mux_pipeline_065_source0_data;                                                                   // mux_pipeline_065:out_data -> rsp_mux:sink10_data
	wire          mux_pipeline_065_source0_ready;                                                                  // rsp_mux:sink10_ready -> mux_pipeline_065:out_ready
	wire   [44:0] mux_pipeline_065_source0_channel;                                                                // mux_pipeline_065:out_channel -> rsp_mux:sink10_channel
	wire          mux_pipeline_065_source0_startofpacket;                                                          // mux_pipeline_065:out_startofpacket -> rsp_mux:sink10_startofpacket
	wire          mux_pipeline_065_source0_endofpacket;                                                            // mux_pipeline_065:out_endofpacket -> rsp_mux:sink10_endofpacket
	wire          rsp_demux_011_src0_valid;                                                                        // rsp_demux_011:src0_valid -> mux_pipeline_066:in_valid
	wire  [129:0] rsp_demux_011_src0_data;                                                                         // rsp_demux_011:src0_data -> mux_pipeline_066:in_data
	wire          rsp_demux_011_src0_ready;                                                                        // mux_pipeline_066:in_ready -> rsp_demux_011:src0_ready
	wire   [44:0] rsp_demux_011_src0_channel;                                                                      // rsp_demux_011:src0_channel -> mux_pipeline_066:in_channel
	wire          rsp_demux_011_src0_startofpacket;                                                                // rsp_demux_011:src0_startofpacket -> mux_pipeline_066:in_startofpacket
	wire          rsp_demux_011_src0_endofpacket;                                                                  // rsp_demux_011:src0_endofpacket -> mux_pipeline_066:in_endofpacket
	wire          mux_pipeline_066_source0_valid;                                                                  // mux_pipeline_066:out_valid -> rsp_mux:sink11_valid
	wire  [129:0] mux_pipeline_066_source0_data;                                                                   // mux_pipeline_066:out_data -> rsp_mux:sink11_data
	wire          mux_pipeline_066_source0_ready;                                                                  // rsp_mux:sink11_ready -> mux_pipeline_066:out_ready
	wire   [44:0] mux_pipeline_066_source0_channel;                                                                // mux_pipeline_066:out_channel -> rsp_mux:sink11_channel
	wire          mux_pipeline_066_source0_startofpacket;                                                          // mux_pipeline_066:out_startofpacket -> rsp_mux:sink11_startofpacket
	wire          mux_pipeline_066_source0_endofpacket;                                                            // mux_pipeline_066:out_endofpacket -> rsp_mux:sink11_endofpacket
	wire          rsp_demux_012_src0_valid;                                                                        // rsp_demux_012:src0_valid -> mux_pipeline_067:in_valid
	wire  [129:0] rsp_demux_012_src0_data;                                                                         // rsp_demux_012:src0_data -> mux_pipeline_067:in_data
	wire          rsp_demux_012_src0_ready;                                                                        // mux_pipeline_067:in_ready -> rsp_demux_012:src0_ready
	wire   [44:0] rsp_demux_012_src0_channel;                                                                      // rsp_demux_012:src0_channel -> mux_pipeline_067:in_channel
	wire          rsp_demux_012_src0_startofpacket;                                                                // rsp_demux_012:src0_startofpacket -> mux_pipeline_067:in_startofpacket
	wire          rsp_demux_012_src0_endofpacket;                                                                  // rsp_demux_012:src0_endofpacket -> mux_pipeline_067:in_endofpacket
	wire          mux_pipeline_067_source0_valid;                                                                  // mux_pipeline_067:out_valid -> rsp_mux:sink12_valid
	wire  [129:0] mux_pipeline_067_source0_data;                                                                   // mux_pipeline_067:out_data -> rsp_mux:sink12_data
	wire          mux_pipeline_067_source0_ready;                                                                  // rsp_mux:sink12_ready -> mux_pipeline_067:out_ready
	wire   [44:0] mux_pipeline_067_source0_channel;                                                                // mux_pipeline_067:out_channel -> rsp_mux:sink12_channel
	wire          mux_pipeline_067_source0_startofpacket;                                                          // mux_pipeline_067:out_startofpacket -> rsp_mux:sink12_startofpacket
	wire          mux_pipeline_067_source0_endofpacket;                                                            // mux_pipeline_067:out_endofpacket -> rsp_mux:sink12_endofpacket
	wire          rsp_demux_013_src0_valid;                                                                        // rsp_demux_013:src0_valid -> mux_pipeline_068:in_valid
	wire  [129:0] rsp_demux_013_src0_data;                                                                         // rsp_demux_013:src0_data -> mux_pipeline_068:in_data
	wire          rsp_demux_013_src0_ready;                                                                        // mux_pipeline_068:in_ready -> rsp_demux_013:src0_ready
	wire   [44:0] rsp_demux_013_src0_channel;                                                                      // rsp_demux_013:src0_channel -> mux_pipeline_068:in_channel
	wire          rsp_demux_013_src0_startofpacket;                                                                // rsp_demux_013:src0_startofpacket -> mux_pipeline_068:in_startofpacket
	wire          rsp_demux_013_src0_endofpacket;                                                                  // rsp_demux_013:src0_endofpacket -> mux_pipeline_068:in_endofpacket
	wire          mux_pipeline_068_source0_valid;                                                                  // mux_pipeline_068:out_valid -> rsp_mux:sink13_valid
	wire  [129:0] mux_pipeline_068_source0_data;                                                                   // mux_pipeline_068:out_data -> rsp_mux:sink13_data
	wire          mux_pipeline_068_source0_ready;                                                                  // rsp_mux:sink13_ready -> mux_pipeline_068:out_ready
	wire   [44:0] mux_pipeline_068_source0_channel;                                                                // mux_pipeline_068:out_channel -> rsp_mux:sink13_channel
	wire          mux_pipeline_068_source0_startofpacket;                                                          // mux_pipeline_068:out_startofpacket -> rsp_mux:sink13_startofpacket
	wire          mux_pipeline_068_source0_endofpacket;                                                            // mux_pipeline_068:out_endofpacket -> rsp_mux:sink13_endofpacket
	wire          rsp_demux_014_src0_valid;                                                                        // rsp_demux_014:src0_valid -> mux_pipeline_069:in_valid
	wire  [129:0] rsp_demux_014_src0_data;                                                                         // rsp_demux_014:src0_data -> mux_pipeline_069:in_data
	wire          rsp_demux_014_src0_ready;                                                                        // mux_pipeline_069:in_ready -> rsp_demux_014:src0_ready
	wire   [44:0] rsp_demux_014_src0_channel;                                                                      // rsp_demux_014:src0_channel -> mux_pipeline_069:in_channel
	wire          rsp_demux_014_src0_startofpacket;                                                                // rsp_demux_014:src0_startofpacket -> mux_pipeline_069:in_startofpacket
	wire          rsp_demux_014_src0_endofpacket;                                                                  // rsp_demux_014:src0_endofpacket -> mux_pipeline_069:in_endofpacket
	wire          mux_pipeline_069_source0_valid;                                                                  // mux_pipeline_069:out_valid -> rsp_mux:sink14_valid
	wire  [129:0] mux_pipeline_069_source0_data;                                                                   // mux_pipeline_069:out_data -> rsp_mux:sink14_data
	wire          mux_pipeline_069_source0_ready;                                                                  // rsp_mux:sink14_ready -> mux_pipeline_069:out_ready
	wire   [44:0] mux_pipeline_069_source0_channel;                                                                // mux_pipeline_069:out_channel -> rsp_mux:sink14_channel
	wire          mux_pipeline_069_source0_startofpacket;                                                          // mux_pipeline_069:out_startofpacket -> rsp_mux:sink14_startofpacket
	wire          mux_pipeline_069_source0_endofpacket;                                                            // mux_pipeline_069:out_endofpacket -> rsp_mux:sink14_endofpacket
	wire          rsp_demux_015_src0_valid;                                                                        // rsp_demux_015:src0_valid -> mux_pipeline_070:in_valid
	wire  [129:0] rsp_demux_015_src0_data;                                                                         // rsp_demux_015:src0_data -> mux_pipeline_070:in_data
	wire          rsp_demux_015_src0_ready;                                                                        // mux_pipeline_070:in_ready -> rsp_demux_015:src0_ready
	wire   [44:0] rsp_demux_015_src0_channel;                                                                      // rsp_demux_015:src0_channel -> mux_pipeline_070:in_channel
	wire          rsp_demux_015_src0_startofpacket;                                                                // rsp_demux_015:src0_startofpacket -> mux_pipeline_070:in_startofpacket
	wire          rsp_demux_015_src0_endofpacket;                                                                  // rsp_demux_015:src0_endofpacket -> mux_pipeline_070:in_endofpacket
	wire          mux_pipeline_070_source0_valid;                                                                  // mux_pipeline_070:out_valid -> rsp_mux:sink15_valid
	wire  [129:0] mux_pipeline_070_source0_data;                                                                   // mux_pipeline_070:out_data -> rsp_mux:sink15_data
	wire          mux_pipeline_070_source0_ready;                                                                  // rsp_mux:sink15_ready -> mux_pipeline_070:out_ready
	wire   [44:0] mux_pipeline_070_source0_channel;                                                                // mux_pipeline_070:out_channel -> rsp_mux:sink15_channel
	wire          mux_pipeline_070_source0_startofpacket;                                                          // mux_pipeline_070:out_startofpacket -> rsp_mux:sink15_startofpacket
	wire          mux_pipeline_070_source0_endofpacket;                                                            // mux_pipeline_070:out_endofpacket -> rsp_mux:sink15_endofpacket
	wire          rsp_demux_016_src0_valid;                                                                        // rsp_demux_016:src0_valid -> mux_pipeline_071:in_valid
	wire  [129:0] rsp_demux_016_src0_data;                                                                         // rsp_demux_016:src0_data -> mux_pipeline_071:in_data
	wire          rsp_demux_016_src0_ready;                                                                        // mux_pipeline_071:in_ready -> rsp_demux_016:src0_ready
	wire   [44:0] rsp_demux_016_src0_channel;                                                                      // rsp_demux_016:src0_channel -> mux_pipeline_071:in_channel
	wire          rsp_demux_016_src0_startofpacket;                                                                // rsp_demux_016:src0_startofpacket -> mux_pipeline_071:in_startofpacket
	wire          rsp_demux_016_src0_endofpacket;                                                                  // rsp_demux_016:src0_endofpacket -> mux_pipeline_071:in_endofpacket
	wire          mux_pipeline_071_source0_valid;                                                                  // mux_pipeline_071:out_valid -> rsp_mux:sink16_valid
	wire  [129:0] mux_pipeline_071_source0_data;                                                                   // mux_pipeline_071:out_data -> rsp_mux:sink16_data
	wire          mux_pipeline_071_source0_ready;                                                                  // rsp_mux:sink16_ready -> mux_pipeline_071:out_ready
	wire   [44:0] mux_pipeline_071_source0_channel;                                                                // mux_pipeline_071:out_channel -> rsp_mux:sink16_channel
	wire          mux_pipeline_071_source0_startofpacket;                                                          // mux_pipeline_071:out_startofpacket -> rsp_mux:sink16_startofpacket
	wire          mux_pipeline_071_source0_endofpacket;                                                            // mux_pipeline_071:out_endofpacket -> rsp_mux:sink16_endofpacket
	wire          rsp_demux_017_src0_valid;                                                                        // rsp_demux_017:src0_valid -> mux_pipeline_072:in_valid
	wire  [129:0] rsp_demux_017_src0_data;                                                                         // rsp_demux_017:src0_data -> mux_pipeline_072:in_data
	wire          rsp_demux_017_src0_ready;                                                                        // mux_pipeline_072:in_ready -> rsp_demux_017:src0_ready
	wire   [44:0] rsp_demux_017_src0_channel;                                                                      // rsp_demux_017:src0_channel -> mux_pipeline_072:in_channel
	wire          rsp_demux_017_src0_startofpacket;                                                                // rsp_demux_017:src0_startofpacket -> mux_pipeline_072:in_startofpacket
	wire          rsp_demux_017_src0_endofpacket;                                                                  // rsp_demux_017:src0_endofpacket -> mux_pipeline_072:in_endofpacket
	wire          mux_pipeline_072_source0_valid;                                                                  // mux_pipeline_072:out_valid -> rsp_mux:sink17_valid
	wire  [129:0] mux_pipeline_072_source0_data;                                                                   // mux_pipeline_072:out_data -> rsp_mux:sink17_data
	wire          mux_pipeline_072_source0_ready;                                                                  // rsp_mux:sink17_ready -> mux_pipeline_072:out_ready
	wire   [44:0] mux_pipeline_072_source0_channel;                                                                // mux_pipeline_072:out_channel -> rsp_mux:sink17_channel
	wire          mux_pipeline_072_source0_startofpacket;                                                          // mux_pipeline_072:out_startofpacket -> rsp_mux:sink17_startofpacket
	wire          mux_pipeline_072_source0_endofpacket;                                                            // mux_pipeline_072:out_endofpacket -> rsp_mux:sink17_endofpacket
	wire          rsp_demux_018_src0_valid;                                                                        // rsp_demux_018:src0_valid -> mux_pipeline_073:in_valid
	wire  [129:0] rsp_demux_018_src0_data;                                                                         // rsp_demux_018:src0_data -> mux_pipeline_073:in_data
	wire          rsp_demux_018_src0_ready;                                                                        // mux_pipeline_073:in_ready -> rsp_demux_018:src0_ready
	wire   [44:0] rsp_demux_018_src0_channel;                                                                      // rsp_demux_018:src0_channel -> mux_pipeline_073:in_channel
	wire          rsp_demux_018_src0_startofpacket;                                                                // rsp_demux_018:src0_startofpacket -> mux_pipeline_073:in_startofpacket
	wire          rsp_demux_018_src0_endofpacket;                                                                  // rsp_demux_018:src0_endofpacket -> mux_pipeline_073:in_endofpacket
	wire          mux_pipeline_073_source0_valid;                                                                  // mux_pipeline_073:out_valid -> rsp_mux:sink18_valid
	wire  [129:0] mux_pipeline_073_source0_data;                                                                   // mux_pipeline_073:out_data -> rsp_mux:sink18_data
	wire          mux_pipeline_073_source0_ready;                                                                  // rsp_mux:sink18_ready -> mux_pipeline_073:out_ready
	wire   [44:0] mux_pipeline_073_source0_channel;                                                                // mux_pipeline_073:out_channel -> rsp_mux:sink18_channel
	wire          mux_pipeline_073_source0_startofpacket;                                                          // mux_pipeline_073:out_startofpacket -> rsp_mux:sink18_startofpacket
	wire          mux_pipeline_073_source0_endofpacket;                                                            // mux_pipeline_073:out_endofpacket -> rsp_mux:sink18_endofpacket
	wire          rsp_demux_019_src0_valid;                                                                        // rsp_demux_019:src0_valid -> mux_pipeline_074:in_valid
	wire  [129:0] rsp_demux_019_src0_data;                                                                         // rsp_demux_019:src0_data -> mux_pipeline_074:in_data
	wire          rsp_demux_019_src0_ready;                                                                        // mux_pipeline_074:in_ready -> rsp_demux_019:src0_ready
	wire   [44:0] rsp_demux_019_src0_channel;                                                                      // rsp_demux_019:src0_channel -> mux_pipeline_074:in_channel
	wire          rsp_demux_019_src0_startofpacket;                                                                // rsp_demux_019:src0_startofpacket -> mux_pipeline_074:in_startofpacket
	wire          rsp_demux_019_src0_endofpacket;                                                                  // rsp_demux_019:src0_endofpacket -> mux_pipeline_074:in_endofpacket
	wire          mux_pipeline_074_source0_valid;                                                                  // mux_pipeline_074:out_valid -> rsp_mux:sink19_valid
	wire  [129:0] mux_pipeline_074_source0_data;                                                                   // mux_pipeline_074:out_data -> rsp_mux:sink19_data
	wire          mux_pipeline_074_source0_ready;                                                                  // rsp_mux:sink19_ready -> mux_pipeline_074:out_ready
	wire   [44:0] mux_pipeline_074_source0_channel;                                                                // mux_pipeline_074:out_channel -> rsp_mux:sink19_channel
	wire          mux_pipeline_074_source0_startofpacket;                                                          // mux_pipeline_074:out_startofpacket -> rsp_mux:sink19_startofpacket
	wire          mux_pipeline_074_source0_endofpacket;                                                            // mux_pipeline_074:out_endofpacket -> rsp_mux:sink19_endofpacket
	wire          rsp_demux_020_src0_valid;                                                                        // rsp_demux_020:src0_valid -> mux_pipeline_075:in_valid
	wire  [129:0] rsp_demux_020_src0_data;                                                                         // rsp_demux_020:src0_data -> mux_pipeline_075:in_data
	wire          rsp_demux_020_src0_ready;                                                                        // mux_pipeline_075:in_ready -> rsp_demux_020:src0_ready
	wire   [44:0] rsp_demux_020_src0_channel;                                                                      // rsp_demux_020:src0_channel -> mux_pipeline_075:in_channel
	wire          rsp_demux_020_src0_startofpacket;                                                                // rsp_demux_020:src0_startofpacket -> mux_pipeline_075:in_startofpacket
	wire          rsp_demux_020_src0_endofpacket;                                                                  // rsp_demux_020:src0_endofpacket -> mux_pipeline_075:in_endofpacket
	wire          mux_pipeline_075_source0_valid;                                                                  // mux_pipeline_075:out_valid -> rsp_mux:sink20_valid
	wire  [129:0] mux_pipeline_075_source0_data;                                                                   // mux_pipeline_075:out_data -> rsp_mux:sink20_data
	wire          mux_pipeline_075_source0_ready;                                                                  // rsp_mux:sink20_ready -> mux_pipeline_075:out_ready
	wire   [44:0] mux_pipeline_075_source0_channel;                                                                // mux_pipeline_075:out_channel -> rsp_mux:sink20_channel
	wire          mux_pipeline_075_source0_startofpacket;                                                          // mux_pipeline_075:out_startofpacket -> rsp_mux:sink20_startofpacket
	wire          mux_pipeline_075_source0_endofpacket;                                                            // mux_pipeline_075:out_endofpacket -> rsp_mux:sink20_endofpacket
	wire          crosser_002_out_valid;                                                                           // crosser_002:out_valid -> mux_pipeline_076:in_valid
	wire  [129:0] crosser_002_out_data;                                                                            // crosser_002:out_data -> mux_pipeline_076:in_data
	wire          crosser_002_out_ready;                                                                           // mux_pipeline_076:in_ready -> crosser_002:out_ready
	wire   [44:0] crosser_002_out_channel;                                                                         // crosser_002:out_channel -> mux_pipeline_076:in_channel
	wire          crosser_002_out_startofpacket;                                                                   // crosser_002:out_startofpacket -> mux_pipeline_076:in_startofpacket
	wire          crosser_002_out_endofpacket;                                                                     // crosser_002:out_endofpacket -> mux_pipeline_076:in_endofpacket
	wire          mux_pipeline_076_source0_valid;                                                                  // mux_pipeline_076:out_valid -> rsp_mux:sink21_valid
	wire  [129:0] mux_pipeline_076_source0_data;                                                                   // mux_pipeline_076:out_data -> rsp_mux:sink21_data
	wire          mux_pipeline_076_source0_ready;                                                                  // rsp_mux:sink21_ready -> mux_pipeline_076:out_ready
	wire   [44:0] mux_pipeline_076_source0_channel;                                                                // mux_pipeline_076:out_channel -> rsp_mux:sink21_channel
	wire          mux_pipeline_076_source0_startofpacket;                                                          // mux_pipeline_076:out_startofpacket -> rsp_mux:sink21_startofpacket
	wire          mux_pipeline_076_source0_endofpacket;                                                            // mux_pipeline_076:out_endofpacket -> rsp_mux:sink21_endofpacket
	wire          rsp_demux_022_src0_valid;                                                                        // rsp_demux_022:src0_valid -> mux_pipeline_077:in_valid
	wire  [129:0] rsp_demux_022_src0_data;                                                                         // rsp_demux_022:src0_data -> mux_pipeline_077:in_data
	wire          rsp_demux_022_src0_ready;                                                                        // mux_pipeline_077:in_ready -> rsp_demux_022:src0_ready
	wire   [44:0] rsp_demux_022_src0_channel;                                                                      // rsp_demux_022:src0_channel -> mux_pipeline_077:in_channel
	wire          rsp_demux_022_src0_startofpacket;                                                                // rsp_demux_022:src0_startofpacket -> mux_pipeline_077:in_startofpacket
	wire          rsp_demux_022_src0_endofpacket;                                                                  // rsp_demux_022:src0_endofpacket -> mux_pipeline_077:in_endofpacket
	wire          mux_pipeline_077_source0_valid;                                                                  // mux_pipeline_077:out_valid -> rsp_mux:sink22_valid
	wire  [129:0] mux_pipeline_077_source0_data;                                                                   // mux_pipeline_077:out_data -> rsp_mux:sink22_data
	wire          mux_pipeline_077_source0_ready;                                                                  // rsp_mux:sink22_ready -> mux_pipeline_077:out_ready
	wire   [44:0] mux_pipeline_077_source0_channel;                                                                // mux_pipeline_077:out_channel -> rsp_mux:sink22_channel
	wire          mux_pipeline_077_source0_startofpacket;                                                          // mux_pipeline_077:out_startofpacket -> rsp_mux:sink22_startofpacket
	wire          mux_pipeline_077_source0_endofpacket;                                                            // mux_pipeline_077:out_endofpacket -> rsp_mux:sink22_endofpacket
	wire          sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_valid;         // sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:out_valid -> mux_pipeline_078:in_valid
	wire  [129:0] sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_data;          // sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:out_data -> mux_pipeline_078:in_data
	wire          sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_ready;         // mux_pipeline_078:in_ready -> sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:out_ready
	wire   [44:0] sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_channel;       // sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:out_channel -> mux_pipeline_078:in_channel
	wire          sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_startofpacket; // sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:out_startofpacket -> mux_pipeline_078:in_startofpacket
	wire          sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_endofpacket;   // sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:out_endofpacket -> mux_pipeline_078:in_endofpacket
	wire          mux_pipeline_078_source0_valid;                                                                  // mux_pipeline_078:out_valid -> rsp_mux:sink23_valid
	wire  [129:0] mux_pipeline_078_source0_data;                                                                   // mux_pipeline_078:out_data -> rsp_mux:sink23_data
	wire          mux_pipeline_078_source0_ready;                                                                  // rsp_mux:sink23_ready -> mux_pipeline_078:out_ready
	wire   [44:0] mux_pipeline_078_source0_channel;                                                                // mux_pipeline_078:out_channel -> rsp_mux:sink23_channel
	wire          mux_pipeline_078_source0_startofpacket;                                                          // mux_pipeline_078:out_startofpacket -> rsp_mux:sink23_startofpacket
	wire          mux_pipeline_078_source0_endofpacket;                                                            // mux_pipeline_078:out_endofpacket -> rsp_mux:sink23_endofpacket
	wire          sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_valid;         // sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:out_valid -> mux_pipeline_079:in_valid
	wire  [129:0] sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_data;          // sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:out_data -> mux_pipeline_079:in_data
	wire          sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_ready;         // mux_pipeline_079:in_ready -> sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:out_ready
	wire   [44:0] sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_channel;       // sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:out_channel -> mux_pipeline_079:in_channel
	wire          sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_startofpacket; // sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:out_startofpacket -> mux_pipeline_079:in_startofpacket
	wire          sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_endofpacket;   // sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter:out_endofpacket -> mux_pipeline_079:in_endofpacket
	wire          mux_pipeline_079_source0_valid;                                                                  // mux_pipeline_079:out_valid -> rsp_mux:sink24_valid
	wire  [129:0] mux_pipeline_079_source0_data;                                                                   // mux_pipeline_079:out_data -> rsp_mux:sink24_data
	wire          mux_pipeline_079_source0_ready;                                                                  // rsp_mux:sink24_ready -> mux_pipeline_079:out_ready
	wire   [44:0] mux_pipeline_079_source0_channel;                                                                // mux_pipeline_079:out_channel -> rsp_mux:sink24_channel
	wire          mux_pipeline_079_source0_startofpacket;                                                          // mux_pipeline_079:out_startofpacket -> rsp_mux:sink24_startofpacket
	wire          mux_pipeline_079_source0_endofpacket;                                                            // mux_pipeline_079:out_endofpacket -> rsp_mux:sink24_endofpacket
	wire          rsp_demux_025_src0_valid;                                                                        // rsp_demux_025:src0_valid -> mux_pipeline_080:in_valid
	wire  [129:0] rsp_demux_025_src0_data;                                                                         // rsp_demux_025:src0_data -> mux_pipeline_080:in_data
	wire          rsp_demux_025_src0_ready;                                                                        // mux_pipeline_080:in_ready -> rsp_demux_025:src0_ready
	wire   [44:0] rsp_demux_025_src0_channel;                                                                      // rsp_demux_025:src0_channel -> mux_pipeline_080:in_channel
	wire          rsp_demux_025_src0_startofpacket;                                                                // rsp_demux_025:src0_startofpacket -> mux_pipeline_080:in_startofpacket
	wire          rsp_demux_025_src0_endofpacket;                                                                  // rsp_demux_025:src0_endofpacket -> mux_pipeline_080:in_endofpacket
	wire          mux_pipeline_080_source0_valid;                                                                  // mux_pipeline_080:out_valid -> rsp_mux:sink25_valid
	wire  [129:0] mux_pipeline_080_source0_data;                                                                   // mux_pipeline_080:out_data -> rsp_mux:sink25_data
	wire          mux_pipeline_080_source0_ready;                                                                  // rsp_mux:sink25_ready -> mux_pipeline_080:out_ready
	wire   [44:0] mux_pipeline_080_source0_channel;                                                                // mux_pipeline_080:out_channel -> rsp_mux:sink25_channel
	wire          mux_pipeline_080_source0_startofpacket;                                                          // mux_pipeline_080:out_startofpacket -> rsp_mux:sink25_startofpacket
	wire          mux_pipeline_080_source0_endofpacket;                                                            // mux_pipeline_080:out_endofpacket -> rsp_mux:sink25_endofpacket
	wire          rsp_demux_026_src0_valid;                                                                        // rsp_demux_026:src0_valid -> mux_pipeline_081:in_valid
	wire  [129:0] rsp_demux_026_src0_data;                                                                         // rsp_demux_026:src0_data -> mux_pipeline_081:in_data
	wire          rsp_demux_026_src0_ready;                                                                        // mux_pipeline_081:in_ready -> rsp_demux_026:src0_ready
	wire   [44:0] rsp_demux_026_src0_channel;                                                                      // rsp_demux_026:src0_channel -> mux_pipeline_081:in_channel
	wire          rsp_demux_026_src0_startofpacket;                                                                // rsp_demux_026:src0_startofpacket -> mux_pipeline_081:in_startofpacket
	wire          rsp_demux_026_src0_endofpacket;                                                                  // rsp_demux_026:src0_endofpacket -> mux_pipeline_081:in_endofpacket
	wire          mux_pipeline_081_source0_valid;                                                                  // mux_pipeline_081:out_valid -> rsp_mux:sink26_valid
	wire  [129:0] mux_pipeline_081_source0_data;                                                                   // mux_pipeline_081:out_data -> rsp_mux:sink26_data
	wire          mux_pipeline_081_source0_ready;                                                                  // rsp_mux:sink26_ready -> mux_pipeline_081:out_ready
	wire   [44:0] mux_pipeline_081_source0_channel;                                                                // mux_pipeline_081:out_channel -> rsp_mux:sink26_channel
	wire          mux_pipeline_081_source0_startofpacket;                                                          // mux_pipeline_081:out_startofpacket -> rsp_mux:sink26_startofpacket
	wire          mux_pipeline_081_source0_endofpacket;                                                            // mux_pipeline_081:out_endofpacket -> rsp_mux:sink26_endofpacket
	wire          rsp_demux_027_src0_valid;                                                                        // rsp_demux_027:src0_valid -> mux_pipeline_082:in_valid
	wire  [129:0] rsp_demux_027_src0_data;                                                                         // rsp_demux_027:src0_data -> mux_pipeline_082:in_data
	wire          rsp_demux_027_src0_ready;                                                                        // mux_pipeline_082:in_ready -> rsp_demux_027:src0_ready
	wire   [44:0] rsp_demux_027_src0_channel;                                                                      // rsp_demux_027:src0_channel -> mux_pipeline_082:in_channel
	wire          rsp_demux_027_src0_startofpacket;                                                                // rsp_demux_027:src0_startofpacket -> mux_pipeline_082:in_startofpacket
	wire          rsp_demux_027_src0_endofpacket;                                                                  // rsp_demux_027:src0_endofpacket -> mux_pipeline_082:in_endofpacket
	wire          mux_pipeline_082_source0_valid;                                                                  // mux_pipeline_082:out_valid -> rsp_mux:sink27_valid
	wire  [129:0] mux_pipeline_082_source0_data;                                                                   // mux_pipeline_082:out_data -> rsp_mux:sink27_data
	wire          mux_pipeline_082_source0_ready;                                                                  // rsp_mux:sink27_ready -> mux_pipeline_082:out_ready
	wire   [44:0] mux_pipeline_082_source0_channel;                                                                // mux_pipeline_082:out_channel -> rsp_mux:sink27_channel
	wire          mux_pipeline_082_source0_startofpacket;                                                          // mux_pipeline_082:out_startofpacket -> rsp_mux:sink27_startofpacket
	wire          mux_pipeline_082_source0_endofpacket;                                                            // mux_pipeline_082:out_endofpacket -> rsp_mux:sink27_endofpacket
	wire          rsp_demux_028_src0_valid;                                                                        // rsp_demux_028:src0_valid -> mux_pipeline_083:in_valid
	wire  [129:0] rsp_demux_028_src0_data;                                                                         // rsp_demux_028:src0_data -> mux_pipeline_083:in_data
	wire          rsp_demux_028_src0_ready;                                                                        // mux_pipeline_083:in_ready -> rsp_demux_028:src0_ready
	wire   [44:0] rsp_demux_028_src0_channel;                                                                      // rsp_demux_028:src0_channel -> mux_pipeline_083:in_channel
	wire          rsp_demux_028_src0_startofpacket;                                                                // rsp_demux_028:src0_startofpacket -> mux_pipeline_083:in_startofpacket
	wire          rsp_demux_028_src0_endofpacket;                                                                  // rsp_demux_028:src0_endofpacket -> mux_pipeline_083:in_endofpacket
	wire          mux_pipeline_083_source0_valid;                                                                  // mux_pipeline_083:out_valid -> rsp_mux:sink28_valid
	wire  [129:0] mux_pipeline_083_source0_data;                                                                   // mux_pipeline_083:out_data -> rsp_mux:sink28_data
	wire          mux_pipeline_083_source0_ready;                                                                  // rsp_mux:sink28_ready -> mux_pipeline_083:out_ready
	wire   [44:0] mux_pipeline_083_source0_channel;                                                                // mux_pipeline_083:out_channel -> rsp_mux:sink28_channel
	wire          mux_pipeline_083_source0_startofpacket;                                                          // mux_pipeline_083:out_startofpacket -> rsp_mux:sink28_startofpacket
	wire          mux_pipeline_083_source0_endofpacket;                                                            // mux_pipeline_083:out_endofpacket -> rsp_mux:sink28_endofpacket
	wire          rsp_demux_029_src0_valid;                                                                        // rsp_demux_029:src0_valid -> mux_pipeline_084:in_valid
	wire  [129:0] rsp_demux_029_src0_data;                                                                         // rsp_demux_029:src0_data -> mux_pipeline_084:in_data
	wire          rsp_demux_029_src0_ready;                                                                        // mux_pipeline_084:in_ready -> rsp_demux_029:src0_ready
	wire   [44:0] rsp_demux_029_src0_channel;                                                                      // rsp_demux_029:src0_channel -> mux_pipeline_084:in_channel
	wire          rsp_demux_029_src0_startofpacket;                                                                // rsp_demux_029:src0_startofpacket -> mux_pipeline_084:in_startofpacket
	wire          rsp_demux_029_src0_endofpacket;                                                                  // rsp_demux_029:src0_endofpacket -> mux_pipeline_084:in_endofpacket
	wire          mux_pipeline_084_source0_valid;                                                                  // mux_pipeline_084:out_valid -> rsp_mux:sink29_valid
	wire  [129:0] mux_pipeline_084_source0_data;                                                                   // mux_pipeline_084:out_data -> rsp_mux:sink29_data
	wire          mux_pipeline_084_source0_ready;                                                                  // rsp_mux:sink29_ready -> mux_pipeline_084:out_ready
	wire   [44:0] mux_pipeline_084_source0_channel;                                                                // mux_pipeline_084:out_channel -> rsp_mux:sink29_channel
	wire          mux_pipeline_084_source0_startofpacket;                                                          // mux_pipeline_084:out_startofpacket -> rsp_mux:sink29_startofpacket
	wire          mux_pipeline_084_source0_endofpacket;                                                            // mux_pipeline_084:out_endofpacket -> rsp_mux:sink29_endofpacket
	wire          rsp_demux_030_src0_valid;                                                                        // rsp_demux_030:src0_valid -> mux_pipeline_085:in_valid
	wire  [129:0] rsp_demux_030_src0_data;                                                                         // rsp_demux_030:src0_data -> mux_pipeline_085:in_data
	wire          rsp_demux_030_src0_ready;                                                                        // mux_pipeline_085:in_ready -> rsp_demux_030:src0_ready
	wire   [44:0] rsp_demux_030_src0_channel;                                                                      // rsp_demux_030:src0_channel -> mux_pipeline_085:in_channel
	wire          rsp_demux_030_src0_startofpacket;                                                                // rsp_demux_030:src0_startofpacket -> mux_pipeline_085:in_startofpacket
	wire          rsp_demux_030_src0_endofpacket;                                                                  // rsp_demux_030:src0_endofpacket -> mux_pipeline_085:in_endofpacket
	wire          mux_pipeline_085_source0_valid;                                                                  // mux_pipeline_085:out_valid -> rsp_mux:sink30_valid
	wire  [129:0] mux_pipeline_085_source0_data;                                                                   // mux_pipeline_085:out_data -> rsp_mux:sink30_data
	wire          mux_pipeline_085_source0_ready;                                                                  // rsp_mux:sink30_ready -> mux_pipeline_085:out_ready
	wire   [44:0] mux_pipeline_085_source0_channel;                                                                // mux_pipeline_085:out_channel -> rsp_mux:sink30_channel
	wire          mux_pipeline_085_source0_startofpacket;                                                          // mux_pipeline_085:out_startofpacket -> rsp_mux:sink30_startofpacket
	wire          mux_pipeline_085_source0_endofpacket;                                                            // mux_pipeline_085:out_endofpacket -> rsp_mux:sink30_endofpacket
	wire          rsp_demux_031_src0_valid;                                                                        // rsp_demux_031:src0_valid -> mux_pipeline_086:in_valid
	wire  [129:0] rsp_demux_031_src0_data;                                                                         // rsp_demux_031:src0_data -> mux_pipeline_086:in_data
	wire          rsp_demux_031_src0_ready;                                                                        // mux_pipeline_086:in_ready -> rsp_demux_031:src0_ready
	wire   [44:0] rsp_demux_031_src0_channel;                                                                      // rsp_demux_031:src0_channel -> mux_pipeline_086:in_channel
	wire          rsp_demux_031_src0_startofpacket;                                                                // rsp_demux_031:src0_startofpacket -> mux_pipeline_086:in_startofpacket
	wire          rsp_demux_031_src0_endofpacket;                                                                  // rsp_demux_031:src0_endofpacket -> mux_pipeline_086:in_endofpacket
	wire          mux_pipeline_086_source0_valid;                                                                  // mux_pipeline_086:out_valid -> rsp_mux:sink31_valid
	wire  [129:0] mux_pipeline_086_source0_data;                                                                   // mux_pipeline_086:out_data -> rsp_mux:sink31_data
	wire          mux_pipeline_086_source0_ready;                                                                  // rsp_mux:sink31_ready -> mux_pipeline_086:out_ready
	wire   [44:0] mux_pipeline_086_source0_channel;                                                                // mux_pipeline_086:out_channel -> rsp_mux:sink31_channel
	wire          mux_pipeline_086_source0_startofpacket;                                                          // mux_pipeline_086:out_startofpacket -> rsp_mux:sink31_startofpacket
	wire          mux_pipeline_086_source0_endofpacket;                                                            // mux_pipeline_086:out_endofpacket -> rsp_mux:sink31_endofpacket
	wire          rsp_demux_032_src0_valid;                                                                        // rsp_demux_032:src0_valid -> mux_pipeline_087:in_valid
	wire  [129:0] rsp_demux_032_src0_data;                                                                         // rsp_demux_032:src0_data -> mux_pipeline_087:in_data
	wire          rsp_demux_032_src0_ready;                                                                        // mux_pipeline_087:in_ready -> rsp_demux_032:src0_ready
	wire   [44:0] rsp_demux_032_src0_channel;                                                                      // rsp_demux_032:src0_channel -> mux_pipeline_087:in_channel
	wire          rsp_demux_032_src0_startofpacket;                                                                // rsp_demux_032:src0_startofpacket -> mux_pipeline_087:in_startofpacket
	wire          rsp_demux_032_src0_endofpacket;                                                                  // rsp_demux_032:src0_endofpacket -> mux_pipeline_087:in_endofpacket
	wire          mux_pipeline_087_source0_valid;                                                                  // mux_pipeline_087:out_valid -> rsp_mux:sink32_valid
	wire  [129:0] mux_pipeline_087_source0_data;                                                                   // mux_pipeline_087:out_data -> rsp_mux:sink32_data
	wire          mux_pipeline_087_source0_ready;                                                                  // rsp_mux:sink32_ready -> mux_pipeline_087:out_ready
	wire   [44:0] mux_pipeline_087_source0_channel;                                                                // mux_pipeline_087:out_channel -> rsp_mux:sink32_channel
	wire          mux_pipeline_087_source0_startofpacket;                                                          // mux_pipeline_087:out_startofpacket -> rsp_mux:sink32_startofpacket
	wire          mux_pipeline_087_source0_endofpacket;                                                            // mux_pipeline_087:out_endofpacket -> rsp_mux:sink32_endofpacket
	wire          rsp_demux_033_src0_valid;                                                                        // rsp_demux_033:src0_valid -> mux_pipeline_088:in_valid
	wire  [129:0] rsp_demux_033_src0_data;                                                                         // rsp_demux_033:src0_data -> mux_pipeline_088:in_data
	wire          rsp_demux_033_src0_ready;                                                                        // mux_pipeline_088:in_ready -> rsp_demux_033:src0_ready
	wire   [44:0] rsp_demux_033_src0_channel;                                                                      // rsp_demux_033:src0_channel -> mux_pipeline_088:in_channel
	wire          rsp_demux_033_src0_startofpacket;                                                                // rsp_demux_033:src0_startofpacket -> mux_pipeline_088:in_startofpacket
	wire          rsp_demux_033_src0_endofpacket;                                                                  // rsp_demux_033:src0_endofpacket -> mux_pipeline_088:in_endofpacket
	wire          mux_pipeline_088_source0_valid;                                                                  // mux_pipeline_088:out_valid -> rsp_mux:sink33_valid
	wire  [129:0] mux_pipeline_088_source0_data;                                                                   // mux_pipeline_088:out_data -> rsp_mux:sink33_data
	wire          mux_pipeline_088_source0_ready;                                                                  // rsp_mux:sink33_ready -> mux_pipeline_088:out_ready
	wire   [44:0] mux_pipeline_088_source0_channel;                                                                // mux_pipeline_088:out_channel -> rsp_mux:sink33_channel
	wire          mux_pipeline_088_source0_startofpacket;                                                          // mux_pipeline_088:out_startofpacket -> rsp_mux:sink33_startofpacket
	wire          mux_pipeline_088_source0_endofpacket;                                                            // mux_pipeline_088:out_endofpacket -> rsp_mux:sink33_endofpacket
	wire          rsp_demux_034_src0_valid;                                                                        // rsp_demux_034:src0_valid -> mux_pipeline_089:in_valid
	wire  [129:0] rsp_demux_034_src0_data;                                                                         // rsp_demux_034:src0_data -> mux_pipeline_089:in_data
	wire          rsp_demux_034_src0_ready;                                                                        // mux_pipeline_089:in_ready -> rsp_demux_034:src0_ready
	wire   [44:0] rsp_demux_034_src0_channel;                                                                      // rsp_demux_034:src0_channel -> mux_pipeline_089:in_channel
	wire          rsp_demux_034_src0_startofpacket;                                                                // rsp_demux_034:src0_startofpacket -> mux_pipeline_089:in_startofpacket
	wire          rsp_demux_034_src0_endofpacket;                                                                  // rsp_demux_034:src0_endofpacket -> mux_pipeline_089:in_endofpacket
	wire          mux_pipeline_089_source0_valid;                                                                  // mux_pipeline_089:out_valid -> rsp_mux:sink34_valid
	wire  [129:0] mux_pipeline_089_source0_data;                                                                   // mux_pipeline_089:out_data -> rsp_mux:sink34_data
	wire          mux_pipeline_089_source0_ready;                                                                  // rsp_mux:sink34_ready -> mux_pipeline_089:out_ready
	wire   [44:0] mux_pipeline_089_source0_channel;                                                                // mux_pipeline_089:out_channel -> rsp_mux:sink34_channel
	wire          mux_pipeline_089_source0_startofpacket;                                                          // mux_pipeline_089:out_startofpacket -> rsp_mux:sink34_startofpacket
	wire          mux_pipeline_089_source0_endofpacket;                                                            // mux_pipeline_089:out_endofpacket -> rsp_mux:sink34_endofpacket
	wire          rsp_demux_035_src0_valid;                                                                        // rsp_demux_035:src0_valid -> mux_pipeline_090:in_valid
	wire  [129:0] rsp_demux_035_src0_data;                                                                         // rsp_demux_035:src0_data -> mux_pipeline_090:in_data
	wire          rsp_demux_035_src0_ready;                                                                        // mux_pipeline_090:in_ready -> rsp_demux_035:src0_ready
	wire   [44:0] rsp_demux_035_src0_channel;                                                                      // rsp_demux_035:src0_channel -> mux_pipeline_090:in_channel
	wire          rsp_demux_035_src0_startofpacket;                                                                // rsp_demux_035:src0_startofpacket -> mux_pipeline_090:in_startofpacket
	wire          rsp_demux_035_src0_endofpacket;                                                                  // rsp_demux_035:src0_endofpacket -> mux_pipeline_090:in_endofpacket
	wire          mux_pipeline_090_source0_valid;                                                                  // mux_pipeline_090:out_valid -> rsp_mux:sink35_valid
	wire  [129:0] mux_pipeline_090_source0_data;                                                                   // mux_pipeline_090:out_data -> rsp_mux:sink35_data
	wire          mux_pipeline_090_source0_ready;                                                                  // rsp_mux:sink35_ready -> mux_pipeline_090:out_ready
	wire   [44:0] mux_pipeline_090_source0_channel;                                                                // mux_pipeline_090:out_channel -> rsp_mux:sink35_channel
	wire          mux_pipeline_090_source0_startofpacket;                                                          // mux_pipeline_090:out_startofpacket -> rsp_mux:sink35_startofpacket
	wire          mux_pipeline_090_source0_endofpacket;                                                            // mux_pipeline_090:out_endofpacket -> rsp_mux:sink35_endofpacket
	wire          rsp_demux_036_src0_valid;                                                                        // rsp_demux_036:src0_valid -> mux_pipeline_091:in_valid
	wire  [129:0] rsp_demux_036_src0_data;                                                                         // rsp_demux_036:src0_data -> mux_pipeline_091:in_data
	wire          rsp_demux_036_src0_ready;                                                                        // mux_pipeline_091:in_ready -> rsp_demux_036:src0_ready
	wire   [44:0] rsp_demux_036_src0_channel;                                                                      // rsp_demux_036:src0_channel -> mux_pipeline_091:in_channel
	wire          rsp_demux_036_src0_startofpacket;                                                                // rsp_demux_036:src0_startofpacket -> mux_pipeline_091:in_startofpacket
	wire          rsp_demux_036_src0_endofpacket;                                                                  // rsp_demux_036:src0_endofpacket -> mux_pipeline_091:in_endofpacket
	wire          mux_pipeline_091_source0_valid;                                                                  // mux_pipeline_091:out_valid -> rsp_mux:sink36_valid
	wire  [129:0] mux_pipeline_091_source0_data;                                                                   // mux_pipeline_091:out_data -> rsp_mux:sink36_data
	wire          mux_pipeline_091_source0_ready;                                                                  // rsp_mux:sink36_ready -> mux_pipeline_091:out_ready
	wire   [44:0] mux_pipeline_091_source0_channel;                                                                // mux_pipeline_091:out_channel -> rsp_mux:sink36_channel
	wire          mux_pipeline_091_source0_startofpacket;                                                          // mux_pipeline_091:out_startofpacket -> rsp_mux:sink36_startofpacket
	wire          mux_pipeline_091_source0_endofpacket;                                                            // mux_pipeline_091:out_endofpacket -> rsp_mux:sink36_endofpacket
	wire          rsp_demux_037_src0_valid;                                                                        // rsp_demux_037:src0_valid -> mux_pipeline_092:in_valid
	wire  [129:0] rsp_demux_037_src0_data;                                                                         // rsp_demux_037:src0_data -> mux_pipeline_092:in_data
	wire          rsp_demux_037_src0_ready;                                                                        // mux_pipeline_092:in_ready -> rsp_demux_037:src0_ready
	wire   [44:0] rsp_demux_037_src0_channel;                                                                      // rsp_demux_037:src0_channel -> mux_pipeline_092:in_channel
	wire          rsp_demux_037_src0_startofpacket;                                                                // rsp_demux_037:src0_startofpacket -> mux_pipeline_092:in_startofpacket
	wire          rsp_demux_037_src0_endofpacket;                                                                  // rsp_demux_037:src0_endofpacket -> mux_pipeline_092:in_endofpacket
	wire          mux_pipeline_092_source0_valid;                                                                  // mux_pipeline_092:out_valid -> rsp_mux:sink37_valid
	wire  [129:0] mux_pipeline_092_source0_data;                                                                   // mux_pipeline_092:out_data -> rsp_mux:sink37_data
	wire          mux_pipeline_092_source0_ready;                                                                  // rsp_mux:sink37_ready -> mux_pipeline_092:out_ready
	wire   [44:0] mux_pipeline_092_source0_channel;                                                                // mux_pipeline_092:out_channel -> rsp_mux:sink37_channel
	wire          mux_pipeline_092_source0_startofpacket;                                                          // mux_pipeline_092:out_startofpacket -> rsp_mux:sink37_startofpacket
	wire          mux_pipeline_092_source0_endofpacket;                                                            // mux_pipeline_092:out_endofpacket -> rsp_mux:sink37_endofpacket
	wire          rsp_demux_038_src0_valid;                                                                        // rsp_demux_038:src0_valid -> mux_pipeline_093:in_valid
	wire  [129:0] rsp_demux_038_src0_data;                                                                         // rsp_demux_038:src0_data -> mux_pipeline_093:in_data
	wire          rsp_demux_038_src0_ready;                                                                        // mux_pipeline_093:in_ready -> rsp_demux_038:src0_ready
	wire   [44:0] rsp_demux_038_src0_channel;                                                                      // rsp_demux_038:src0_channel -> mux_pipeline_093:in_channel
	wire          rsp_demux_038_src0_startofpacket;                                                                // rsp_demux_038:src0_startofpacket -> mux_pipeline_093:in_startofpacket
	wire          rsp_demux_038_src0_endofpacket;                                                                  // rsp_demux_038:src0_endofpacket -> mux_pipeline_093:in_endofpacket
	wire          mux_pipeline_093_source0_valid;                                                                  // mux_pipeline_093:out_valid -> rsp_mux:sink38_valid
	wire  [129:0] mux_pipeline_093_source0_data;                                                                   // mux_pipeline_093:out_data -> rsp_mux:sink38_data
	wire          mux_pipeline_093_source0_ready;                                                                  // rsp_mux:sink38_ready -> mux_pipeline_093:out_ready
	wire   [44:0] mux_pipeline_093_source0_channel;                                                                // mux_pipeline_093:out_channel -> rsp_mux:sink38_channel
	wire          mux_pipeline_093_source0_startofpacket;                                                          // mux_pipeline_093:out_startofpacket -> rsp_mux:sink38_startofpacket
	wire          mux_pipeline_093_source0_endofpacket;                                                            // mux_pipeline_093:out_endofpacket -> rsp_mux:sink38_endofpacket
	wire          rsp_demux_039_src0_valid;                                                                        // rsp_demux_039:src0_valid -> mux_pipeline_094:in_valid
	wire  [129:0] rsp_demux_039_src0_data;                                                                         // rsp_demux_039:src0_data -> mux_pipeline_094:in_data
	wire          rsp_demux_039_src0_ready;                                                                        // mux_pipeline_094:in_ready -> rsp_demux_039:src0_ready
	wire   [44:0] rsp_demux_039_src0_channel;                                                                      // rsp_demux_039:src0_channel -> mux_pipeline_094:in_channel
	wire          rsp_demux_039_src0_startofpacket;                                                                // rsp_demux_039:src0_startofpacket -> mux_pipeline_094:in_startofpacket
	wire          rsp_demux_039_src0_endofpacket;                                                                  // rsp_demux_039:src0_endofpacket -> mux_pipeline_094:in_endofpacket
	wire          mux_pipeline_094_source0_valid;                                                                  // mux_pipeline_094:out_valid -> rsp_mux:sink39_valid
	wire  [129:0] mux_pipeline_094_source0_data;                                                                   // mux_pipeline_094:out_data -> rsp_mux:sink39_data
	wire          mux_pipeline_094_source0_ready;                                                                  // rsp_mux:sink39_ready -> mux_pipeline_094:out_ready
	wire   [44:0] mux_pipeline_094_source0_channel;                                                                // mux_pipeline_094:out_channel -> rsp_mux:sink39_channel
	wire          mux_pipeline_094_source0_startofpacket;                                                          // mux_pipeline_094:out_startofpacket -> rsp_mux:sink39_startofpacket
	wire          mux_pipeline_094_source0_endofpacket;                                                            // mux_pipeline_094:out_endofpacket -> rsp_mux:sink39_endofpacket
	wire          rsp_demux_040_src0_valid;                                                                        // rsp_demux_040:src0_valid -> mux_pipeline_095:in_valid
	wire  [129:0] rsp_demux_040_src0_data;                                                                         // rsp_demux_040:src0_data -> mux_pipeline_095:in_data
	wire          rsp_demux_040_src0_ready;                                                                        // mux_pipeline_095:in_ready -> rsp_demux_040:src0_ready
	wire   [44:0] rsp_demux_040_src0_channel;                                                                      // rsp_demux_040:src0_channel -> mux_pipeline_095:in_channel
	wire          rsp_demux_040_src0_startofpacket;                                                                // rsp_demux_040:src0_startofpacket -> mux_pipeline_095:in_startofpacket
	wire          rsp_demux_040_src0_endofpacket;                                                                  // rsp_demux_040:src0_endofpacket -> mux_pipeline_095:in_endofpacket
	wire          mux_pipeline_095_source0_valid;                                                                  // mux_pipeline_095:out_valid -> rsp_mux:sink40_valid
	wire  [129:0] mux_pipeline_095_source0_data;                                                                   // mux_pipeline_095:out_data -> rsp_mux:sink40_data
	wire          mux_pipeline_095_source0_ready;                                                                  // rsp_mux:sink40_ready -> mux_pipeline_095:out_ready
	wire   [44:0] mux_pipeline_095_source0_channel;                                                                // mux_pipeline_095:out_channel -> rsp_mux:sink40_channel
	wire          mux_pipeline_095_source0_startofpacket;                                                          // mux_pipeline_095:out_startofpacket -> rsp_mux:sink40_startofpacket
	wire          mux_pipeline_095_source0_endofpacket;                                                            // mux_pipeline_095:out_endofpacket -> rsp_mux:sink40_endofpacket
	wire          rsp_demux_041_src0_valid;                                                                        // rsp_demux_041:src0_valid -> mux_pipeline_096:in_valid
	wire  [129:0] rsp_demux_041_src0_data;                                                                         // rsp_demux_041:src0_data -> mux_pipeline_096:in_data
	wire          rsp_demux_041_src0_ready;                                                                        // mux_pipeline_096:in_ready -> rsp_demux_041:src0_ready
	wire   [44:0] rsp_demux_041_src0_channel;                                                                      // rsp_demux_041:src0_channel -> mux_pipeline_096:in_channel
	wire          rsp_demux_041_src0_startofpacket;                                                                // rsp_demux_041:src0_startofpacket -> mux_pipeline_096:in_startofpacket
	wire          rsp_demux_041_src0_endofpacket;                                                                  // rsp_demux_041:src0_endofpacket -> mux_pipeline_096:in_endofpacket
	wire          mux_pipeline_096_source0_valid;                                                                  // mux_pipeline_096:out_valid -> rsp_mux:sink41_valid
	wire  [129:0] mux_pipeline_096_source0_data;                                                                   // mux_pipeline_096:out_data -> rsp_mux:sink41_data
	wire          mux_pipeline_096_source0_ready;                                                                  // rsp_mux:sink41_ready -> mux_pipeline_096:out_ready
	wire   [44:0] mux_pipeline_096_source0_channel;                                                                // mux_pipeline_096:out_channel -> rsp_mux:sink41_channel
	wire          mux_pipeline_096_source0_startofpacket;                                                          // mux_pipeline_096:out_startofpacket -> rsp_mux:sink41_startofpacket
	wire          mux_pipeline_096_source0_endofpacket;                                                            // mux_pipeline_096:out_endofpacket -> rsp_mux:sink41_endofpacket
	wire          rsp_demux_042_src0_valid;                                                                        // rsp_demux_042:src0_valid -> mux_pipeline_097:in_valid
	wire  [129:0] rsp_demux_042_src0_data;                                                                         // rsp_demux_042:src0_data -> mux_pipeline_097:in_data
	wire          rsp_demux_042_src0_ready;                                                                        // mux_pipeline_097:in_ready -> rsp_demux_042:src0_ready
	wire   [44:0] rsp_demux_042_src0_channel;                                                                      // rsp_demux_042:src0_channel -> mux_pipeline_097:in_channel
	wire          rsp_demux_042_src0_startofpacket;                                                                // rsp_demux_042:src0_startofpacket -> mux_pipeline_097:in_startofpacket
	wire          rsp_demux_042_src0_endofpacket;                                                                  // rsp_demux_042:src0_endofpacket -> mux_pipeline_097:in_endofpacket
	wire          mux_pipeline_097_source0_valid;                                                                  // mux_pipeline_097:out_valid -> rsp_mux:sink42_valid
	wire  [129:0] mux_pipeline_097_source0_data;                                                                   // mux_pipeline_097:out_data -> rsp_mux:sink42_data
	wire          mux_pipeline_097_source0_ready;                                                                  // rsp_mux:sink42_ready -> mux_pipeline_097:out_ready
	wire   [44:0] mux_pipeline_097_source0_channel;                                                                // mux_pipeline_097:out_channel -> rsp_mux:sink42_channel
	wire          mux_pipeline_097_source0_startofpacket;                                                          // mux_pipeline_097:out_startofpacket -> rsp_mux:sink42_startofpacket
	wire          mux_pipeline_097_source0_endofpacket;                                                            // mux_pipeline_097:out_endofpacket -> rsp_mux:sink42_endofpacket
	wire          rsp_demux_043_src0_valid;                                                                        // rsp_demux_043:src0_valid -> mux_pipeline_098:in_valid
	wire  [129:0] rsp_demux_043_src0_data;                                                                         // rsp_demux_043:src0_data -> mux_pipeline_098:in_data
	wire          rsp_demux_043_src0_ready;                                                                        // mux_pipeline_098:in_ready -> rsp_demux_043:src0_ready
	wire   [44:0] rsp_demux_043_src0_channel;                                                                      // rsp_demux_043:src0_channel -> mux_pipeline_098:in_channel
	wire          rsp_demux_043_src0_startofpacket;                                                                // rsp_demux_043:src0_startofpacket -> mux_pipeline_098:in_startofpacket
	wire          rsp_demux_043_src0_endofpacket;                                                                  // rsp_demux_043:src0_endofpacket -> mux_pipeline_098:in_endofpacket
	wire          mux_pipeline_098_source0_valid;                                                                  // mux_pipeline_098:out_valid -> rsp_mux:sink43_valid
	wire  [129:0] mux_pipeline_098_source0_data;                                                                   // mux_pipeline_098:out_data -> rsp_mux:sink43_data
	wire          mux_pipeline_098_source0_ready;                                                                  // rsp_mux:sink43_ready -> mux_pipeline_098:out_ready
	wire   [44:0] mux_pipeline_098_source0_channel;                                                                // mux_pipeline_098:out_channel -> rsp_mux:sink43_channel
	wire          mux_pipeline_098_source0_startofpacket;                                                          // mux_pipeline_098:out_startofpacket -> rsp_mux:sink43_startofpacket
	wire          mux_pipeline_098_source0_endofpacket;                                                            // mux_pipeline_098:out_endofpacket -> rsp_mux:sink43_endofpacket
	wire          rsp_demux_044_src0_valid;                                                                        // rsp_demux_044:src0_valid -> mux_pipeline_099:in_valid
	wire  [129:0] rsp_demux_044_src0_data;                                                                         // rsp_demux_044:src0_data -> mux_pipeline_099:in_data
	wire          rsp_demux_044_src0_ready;                                                                        // mux_pipeline_099:in_ready -> rsp_demux_044:src0_ready
	wire   [44:0] rsp_demux_044_src0_channel;                                                                      // rsp_demux_044:src0_channel -> mux_pipeline_099:in_channel
	wire          rsp_demux_044_src0_startofpacket;                                                                // rsp_demux_044:src0_startofpacket -> mux_pipeline_099:in_startofpacket
	wire          rsp_demux_044_src0_endofpacket;                                                                  // rsp_demux_044:src0_endofpacket -> mux_pipeline_099:in_endofpacket
	wire          mux_pipeline_099_source0_valid;                                                                  // mux_pipeline_099:out_valid -> rsp_mux:sink44_valid
	wire  [129:0] mux_pipeline_099_source0_data;                                                                   // mux_pipeline_099:out_data -> rsp_mux:sink44_data
	wire          mux_pipeline_099_source0_ready;                                                                  // rsp_mux:sink44_ready -> mux_pipeline_099:out_ready
	wire   [44:0] mux_pipeline_099_source0_channel;                                                                // mux_pipeline_099:out_channel -> rsp_mux:sink44_channel
	wire          mux_pipeline_099_source0_startofpacket;                                                          // mux_pipeline_099:out_startofpacket -> rsp_mux:sink44_startofpacket
	wire          mux_pipeline_099_source0_endofpacket;                                                            // mux_pipeline_099:out_endofpacket -> rsp_mux:sink44_endofpacket
	wire          crosser_003_out_valid;                                                                           // crosser_003:out_valid -> mux_pipeline_100:in_valid
	wire  [129:0] crosser_003_out_data;                                                                            // crosser_003:out_data -> mux_pipeline_100:in_data
	wire          crosser_003_out_ready;                                                                           // mux_pipeline_100:in_ready -> crosser_003:out_ready
	wire   [44:0] crosser_003_out_channel;                                                                         // crosser_003:out_channel -> mux_pipeline_100:in_channel
	wire          crosser_003_out_startofpacket;                                                                   // crosser_003:out_startofpacket -> mux_pipeline_100:in_startofpacket
	wire          crosser_003_out_endofpacket;                                                                     // crosser_003:out_endofpacket -> mux_pipeline_100:in_endofpacket
	wire          mux_pipeline_100_source0_valid;                                                                  // mux_pipeline_100:out_valid -> rsp_mux_001:sink0_valid
	wire  [129:0] mux_pipeline_100_source0_data;                                                                   // mux_pipeline_100:out_data -> rsp_mux_001:sink0_data
	wire          mux_pipeline_100_source0_ready;                                                                  // rsp_mux_001:sink0_ready -> mux_pipeline_100:out_ready
	wire   [44:0] mux_pipeline_100_source0_channel;                                                                // mux_pipeline_100:out_channel -> rsp_mux_001:sink0_channel
	wire          mux_pipeline_100_source0_startofpacket;                                                          // mux_pipeline_100:out_startofpacket -> rsp_mux_001:sink0_startofpacket
	wire          mux_pipeline_100_source0_endofpacket;                                                            // mux_pipeline_100:out_endofpacket -> rsp_mux_001:sink0_endofpacket
	wire          rsp_demux_022_src1_valid;                                                                        // rsp_demux_022:src1_valid -> mux_pipeline_101:in_valid
	wire  [129:0] rsp_demux_022_src1_data;                                                                         // rsp_demux_022:src1_data -> mux_pipeline_101:in_data
	wire          rsp_demux_022_src1_ready;                                                                        // mux_pipeline_101:in_ready -> rsp_demux_022:src1_ready
	wire   [44:0] rsp_demux_022_src1_channel;                                                                      // rsp_demux_022:src1_channel -> mux_pipeline_101:in_channel
	wire          rsp_demux_022_src1_startofpacket;                                                                // rsp_demux_022:src1_startofpacket -> mux_pipeline_101:in_startofpacket
	wire          rsp_demux_022_src1_endofpacket;                                                                  // rsp_demux_022:src1_endofpacket -> mux_pipeline_101:in_endofpacket
	wire          mux_pipeline_101_source0_valid;                                                                  // mux_pipeline_101:out_valid -> rsp_mux_001:sink1_valid
	wire  [129:0] mux_pipeline_101_source0_data;                                                                   // mux_pipeline_101:out_data -> rsp_mux_001:sink1_data
	wire          mux_pipeline_101_source0_ready;                                                                  // rsp_mux_001:sink1_ready -> mux_pipeline_101:out_ready
	wire   [44:0] mux_pipeline_101_source0_channel;                                                                // mux_pipeline_101:out_channel -> rsp_mux_001:sink1_channel
	wire          mux_pipeline_101_source0_startofpacket;                                                          // mux_pipeline_101:out_startofpacket -> rsp_mux_001:sink1_startofpacket
	wire          mux_pipeline_101_source0_endofpacket;                                                            // mux_pipeline_101:out_endofpacket -> rsp_mux_001:sink1_endofpacket
	wire          rsp_demux_037_src1_valid;                                                                        // rsp_demux_037:src1_valid -> mux_pipeline_102:in_valid
	wire  [129:0] rsp_demux_037_src1_data;                                                                         // rsp_demux_037:src1_data -> mux_pipeline_102:in_data
	wire          rsp_demux_037_src1_ready;                                                                        // mux_pipeline_102:in_ready -> rsp_demux_037:src1_ready
	wire   [44:0] rsp_demux_037_src1_channel;                                                                      // rsp_demux_037:src1_channel -> mux_pipeline_102:in_channel
	wire          rsp_demux_037_src1_startofpacket;                                                                // rsp_demux_037:src1_startofpacket -> mux_pipeline_102:in_startofpacket
	wire          rsp_demux_037_src1_endofpacket;                                                                  // rsp_demux_037:src1_endofpacket -> mux_pipeline_102:in_endofpacket
	wire          mux_pipeline_102_source0_valid;                                                                  // mux_pipeline_102:out_valid -> rsp_mux_001:sink2_valid
	wire  [129:0] mux_pipeline_102_source0_data;                                                                   // mux_pipeline_102:out_data -> rsp_mux_001:sink2_data
	wire          mux_pipeline_102_source0_ready;                                                                  // rsp_mux_001:sink2_ready -> mux_pipeline_102:out_ready
	wire   [44:0] mux_pipeline_102_source0_channel;                                                                // mux_pipeline_102:out_channel -> rsp_mux_001:sink2_channel
	wire          mux_pipeline_102_source0_startofpacket;                                                          // mux_pipeline_102:out_startofpacket -> rsp_mux_001:sink2_startofpacket
	wire          mux_pipeline_102_source0_endofpacket;                                                            // mux_pipeline_102:out_endofpacket -> rsp_mux_001:sink2_endofpacket
	wire          rsp_demux_044_src1_valid;                                                                        // rsp_demux_044:src1_valid -> mux_pipeline_103:in_valid
	wire  [129:0] rsp_demux_044_src1_data;                                                                         // rsp_demux_044:src1_data -> mux_pipeline_103:in_data
	wire          rsp_demux_044_src1_ready;                                                                        // mux_pipeline_103:in_ready -> rsp_demux_044:src1_ready
	wire   [44:0] rsp_demux_044_src1_channel;                                                                      // rsp_demux_044:src1_channel -> mux_pipeline_103:in_channel
	wire          rsp_demux_044_src1_startofpacket;                                                                // rsp_demux_044:src1_startofpacket -> mux_pipeline_103:in_startofpacket
	wire          rsp_demux_044_src1_endofpacket;                                                                  // rsp_demux_044:src1_endofpacket -> mux_pipeline_103:in_endofpacket
	wire          mux_pipeline_103_source0_valid;                                                                  // mux_pipeline_103:out_valid -> rsp_mux_001:sink3_valid
	wire  [129:0] mux_pipeline_103_source0_data;                                                                   // mux_pipeline_103:out_data -> rsp_mux_001:sink3_data
	wire          mux_pipeline_103_source0_ready;                                                                  // rsp_mux_001:sink3_ready -> mux_pipeline_103:out_ready
	wire   [44:0] mux_pipeline_103_source0_channel;                                                                // mux_pipeline_103:out_channel -> rsp_mux_001:sink3_channel
	wire          mux_pipeline_103_source0_startofpacket;                                                          // mux_pipeline_103:out_startofpacket -> rsp_mux_001:sink3_startofpacket
	wire          mux_pipeline_103_source0_endofpacket;                                                            // mux_pipeline_103:out_endofpacket -> rsp_mux_001:sink3_endofpacket
	wire          async_fifo_006_out_valid;                                                                        // async_fifo_006:out_valid -> mux_pipeline_104:in_valid
	wire  [237:0] async_fifo_006_out_data;                                                                         // async_fifo_006:out_data -> mux_pipeline_104:in_data
	wire          async_fifo_006_out_ready;                                                                        // mux_pipeline_104:in_ready -> async_fifo_006:out_ready
	wire   [44:0] async_fifo_006_out_channel;                                                                      // async_fifo_006:out_channel -> mux_pipeline_104:in_channel
	wire          async_fifo_006_out_startofpacket;                                                                // async_fifo_006:out_startofpacket -> mux_pipeline_104:in_startofpacket
	wire          async_fifo_006_out_endofpacket;                                                                  // async_fifo_006:out_endofpacket -> mux_pipeline_104:in_endofpacket
	wire          mux_pipeline_104_source0_valid;                                                                  // mux_pipeline_104:out_valid -> rsp_mux_002:sink0_valid
	wire  [237:0] mux_pipeline_104_source0_data;                                                                   // mux_pipeline_104:out_data -> rsp_mux_002:sink0_data
	wire          mux_pipeline_104_source0_ready;                                                                  // rsp_mux_002:sink0_ready -> mux_pipeline_104:out_ready
	wire   [44:0] mux_pipeline_104_source0_channel;                                                                // mux_pipeline_104:out_channel -> rsp_mux_002:sink0_channel
	wire          mux_pipeline_104_source0_startofpacket;                                                          // mux_pipeline_104:out_startofpacket -> rsp_mux_002:sink0_startofpacket
	wire          mux_pipeline_104_source0_endofpacket;                                                            // mux_pipeline_104:out_endofpacket -> rsp_mux_002:sink0_endofpacket
	wire          async_fifo_007_out_valid;                                                                        // async_fifo_007:out_valid -> mux_pipeline_105:in_valid
	wire  [237:0] async_fifo_007_out_data;                                                                         // async_fifo_007:out_data -> mux_pipeline_105:in_data
	wire          async_fifo_007_out_ready;                                                                        // mux_pipeline_105:in_ready -> async_fifo_007:out_ready
	wire   [44:0] async_fifo_007_out_channel;                                                                      // async_fifo_007:out_channel -> mux_pipeline_105:in_channel
	wire          async_fifo_007_out_startofpacket;                                                                // async_fifo_007:out_startofpacket -> mux_pipeline_105:in_startofpacket
	wire          async_fifo_007_out_endofpacket;                                                                  // async_fifo_007:out_endofpacket -> mux_pipeline_105:in_endofpacket
	wire          mux_pipeline_105_source0_valid;                                                                  // mux_pipeline_105:out_valid -> rsp_mux_003:sink0_valid
	wire  [237:0] mux_pipeline_105_source0_data;                                                                   // mux_pipeline_105:out_data -> rsp_mux_003:sink0_data
	wire          mux_pipeline_105_source0_ready;                                                                  // rsp_mux_003:sink0_ready -> mux_pipeline_105:out_ready
	wire   [44:0] mux_pipeline_105_source0_channel;                                                                // mux_pipeline_105:out_channel -> rsp_mux_003:sink0_channel
	wire          mux_pipeline_105_source0_startofpacket;                                                          // mux_pipeline_105:out_startofpacket -> rsp_mux_003:sink0_startofpacket
	wire          mux_pipeline_105_source0_endofpacket;                                                            // mux_pipeline_105:out_endofpacket -> rsp_mux_003:sink0_endofpacket
	wire          async_fifo_008_out_valid;                                                                        // async_fifo_008:out_valid -> mux_pipeline_106:in_valid
	wire  [237:0] async_fifo_008_out_data;                                                                         // async_fifo_008:out_data -> mux_pipeline_106:in_data
	wire          async_fifo_008_out_ready;                                                                        // mux_pipeline_106:in_ready -> async_fifo_008:out_ready
	wire   [44:0] async_fifo_008_out_channel;                                                                      // async_fifo_008:out_channel -> mux_pipeline_106:in_channel
	wire          async_fifo_008_out_startofpacket;                                                                // async_fifo_008:out_startofpacket -> mux_pipeline_106:in_startofpacket
	wire          async_fifo_008_out_endofpacket;                                                                  // async_fifo_008:out_endofpacket -> mux_pipeline_106:in_endofpacket
	wire          mux_pipeline_106_source0_valid;                                                                  // mux_pipeline_106:out_valid -> rsp_mux_004:sink0_valid
	wire  [237:0] mux_pipeline_106_source0_data;                                                                   // mux_pipeline_106:out_data -> rsp_mux_004:sink0_data
	wire          mux_pipeline_106_source0_ready;                                                                  // rsp_mux_004:sink0_ready -> mux_pipeline_106:out_ready
	wire   [44:0] mux_pipeline_106_source0_channel;                                                                // mux_pipeline_106:out_channel -> rsp_mux_004:sink0_channel
	wire          mux_pipeline_106_source0_startofpacket;                                                          // mux_pipeline_106:out_startofpacket -> rsp_mux_004:sink0_startofpacket
	wire          mux_pipeline_106_source0_endofpacket;                                                            // mux_pipeline_106:out_endofpacket -> rsp_mux_004:sink0_endofpacket
	wire          async_fifo_009_out_valid;                                                                        // async_fifo_009:out_valid -> mux_pipeline_107:in_valid
	wire  [237:0] async_fifo_009_out_data;                                                                         // async_fifo_009:out_data -> mux_pipeline_107:in_data
	wire          async_fifo_009_out_ready;                                                                        // mux_pipeline_107:in_ready -> async_fifo_009:out_ready
	wire   [44:0] async_fifo_009_out_channel;                                                                      // async_fifo_009:out_channel -> mux_pipeline_107:in_channel
	wire          async_fifo_009_out_startofpacket;                                                                // async_fifo_009:out_startofpacket -> mux_pipeline_107:in_startofpacket
	wire          async_fifo_009_out_endofpacket;                                                                  // async_fifo_009:out_endofpacket -> mux_pipeline_107:in_endofpacket
	wire          mux_pipeline_107_source0_valid;                                                                  // mux_pipeline_107:out_valid -> rsp_mux_005:sink0_valid
	wire  [237:0] mux_pipeline_107_source0_data;                                                                   // mux_pipeline_107:out_data -> rsp_mux_005:sink0_data
	wire          mux_pipeline_107_source0_ready;                                                                  // rsp_mux_005:sink0_ready -> mux_pipeline_107:out_ready
	wire   [44:0] mux_pipeline_107_source0_channel;                                                                // mux_pipeline_107:out_channel -> rsp_mux_005:sink0_channel
	wire          mux_pipeline_107_source0_startofpacket;                                                          // mux_pipeline_107:out_startofpacket -> rsp_mux_005:sink0_startofpacket
	wire          mux_pipeline_107_source0_endofpacket;                                                            // mux_pipeline_107:out_endofpacket -> rsp_mux_005:sink0_endofpacket
	wire          async_fifo_010_out_valid;                                                                        // async_fifo_010:out_valid -> mux_pipeline_108:in_valid
	wire  [165:0] async_fifo_010_out_data;                                                                         // async_fifo_010:out_data -> mux_pipeline_108:in_data
	wire          async_fifo_010_out_ready;                                                                        // mux_pipeline_108:in_ready -> async_fifo_010:out_ready
	wire   [44:0] async_fifo_010_out_channel;                                                                      // async_fifo_010:out_channel -> mux_pipeline_108:in_channel
	wire          async_fifo_010_out_startofpacket;                                                                // async_fifo_010:out_startofpacket -> mux_pipeline_108:in_startofpacket
	wire          async_fifo_010_out_endofpacket;                                                                  // async_fifo_010:out_endofpacket -> mux_pipeline_108:in_endofpacket
	wire          mux_pipeline_108_source0_valid;                                                                  // mux_pipeline_108:out_valid -> rsp_mux_006:sink0_valid
	wire  [165:0] mux_pipeline_108_source0_data;                                                                   // mux_pipeline_108:out_data -> rsp_mux_006:sink0_data
	wire          mux_pipeline_108_source0_ready;                                                                  // rsp_mux_006:sink0_ready -> mux_pipeline_108:out_ready
	wire   [44:0] mux_pipeline_108_source0_channel;                                                                // mux_pipeline_108:out_channel -> rsp_mux_006:sink0_channel
	wire          mux_pipeline_108_source0_startofpacket;                                                          // mux_pipeline_108:out_startofpacket -> rsp_mux_006:sink0_startofpacket
	wire          mux_pipeline_108_source0_endofpacket;                                                            // mux_pipeline_108:out_endofpacket -> rsp_mux_006:sink0_endofpacket
	wire          async_fifo_011_out_valid;                                                                        // async_fifo_011:out_valid -> mux_pipeline_109:in_valid
	wire  [165:0] async_fifo_011_out_data;                                                                         // async_fifo_011:out_data -> mux_pipeline_109:in_data
	wire          async_fifo_011_out_ready;                                                                        // mux_pipeline_109:in_ready -> async_fifo_011:out_ready
	wire   [44:0] async_fifo_011_out_channel;                                                                      // async_fifo_011:out_channel -> mux_pipeline_109:in_channel
	wire          async_fifo_011_out_startofpacket;                                                                // async_fifo_011:out_startofpacket -> mux_pipeline_109:in_startofpacket
	wire          async_fifo_011_out_endofpacket;                                                                  // async_fifo_011:out_endofpacket -> mux_pipeline_109:in_endofpacket
	wire          mux_pipeline_109_source0_valid;                                                                  // mux_pipeline_109:out_valid -> rsp_mux_007:sink0_valid
	wire  [165:0] mux_pipeline_109_source0_data;                                                                   // mux_pipeline_109:out_data -> rsp_mux_007:sink0_data
	wire          mux_pipeline_109_source0_ready;                                                                  // rsp_mux_007:sink0_ready -> mux_pipeline_109:out_ready
	wire   [44:0] mux_pipeline_109_source0_channel;                                                                // mux_pipeline_109:out_channel -> rsp_mux_007:sink0_channel
	wire          mux_pipeline_109_source0_startofpacket;                                                          // mux_pipeline_109:out_startofpacket -> rsp_mux_007:sink0_startofpacket
	wire          mux_pipeline_109_source0_endofpacket;                                                            // mux_pipeline_109:out_endofpacket -> rsp_mux_007:sink0_endofpacket
	wire          rsp_demux_021_src0_valid;                                                                        // rsp_demux_021:src0_valid -> pipeline_stage:in_valid
	wire  [669:0] rsp_demux_021_src0_data;                                                                         // rsp_demux_021:src0_data -> pipeline_stage:in_data
	wire          rsp_demux_021_src0_ready;                                                                        // pipeline_stage:in_ready -> rsp_demux_021:src0_ready
	wire   [44:0] rsp_demux_021_src0_channel;                                                                      // rsp_demux_021:src0_channel -> pipeline_stage:in_channel
	wire          rsp_demux_021_src0_startofpacket;                                                                // rsp_demux_021:src0_startofpacket -> pipeline_stage:in_startofpacket
	wire          rsp_demux_021_src0_endofpacket;                                                                  // rsp_demux_021:src0_endofpacket -> pipeline_stage:in_endofpacket
	wire          pipeline_stage_source0_valid;                                                                    // pipeline_stage:out_valid -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter:in_valid
	wire  [669:0] pipeline_stage_source0_data;                                                                     // pipeline_stage:out_data -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter:in_data
	wire          pipeline_stage_source0_ready;                                                                    // sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter:in_ready -> pipeline_stage:out_ready
	wire   [44:0] pipeline_stage_source0_channel;                                                                  // pipeline_stage:out_channel -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter:in_channel
	wire          pipeline_stage_source0_startofpacket;                                                            // pipeline_stage:out_startofpacket -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter:in_startofpacket
	wire          pipeline_stage_source0_endofpacket;                                                              // pipeline_stage:out_endofpacket -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter:in_endofpacket
	wire          rsp_demux_021_src1_valid;                                                                        // rsp_demux_021:src1_valid -> pipeline_stage_001:in_valid
	wire  [669:0] rsp_demux_021_src1_data;                                                                         // rsp_demux_021:src1_data -> pipeline_stage_001:in_data
	wire          rsp_demux_021_src1_ready;                                                                        // pipeline_stage_001:in_ready -> rsp_demux_021:src1_ready
	wire   [44:0] rsp_demux_021_src1_channel;                                                                      // rsp_demux_021:src1_channel -> pipeline_stage_001:in_channel
	wire          rsp_demux_021_src1_startofpacket;                                                                // rsp_demux_021:src1_startofpacket -> pipeline_stage_001:in_startofpacket
	wire          rsp_demux_021_src1_endofpacket;                                                                  // rsp_demux_021:src1_endofpacket -> pipeline_stage_001:in_endofpacket
	wire          pipeline_stage_001_source0_valid;                                                                // pipeline_stage_001:out_valid -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter:in_valid
	wire  [669:0] pipeline_stage_001_source0_data;                                                                 // pipeline_stage_001:out_data -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter:in_data
	wire          pipeline_stage_001_source0_ready;                                                                // sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter:in_ready -> pipeline_stage_001:out_ready
	wire   [44:0] pipeline_stage_001_source0_channel;                                                              // pipeline_stage_001:out_channel -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter:in_channel
	wire          pipeline_stage_001_source0_startofpacket;                                                        // pipeline_stage_001:out_startofpacket -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter:in_startofpacket
	wire          pipeline_stage_001_source0_endofpacket;                                                          // pipeline_stage_001:out_endofpacket -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter:in_endofpacket
	wire          rsp_demux_021_src2_valid;                                                                        // rsp_demux_021:src2_valid -> pipeline_stage_002:in_valid
	wire  [669:0] rsp_demux_021_src2_data;                                                                         // rsp_demux_021:src2_data -> pipeline_stage_002:in_data
	wire          rsp_demux_021_src2_ready;                                                                        // pipeline_stage_002:in_ready -> rsp_demux_021:src2_ready
	wire   [44:0] rsp_demux_021_src2_channel;                                                                      // rsp_demux_021:src2_channel -> pipeline_stage_002:in_channel
	wire          rsp_demux_021_src2_startofpacket;                                                                // rsp_demux_021:src2_startofpacket -> pipeline_stage_002:in_startofpacket
	wire          rsp_demux_021_src2_endofpacket;                                                                  // rsp_demux_021:src2_endofpacket -> pipeline_stage_002:in_endofpacket
	wire          pipeline_stage_002_source0_valid;                                                                // pipeline_stage_002:out_valid -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter:in_valid
	wire  [669:0] pipeline_stage_002_source0_data;                                                                 // pipeline_stage_002:out_data -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter:in_data
	wire          pipeline_stage_002_source0_ready;                                                                // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter:in_ready -> pipeline_stage_002:out_ready
	wire   [44:0] pipeline_stage_002_source0_channel;                                                              // pipeline_stage_002:out_channel -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter:in_channel
	wire          pipeline_stage_002_source0_startofpacket;                                                        // pipeline_stage_002:out_startofpacket -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter:in_startofpacket
	wire          pipeline_stage_002_source0_endofpacket;                                                          // pipeline_stage_002:out_endofpacket -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter:in_endofpacket
	wire          rsp_demux_021_src3_valid;                                                                        // rsp_demux_021:src3_valid -> pipeline_stage_003:in_valid
	wire  [669:0] rsp_demux_021_src3_data;                                                                         // rsp_demux_021:src3_data -> pipeline_stage_003:in_data
	wire          rsp_demux_021_src3_ready;                                                                        // pipeline_stage_003:in_ready -> rsp_demux_021:src3_ready
	wire   [44:0] rsp_demux_021_src3_channel;                                                                      // rsp_demux_021:src3_channel -> pipeline_stage_003:in_channel
	wire          rsp_demux_021_src3_startofpacket;                                                                // rsp_demux_021:src3_startofpacket -> pipeline_stage_003:in_startofpacket
	wire          rsp_demux_021_src3_endofpacket;                                                                  // rsp_demux_021:src3_endofpacket -> pipeline_stage_003:in_endofpacket
	wire          pipeline_stage_003_source0_valid;                                                                // pipeline_stage_003:out_valid -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter:in_valid
	wire  [669:0] pipeline_stage_003_source0_data;                                                                 // pipeline_stage_003:out_data -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter:in_data
	wire          pipeline_stage_003_source0_ready;                                                                // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter:in_ready -> pipeline_stage_003:out_ready
	wire   [44:0] pipeline_stage_003_source0_channel;                                                              // pipeline_stage_003:out_channel -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter:in_channel
	wire          pipeline_stage_003_source0_startofpacket;                                                        // pipeline_stage_003:out_startofpacket -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter:in_startofpacket
	wire          pipeline_stage_003_source0_endofpacket;                                                          // pipeline_stage_003:out_endofpacket -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter:in_endofpacket
	wire          rsp_demux_021_src4_valid;                                                                        // rsp_demux_021:src4_valid -> pipeline_stage_004:in_valid
	wire  [669:0] rsp_demux_021_src4_data;                                                                         // rsp_demux_021:src4_data -> pipeline_stage_004:in_data
	wire          rsp_demux_021_src4_ready;                                                                        // pipeline_stage_004:in_ready -> rsp_demux_021:src4_ready
	wire   [44:0] rsp_demux_021_src4_channel;                                                                      // rsp_demux_021:src4_channel -> pipeline_stage_004:in_channel
	wire          rsp_demux_021_src4_startofpacket;                                                                // rsp_demux_021:src4_startofpacket -> pipeline_stage_004:in_startofpacket
	wire          rsp_demux_021_src4_endofpacket;                                                                  // rsp_demux_021:src4_endofpacket -> pipeline_stage_004:in_endofpacket
	wire          pipeline_stage_004_source0_valid;                                                                // pipeline_stage_004:out_valid -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter:in_valid
	wire  [669:0] pipeline_stage_004_source0_data;                                                                 // pipeline_stage_004:out_data -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter:in_data
	wire          pipeline_stage_004_source0_ready;                                                                // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter:in_ready -> pipeline_stage_004:out_ready
	wire   [44:0] pipeline_stage_004_source0_channel;                                                              // pipeline_stage_004:out_channel -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter:in_channel
	wire          pipeline_stage_004_source0_startofpacket;                                                        // pipeline_stage_004:out_startofpacket -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter:in_startofpacket
	wire          pipeline_stage_004_source0_endofpacket;                                                          // pipeline_stage_004:out_endofpacket -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter:in_endofpacket
	wire          rsp_demux_021_src5_valid;                                                                        // rsp_demux_021:src5_valid -> pipeline_stage_005:in_valid
	wire  [669:0] rsp_demux_021_src5_data;                                                                         // rsp_demux_021:src5_data -> pipeline_stage_005:in_data
	wire          rsp_demux_021_src5_ready;                                                                        // pipeline_stage_005:in_ready -> rsp_demux_021:src5_ready
	wire   [44:0] rsp_demux_021_src5_channel;                                                                      // rsp_demux_021:src5_channel -> pipeline_stage_005:in_channel
	wire          rsp_demux_021_src5_startofpacket;                                                                // rsp_demux_021:src5_startofpacket -> pipeline_stage_005:in_startofpacket
	wire          rsp_demux_021_src5_endofpacket;                                                                  // rsp_demux_021:src5_endofpacket -> pipeline_stage_005:in_endofpacket
	wire          pipeline_stage_005_source0_valid;                                                                // pipeline_stage_005:out_valid -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter:in_valid
	wire  [669:0] pipeline_stage_005_source0_data;                                                                 // pipeline_stage_005:out_data -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter:in_data
	wire          pipeline_stage_005_source0_ready;                                                                // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter:in_ready -> pipeline_stage_005:out_ready
	wire   [44:0] pipeline_stage_005_source0_channel;                                                              // pipeline_stage_005:out_channel -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter:in_channel
	wire          pipeline_stage_005_source0_startofpacket;                                                        // pipeline_stage_005:out_startofpacket -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter:in_startofpacket
	wire          pipeline_stage_005_source0_endofpacket;                                                          // pipeline_stage_005:out_endofpacket -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter:in_endofpacket
	wire          rsp_demux_021_src6_valid;                                                                        // rsp_demux_021:src6_valid -> pipeline_stage_006:in_valid
	wire  [669:0] rsp_demux_021_src6_data;                                                                         // rsp_demux_021:src6_data -> pipeline_stage_006:in_data
	wire          rsp_demux_021_src6_ready;                                                                        // pipeline_stage_006:in_ready -> rsp_demux_021:src6_ready
	wire   [44:0] rsp_demux_021_src6_channel;                                                                      // rsp_demux_021:src6_channel -> pipeline_stage_006:in_channel
	wire          rsp_demux_021_src6_startofpacket;                                                                // rsp_demux_021:src6_startofpacket -> pipeline_stage_006:in_startofpacket
	wire          rsp_demux_021_src6_endofpacket;                                                                  // rsp_demux_021:src6_endofpacket -> pipeline_stage_006:in_endofpacket
	wire          pipeline_stage_006_source0_valid;                                                                // pipeline_stage_006:out_valid -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter:in_valid
	wire  [669:0] pipeline_stage_006_source0_data;                                                                 // pipeline_stage_006:out_data -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter:in_data
	wire          pipeline_stage_006_source0_ready;                                                                // sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter:in_ready -> pipeline_stage_006:out_ready
	wire   [44:0] pipeline_stage_006_source0_channel;                                                              // pipeline_stage_006:out_channel -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter:in_channel
	wire          pipeline_stage_006_source0_startofpacket;                                                        // pipeline_stage_006:out_startofpacket -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter:in_startofpacket
	wire          pipeline_stage_006_source0_endofpacket;                                                          // pipeline_stage_006:out_endofpacket -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter:in_endofpacket
	wire          rsp_demux_021_src7_valid;                                                                        // rsp_demux_021:src7_valid -> pipeline_stage_007:in_valid
	wire  [669:0] rsp_demux_021_src7_data;                                                                         // rsp_demux_021:src7_data -> pipeline_stage_007:in_data
	wire          rsp_demux_021_src7_ready;                                                                        // pipeline_stage_007:in_ready -> rsp_demux_021:src7_ready
	wire   [44:0] rsp_demux_021_src7_channel;                                                                      // rsp_demux_021:src7_channel -> pipeline_stage_007:in_channel
	wire          rsp_demux_021_src7_startofpacket;                                                                // rsp_demux_021:src7_startofpacket -> pipeline_stage_007:in_startofpacket
	wire          rsp_demux_021_src7_endofpacket;                                                                  // rsp_demux_021:src7_endofpacket -> pipeline_stage_007:in_endofpacket
	wire          pipeline_stage_007_source0_valid;                                                                // pipeline_stage_007:out_valid -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter:in_valid
	wire  [669:0] pipeline_stage_007_source0_data;                                                                 // pipeline_stage_007:out_data -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter:in_data
	wire          pipeline_stage_007_source0_ready;                                                                // sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter:in_ready -> pipeline_stage_007:out_ready
	wire   [44:0] pipeline_stage_007_source0_channel;                                                              // pipeline_stage_007:out_channel -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter:in_channel
	wire          pipeline_stage_007_source0_startofpacket;                                                        // pipeline_stage_007:out_startofpacket -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter:in_startofpacket
	wire          pipeline_stage_007_source0_endofpacket;                                                          // pipeline_stage_007:out_endofpacket -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter:in_endofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter_src_valid;            // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter:out_valid -> pipeline_stage_008:in_valid
	wire  [237:0] sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter_src_data;             // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter:out_data -> pipeline_stage_008:in_data
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter_src_ready;            // pipeline_stage_008:in_ready -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter:out_ready
	wire   [44:0] sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter_src_channel;          // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter:out_channel -> pipeline_stage_008:in_channel
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter_src_startofpacket;    // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter:out_startofpacket -> pipeline_stage_008:in_startofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter_src_endofpacket;      // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter:out_endofpacket -> pipeline_stage_008:in_endofpacket
	wire          pipeline_stage_008_source0_valid;                                                                // pipeline_stage_008:out_valid -> async_fifo_009:in_valid
	wire  [237:0] pipeline_stage_008_source0_data;                                                                 // pipeline_stage_008:out_data -> async_fifo_009:in_data
	wire          pipeline_stage_008_source0_ready;                                                                // async_fifo_009:in_ready -> pipeline_stage_008:out_ready
	wire   [44:0] pipeline_stage_008_source0_channel;                                                              // pipeline_stage_008:out_channel -> async_fifo_009:in_channel
	wire          pipeline_stage_008_source0_startofpacket;                                                        // pipeline_stage_008:out_startofpacket -> async_fifo_009:in_startofpacket
	wire          pipeline_stage_008_source0_endofpacket;                                                          // pipeline_stage_008:out_endofpacket -> async_fifo_009:in_endofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter_src_valid;            // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter:out_valid -> pipeline_stage_009:in_valid
	wire  [237:0] sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter_src_data;             // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter:out_data -> pipeline_stage_009:in_data
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter_src_ready;            // pipeline_stage_009:in_ready -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter:out_ready
	wire   [44:0] sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter_src_channel;          // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter:out_channel -> pipeline_stage_009:in_channel
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter_src_startofpacket;    // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter:out_startofpacket -> pipeline_stage_009:in_startofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter_src_endofpacket;      // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter:out_endofpacket -> pipeline_stage_009:in_endofpacket
	wire          pipeline_stage_009_source0_valid;                                                                // pipeline_stage_009:out_valid -> async_fifo_008:in_valid
	wire  [237:0] pipeline_stage_009_source0_data;                                                                 // pipeline_stage_009:out_data -> async_fifo_008:in_data
	wire          pipeline_stage_009_source0_ready;                                                                // async_fifo_008:in_ready -> pipeline_stage_009:out_ready
	wire   [44:0] pipeline_stage_009_source0_channel;                                                              // pipeline_stage_009:out_channel -> async_fifo_008:in_channel
	wire          pipeline_stage_009_source0_startofpacket;                                                        // pipeline_stage_009:out_startofpacket -> async_fifo_008:in_startofpacket
	wire          pipeline_stage_009_source0_endofpacket;                                                          // pipeline_stage_009:out_endofpacket -> async_fifo_008:in_endofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter_src_valid;           // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter:out_valid -> pipeline_stage_010:in_valid
	wire  [237:0] sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter_src_data;            // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter:out_data -> pipeline_stage_010:in_data
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter_src_ready;           // pipeline_stage_010:in_ready -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter:out_ready
	wire   [44:0] sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter_src_channel;         // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter:out_channel -> pipeline_stage_010:in_channel
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter_src_startofpacket;   // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter:out_startofpacket -> pipeline_stage_010:in_startofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter_src_endofpacket;     // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter:out_endofpacket -> pipeline_stage_010:in_endofpacket
	wire          pipeline_stage_010_source0_valid;                                                                // pipeline_stage_010:out_valid -> async_fifo_007:in_valid
	wire  [237:0] pipeline_stage_010_source0_data;                                                                 // pipeline_stage_010:out_data -> async_fifo_007:in_data
	wire          pipeline_stage_010_source0_ready;                                                                // async_fifo_007:in_ready -> pipeline_stage_010:out_ready
	wire   [44:0] pipeline_stage_010_source0_channel;                                                              // pipeline_stage_010:out_channel -> async_fifo_007:in_channel
	wire          pipeline_stage_010_source0_startofpacket;                                                        // pipeline_stage_010:out_startofpacket -> async_fifo_007:in_startofpacket
	wire          pipeline_stage_010_source0_endofpacket;                                                          // pipeline_stage_010:out_endofpacket -> async_fifo_007:in_endofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter_src_valid;           // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter:out_valid -> pipeline_stage_011:in_valid
	wire  [237:0] sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter_src_data;            // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter:out_data -> pipeline_stage_011:in_data
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter_src_ready;           // pipeline_stage_011:in_ready -> sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter:out_ready
	wire   [44:0] sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter_src_channel;         // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter:out_channel -> pipeline_stage_011:in_channel
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter_src_startofpacket;   // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter:out_startofpacket -> pipeline_stage_011:in_startofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter_src_endofpacket;     // sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter:out_endofpacket -> pipeline_stage_011:in_endofpacket
	wire          pipeline_stage_011_source0_valid;                                                                // pipeline_stage_011:out_valid -> async_fifo_006:in_valid
	wire  [237:0] pipeline_stage_011_source0_data;                                                                 // pipeline_stage_011:out_data -> async_fifo_006:in_data
	wire          pipeline_stage_011_source0_ready;                                                                // async_fifo_006:in_ready -> pipeline_stage_011:out_ready
	wire   [44:0] pipeline_stage_011_source0_channel;                                                              // pipeline_stage_011:out_channel -> async_fifo_006:in_channel
	wire          pipeline_stage_011_source0_startofpacket;                                                        // pipeline_stage_011:out_startofpacket -> async_fifo_006:in_startofpacket
	wire          pipeline_stage_011_source0_endofpacket;                                                          // pipeline_stage_011:out_endofpacket -> async_fifo_006:in_endofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter_src_valid;             // sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter:out_valid -> pipeline_stage_012:in_valid
	wire  [129:0] sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter_src_data;              // sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter:out_data -> pipeline_stage_012:in_data
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter_src_ready;             // pipeline_stage_012:in_ready -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter:out_ready
	wire   [44:0] sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter_src_channel;           // sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter:out_channel -> pipeline_stage_012:in_channel
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter_src_startofpacket;     // sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter:out_startofpacket -> pipeline_stage_012:in_startofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter_src_endofpacket;       // sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter:out_endofpacket -> pipeline_stage_012:in_endofpacket
	wire          pipeline_stage_012_source0_valid;                                                                // pipeline_stage_012:out_valid -> crosser_003:in_valid
	wire  [129:0] pipeline_stage_012_source0_data;                                                                 // pipeline_stage_012:out_data -> crosser_003:in_data
	wire          pipeline_stage_012_source0_ready;                                                                // crosser_003:in_ready -> pipeline_stage_012:out_ready
	wire   [44:0] pipeline_stage_012_source0_channel;                                                              // pipeline_stage_012:out_channel -> crosser_003:in_channel
	wire          pipeline_stage_012_source0_startofpacket;                                                        // pipeline_stage_012:out_startofpacket -> crosser_003:in_startofpacket
	wire          pipeline_stage_012_source0_endofpacket;                                                          // pipeline_stage_012:out_endofpacket -> crosser_003:in_endofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter_src_valid;           // sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter:out_valid -> pipeline_stage_013:in_valid
	wire  [165:0] sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter_src_data;            // sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter:out_data -> pipeline_stage_013:in_data
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter_src_ready;           // pipeline_stage_013:in_ready -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter:out_ready
	wire   [44:0] sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter_src_channel;         // sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter:out_channel -> pipeline_stage_013:in_channel
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter_src_startofpacket;   // sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter:out_startofpacket -> pipeline_stage_013:in_startofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter_src_endofpacket;     // sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter:out_endofpacket -> pipeline_stage_013:in_endofpacket
	wire          pipeline_stage_013_source0_valid;                                                                // pipeline_stage_013:out_valid -> async_fifo_011:in_valid
	wire  [165:0] pipeline_stage_013_source0_data;                                                                 // pipeline_stage_013:out_data -> async_fifo_011:in_data
	wire          pipeline_stage_013_source0_ready;                                                                // async_fifo_011:in_ready -> pipeline_stage_013:out_ready
	wire   [44:0] pipeline_stage_013_source0_channel;                                                              // pipeline_stage_013:out_channel -> async_fifo_011:in_channel
	wire          pipeline_stage_013_source0_startofpacket;                                                        // pipeline_stage_013:out_startofpacket -> async_fifo_011:in_startofpacket
	wire          pipeline_stage_013_source0_endofpacket;                                                          // pipeline_stage_013:out_endofpacket -> async_fifo_011:in_endofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter_src_valid;            // sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter:out_valid -> pipeline_stage_014:in_valid
	wire  [165:0] sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter_src_data;             // sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter:out_data -> pipeline_stage_014:in_data
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter_src_ready;            // pipeline_stage_014:in_ready -> sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter:out_ready
	wire   [44:0] sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter_src_channel;          // sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter:out_channel -> pipeline_stage_014:in_channel
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter_src_startofpacket;    // sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter:out_startofpacket -> pipeline_stage_014:in_startofpacket
	wire          sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter_src_endofpacket;      // sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter:out_endofpacket -> pipeline_stage_014:in_endofpacket
	wire          pipeline_stage_014_source0_valid;                                                                // pipeline_stage_014:out_valid -> async_fifo_010:in_valid
	wire  [165:0] pipeline_stage_014_source0_data;                                                                 // pipeline_stage_014:out_data -> async_fifo_010:in_data
	wire          pipeline_stage_014_source0_ready;                                                                // async_fifo_010:in_ready -> pipeline_stage_014:out_ready
	wire   [44:0] pipeline_stage_014_source0_channel;                                                              // pipeline_stage_014:out_channel -> async_fifo_010:in_channel
	wire          pipeline_stage_014_source0_startofpacket;                                                        // pipeline_stage_014:out_startofpacket -> async_fifo_010:in_startofpacket
	wire          pipeline_stage_014_source0_endofpacket;                                                          // pipeline_stage_014:out_endofpacket -> async_fifo_010:in_endofpacket
	wire          sys_uart_avalon_jtag_slave_agent_rdata_fifo_out_valid;                                           // sys_uart_avalon_jtag_slave_agent_rdata_fifo:out_valid -> avalon_st_adapter:in_0_valid
	wire   [33:0] sys_uart_avalon_jtag_slave_agent_rdata_fifo_out_data;                                            // sys_uart_avalon_jtag_slave_agent_rdata_fifo:out_data -> avalon_st_adapter:in_0_data
	wire          sys_uart_avalon_jtag_slave_agent_rdata_fifo_out_ready;                                           // avalon_st_adapter:in_0_ready -> sys_uart_avalon_jtag_slave_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_out_0_valid;                                                                   // avalon_st_adapter:out_0_valid -> sys_uart_avalon_jtag_slave_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_out_0_data;                                                                    // avalon_st_adapter:out_0_data -> sys_uart_avalon_jtag_slave_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_out_0_ready;                                                                   // sys_uart_avalon_jtag_slave_agent:rdata_fifo_sink_ready -> avalon_st_adapter:out_0_ready
	wire    [0:0] avalon_st_adapter_out_0_error;                                                                   // avalon_st_adapter:out_0_error -> sys_uart_avalon_jtag_slave_agent:rdata_fifo_sink_error
	wire          sys_ethernet_control_port_agent_rdata_fifo_out_valid;                                            // sys_ethernet_control_port_agent_rdata_fifo:out_valid -> avalon_st_adapter_001:in_0_valid
	wire   [33:0] sys_ethernet_control_port_agent_rdata_fifo_out_data;                                             // sys_ethernet_control_port_agent_rdata_fifo:out_data -> avalon_st_adapter_001:in_0_data
	wire          sys_ethernet_control_port_agent_rdata_fifo_out_ready;                                            // avalon_st_adapter_001:in_0_ready -> sys_ethernet_control_port_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_001_out_0_valid;                                                               // avalon_st_adapter_001:out_0_valid -> sys_ethernet_control_port_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_001_out_0_data;                                                                // avalon_st_adapter_001:out_0_data -> sys_ethernet_control_port_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_001_out_0_ready;                                                               // sys_ethernet_control_port_agent:rdata_fifo_sink_ready -> avalon_st_adapter_001:out_0_ready
	wire    [0:0] avalon_st_adapter_001_out_0_error;                                                               // avalon_st_adapter_001:out_0_error -> sys_ethernet_control_port_agent:rdata_fifo_sink_error
	wire          sys_id_control_slave_agent_rdata_fifo_out_valid;                                                 // sys_id_control_slave_agent_rdata_fifo:out_valid -> avalon_st_adapter_002:in_0_valid
	wire   [33:0] sys_id_control_slave_agent_rdata_fifo_out_data;                                                  // sys_id_control_slave_agent_rdata_fifo:out_data -> avalon_st_adapter_002:in_0_data
	wire          sys_id_control_slave_agent_rdata_fifo_out_ready;                                                 // avalon_st_adapter_002:in_0_ready -> sys_id_control_slave_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_002_out_0_valid;                                                               // avalon_st_adapter_002:out_0_valid -> sys_id_control_slave_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_002_out_0_data;                                                                // avalon_st_adapter_002:out_0_data -> sys_id_control_slave_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_002_out_0_ready;                                                               // sys_id_control_slave_agent:rdata_fifo_sink_ready -> avalon_st_adapter_002:out_0_ready
	wire    [0:0] avalon_st_adapter_002_out_0_error;                                                               // avalon_st_adapter_002:out_0_error -> sys_id_control_slave_agent:rdata_fifo_sink_error
	wire          sys_ethernet_dma_rx_csr_agent_rdata_fifo_out_valid;                                              // sys_ethernet_dma_rx_csr_agent_rdata_fifo:out_valid -> avalon_st_adapter_003:in_0_valid
	wire   [33:0] sys_ethernet_dma_rx_csr_agent_rdata_fifo_out_data;                                               // sys_ethernet_dma_rx_csr_agent_rdata_fifo:out_data -> avalon_st_adapter_003:in_0_data
	wire          sys_ethernet_dma_rx_csr_agent_rdata_fifo_out_ready;                                              // avalon_st_adapter_003:in_0_ready -> sys_ethernet_dma_rx_csr_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_003_out_0_valid;                                                               // avalon_st_adapter_003:out_0_valid -> sys_ethernet_dma_rx_csr_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_003_out_0_data;                                                                // avalon_st_adapter_003:out_0_data -> sys_ethernet_dma_rx_csr_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_003_out_0_ready;                                                               // sys_ethernet_dma_rx_csr_agent:rdata_fifo_sink_ready -> avalon_st_adapter_003:out_0_ready
	wire    [0:0] avalon_st_adapter_003_out_0_error;                                                               // avalon_st_adapter_003:out_0_error -> sys_ethernet_dma_rx_csr_agent:rdata_fifo_sink_error
	wire          sys_ethernet_dma_tx_csr_agent_rdata_fifo_out_valid;                                              // sys_ethernet_dma_tx_csr_agent_rdata_fifo:out_valid -> avalon_st_adapter_004:in_0_valid
	wire   [33:0] sys_ethernet_dma_tx_csr_agent_rdata_fifo_out_data;                                               // sys_ethernet_dma_tx_csr_agent_rdata_fifo:out_data -> avalon_st_adapter_004:in_0_data
	wire          sys_ethernet_dma_tx_csr_agent_rdata_fifo_out_ready;                                              // avalon_st_adapter_004:in_0_ready -> sys_ethernet_dma_tx_csr_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_004_out_0_valid;                                                               // avalon_st_adapter_004:out_0_valid -> sys_ethernet_dma_tx_csr_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_004_out_0_data;                                                                // avalon_st_adapter_004:out_0_data -> sys_ethernet_dma_tx_csr_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_004_out_0_ready;                                                               // sys_ethernet_dma_tx_csr_agent:rdata_fifo_sink_ready -> avalon_st_adapter_004:out_0_ready
	wire    [0:0] avalon_st_adapter_004_out_0_error;                                                               // avalon_st_adapter_004:out_0_error -> sys_ethernet_dma_tx_csr_agent:rdata_fifo_sink_error
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo_out_valid;                                            // sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo:out_valid -> avalon_st_adapter_005:in_0_valid
	wire  [513:0] sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo_out_data;                                             // sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo:out_data -> avalon_st_adapter_005:in_0_data
	wire          sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo_out_ready;                                            // avalon_st_adapter_005:in_0_ready -> sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_005_out_0_valid;                                                               // avalon_st_adapter_005:out_0_valid -> sys_ddr3_cntrl_ctrl_amm_0_agent:rdata_fifo_sink_valid
	wire  [513:0] avalon_st_adapter_005_out_0_data;                                                                // avalon_st_adapter_005:out_0_data -> sys_ddr3_cntrl_ctrl_amm_0_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_005_out_0_ready;                                                               // sys_ddr3_cntrl_ctrl_amm_0_agent:rdata_fifo_sink_ready -> avalon_st_adapter_005:out_0_ready
	wire    [0:0] avalon_st_adapter_005_out_0_error;                                                               // avalon_st_adapter_005:out_0_error -> sys_ddr3_cntrl_ctrl_amm_0_agent:rdata_fifo_sink_error
	wire          sys_cpu_debug_mem_slave_agent_rdata_fifo_out_valid;                                              // sys_cpu_debug_mem_slave_agent_rdata_fifo:out_valid -> avalon_st_adapter_006:in_0_valid
	wire   [33:0] sys_cpu_debug_mem_slave_agent_rdata_fifo_out_data;                                               // sys_cpu_debug_mem_slave_agent_rdata_fifo:out_data -> avalon_st_adapter_006:in_0_data
	wire          sys_cpu_debug_mem_slave_agent_rdata_fifo_out_ready;                                              // avalon_st_adapter_006:in_0_ready -> sys_cpu_debug_mem_slave_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_006_out_0_valid;                                                               // avalon_st_adapter_006:out_0_valid -> sys_cpu_debug_mem_slave_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_006_out_0_data;                                                                // avalon_st_adapter_006:out_0_data -> sys_cpu_debug_mem_slave_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_006_out_0_ready;                                                               // sys_cpu_debug_mem_slave_agent:rdata_fifo_sink_ready -> avalon_st_adapter_006:out_0_ready
	wire    [0:0] avalon_st_adapter_006_out_0_error;                                                               // avalon_st_adapter_006:out_0_error -> sys_cpu_debug_mem_slave_agent:rdata_fifo_sink_error
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo_out_valid;                                 // sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo:out_valid -> avalon_st_adapter_007:in_0_valid
	wire  [257:0] sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo_out_data;                                  // sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo:out_data -> avalon_st_adapter_007:in_0_data
	wire          sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo_out_ready;                                 // avalon_st_adapter_007:in_0_ready -> sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_007_out_0_valid;                                                               // avalon_st_adapter_007:out_0_valid -> sys_ethernet_dma_rx_descriptor_slave_agent:rdata_fifo_sink_valid
	wire  [257:0] avalon_st_adapter_007_out_0_data;                                                                // avalon_st_adapter_007:out_0_data -> sys_ethernet_dma_rx_descriptor_slave_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_007_out_0_ready;                                                               // sys_ethernet_dma_rx_descriptor_slave_agent:rdata_fifo_sink_ready -> avalon_st_adapter_007:out_0_ready
	wire    [0:0] avalon_st_adapter_007_out_0_error;                                                               // avalon_st_adapter_007:out_0_error -> sys_ethernet_dma_rx_descriptor_slave_agent:rdata_fifo_sink_error
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo_out_valid;                                 // sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo:out_valid -> avalon_st_adapter_008:in_0_valid
	wire  [257:0] sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo_out_data;                                  // sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo:out_data -> avalon_st_adapter_008:in_0_data
	wire          sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo_out_ready;                                 // avalon_st_adapter_008:in_0_ready -> sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_008_out_0_valid;                                                               // avalon_st_adapter_008:out_0_valid -> sys_ethernet_dma_tx_descriptor_slave_agent:rdata_fifo_sink_valid
	wire  [257:0] avalon_st_adapter_008_out_0_data;                                                                // avalon_st_adapter_008:out_0_data -> sys_ethernet_dma_tx_descriptor_slave_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_008_out_0_ready;                                                               // sys_ethernet_dma_tx_descriptor_slave_agent:rdata_fifo_sink_ready -> avalon_st_adapter_008:out_0_ready
	wire    [0:0] avalon_st_adapter_008_out_0_error;                                                               // avalon_st_adapter_008:out_0_error -> sys_ethernet_dma_tx_descriptor_slave_agent:rdata_fifo_sink_error
	wire          ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo_out_valid;                                     // ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo:out_valid -> avalon_st_adapter_009:in_0_valid
	wire   [33:0] ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo_out_data;                                      // ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo:out_data -> avalon_st_adapter_009:in_0_data
	wire          ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo_out_ready;                                     // avalon_st_adapter_009:in_0_ready -> ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_009_out_0_valid;                                                               // avalon_st_adapter_009:out_0_valid -> ad9144_jesd204_lane_pll_reconfig_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_009_out_0_data;                                                                // avalon_st_adapter_009:out_0_data -> ad9144_jesd204_lane_pll_reconfig_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_009_out_0_ready;                                                               // ad9144_jesd204_lane_pll_reconfig_agent:rdata_fifo_sink_ready -> avalon_st_adapter_009:out_0_ready
	wire    [0:0] avalon_st_adapter_009_out_0_error;                                                               // avalon_st_adapter_009:out_0_error -> ad9144_jesd204_lane_pll_reconfig_agent:rdata_fifo_sink_error
	wire          ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo_out_valid;                                     // ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo:out_valid -> avalon_st_adapter_010:in_0_valid
	wire   [33:0] ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo_out_data;                                      // ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo:out_data -> avalon_st_adapter_010:in_0_data
	wire          ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo_out_ready;                                     // avalon_st_adapter_010:in_0_ready -> ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_010_out_0_valid;                                                               // avalon_st_adapter_010:out_0_valid -> ad9144_jesd204_link_pll_reconfig_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_010_out_0_data;                                                                // avalon_st_adapter_010:out_0_data -> ad9144_jesd204_link_pll_reconfig_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_010_out_0_ready;                                                               // ad9144_jesd204_link_pll_reconfig_agent:rdata_fifo_sink_ready -> avalon_st_adapter_010:out_0_ready
	wire    [0:0] avalon_st_adapter_010_out_0_error;                                                               // avalon_st_adapter_010:out_0_error -> ad9144_jesd204_link_pll_reconfig_agent:rdata_fifo_sink_error
	wire          ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo_out_valid;                                     // ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo:out_valid -> avalon_st_adapter_011:in_0_valid
	wire   [33:0] ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo_out_data;                                      // ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo:out_data -> avalon_st_adapter_011:in_0_data
	wire          ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo_out_ready;                                     // avalon_st_adapter_011:in_0_ready -> ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_011_out_0_valid;                                                               // avalon_st_adapter_011:out_0_valid -> ad9680_jesd204_link_pll_reconfig_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_011_out_0_data;                                                                // avalon_st_adapter_011:out_0_data -> ad9680_jesd204_link_pll_reconfig_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_011_out_0_ready;                                                               // ad9680_jesd204_link_pll_reconfig_agent:rdata_fifo_sink_ready -> avalon_st_adapter_011:out_0_ready
	wire    [0:0] avalon_st_adapter_011_out_0_error;                                                               // avalon_st_adapter_011:out_0_error -> ad9680_jesd204_link_pll_reconfig_agent:rdata_fifo_sink_error
	wire          avl_adxcfg_0_rcfg_s0_agent_rdata_fifo_out_valid;                                                 // avl_adxcfg_0_rcfg_s0_agent_rdata_fifo:out_valid -> avalon_st_adapter_012:in_0_valid
	wire   [33:0] avl_adxcfg_0_rcfg_s0_agent_rdata_fifo_out_data;                                                  // avl_adxcfg_0_rcfg_s0_agent_rdata_fifo:out_data -> avalon_st_adapter_012:in_0_data
	wire          avl_adxcfg_0_rcfg_s0_agent_rdata_fifo_out_ready;                                                 // avalon_st_adapter_012:in_0_ready -> avl_adxcfg_0_rcfg_s0_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_012_out_0_valid;                                                               // avalon_st_adapter_012:out_0_valid -> avl_adxcfg_0_rcfg_s0_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_012_out_0_data;                                                                // avalon_st_adapter_012:out_0_data -> avl_adxcfg_0_rcfg_s0_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_012_out_0_ready;                                                               // avl_adxcfg_0_rcfg_s0_agent:rdata_fifo_sink_ready -> avalon_st_adapter_012:out_0_ready
	wire    [0:0] avalon_st_adapter_012_out_0_error;                                                               // avalon_st_adapter_012:out_0_error -> avl_adxcfg_0_rcfg_s0_agent:rdata_fifo_sink_error
	wire          avl_adxcfg_1_rcfg_s0_agent_rdata_fifo_out_valid;                                                 // avl_adxcfg_1_rcfg_s0_agent_rdata_fifo:out_valid -> avalon_st_adapter_013:in_0_valid
	wire   [33:0] avl_adxcfg_1_rcfg_s0_agent_rdata_fifo_out_data;                                                  // avl_adxcfg_1_rcfg_s0_agent_rdata_fifo:out_data -> avalon_st_adapter_013:in_0_data
	wire          avl_adxcfg_1_rcfg_s0_agent_rdata_fifo_out_ready;                                                 // avalon_st_adapter_013:in_0_ready -> avl_adxcfg_1_rcfg_s0_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_013_out_0_valid;                                                               // avalon_st_adapter_013:out_0_valid -> avl_adxcfg_1_rcfg_s0_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_013_out_0_data;                                                                // avalon_st_adapter_013:out_0_data -> avl_adxcfg_1_rcfg_s0_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_013_out_0_ready;                                                               // avl_adxcfg_1_rcfg_s0_agent:rdata_fifo_sink_ready -> avalon_st_adapter_013:out_0_ready
	wire    [0:0] avalon_st_adapter_013_out_0_error;                                                               // avalon_st_adapter_013:out_0_error -> avl_adxcfg_1_rcfg_s0_agent:rdata_fifo_sink_error
	wire          avl_adxcfg_2_rcfg_s0_agent_rdata_fifo_out_valid;                                                 // avl_adxcfg_2_rcfg_s0_agent_rdata_fifo:out_valid -> avalon_st_adapter_014:in_0_valid
	wire   [33:0] avl_adxcfg_2_rcfg_s0_agent_rdata_fifo_out_data;                                                  // avl_adxcfg_2_rcfg_s0_agent_rdata_fifo:out_data -> avalon_st_adapter_014:in_0_data
	wire          avl_adxcfg_2_rcfg_s0_agent_rdata_fifo_out_ready;                                                 // avalon_st_adapter_014:in_0_ready -> avl_adxcfg_2_rcfg_s0_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_014_out_0_valid;                                                               // avalon_st_adapter_014:out_0_valid -> avl_adxcfg_2_rcfg_s0_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_014_out_0_data;                                                                // avalon_st_adapter_014:out_0_data -> avl_adxcfg_2_rcfg_s0_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_014_out_0_ready;                                                               // avl_adxcfg_2_rcfg_s0_agent:rdata_fifo_sink_ready -> avalon_st_adapter_014:out_0_ready
	wire    [0:0] avalon_st_adapter_014_out_0_error;                                                               // avalon_st_adapter_014:out_0_error -> avl_adxcfg_2_rcfg_s0_agent:rdata_fifo_sink_error
	wire          avl_adxcfg_3_rcfg_s0_agent_rdata_fifo_out_valid;                                                 // avl_adxcfg_3_rcfg_s0_agent_rdata_fifo:out_valid -> avalon_st_adapter_015:in_0_valid
	wire   [33:0] avl_adxcfg_3_rcfg_s0_agent_rdata_fifo_out_data;                                                  // avl_adxcfg_3_rcfg_s0_agent_rdata_fifo:out_data -> avalon_st_adapter_015:in_0_data
	wire          avl_adxcfg_3_rcfg_s0_agent_rdata_fifo_out_ready;                                                 // avalon_st_adapter_015:in_0_ready -> avl_adxcfg_3_rcfg_s0_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_015_out_0_valid;                                                               // avalon_st_adapter_015:out_0_valid -> avl_adxcfg_3_rcfg_s0_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_015_out_0_data;                                                                // avalon_st_adapter_015:out_0_data -> avl_adxcfg_3_rcfg_s0_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_015_out_0_ready;                                                               // avl_adxcfg_3_rcfg_s0_agent:rdata_fifo_sink_ready -> avalon_st_adapter_015:out_0_ready
	wire    [0:0] avalon_st_adapter_015_out_0_error;                                                               // avalon_st_adapter_015:out_0_error -> avl_adxcfg_3_rcfg_s0_agent:rdata_fifo_sink_error
	wire          avl_adxcfg_0_rcfg_s1_agent_rdata_fifo_out_valid;                                                 // avl_adxcfg_0_rcfg_s1_agent_rdata_fifo:out_valid -> avalon_st_adapter_016:in_0_valid
	wire   [33:0] avl_adxcfg_0_rcfg_s1_agent_rdata_fifo_out_data;                                                  // avl_adxcfg_0_rcfg_s1_agent_rdata_fifo:out_data -> avalon_st_adapter_016:in_0_data
	wire          avl_adxcfg_0_rcfg_s1_agent_rdata_fifo_out_ready;                                                 // avalon_st_adapter_016:in_0_ready -> avl_adxcfg_0_rcfg_s1_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_016_out_0_valid;                                                               // avalon_st_adapter_016:out_0_valid -> avl_adxcfg_0_rcfg_s1_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_016_out_0_data;                                                                // avalon_st_adapter_016:out_0_data -> avl_adxcfg_0_rcfg_s1_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_016_out_0_ready;                                                               // avl_adxcfg_0_rcfg_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_016:out_0_ready
	wire    [0:0] avalon_st_adapter_016_out_0_error;                                                               // avalon_st_adapter_016:out_0_error -> avl_adxcfg_0_rcfg_s1_agent:rdata_fifo_sink_error
	wire          avl_adxcfg_1_rcfg_s1_agent_rdata_fifo_out_valid;                                                 // avl_adxcfg_1_rcfg_s1_agent_rdata_fifo:out_valid -> avalon_st_adapter_017:in_0_valid
	wire   [33:0] avl_adxcfg_1_rcfg_s1_agent_rdata_fifo_out_data;                                                  // avl_adxcfg_1_rcfg_s1_agent_rdata_fifo:out_data -> avalon_st_adapter_017:in_0_data
	wire          avl_adxcfg_1_rcfg_s1_agent_rdata_fifo_out_ready;                                                 // avalon_st_adapter_017:in_0_ready -> avl_adxcfg_1_rcfg_s1_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_017_out_0_valid;                                                               // avalon_st_adapter_017:out_0_valid -> avl_adxcfg_1_rcfg_s1_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_017_out_0_data;                                                                // avalon_st_adapter_017:out_0_data -> avl_adxcfg_1_rcfg_s1_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_017_out_0_ready;                                                               // avl_adxcfg_1_rcfg_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_017:out_0_ready
	wire    [0:0] avalon_st_adapter_017_out_0_error;                                                               // avalon_st_adapter_017:out_0_error -> avl_adxcfg_1_rcfg_s1_agent:rdata_fifo_sink_error
	wire          avl_adxcfg_2_rcfg_s1_agent_rdata_fifo_out_valid;                                                 // avl_adxcfg_2_rcfg_s1_agent_rdata_fifo:out_valid -> avalon_st_adapter_018:in_0_valid
	wire   [33:0] avl_adxcfg_2_rcfg_s1_agent_rdata_fifo_out_data;                                                  // avl_adxcfg_2_rcfg_s1_agent_rdata_fifo:out_data -> avalon_st_adapter_018:in_0_data
	wire          avl_adxcfg_2_rcfg_s1_agent_rdata_fifo_out_ready;                                                 // avalon_st_adapter_018:in_0_ready -> avl_adxcfg_2_rcfg_s1_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_018_out_0_valid;                                                               // avalon_st_adapter_018:out_0_valid -> avl_adxcfg_2_rcfg_s1_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_018_out_0_data;                                                                // avalon_st_adapter_018:out_0_data -> avl_adxcfg_2_rcfg_s1_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_018_out_0_ready;                                                               // avl_adxcfg_2_rcfg_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_018:out_0_ready
	wire    [0:0] avalon_st_adapter_018_out_0_error;                                                               // avalon_st_adapter_018:out_0_error -> avl_adxcfg_2_rcfg_s1_agent:rdata_fifo_sink_error
	wire          avl_adxcfg_3_rcfg_s1_agent_rdata_fifo_out_valid;                                                 // avl_adxcfg_3_rcfg_s1_agent_rdata_fifo:out_valid -> avalon_st_adapter_019:in_0_valid
	wire   [33:0] avl_adxcfg_3_rcfg_s1_agent_rdata_fifo_out_data;                                                  // avl_adxcfg_3_rcfg_s1_agent_rdata_fifo:out_data -> avalon_st_adapter_019:in_0_data
	wire          avl_adxcfg_3_rcfg_s1_agent_rdata_fifo_out_ready;                                                 // avalon_st_adapter_019:in_0_ready -> avl_adxcfg_3_rcfg_s1_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_019_out_0_valid;                                                               // avalon_st_adapter_019:out_0_valid -> avl_adxcfg_3_rcfg_s1_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_019_out_0_data;                                                                // avalon_st_adapter_019:out_0_data -> avl_adxcfg_3_rcfg_s1_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_019_out_0_ready;                                                               // avl_adxcfg_3_rcfg_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_019:out_0_ready
	wire    [0:0] avalon_st_adapter_019_out_0_error;                                                               // avalon_st_adapter_019:out_0_error -> avl_adxcfg_3_rcfg_s1_agent:rdata_fifo_sink_error
	wire          sys_ethernet_dma_rx_response_agent_rdata_fifo_out_valid;                                         // sys_ethernet_dma_rx_response_agent_rdata_fifo:out_valid -> avalon_st_adapter_020:in_0_valid
	wire   [33:0] sys_ethernet_dma_rx_response_agent_rdata_fifo_out_data;                                          // sys_ethernet_dma_rx_response_agent_rdata_fifo:out_data -> avalon_st_adapter_020:in_0_data
	wire          sys_ethernet_dma_rx_response_agent_rdata_fifo_out_ready;                                         // avalon_st_adapter_020:in_0_ready -> sys_ethernet_dma_rx_response_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_020_out_0_valid;                                                               // avalon_st_adapter_020:out_0_valid -> sys_ethernet_dma_rx_response_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_020_out_0_data;                                                                // avalon_st_adapter_020:out_0_data -> sys_ethernet_dma_rx_response_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_020_out_0_ready;                                                               // sys_ethernet_dma_rx_response_agent:rdata_fifo_sink_ready -> avalon_st_adapter_020:out_0_ready
	wire    [0:0] avalon_st_adapter_020_out_0_error;                                                               // avalon_st_adapter_020:out_0_error -> sys_ethernet_dma_rx_response_agent:rdata_fifo_sink_error
	wire          sys_int_mem_s1_agent_rdata_fifo_out_valid;                                                       // sys_int_mem_s1_agent_rdata_fifo:out_valid -> avalon_st_adapter_021:in_0_valid
	wire   [33:0] sys_int_mem_s1_agent_rdata_fifo_out_data;                                                        // sys_int_mem_s1_agent_rdata_fifo:out_data -> avalon_st_adapter_021:in_0_data
	wire          sys_int_mem_s1_agent_rdata_fifo_out_ready;                                                       // avalon_st_adapter_021:in_0_ready -> sys_int_mem_s1_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_021_out_0_valid;                                                               // avalon_st_adapter_021:out_0_valid -> sys_int_mem_s1_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_021_out_0_data;                                                                // avalon_st_adapter_021:out_0_data -> sys_int_mem_s1_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_021_out_0_ready;                                                               // sys_int_mem_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_021:out_0_ready
	wire    [0:0] avalon_st_adapter_021_out_0_error;                                                               // avalon_st_adapter_021:out_0_error -> sys_int_mem_s1_agent:rdata_fifo_sink_error
	wire          sys_timer_1_s1_agent_rdata_fifo_out_valid;                                                       // sys_timer_1_s1_agent_rdata_fifo:out_valid -> avalon_st_adapter_022:in_0_valid
	wire   [33:0] sys_timer_1_s1_agent_rdata_fifo_out_data;                                                        // sys_timer_1_s1_agent_rdata_fifo:out_data -> avalon_st_adapter_022:in_0_data
	wire          sys_timer_1_s1_agent_rdata_fifo_out_ready;                                                       // avalon_st_adapter_022:in_0_ready -> sys_timer_1_s1_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_022_out_0_valid;                                                               // avalon_st_adapter_022:out_0_valid -> sys_timer_1_s1_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_022_out_0_data;                                                                // avalon_st_adapter_022:out_0_data -> sys_timer_1_s1_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_022_out_0_ready;                                                               // sys_timer_1_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_022:out_0_ready
	wire    [0:0] avalon_st_adapter_022_out_0_error;                                                               // avalon_st_adapter_022:out_0_error -> sys_timer_1_s1_agent:rdata_fifo_sink_error
	wire          sys_timer_2_s1_agent_rdata_fifo_out_valid;                                                       // sys_timer_2_s1_agent_rdata_fifo:out_valid -> avalon_st_adapter_023:in_0_valid
	wire   [33:0] sys_timer_2_s1_agent_rdata_fifo_out_data;                                                        // sys_timer_2_s1_agent_rdata_fifo:out_data -> avalon_st_adapter_023:in_0_data
	wire          sys_timer_2_s1_agent_rdata_fifo_out_ready;                                                       // avalon_st_adapter_023:in_0_ready -> sys_timer_2_s1_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_023_out_0_valid;                                                               // avalon_st_adapter_023:out_0_valid -> sys_timer_2_s1_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_023_out_0_data;                                                                // avalon_st_adapter_023:out_0_data -> sys_timer_2_s1_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_023_out_0_ready;                                                               // sys_timer_2_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_023:out_0_ready
	wire    [0:0] avalon_st_adapter_023_out_0_error;                                                               // avalon_st_adapter_023:out_0_error -> sys_timer_2_s1_agent:rdata_fifo_sink_error
	wire          sys_gpio_bd_s1_agent_rdata_fifo_out_valid;                                                       // sys_gpio_bd_s1_agent_rdata_fifo:out_valid -> avalon_st_adapter_024:in_0_valid
	wire   [33:0] sys_gpio_bd_s1_agent_rdata_fifo_out_data;                                                        // sys_gpio_bd_s1_agent_rdata_fifo:out_data -> avalon_st_adapter_024:in_0_data
	wire          sys_gpio_bd_s1_agent_rdata_fifo_out_ready;                                                       // avalon_st_adapter_024:in_0_ready -> sys_gpio_bd_s1_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_024_out_0_valid;                                                               // avalon_st_adapter_024:out_0_valid -> sys_gpio_bd_s1_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_024_out_0_data;                                                                // avalon_st_adapter_024:out_0_data -> sys_gpio_bd_s1_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_024_out_0_ready;                                                               // sys_gpio_bd_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_024:out_0_ready
	wire    [0:0] avalon_st_adapter_024_out_0_error;                                                               // avalon_st_adapter_024:out_0_error -> sys_gpio_bd_s1_agent:rdata_fifo_sink_error
	wire          sys_gpio_in_s1_agent_rdata_fifo_out_valid;                                                       // sys_gpio_in_s1_agent_rdata_fifo:out_valid -> avalon_st_adapter_025:in_0_valid
	wire   [33:0] sys_gpio_in_s1_agent_rdata_fifo_out_data;                                                        // sys_gpio_in_s1_agent_rdata_fifo:out_data -> avalon_st_adapter_025:in_0_data
	wire          sys_gpio_in_s1_agent_rdata_fifo_out_ready;                                                       // avalon_st_adapter_025:in_0_ready -> sys_gpio_in_s1_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_025_out_0_valid;                                                               // avalon_st_adapter_025:out_0_valid -> sys_gpio_in_s1_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_025_out_0_data;                                                                // avalon_st_adapter_025:out_0_data -> sys_gpio_in_s1_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_025_out_0_ready;                                                               // sys_gpio_in_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_025:out_0_ready
	wire    [0:0] avalon_st_adapter_025_out_0_error;                                                               // avalon_st_adapter_025:out_0_error -> sys_gpio_in_s1_agent:rdata_fifo_sink_error
	wire          sys_gpio_out_s1_agent_rdata_fifo_out_valid;                                                      // sys_gpio_out_s1_agent_rdata_fifo:out_valid -> avalon_st_adapter_026:in_0_valid
	wire   [33:0] sys_gpio_out_s1_agent_rdata_fifo_out_data;                                                       // sys_gpio_out_s1_agent_rdata_fifo:out_data -> avalon_st_adapter_026:in_0_data
	wire          sys_gpio_out_s1_agent_rdata_fifo_out_ready;                                                      // avalon_st_adapter_026:in_0_ready -> sys_gpio_out_s1_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_026_out_0_valid;                                                               // avalon_st_adapter_026:out_0_valid -> sys_gpio_out_s1_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_026_out_0_data;                                                                // avalon_st_adapter_026:out_0_data -> sys_gpio_out_s1_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_026_out_0_ready;                                                               // sys_gpio_out_s1_agent:rdata_fifo_sink_ready -> avalon_st_adapter_026:out_0_ready
	wire    [0:0] avalon_st_adapter_026_out_0_error;                                                               // avalon_st_adapter_026:out_0_error -> sys_gpio_out_s1_agent:rdata_fifo_sink_error
	wire          sys_spi_spi_control_port_agent_rdata_fifo_out_valid;                                             // sys_spi_spi_control_port_agent_rdata_fifo:out_valid -> avalon_st_adapter_027:in_0_valid
	wire   [33:0] sys_spi_spi_control_port_agent_rdata_fifo_out_data;                                              // sys_spi_spi_control_port_agent_rdata_fifo:out_data -> avalon_st_adapter_027:in_0_data
	wire          sys_spi_spi_control_port_agent_rdata_fifo_out_ready;                                             // avalon_st_adapter_027:in_0_ready -> sys_spi_spi_control_port_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_027_out_0_valid;                                                               // avalon_st_adapter_027:out_0_valid -> sys_spi_spi_control_port_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_027_out_0_data;                                                                // avalon_st_adapter_027:out_0_data -> sys_spi_spi_control_port_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_027_out_0_ready;                                                               // sys_spi_spi_control_port_agent:rdata_fifo_sink_ready -> avalon_st_adapter_027:out_0_ready
	wire    [0:0] avalon_st_adapter_027_out_0_error;                                                               // avalon_st_adapter_027:out_0_error -> sys_spi_spi_control_port_agent:rdata_fifo_sink_error
	wire          sys_flash_uas_agent_rdata_fifo_out_valid;                                                        // sys_flash_uas_agent_rdata_fifo:out_valid -> avalon_st_adapter_028:in_0_valid
	wire   [33:0] sys_flash_uas_agent_rdata_fifo_out_data;                                                         // sys_flash_uas_agent_rdata_fifo:out_data -> avalon_st_adapter_028:in_0_data
	wire          sys_flash_uas_agent_rdata_fifo_out_ready;                                                        // avalon_st_adapter_028:in_0_ready -> sys_flash_uas_agent_rdata_fifo:out_ready
	wire          avalon_st_adapter_028_out_0_valid;                                                               // avalon_st_adapter_028:out_0_valid -> sys_flash_uas_agent:rdata_fifo_sink_valid
	wire   [33:0] avalon_st_adapter_028_out_0_data;                                                                // avalon_st_adapter_028:out_0_data -> sys_flash_uas_agent:rdata_fifo_sink_data
	wire          avalon_st_adapter_028_out_0_ready;                                                               // sys_flash_uas_agent:rdata_fifo_sink_ready -> avalon_st_adapter_028:out_0_ready
	wire    [0:0] avalon_st_adapter_028_out_0_error;                                                               // avalon_st_adapter_028:out_0_error -> sys_flash_uas_agent:rdata_fifo_sink_error

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (29),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (32),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (1),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) sys_cpu_data_master_translator (
		.clk                    (sys_clk_clk_clk),                                                        //                       clk.clk
		.reset                  (sys_cpu_reset_reset_bridge_in_reset_reset),                              //                     reset.reset
		.uav_address            (sys_cpu_data_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount         (sys_cpu_data_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read               (sys_cpu_data_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write              (sys_cpu_data_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest        (sys_cpu_data_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid      (sys_cpu_data_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable         (sys_cpu_data_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata           (sys_cpu_data_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata          (sys_cpu_data_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock               (sys_cpu_data_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess        (sys_cpu_data_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address             (sys_cpu_data_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest         (sys_cpu_data_master_waitrequest),                                        //                          .waitrequest
		.av_byteenable          (sys_cpu_data_master_byteenable),                                         //                          .byteenable
		.av_read                (sys_cpu_data_master_read),                                               //                          .read
		.av_readdata            (sys_cpu_data_master_readdata),                                           //                          .readdata
		.av_readdatavalid       (sys_cpu_data_master_readdatavalid),                                      //                          .readdatavalid
		.av_write               (sys_cpu_data_master_write),                                              //                          .write
		.av_writedata           (sys_cpu_data_master_writedata),                                          //                          .writedata
		.av_debugaccess         (sys_cpu_data_master_debugaccess),                                        //                          .debugaccess
		.av_burstcount          (1'b1),                                                                   //               (terminated)
		.av_beginbursttransfer  (1'b0),                                                                   //               (terminated)
		.av_begintransfer       (1'b0),                                                                   //               (terminated)
		.av_chipselect          (1'b0),                                                                   //               (terminated)
		.av_lock                (1'b0),                                                                   //               (terminated)
		.uav_clken              (),                                                                       //               (terminated)
		.av_clken               (1'b1),                                                                   //               (terminated)
		.uav_response           (2'b00),                                                                  //               (terminated)
		.av_response            (),                                                                       //               (terminated)
		.uav_writeresponsevalid (1'b0),                                                                   //               (terminated)
		.av_writeresponsevalid  ()                                                                        //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (29),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (32),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (0),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (1),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (1),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) sys_cpu_instruction_master_translator (
		.clk                    (sys_clk_clk_clk),                                                               //                       clk.clk
		.reset                  (sys_cpu_reset_reset_bridge_in_reset_reset),                                     //                     reset.reset
		.uav_address            (sys_cpu_instruction_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount         (sys_cpu_instruction_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read               (sys_cpu_instruction_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write              (sys_cpu_instruction_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest        (sys_cpu_instruction_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid      (sys_cpu_instruction_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable         (sys_cpu_instruction_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata           (sys_cpu_instruction_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata          (sys_cpu_instruction_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock               (sys_cpu_instruction_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess        (sys_cpu_instruction_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address             (sys_cpu_instruction_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest         (sys_cpu_instruction_master_waitrequest),                                        //                          .waitrequest
		.av_read                (sys_cpu_instruction_master_read),                                               //                          .read
		.av_readdata            (sys_cpu_instruction_master_readdata),                                           //                          .readdata
		.av_readdatavalid       (sys_cpu_instruction_master_readdatavalid),                                      //                          .readdatavalid
		.av_burstcount          (1'b1),                                                                          //               (terminated)
		.av_byteenable          (4'b1111),                                                                       //               (terminated)
		.av_beginbursttransfer  (1'b0),                                                                          //               (terminated)
		.av_begintransfer       (1'b0),                                                                          //               (terminated)
		.av_chipselect          (1'b0),                                                                          //               (terminated)
		.av_write               (1'b0),                                                                          //               (terminated)
		.av_writedata           (32'b00000000000000000000000000000000),                                          //               (terminated)
		.av_lock                (1'b0),                                                                          //               (terminated)
		.av_debugaccess         (1'b0),                                                                          //               (terminated)
		.uav_clken              (),                                                                              //               (terminated)
		.av_clken               (1'b1),                                                                          //               (terminated)
		.uav_response           (2'b00),                                                                         //               (terminated)
		.av_response            (),                                                                              //               (terminated)
		.uav_writeresponsevalid (1'b0),                                                                          //               (terminated)
		.av_writeresponsevalid  ()                                                                               //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (28),
		.AV_DATA_W                   (64),
		.AV_BURSTCOUNT_W             (7),
		.AV_BYTEENABLE_W             (8),
		.UAV_ADDRESS_W               (32),
		.UAV_BURSTCOUNT_W            (10),
		.USE_READ                    (1),
		.USE_WRITE                   (0),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (1),
		.USE_READDATAVALID           (1),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (8),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (1),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) sys_ethernet_dma_tx_mm_read_translator (
		.clk                    (sys_clk_clk_clk),                                                                //                       clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                         //                     reset.reset
		.uav_address            (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount         (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read               (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write              (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest        (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid      (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable         (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata           (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata          (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock               (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess        (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address             (sys_ethernet_dma_tx_mm_read_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest         (sys_ethernet_dma_tx_mm_read_waitrequest),                                        //                          .waitrequest
		.av_burstcount          (sys_ethernet_dma_tx_mm_read_burstcount),                                         //                          .burstcount
		.av_byteenable          (sys_ethernet_dma_tx_mm_read_byteenable),                                         //                          .byteenable
		.av_read                (sys_ethernet_dma_tx_mm_read_read),                                               //                          .read
		.av_readdata            (sys_ethernet_dma_tx_mm_read_readdata),                                           //                          .readdata
		.av_readdatavalid       (sys_ethernet_dma_tx_mm_read_readdatavalid),                                      //                          .readdatavalid
		.av_beginbursttransfer  (1'b0),                                                                           //               (terminated)
		.av_begintransfer       (1'b0),                                                                           //               (terminated)
		.av_chipselect          (1'b0),                                                                           //               (terminated)
		.av_write               (1'b0),                                                                           //               (terminated)
		.av_writedata           (64'b0000000000000000000000000000000000000000000000000000000000000000),           //               (terminated)
		.av_lock                (1'b0),                                                                           //               (terminated)
		.av_debugaccess         (1'b0),                                                                           //               (terminated)
		.uav_clken              (),                                                                               //               (terminated)
		.av_clken               (1'b1),                                                                           //               (terminated)
		.uav_response           (2'b00),                                                                          //               (terminated)
		.av_response            (),                                                                               //               (terminated)
		.uav_writeresponsevalid (1'b0),                                                                           //               (terminated)
		.av_writeresponsevalid  ()                                                                                //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (28),
		.AV_DATA_W                   (64),
		.AV_BURSTCOUNT_W             (7),
		.AV_BYTEENABLE_W             (8),
		.UAV_ADDRESS_W               (32),
		.UAV_BURSTCOUNT_W            (10),
		.USE_READ                    (0),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (1),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (8),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (1),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) sys_ethernet_dma_rx_mm_write_translator (
		.clk                    (sys_clk_clk_clk),                                                                 //                       clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                          //                     reset.reset
		.uav_address            (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount         (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read               (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write              (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest        (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid      (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable         (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata           (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata          (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock               (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess        (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address             (sys_ethernet_dma_rx_mm_write_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest         (sys_ethernet_dma_rx_mm_write_waitrequest),                                        //                          .waitrequest
		.av_burstcount          (sys_ethernet_dma_rx_mm_write_burstcount),                                         //                          .burstcount
		.av_byteenable          (sys_ethernet_dma_rx_mm_write_byteenable),                                         //                          .byteenable
		.av_write               (sys_ethernet_dma_rx_mm_write_write),                                              //                          .write
		.av_writedata           (sys_ethernet_dma_rx_mm_write_writedata),                                          //                          .writedata
		.av_beginbursttransfer  (1'b0),                                                                            //               (terminated)
		.av_begintransfer       (1'b0),                                                                            //               (terminated)
		.av_chipselect          (1'b0),                                                                            //               (terminated)
		.av_read                (1'b0),                                                                            //               (terminated)
		.av_readdata            (),                                                                                //               (terminated)
		.av_readdatavalid       (),                                                                                //               (terminated)
		.av_lock                (1'b0),                                                                            //               (terminated)
		.av_debugaccess         (1'b0),                                                                            //               (terminated)
		.uav_clken              (),                                                                                //               (terminated)
		.av_clken               (1'b1),                                                                            //               (terminated)
		.uav_response           (2'b00),                                                                           //               (terminated)
		.av_response            (),                                                                                //               (terminated)
		.uav_writeresponsevalid (1'b0),                                                                            //               (terminated)
		.av_writeresponsevalid  ()                                                                                 //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_uart_avalon_jtag_slave_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (sys_uart_avalon_jtag_slave_agent_m0_address),            // avalon_universal_slave_0.address
		.uav_burstcount         (sys_uart_avalon_jtag_slave_agent_m0_burstcount),         //                         .burstcount
		.uav_read               (sys_uart_avalon_jtag_slave_agent_m0_read),               //                         .read
		.uav_write              (sys_uart_avalon_jtag_slave_agent_m0_write),              //                         .write
		.uav_waitrequest        (sys_uart_avalon_jtag_slave_agent_m0_waitrequest),        //                         .waitrequest
		.uav_readdatavalid      (sys_uart_avalon_jtag_slave_agent_m0_readdatavalid),      //                         .readdatavalid
		.uav_byteenable         (sys_uart_avalon_jtag_slave_agent_m0_byteenable),         //                         .byteenable
		.uav_readdata           (sys_uart_avalon_jtag_slave_agent_m0_readdata),           //                         .readdata
		.uav_writedata          (sys_uart_avalon_jtag_slave_agent_m0_writedata),          //                         .writedata
		.uav_lock               (sys_uart_avalon_jtag_slave_agent_m0_lock),               //                         .lock
		.uav_debugaccess        (sys_uart_avalon_jtag_slave_agent_m0_debugaccess),        //                         .debugaccess
		.av_address             (sys_uart_avalon_jtag_slave_address),                     //      avalon_anti_slave_0.address
		.av_write               (sys_uart_avalon_jtag_slave_write),                       //                         .write
		.av_read                (sys_uart_avalon_jtag_slave_read),                        //                         .read
		.av_readdata            (sys_uart_avalon_jtag_slave_readdata),                    //                         .readdata
		.av_writedata           (sys_uart_avalon_jtag_slave_writedata),                   //                         .writedata
		.av_waitrequest         (sys_uart_avalon_jtag_slave_waitrequest),                 //                         .waitrequest
		.av_chipselect          (sys_uart_avalon_jtag_slave_chipselect),                  //                         .chipselect
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_byteenable          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (8),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (1),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_ethernet_control_port_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (sys_ethernet_control_port_agent_m0_address),             // avalon_universal_slave_0.address
		.uav_burstcount         (sys_ethernet_control_port_agent_m0_burstcount),          //                         .burstcount
		.uav_read               (sys_ethernet_control_port_agent_m0_read),                //                         .read
		.uav_write              (sys_ethernet_control_port_agent_m0_write),               //                         .write
		.uav_waitrequest        (sys_ethernet_control_port_agent_m0_waitrequest),         //                         .waitrequest
		.uav_readdatavalid      (sys_ethernet_control_port_agent_m0_readdatavalid),       //                         .readdatavalid
		.uav_byteenable         (sys_ethernet_control_port_agent_m0_byteenable),          //                         .byteenable
		.uav_readdata           (sys_ethernet_control_port_agent_m0_readdata),            //                         .readdata
		.uav_writedata          (sys_ethernet_control_port_agent_m0_writedata),           //                         .writedata
		.uav_lock               (sys_ethernet_control_port_agent_m0_lock),                //                         .lock
		.uav_debugaccess        (sys_ethernet_control_port_agent_m0_debugaccess),         //                         .debugaccess
		.av_address             (sys_ethernet_control_port_address),                      //      avalon_anti_slave_0.address
		.av_write               (sys_ethernet_control_port_write),                        //                         .write
		.av_read                (sys_ethernet_control_port_read),                         //                         .read
		.av_readdata            (sys_ethernet_control_port_readdata),                     //                         .readdata
		.av_writedata           (sys_ethernet_control_port_writedata),                    //                         .writedata
		.av_waitrequest         (sys_ethernet_control_port_waitrequest),                  //                         .waitrequest
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_byteenable          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_chipselect          (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_id_control_slave_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (sys_id_control_slave_agent_m0_address),                  // avalon_universal_slave_0.address
		.uav_burstcount         (sys_id_control_slave_agent_m0_burstcount),               //                         .burstcount
		.uav_read               (sys_id_control_slave_agent_m0_read),                     //                         .read
		.uav_write              (sys_id_control_slave_agent_m0_write),                    //                         .write
		.uav_waitrequest        (sys_id_control_slave_agent_m0_waitrequest),              //                         .waitrequest
		.uav_readdatavalid      (sys_id_control_slave_agent_m0_readdatavalid),            //                         .readdatavalid
		.uav_byteenable         (sys_id_control_slave_agent_m0_byteenable),               //                         .byteenable
		.uav_readdata           (sys_id_control_slave_agent_m0_readdata),                 //                         .readdata
		.uav_writedata          (sys_id_control_slave_agent_m0_writedata),                //                         .writedata
		.uav_lock               (sys_id_control_slave_agent_m0_lock),                     //                         .lock
		.uav_debugaccess        (sys_id_control_slave_agent_m0_debugaccess),              //                         .debugaccess
		.av_address             (sys_id_control_slave_address),                           //      avalon_anti_slave_0.address
		.av_readdata            (sys_id_control_slave_readdata),                          //                         .readdata
		.av_write               (),                                                       //              (terminated)
		.av_read                (),                                                       //              (terminated)
		.av_writedata           (),                                                       //              (terminated)
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_byteenable          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_waitrequest         (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_chipselect          (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_ethernet_dma_rx_csr_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (sys_ethernet_dma_rx_csr_agent_m0_address),               // avalon_universal_slave_0.address
		.uav_burstcount         (sys_ethernet_dma_rx_csr_agent_m0_burstcount),            //                         .burstcount
		.uav_read               (sys_ethernet_dma_rx_csr_agent_m0_read),                  //                         .read
		.uav_write              (sys_ethernet_dma_rx_csr_agent_m0_write),                 //                         .write
		.uav_waitrequest        (sys_ethernet_dma_rx_csr_agent_m0_waitrequest),           //                         .waitrequest
		.uav_readdatavalid      (sys_ethernet_dma_rx_csr_agent_m0_readdatavalid),         //                         .readdatavalid
		.uav_byteenable         (sys_ethernet_dma_rx_csr_agent_m0_byteenable),            //                         .byteenable
		.uav_readdata           (sys_ethernet_dma_rx_csr_agent_m0_readdata),              //                         .readdata
		.uav_writedata          (sys_ethernet_dma_rx_csr_agent_m0_writedata),             //                         .writedata
		.uav_lock               (sys_ethernet_dma_rx_csr_agent_m0_lock),                  //                         .lock
		.uav_debugaccess        (sys_ethernet_dma_rx_csr_agent_m0_debugaccess),           //                         .debugaccess
		.av_address             (sys_ethernet_dma_rx_csr_address),                        //      avalon_anti_slave_0.address
		.av_write               (sys_ethernet_dma_rx_csr_write),                          //                         .write
		.av_read                (sys_ethernet_dma_rx_csr_read),                           //                         .read
		.av_readdata            (sys_ethernet_dma_rx_csr_readdata),                       //                         .readdata
		.av_writedata           (sys_ethernet_dma_rx_csr_writedata),                      //                         .writedata
		.av_byteenable          (sys_ethernet_dma_rx_csr_byteenable),                     //                         .byteenable
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_waitrequest         (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_chipselect          (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_ethernet_dma_tx_csr_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (sys_ethernet_dma_tx_csr_agent_m0_address),               // avalon_universal_slave_0.address
		.uav_burstcount         (sys_ethernet_dma_tx_csr_agent_m0_burstcount),            //                         .burstcount
		.uav_read               (sys_ethernet_dma_tx_csr_agent_m0_read),                  //                         .read
		.uav_write              (sys_ethernet_dma_tx_csr_agent_m0_write),                 //                         .write
		.uav_waitrequest        (sys_ethernet_dma_tx_csr_agent_m0_waitrequest),           //                         .waitrequest
		.uav_readdatavalid      (sys_ethernet_dma_tx_csr_agent_m0_readdatavalid),         //                         .readdatavalid
		.uav_byteenable         (sys_ethernet_dma_tx_csr_agent_m0_byteenable),            //                         .byteenable
		.uav_readdata           (sys_ethernet_dma_tx_csr_agent_m0_readdata),              //                         .readdata
		.uav_writedata          (sys_ethernet_dma_tx_csr_agent_m0_writedata),             //                         .writedata
		.uav_lock               (sys_ethernet_dma_tx_csr_agent_m0_lock),                  //                         .lock
		.uav_debugaccess        (sys_ethernet_dma_tx_csr_agent_m0_debugaccess),           //                         .debugaccess
		.av_address             (sys_ethernet_dma_tx_csr_address),                        //      avalon_anti_slave_0.address
		.av_write               (sys_ethernet_dma_tx_csr_write),                          //                         .write
		.av_read                (sys_ethernet_dma_tx_csr_read),                           //                         .read
		.av_readdata            (sys_ethernet_dma_tx_csr_readdata),                       //                         .readdata
		.av_writedata           (sys_ethernet_dma_tx_csr_writedata),                      //                         .writedata
		.av_byteenable          (sys_ethernet_dma_tx_csr_byteenable),                     //                         .byteenable
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_waitrequest         (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_chipselect          (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (22),
		.AV_DATA_W                      (512),
		.UAV_DATA_W                     (512),
		.AV_BURSTCOUNT_W                (7),
		.AV_BYTEENABLE_W                (64),
		.UAV_BYTEENABLE_W               (64),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (13),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (1),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (64),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_ddr3_cntrl_ctrl_amm_0_translator (
		.clk                    (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //                      clk.clk
		.reset                  (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_address),                             // avalon_universal_slave_0.address
		.uav_burstcount         (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_burstcount),                          //                         .burstcount
		.uav_read               (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_read),                                //                         .read
		.uav_write              (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_write),                               //                         .write
		.uav_waitrequest        (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_waitrequest),                         //                         .waitrequest
		.uav_readdatavalid      (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_readdatavalid),                       //                         .readdatavalid
		.uav_byteenable         (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_byteenable),                          //                         .byteenable
		.uav_readdata           (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_readdata),                            //                         .readdata
		.uav_writedata          (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_writedata),                           //                         .writedata
		.uav_lock               (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_lock),                                //                         .lock
		.uav_debugaccess        (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_debugaccess),                         //                         .debugaccess
		.av_address             (sys_ddr3_cntrl_ctrl_amm_0_address),                                      //      avalon_anti_slave_0.address
		.av_write               (sys_ddr3_cntrl_ctrl_amm_0_write),                                        //                         .write
		.av_read                (sys_ddr3_cntrl_ctrl_amm_0_read),                                         //                         .read
		.av_readdata            (sys_ddr3_cntrl_ctrl_amm_0_readdata),                                     //                         .readdata
		.av_writedata           (sys_ddr3_cntrl_ctrl_amm_0_writedata),                                    //                         .writedata
		.av_burstcount          (sys_ddr3_cntrl_ctrl_amm_0_burstcount),                                   //                         .burstcount
		.av_byteenable          (sys_ddr3_cntrl_ctrl_amm_0_byteenable),                                   //                         .byteenable
		.av_readdatavalid       (sys_ddr3_cntrl_ctrl_amm_0_readdatavalid),                                //                         .readdatavalid
		.av_waitrequest         (sys_ddr3_cntrl_ctrl_amm_0_waitrequest),                                  //                         .waitrequest
		.av_begintransfer       (),                                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                                       //              (terminated)
		.av_writebyteenable     (),                                                                       //              (terminated)
		.av_lock                (),                                                                       //              (terminated)
		.av_chipselect          (),                                                                       //              (terminated)
		.av_clken               (),                                                                       //              (terminated)
		.uav_clken              (1'b0),                                                                   //              (terminated)
		.av_debugaccess         (),                                                                       //              (terminated)
		.av_outputenable        (),                                                                       //              (terminated)
		.uav_response           (),                                                                       //              (terminated)
		.av_response            (2'b00),                                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (9),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_cpu_debug_mem_slave_translator (
		.clk                    (sys_clk_clk_clk),                                //                      clk.clk
		.reset                  (sys_cpu_reset_reset_bridge_in_reset_reset),      //                    reset.reset
		.uav_address            (sys_cpu_debug_mem_slave_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (sys_cpu_debug_mem_slave_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (sys_cpu_debug_mem_slave_agent_m0_read),          //                         .read
		.uav_write              (sys_cpu_debug_mem_slave_agent_m0_write),         //                         .write
		.uav_waitrequest        (sys_cpu_debug_mem_slave_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (sys_cpu_debug_mem_slave_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (sys_cpu_debug_mem_slave_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (sys_cpu_debug_mem_slave_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (sys_cpu_debug_mem_slave_agent_m0_writedata),     //                         .writedata
		.uav_lock               (sys_cpu_debug_mem_slave_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (sys_cpu_debug_mem_slave_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (sys_cpu_debug_mem_slave_address),                //      avalon_anti_slave_0.address
		.av_write               (sys_cpu_debug_mem_slave_write),                  //                         .write
		.av_read                (sys_cpu_debug_mem_slave_read),                   //                         .read
		.av_readdata            (sys_cpu_debug_mem_slave_readdata),               //                         .readdata
		.av_writedata           (sys_cpu_debug_mem_slave_writedata),              //                         .writedata
		.av_byteenable          (sys_cpu_debug_mem_slave_byteenable),             //                         .byteenable
		.av_waitrequest         (sys_cpu_debug_mem_slave_waitrequest),            //                         .waitrequest
		.av_debugaccess         (sys_cpu_debug_mem_slave_debugaccess),            //                         .debugaccess
		.av_begintransfer       (),                                               //              (terminated)
		.av_beginbursttransfer  (),                                               //              (terminated)
		.av_burstcount          (),                                               //              (terminated)
		.av_readdatavalid       (1'b0),                                           //              (terminated)
		.av_writebyteenable     (),                                               //              (terminated)
		.av_lock                (),                                               //              (terminated)
		.av_chipselect          (),                                               //              (terminated)
		.av_clken               (),                                               //              (terminated)
		.uav_clken              (1'b0),                                           //              (terminated)
		.av_outputenable        (),                                               //              (terminated)
		.uav_response           (),                                               //              (terminated)
		.av_response            (2'b00),                                          //              (terminated)
		.uav_writeresponsevalid (),                                               //              (terminated)
		.av_writeresponsevalid  (1'b0)                                            //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (256),
		.UAV_DATA_W                     (256),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (32),
		.UAV_BYTEENABLE_W               (32),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (6),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (32),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_ethernet_dma_rx_descriptor_slave_translator (
		.clk                    (sys_clk_clk_clk),                                                                                                                                                                                                                                                       //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                                                                                                                                                                                                                //                    reset.reset
		.uav_address            (sys_ethernet_dma_rx_descriptor_slave_agent_m0_address),                                                                                                                                                                                                                 // avalon_universal_slave_0.address
		.uav_burstcount         (sys_ethernet_dma_rx_descriptor_slave_agent_m0_burstcount),                                                                                                                                                                                                              //                         .burstcount
		.uav_read               (sys_ethernet_dma_rx_descriptor_slave_agent_m0_read),                                                                                                                                                                                                                    //                         .read
		.uav_write              (sys_ethernet_dma_rx_descriptor_slave_agent_m0_write),                                                                                                                                                                                                                   //                         .write
		.uav_waitrequest        (sys_ethernet_dma_rx_descriptor_slave_agent_m0_waitrequest),                                                                                                                                                                                                             //                         .waitrequest
		.uav_readdatavalid      (sys_ethernet_dma_rx_descriptor_slave_agent_m0_readdatavalid),                                                                                                                                                                                                           //                         .readdatavalid
		.uav_byteenable         (sys_ethernet_dma_rx_descriptor_slave_agent_m0_byteenable),                                                                                                                                                                                                              //                         .byteenable
		.uav_readdata           (sys_ethernet_dma_rx_descriptor_slave_agent_m0_readdata),                                                                                                                                                                                                                //                         .readdata
		.uav_writedata          (sys_ethernet_dma_rx_descriptor_slave_agent_m0_writedata),                                                                                                                                                                                                               //                         .writedata
		.uav_lock               (sys_ethernet_dma_rx_descriptor_slave_agent_m0_lock),                                                                                                                                                                                                                    //                         .lock
		.uav_debugaccess        (sys_ethernet_dma_rx_descriptor_slave_agent_m0_debugaccess),                                                                                                                                                                                                             //                         .debugaccess
		.av_write               (sys_ethernet_dma_rx_descriptor_slave_write),                                                                                                                                                                                                                            //      avalon_anti_slave_0.write
		.av_writedata           (sys_ethernet_dma_rx_descriptor_slave_writedata),                                                                                                                                                                                                                        //                         .writedata
		.av_byteenable          (sys_ethernet_dma_rx_descriptor_slave_byteenable),                                                                                                                                                                                                                       //                         .byteenable
		.av_waitrequest         (sys_ethernet_dma_rx_descriptor_slave_waitrequest),                                                                                                                                                                                                                      //                         .waitrequest
		.av_address             (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_read                (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_readdata            (256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011110101011011101111010101101), //              (terminated)
		.av_begintransfer       (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_beginbursttransfer  (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_burstcount          (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_readdatavalid       (1'b0),                                                                                                                                                                                                                                                                  //              (terminated)
		.av_writebyteenable     (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_lock                (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_chipselect          (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_clken               (),                                                                                                                                                                                                                                                                      //              (terminated)
		.uav_clken              (1'b0),                                                                                                                                                                                                                                                                  //              (terminated)
		.av_debugaccess         (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_outputenable        (),                                                                                                                                                                                                                                                                      //              (terminated)
		.uav_response           (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_response            (2'b00),                                                                                                                                                                                                                                                                 //              (terminated)
		.uav_writeresponsevalid (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                                                                                                                                                                                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (256),
		.UAV_DATA_W                     (256),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (32),
		.UAV_BYTEENABLE_W               (32),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (6),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (32),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_ethernet_dma_tx_descriptor_slave_translator (
		.clk                    (sys_clk_clk_clk),                                                                                                                                                                                                                                                       //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                                                                                                                                                                                                                //                    reset.reset
		.uav_address            (sys_ethernet_dma_tx_descriptor_slave_agent_m0_address),                                                                                                                                                                                                                 // avalon_universal_slave_0.address
		.uav_burstcount         (sys_ethernet_dma_tx_descriptor_slave_agent_m0_burstcount),                                                                                                                                                                                                              //                         .burstcount
		.uav_read               (sys_ethernet_dma_tx_descriptor_slave_agent_m0_read),                                                                                                                                                                                                                    //                         .read
		.uav_write              (sys_ethernet_dma_tx_descriptor_slave_agent_m0_write),                                                                                                                                                                                                                   //                         .write
		.uav_waitrequest        (sys_ethernet_dma_tx_descriptor_slave_agent_m0_waitrequest),                                                                                                                                                                                                             //                         .waitrequest
		.uav_readdatavalid      (sys_ethernet_dma_tx_descriptor_slave_agent_m0_readdatavalid),                                                                                                                                                                                                           //                         .readdatavalid
		.uav_byteenable         (sys_ethernet_dma_tx_descriptor_slave_agent_m0_byteenable),                                                                                                                                                                                                              //                         .byteenable
		.uav_readdata           (sys_ethernet_dma_tx_descriptor_slave_agent_m0_readdata),                                                                                                                                                                                                                //                         .readdata
		.uav_writedata          (sys_ethernet_dma_tx_descriptor_slave_agent_m0_writedata),                                                                                                                                                                                                               //                         .writedata
		.uav_lock               (sys_ethernet_dma_tx_descriptor_slave_agent_m0_lock),                                                                                                                                                                                                                    //                         .lock
		.uav_debugaccess        (sys_ethernet_dma_tx_descriptor_slave_agent_m0_debugaccess),                                                                                                                                                                                                             //                         .debugaccess
		.av_write               (sys_ethernet_dma_tx_descriptor_slave_write),                                                                                                                                                                                                                            //      avalon_anti_slave_0.write
		.av_writedata           (sys_ethernet_dma_tx_descriptor_slave_writedata),                                                                                                                                                                                                                        //                         .writedata
		.av_byteenable          (sys_ethernet_dma_tx_descriptor_slave_byteenable),                                                                                                                                                                                                                       //                         .byteenable
		.av_waitrequest         (sys_ethernet_dma_tx_descriptor_slave_waitrequest),                                                                                                                                                                                                                      //                         .waitrequest
		.av_address             (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_read                (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_readdata            (256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011011110101011011101111010101101), //              (terminated)
		.av_begintransfer       (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_beginbursttransfer  (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_burstcount          (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_readdatavalid       (1'b0),                                                                                                                                                                                                                                                                  //              (terminated)
		.av_writebyteenable     (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_lock                (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_chipselect          (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_clken               (),                                                                                                                                                                                                                                                                      //              (terminated)
		.uav_clken              (1'b0),                                                                                                                                                                                                                                                                  //              (terminated)
		.av_debugaccess         (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_outputenable        (),                                                                                                                                                                                                                                                                      //              (terminated)
		.uav_response           (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_response            (2'b00),                                                                                                                                                                                                                                                                 //              (terminated)
		.uav_writeresponsevalid (),                                                                                                                                                                                                                                                                      //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                                                                                                                                                                                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (10),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) ad9144_jesd204_lane_pll_reconfig_translator (
		.clk                    (sys_clk_clk_clk),                                         //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),  //                    reset.reset
		.uav_address            (ad9144_jesd204_lane_pll_reconfig_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (ad9144_jesd204_lane_pll_reconfig_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (ad9144_jesd204_lane_pll_reconfig_agent_m0_read),          //                         .read
		.uav_write              (ad9144_jesd204_lane_pll_reconfig_agent_m0_write),         //                         .write
		.uav_waitrequest        (ad9144_jesd204_lane_pll_reconfig_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (ad9144_jesd204_lane_pll_reconfig_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (ad9144_jesd204_lane_pll_reconfig_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (ad9144_jesd204_lane_pll_reconfig_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (ad9144_jesd204_lane_pll_reconfig_agent_m0_writedata),     //                         .writedata
		.uav_lock               (ad9144_jesd204_lane_pll_reconfig_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (ad9144_jesd204_lane_pll_reconfig_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (ad9144_jesd204_lane_pll_reconfig_address),                //      avalon_anti_slave_0.address
		.av_write               (ad9144_jesd204_lane_pll_reconfig_write),                  //                         .write
		.av_read                (ad9144_jesd204_lane_pll_reconfig_read),                   //                         .read
		.av_readdata            (ad9144_jesd204_lane_pll_reconfig_readdata),               //                         .readdata
		.av_writedata           (ad9144_jesd204_lane_pll_reconfig_writedata),              //                         .writedata
		.av_waitrequest         (ad9144_jesd204_lane_pll_reconfig_waitrequest),            //                         .waitrequest
		.av_begintransfer       (),                                                        //              (terminated)
		.av_beginbursttransfer  (),                                                        //              (terminated)
		.av_burstcount          (),                                                        //              (terminated)
		.av_byteenable          (),                                                        //              (terminated)
		.av_readdatavalid       (1'b0),                                                    //              (terminated)
		.av_writebyteenable     (),                                                        //              (terminated)
		.av_lock                (),                                                        //              (terminated)
		.av_chipselect          (),                                                        //              (terminated)
		.av_clken               (),                                                        //              (terminated)
		.uav_clken              (1'b0),                                                    //              (terminated)
		.av_debugaccess         (),                                                        //              (terminated)
		.av_outputenable        (),                                                        //              (terminated)
		.uav_response           (),                                                        //              (terminated)
		.av_response            (2'b00),                                                   //              (terminated)
		.uav_writeresponsevalid (),                                                        //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                     //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (10),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) ad9144_jesd204_link_pll_reconfig_translator (
		.clk                    (sys_clk_clk_clk),                                         //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),  //                    reset.reset
		.uav_address            (ad9144_jesd204_link_pll_reconfig_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (ad9144_jesd204_link_pll_reconfig_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (ad9144_jesd204_link_pll_reconfig_agent_m0_read),          //                         .read
		.uav_write              (ad9144_jesd204_link_pll_reconfig_agent_m0_write),         //                         .write
		.uav_waitrequest        (ad9144_jesd204_link_pll_reconfig_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (ad9144_jesd204_link_pll_reconfig_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (ad9144_jesd204_link_pll_reconfig_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (ad9144_jesd204_link_pll_reconfig_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (ad9144_jesd204_link_pll_reconfig_agent_m0_writedata),     //                         .writedata
		.uav_lock               (ad9144_jesd204_link_pll_reconfig_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (ad9144_jesd204_link_pll_reconfig_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (ad9144_jesd204_link_pll_reconfig_address),                //      avalon_anti_slave_0.address
		.av_write               (ad9144_jesd204_link_pll_reconfig_write),                  //                         .write
		.av_read                (ad9144_jesd204_link_pll_reconfig_read),                   //                         .read
		.av_readdata            (ad9144_jesd204_link_pll_reconfig_readdata),               //                         .readdata
		.av_writedata           (ad9144_jesd204_link_pll_reconfig_writedata),              //                         .writedata
		.av_waitrequest         (ad9144_jesd204_link_pll_reconfig_waitrequest),            //                         .waitrequest
		.av_begintransfer       (),                                                        //              (terminated)
		.av_beginbursttransfer  (),                                                        //              (terminated)
		.av_burstcount          (),                                                        //              (terminated)
		.av_byteenable          (),                                                        //              (terminated)
		.av_readdatavalid       (1'b0),                                                    //              (terminated)
		.av_writebyteenable     (),                                                        //              (terminated)
		.av_lock                (),                                                        //              (terminated)
		.av_chipselect          (),                                                        //              (terminated)
		.av_clken               (),                                                        //              (terminated)
		.uav_clken              (1'b0),                                                    //              (terminated)
		.av_debugaccess         (),                                                        //              (terminated)
		.av_outputenable        (),                                                        //              (terminated)
		.uav_response           (),                                                        //              (terminated)
		.av_response            (2'b00),                                                   //              (terminated)
		.uav_writeresponsevalid (),                                                        //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                     //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (10),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) ad9680_jesd204_link_pll_reconfig_translator (
		.clk                    (sys_clk_clk_clk),                                         //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),  //                    reset.reset
		.uav_address            (ad9680_jesd204_link_pll_reconfig_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount         (ad9680_jesd204_link_pll_reconfig_agent_m0_burstcount),    //                         .burstcount
		.uav_read               (ad9680_jesd204_link_pll_reconfig_agent_m0_read),          //                         .read
		.uav_write              (ad9680_jesd204_link_pll_reconfig_agent_m0_write),         //                         .write
		.uav_waitrequest        (ad9680_jesd204_link_pll_reconfig_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid      (ad9680_jesd204_link_pll_reconfig_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable         (ad9680_jesd204_link_pll_reconfig_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata           (ad9680_jesd204_link_pll_reconfig_agent_m0_readdata),      //                         .readdata
		.uav_writedata          (ad9680_jesd204_link_pll_reconfig_agent_m0_writedata),     //                         .writedata
		.uav_lock               (ad9680_jesd204_link_pll_reconfig_agent_m0_lock),          //                         .lock
		.uav_debugaccess        (ad9680_jesd204_link_pll_reconfig_agent_m0_debugaccess),   //                         .debugaccess
		.av_address             (ad9680_jesd204_link_pll_reconfig_address),                //      avalon_anti_slave_0.address
		.av_write               (ad9680_jesd204_link_pll_reconfig_write),                  //                         .write
		.av_read                (ad9680_jesd204_link_pll_reconfig_read),                   //                         .read
		.av_readdata            (ad9680_jesd204_link_pll_reconfig_readdata),               //                         .readdata
		.av_writedata           (ad9680_jesd204_link_pll_reconfig_writedata),              //                         .writedata
		.av_waitrequest         (ad9680_jesd204_link_pll_reconfig_waitrequest),            //                         .waitrequest
		.av_begintransfer       (),                                                        //              (terminated)
		.av_beginbursttransfer  (),                                                        //              (terminated)
		.av_burstcount          (),                                                        //              (terminated)
		.av_byteenable          (),                                                        //              (terminated)
		.av_readdatavalid       (1'b0),                                                    //              (terminated)
		.av_writebyteenable     (),                                                        //              (terminated)
		.av_lock                (),                                                        //              (terminated)
		.av_chipselect          (),                                                        //              (terminated)
		.av_clken               (),                                                        //              (terminated)
		.uav_clken              (1'b0),                                                    //              (terminated)
		.av_debugaccess         (),                                                        //              (terminated)
		.av_outputenable        (),                                                        //              (terminated)
		.uav_response           (),                                                        //              (terminated)
		.av_response            (2'b00),                                                   //              (terminated)
		.uav_writeresponsevalid (),                                                        //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                     //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (10),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) avl_adxcfg_0_rcfg_s0_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (avl_adxcfg_0_rcfg_s0_agent_m0_address),                  // avalon_universal_slave_0.address
		.uav_burstcount         (avl_adxcfg_0_rcfg_s0_agent_m0_burstcount),               //                         .burstcount
		.uav_read               (avl_adxcfg_0_rcfg_s0_agent_m0_read),                     //                         .read
		.uav_write              (avl_adxcfg_0_rcfg_s0_agent_m0_write),                    //                         .write
		.uav_waitrequest        (avl_adxcfg_0_rcfg_s0_agent_m0_waitrequest),              //                         .waitrequest
		.uav_readdatavalid      (avl_adxcfg_0_rcfg_s0_agent_m0_readdatavalid),            //                         .readdatavalid
		.uav_byteenable         (avl_adxcfg_0_rcfg_s0_agent_m0_byteenable),               //                         .byteenable
		.uav_readdata           (avl_adxcfg_0_rcfg_s0_agent_m0_readdata),                 //                         .readdata
		.uav_writedata          (avl_adxcfg_0_rcfg_s0_agent_m0_writedata),                //                         .writedata
		.uav_lock               (avl_adxcfg_0_rcfg_s0_agent_m0_lock),                     //                         .lock
		.uav_debugaccess        (avl_adxcfg_0_rcfg_s0_agent_m0_debugaccess),              //                         .debugaccess
		.av_address             (avl_adxcfg_0_rcfg_s0_address),                           //      avalon_anti_slave_0.address
		.av_write               (avl_adxcfg_0_rcfg_s0_write),                             //                         .write
		.av_read                (avl_adxcfg_0_rcfg_s0_read),                              //                         .read
		.av_readdata            (avl_adxcfg_0_rcfg_s0_readdata),                          //                         .readdata
		.av_writedata           (avl_adxcfg_0_rcfg_s0_writedata),                         //                         .writedata
		.av_waitrequest         (avl_adxcfg_0_rcfg_s0_waitrequest),                       //                         .waitrequest
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_byteenable          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_chipselect          (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (10),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) avl_adxcfg_1_rcfg_s0_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (avl_adxcfg_1_rcfg_s0_agent_m0_address),                  // avalon_universal_slave_0.address
		.uav_burstcount         (avl_adxcfg_1_rcfg_s0_agent_m0_burstcount),               //                         .burstcount
		.uav_read               (avl_adxcfg_1_rcfg_s0_agent_m0_read),                     //                         .read
		.uav_write              (avl_adxcfg_1_rcfg_s0_agent_m0_write),                    //                         .write
		.uav_waitrequest        (avl_adxcfg_1_rcfg_s0_agent_m0_waitrequest),              //                         .waitrequest
		.uav_readdatavalid      (avl_adxcfg_1_rcfg_s0_agent_m0_readdatavalid),            //                         .readdatavalid
		.uav_byteenable         (avl_adxcfg_1_rcfg_s0_agent_m0_byteenable),               //                         .byteenable
		.uav_readdata           (avl_adxcfg_1_rcfg_s0_agent_m0_readdata),                 //                         .readdata
		.uav_writedata          (avl_adxcfg_1_rcfg_s0_agent_m0_writedata),                //                         .writedata
		.uav_lock               (avl_adxcfg_1_rcfg_s0_agent_m0_lock),                     //                         .lock
		.uav_debugaccess        (avl_adxcfg_1_rcfg_s0_agent_m0_debugaccess),              //                         .debugaccess
		.av_address             (avl_adxcfg_1_rcfg_s0_address),                           //      avalon_anti_slave_0.address
		.av_write               (avl_adxcfg_1_rcfg_s0_write),                             //                         .write
		.av_read                (avl_adxcfg_1_rcfg_s0_read),                              //                         .read
		.av_readdata            (avl_adxcfg_1_rcfg_s0_readdata),                          //                         .readdata
		.av_writedata           (avl_adxcfg_1_rcfg_s0_writedata),                         //                         .writedata
		.av_waitrequest         (avl_adxcfg_1_rcfg_s0_waitrequest),                       //                         .waitrequest
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_byteenable          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_chipselect          (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (10),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) avl_adxcfg_2_rcfg_s0_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (avl_adxcfg_2_rcfg_s0_agent_m0_address),                  // avalon_universal_slave_0.address
		.uav_burstcount         (avl_adxcfg_2_rcfg_s0_agent_m0_burstcount),               //                         .burstcount
		.uav_read               (avl_adxcfg_2_rcfg_s0_agent_m0_read),                     //                         .read
		.uav_write              (avl_adxcfg_2_rcfg_s0_agent_m0_write),                    //                         .write
		.uav_waitrequest        (avl_adxcfg_2_rcfg_s0_agent_m0_waitrequest),              //                         .waitrequest
		.uav_readdatavalid      (avl_adxcfg_2_rcfg_s0_agent_m0_readdatavalid),            //                         .readdatavalid
		.uav_byteenable         (avl_adxcfg_2_rcfg_s0_agent_m0_byteenable),               //                         .byteenable
		.uav_readdata           (avl_adxcfg_2_rcfg_s0_agent_m0_readdata),                 //                         .readdata
		.uav_writedata          (avl_adxcfg_2_rcfg_s0_agent_m0_writedata),                //                         .writedata
		.uav_lock               (avl_adxcfg_2_rcfg_s0_agent_m0_lock),                     //                         .lock
		.uav_debugaccess        (avl_adxcfg_2_rcfg_s0_agent_m0_debugaccess),              //                         .debugaccess
		.av_address             (avl_adxcfg_2_rcfg_s0_address),                           //      avalon_anti_slave_0.address
		.av_write               (avl_adxcfg_2_rcfg_s0_write),                             //                         .write
		.av_read                (avl_adxcfg_2_rcfg_s0_read),                              //                         .read
		.av_readdata            (avl_adxcfg_2_rcfg_s0_readdata),                          //                         .readdata
		.av_writedata           (avl_adxcfg_2_rcfg_s0_writedata),                         //                         .writedata
		.av_waitrequest         (avl_adxcfg_2_rcfg_s0_waitrequest),                       //                         .waitrequest
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_byteenable          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_chipselect          (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (10),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) avl_adxcfg_3_rcfg_s0_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (avl_adxcfg_3_rcfg_s0_agent_m0_address),                  // avalon_universal_slave_0.address
		.uav_burstcount         (avl_adxcfg_3_rcfg_s0_agent_m0_burstcount),               //                         .burstcount
		.uav_read               (avl_adxcfg_3_rcfg_s0_agent_m0_read),                     //                         .read
		.uav_write              (avl_adxcfg_3_rcfg_s0_agent_m0_write),                    //                         .write
		.uav_waitrequest        (avl_adxcfg_3_rcfg_s0_agent_m0_waitrequest),              //                         .waitrequest
		.uav_readdatavalid      (avl_adxcfg_3_rcfg_s0_agent_m0_readdatavalid),            //                         .readdatavalid
		.uav_byteenable         (avl_adxcfg_3_rcfg_s0_agent_m0_byteenable),               //                         .byteenable
		.uav_readdata           (avl_adxcfg_3_rcfg_s0_agent_m0_readdata),                 //                         .readdata
		.uav_writedata          (avl_adxcfg_3_rcfg_s0_agent_m0_writedata),                //                         .writedata
		.uav_lock               (avl_adxcfg_3_rcfg_s0_agent_m0_lock),                     //                         .lock
		.uav_debugaccess        (avl_adxcfg_3_rcfg_s0_agent_m0_debugaccess),              //                         .debugaccess
		.av_address             (avl_adxcfg_3_rcfg_s0_address),                           //      avalon_anti_slave_0.address
		.av_write               (avl_adxcfg_3_rcfg_s0_write),                             //                         .write
		.av_read                (avl_adxcfg_3_rcfg_s0_read),                              //                         .read
		.av_readdata            (avl_adxcfg_3_rcfg_s0_readdata),                          //                         .readdata
		.av_writedata           (avl_adxcfg_3_rcfg_s0_writedata),                         //                         .writedata
		.av_waitrequest         (avl_adxcfg_3_rcfg_s0_waitrequest),                       //                         .waitrequest
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_byteenable          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_chipselect          (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (10),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) avl_adxcfg_0_rcfg_s1_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (avl_adxcfg_0_rcfg_s1_agent_m0_address),                  // avalon_universal_slave_0.address
		.uav_burstcount         (avl_adxcfg_0_rcfg_s1_agent_m0_burstcount),               //                         .burstcount
		.uav_read               (avl_adxcfg_0_rcfg_s1_agent_m0_read),                     //                         .read
		.uav_write              (avl_adxcfg_0_rcfg_s1_agent_m0_write),                    //                         .write
		.uav_waitrequest        (avl_adxcfg_0_rcfg_s1_agent_m0_waitrequest),              //                         .waitrequest
		.uav_readdatavalid      (avl_adxcfg_0_rcfg_s1_agent_m0_readdatavalid),            //                         .readdatavalid
		.uav_byteenable         (avl_adxcfg_0_rcfg_s1_agent_m0_byteenable),               //                         .byteenable
		.uav_readdata           (avl_adxcfg_0_rcfg_s1_agent_m0_readdata),                 //                         .readdata
		.uav_writedata          (avl_adxcfg_0_rcfg_s1_agent_m0_writedata),                //                         .writedata
		.uav_lock               (avl_adxcfg_0_rcfg_s1_agent_m0_lock),                     //                         .lock
		.uav_debugaccess        (avl_adxcfg_0_rcfg_s1_agent_m0_debugaccess),              //                         .debugaccess
		.av_address             (avl_adxcfg_0_rcfg_s1_address),                           //      avalon_anti_slave_0.address
		.av_write               (avl_adxcfg_0_rcfg_s1_write),                             //                         .write
		.av_read                (avl_adxcfg_0_rcfg_s1_read),                              //                         .read
		.av_readdata            (avl_adxcfg_0_rcfg_s1_readdata),                          //                         .readdata
		.av_writedata           (avl_adxcfg_0_rcfg_s1_writedata),                         //                         .writedata
		.av_waitrequest         (avl_adxcfg_0_rcfg_s1_waitrequest),                       //                         .waitrequest
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_byteenable          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_chipselect          (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (10),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) avl_adxcfg_1_rcfg_s1_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (avl_adxcfg_1_rcfg_s1_agent_m0_address),                  // avalon_universal_slave_0.address
		.uav_burstcount         (avl_adxcfg_1_rcfg_s1_agent_m0_burstcount),               //                         .burstcount
		.uav_read               (avl_adxcfg_1_rcfg_s1_agent_m0_read),                     //                         .read
		.uav_write              (avl_adxcfg_1_rcfg_s1_agent_m0_write),                    //                         .write
		.uav_waitrequest        (avl_adxcfg_1_rcfg_s1_agent_m0_waitrequest),              //                         .waitrequest
		.uav_readdatavalid      (avl_adxcfg_1_rcfg_s1_agent_m0_readdatavalid),            //                         .readdatavalid
		.uav_byteenable         (avl_adxcfg_1_rcfg_s1_agent_m0_byteenable),               //                         .byteenable
		.uav_readdata           (avl_adxcfg_1_rcfg_s1_agent_m0_readdata),                 //                         .readdata
		.uav_writedata          (avl_adxcfg_1_rcfg_s1_agent_m0_writedata),                //                         .writedata
		.uav_lock               (avl_adxcfg_1_rcfg_s1_agent_m0_lock),                     //                         .lock
		.uav_debugaccess        (avl_adxcfg_1_rcfg_s1_agent_m0_debugaccess),              //                         .debugaccess
		.av_address             (avl_adxcfg_1_rcfg_s1_address),                           //      avalon_anti_slave_0.address
		.av_write               (avl_adxcfg_1_rcfg_s1_write),                             //                         .write
		.av_read                (avl_adxcfg_1_rcfg_s1_read),                              //                         .read
		.av_readdata            (avl_adxcfg_1_rcfg_s1_readdata),                          //                         .readdata
		.av_writedata           (avl_adxcfg_1_rcfg_s1_writedata),                         //                         .writedata
		.av_waitrequest         (avl_adxcfg_1_rcfg_s1_waitrequest),                       //                         .waitrequest
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_byteenable          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_chipselect          (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (10),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) avl_adxcfg_2_rcfg_s1_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (avl_adxcfg_2_rcfg_s1_agent_m0_address),                  // avalon_universal_slave_0.address
		.uav_burstcount         (avl_adxcfg_2_rcfg_s1_agent_m0_burstcount),               //                         .burstcount
		.uav_read               (avl_adxcfg_2_rcfg_s1_agent_m0_read),                     //                         .read
		.uav_write              (avl_adxcfg_2_rcfg_s1_agent_m0_write),                    //                         .write
		.uav_waitrequest        (avl_adxcfg_2_rcfg_s1_agent_m0_waitrequest),              //                         .waitrequest
		.uav_readdatavalid      (avl_adxcfg_2_rcfg_s1_agent_m0_readdatavalid),            //                         .readdatavalid
		.uav_byteenable         (avl_adxcfg_2_rcfg_s1_agent_m0_byteenable),               //                         .byteenable
		.uav_readdata           (avl_adxcfg_2_rcfg_s1_agent_m0_readdata),                 //                         .readdata
		.uav_writedata          (avl_adxcfg_2_rcfg_s1_agent_m0_writedata),                //                         .writedata
		.uav_lock               (avl_adxcfg_2_rcfg_s1_agent_m0_lock),                     //                         .lock
		.uav_debugaccess        (avl_adxcfg_2_rcfg_s1_agent_m0_debugaccess),              //                         .debugaccess
		.av_address             (avl_adxcfg_2_rcfg_s1_address),                           //      avalon_anti_slave_0.address
		.av_write               (avl_adxcfg_2_rcfg_s1_write),                             //                         .write
		.av_read                (avl_adxcfg_2_rcfg_s1_read),                              //                         .read
		.av_readdata            (avl_adxcfg_2_rcfg_s1_readdata),                          //                         .readdata
		.av_writedata           (avl_adxcfg_2_rcfg_s1_writedata),                         //                         .writedata
		.av_waitrequest         (avl_adxcfg_2_rcfg_s1_waitrequest),                       //                         .waitrequest
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_byteenable          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_chipselect          (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (10),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) avl_adxcfg_3_rcfg_s1_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (avl_adxcfg_3_rcfg_s1_agent_m0_address),                  // avalon_universal_slave_0.address
		.uav_burstcount         (avl_adxcfg_3_rcfg_s1_agent_m0_burstcount),               //                         .burstcount
		.uav_read               (avl_adxcfg_3_rcfg_s1_agent_m0_read),                     //                         .read
		.uav_write              (avl_adxcfg_3_rcfg_s1_agent_m0_write),                    //                         .write
		.uav_waitrequest        (avl_adxcfg_3_rcfg_s1_agent_m0_waitrequest),              //                         .waitrequest
		.uav_readdatavalid      (avl_adxcfg_3_rcfg_s1_agent_m0_readdatavalid),            //                         .readdatavalid
		.uav_byteenable         (avl_adxcfg_3_rcfg_s1_agent_m0_byteenable),               //                         .byteenable
		.uav_readdata           (avl_adxcfg_3_rcfg_s1_agent_m0_readdata),                 //                         .readdata
		.uav_writedata          (avl_adxcfg_3_rcfg_s1_agent_m0_writedata),                //                         .writedata
		.uav_lock               (avl_adxcfg_3_rcfg_s1_agent_m0_lock),                     //                         .lock
		.uav_debugaccess        (avl_adxcfg_3_rcfg_s1_agent_m0_debugaccess),              //                         .debugaccess
		.av_address             (avl_adxcfg_3_rcfg_s1_address),                           //      avalon_anti_slave_0.address
		.av_write               (avl_adxcfg_3_rcfg_s1_write),                             //                         .write
		.av_read                (avl_adxcfg_3_rcfg_s1_read),                              //                         .read
		.av_readdata            (avl_adxcfg_3_rcfg_s1_readdata),                          //                         .readdata
		.av_writedata           (avl_adxcfg_3_rcfg_s1_writedata),                         //                         .writedata
		.av_waitrequest         (avl_adxcfg_3_rcfg_s1_waitrequest),                       //                         .waitrequest
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_byteenable          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_chipselect          (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_ethernet_dma_rx_response_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (sys_ethernet_dma_rx_response_agent_m0_address),          // avalon_universal_slave_0.address
		.uav_burstcount         (sys_ethernet_dma_rx_response_agent_m0_burstcount),       //                         .burstcount
		.uav_read               (sys_ethernet_dma_rx_response_agent_m0_read),             //                         .read
		.uav_write              (sys_ethernet_dma_rx_response_agent_m0_write),            //                         .write
		.uav_waitrequest        (sys_ethernet_dma_rx_response_agent_m0_waitrequest),      //                         .waitrequest
		.uav_readdatavalid      (sys_ethernet_dma_rx_response_agent_m0_readdatavalid),    //                         .readdatavalid
		.uav_byteenable         (sys_ethernet_dma_rx_response_agent_m0_byteenable),       //                         .byteenable
		.uav_readdata           (sys_ethernet_dma_rx_response_agent_m0_readdata),         //                         .readdata
		.uav_writedata          (sys_ethernet_dma_rx_response_agent_m0_writedata),        //                         .writedata
		.uav_lock               (sys_ethernet_dma_rx_response_agent_m0_lock),             //                         .lock
		.uav_debugaccess        (sys_ethernet_dma_rx_response_agent_m0_debugaccess),      //                         .debugaccess
		.av_address             (sys_ethernet_dma_rx_response_address),                   //      avalon_anti_slave_0.address
		.av_read                (sys_ethernet_dma_rx_response_read),                      //                         .read
		.av_readdata            (sys_ethernet_dma_rx_response_readdata),                  //                         .readdata
		.av_byteenable          (sys_ethernet_dma_rx_response_byteenable),                //                         .byteenable
		.av_waitrequest         (sys_ethernet_dma_rx_response_waitrequest),               //                         .waitrequest
		.av_write               (),                                                       //              (terminated)
		.av_writedata           (),                                                       //              (terminated)
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_chipselect          (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (16),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_int_mem_s1_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (sys_int_mem_s1_agent_m0_address),                        // avalon_universal_slave_0.address
		.uav_burstcount         (sys_int_mem_s1_agent_m0_burstcount),                     //                         .burstcount
		.uav_read               (sys_int_mem_s1_agent_m0_read),                           //                         .read
		.uav_write              (sys_int_mem_s1_agent_m0_write),                          //                         .write
		.uav_waitrequest        (sys_int_mem_s1_agent_m0_waitrequest),                    //                         .waitrequest
		.uav_readdatavalid      (sys_int_mem_s1_agent_m0_readdatavalid),                  //                         .readdatavalid
		.uav_byteenable         (sys_int_mem_s1_agent_m0_byteenable),                     //                         .byteenable
		.uav_readdata           (sys_int_mem_s1_agent_m0_readdata),                       //                         .readdata
		.uav_writedata          (sys_int_mem_s1_agent_m0_writedata),                      //                         .writedata
		.uav_lock               (sys_int_mem_s1_agent_m0_lock),                           //                         .lock
		.uav_debugaccess        (sys_int_mem_s1_agent_m0_debugaccess),                    //                         .debugaccess
		.av_address             (sys_int_mem_s1_address),                                 //      avalon_anti_slave_0.address
		.av_write               (sys_int_mem_s1_write),                                   //                         .write
		.av_readdata            (sys_int_mem_s1_readdata),                                //                         .readdata
		.av_writedata           (sys_int_mem_s1_writedata),                               //                         .writedata
		.av_byteenable          (sys_int_mem_s1_byteenable),                              //                         .byteenable
		.av_chipselect          (sys_int_mem_s1_chipselect),                              //                         .chipselect
		.av_clken               (sys_int_mem_s1_clken),                                   //                         .clken
		.av_read                (),                                                       //              (terminated)
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_waitrequest         (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_timer_1_s1_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (sys_timer_1_s1_agent_m0_address),                        // avalon_universal_slave_0.address
		.uav_burstcount         (sys_timer_1_s1_agent_m0_burstcount),                     //                         .burstcount
		.uav_read               (sys_timer_1_s1_agent_m0_read),                           //                         .read
		.uav_write              (sys_timer_1_s1_agent_m0_write),                          //                         .write
		.uav_waitrequest        (sys_timer_1_s1_agent_m0_waitrequest),                    //                         .waitrequest
		.uav_readdatavalid      (sys_timer_1_s1_agent_m0_readdatavalid),                  //                         .readdatavalid
		.uav_byteenable         (sys_timer_1_s1_agent_m0_byteenable),                     //                         .byteenable
		.uav_readdata           (sys_timer_1_s1_agent_m0_readdata),                       //                         .readdata
		.uav_writedata          (sys_timer_1_s1_agent_m0_writedata),                      //                         .writedata
		.uav_lock               (sys_timer_1_s1_agent_m0_lock),                           //                         .lock
		.uav_debugaccess        (sys_timer_1_s1_agent_m0_debugaccess),                    //                         .debugaccess
		.av_address             (sys_timer_1_s1_address),                                 //      avalon_anti_slave_0.address
		.av_write               (sys_timer_1_s1_write),                                   //                         .write
		.av_readdata            (sys_timer_1_s1_readdata),                                //                         .readdata
		.av_writedata           (sys_timer_1_s1_writedata),                               //                         .writedata
		.av_chipselect          (sys_timer_1_s1_chipselect),                              //                         .chipselect
		.av_read                (),                                                       //              (terminated)
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_byteenable          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_waitrequest         (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_timer_2_s1_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (sys_timer_2_s1_agent_m0_address),                        // avalon_universal_slave_0.address
		.uav_burstcount         (sys_timer_2_s1_agent_m0_burstcount),                     //                         .burstcount
		.uav_read               (sys_timer_2_s1_agent_m0_read),                           //                         .read
		.uav_write              (sys_timer_2_s1_agent_m0_write),                          //                         .write
		.uav_waitrequest        (sys_timer_2_s1_agent_m0_waitrequest),                    //                         .waitrequest
		.uav_readdatavalid      (sys_timer_2_s1_agent_m0_readdatavalid),                  //                         .readdatavalid
		.uav_byteenable         (sys_timer_2_s1_agent_m0_byteenable),                     //                         .byteenable
		.uav_readdata           (sys_timer_2_s1_agent_m0_readdata),                       //                         .readdata
		.uav_writedata          (sys_timer_2_s1_agent_m0_writedata),                      //                         .writedata
		.uav_lock               (sys_timer_2_s1_agent_m0_lock),                           //                         .lock
		.uav_debugaccess        (sys_timer_2_s1_agent_m0_debugaccess),                    //                         .debugaccess
		.av_address             (sys_timer_2_s1_address),                                 //      avalon_anti_slave_0.address
		.av_write               (sys_timer_2_s1_write),                                   //                         .write
		.av_readdata            (sys_timer_2_s1_readdata),                                //                         .readdata
		.av_writedata           (sys_timer_2_s1_writedata),                               //                         .writedata
		.av_chipselect          (sys_timer_2_s1_chipselect),                              //                         .chipselect
		.av_read                (),                                                       //              (terminated)
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_byteenable          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_waitrequest         (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_gpio_bd_s1_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (sys_gpio_bd_s1_agent_m0_address),                        // avalon_universal_slave_0.address
		.uav_burstcount         (sys_gpio_bd_s1_agent_m0_burstcount),                     //                         .burstcount
		.uav_read               (sys_gpio_bd_s1_agent_m0_read),                           //                         .read
		.uav_write              (sys_gpio_bd_s1_agent_m0_write),                          //                         .write
		.uav_waitrequest        (sys_gpio_bd_s1_agent_m0_waitrequest),                    //                         .waitrequest
		.uav_readdatavalid      (sys_gpio_bd_s1_agent_m0_readdatavalid),                  //                         .readdatavalid
		.uav_byteenable         (sys_gpio_bd_s1_agent_m0_byteenable),                     //                         .byteenable
		.uav_readdata           (sys_gpio_bd_s1_agent_m0_readdata),                       //                         .readdata
		.uav_writedata          (sys_gpio_bd_s1_agent_m0_writedata),                      //                         .writedata
		.uav_lock               (sys_gpio_bd_s1_agent_m0_lock),                           //                         .lock
		.uav_debugaccess        (sys_gpio_bd_s1_agent_m0_debugaccess),                    //                         .debugaccess
		.av_address             (sys_gpio_bd_s1_address),                                 //      avalon_anti_slave_0.address
		.av_write               (sys_gpio_bd_s1_write),                                   //                         .write
		.av_readdata            (sys_gpio_bd_s1_readdata),                                //                         .readdata
		.av_writedata           (sys_gpio_bd_s1_writedata),                               //                         .writedata
		.av_chipselect          (sys_gpio_bd_s1_chipselect),                              //                         .chipselect
		.av_read                (),                                                       //              (terminated)
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_byteenable          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_waitrequest         (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_gpio_in_s1_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (sys_gpio_in_s1_agent_m0_address),                        // avalon_universal_slave_0.address
		.uav_burstcount         (sys_gpio_in_s1_agent_m0_burstcount),                     //                         .burstcount
		.uav_read               (sys_gpio_in_s1_agent_m0_read),                           //                         .read
		.uav_write              (sys_gpio_in_s1_agent_m0_write),                          //                         .write
		.uav_waitrequest        (sys_gpio_in_s1_agent_m0_waitrequest),                    //                         .waitrequest
		.uav_readdatavalid      (sys_gpio_in_s1_agent_m0_readdatavalid),                  //                         .readdatavalid
		.uav_byteenable         (sys_gpio_in_s1_agent_m0_byteenable),                     //                         .byteenable
		.uav_readdata           (sys_gpio_in_s1_agent_m0_readdata),                       //                         .readdata
		.uav_writedata          (sys_gpio_in_s1_agent_m0_writedata),                      //                         .writedata
		.uav_lock               (sys_gpio_in_s1_agent_m0_lock),                           //                         .lock
		.uav_debugaccess        (sys_gpio_in_s1_agent_m0_debugaccess),                    //                         .debugaccess
		.av_address             (sys_gpio_in_s1_address),                                 //      avalon_anti_slave_0.address
		.av_write               (sys_gpio_in_s1_write),                                   //                         .write
		.av_readdata            (sys_gpio_in_s1_readdata),                                //                         .readdata
		.av_writedata           (sys_gpio_in_s1_writedata),                               //                         .writedata
		.av_chipselect          (sys_gpio_in_s1_chipselect),                              //                         .chipselect
		.av_read                (),                                                       //              (terminated)
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_byteenable          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_waitrequest         (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_gpio_out_s1_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (sys_gpio_out_s1_agent_m0_address),                       // avalon_universal_slave_0.address
		.uav_burstcount         (sys_gpio_out_s1_agent_m0_burstcount),                    //                         .burstcount
		.uav_read               (sys_gpio_out_s1_agent_m0_read),                          //                         .read
		.uav_write              (sys_gpio_out_s1_agent_m0_write),                         //                         .write
		.uav_waitrequest        (sys_gpio_out_s1_agent_m0_waitrequest),                   //                         .waitrequest
		.uav_readdatavalid      (sys_gpio_out_s1_agent_m0_readdatavalid),                 //                         .readdatavalid
		.uav_byteenable         (sys_gpio_out_s1_agent_m0_byteenable),                    //                         .byteenable
		.uav_readdata           (sys_gpio_out_s1_agent_m0_readdata),                      //                         .readdata
		.uav_writedata          (sys_gpio_out_s1_agent_m0_writedata),                     //                         .writedata
		.uav_lock               (sys_gpio_out_s1_agent_m0_lock),                          //                         .lock
		.uav_debugaccess        (sys_gpio_out_s1_agent_m0_debugaccess),                   //                         .debugaccess
		.av_address             (sys_gpio_out_s1_address),                                //      avalon_anti_slave_0.address
		.av_write               (sys_gpio_out_s1_write),                                  //                         .write
		.av_readdata            (sys_gpio_out_s1_readdata),                               //                         .readdata
		.av_writedata           (sys_gpio_out_s1_writedata),                              //                         .writedata
		.av_chipselect          (sys_gpio_out_s1_chipselect),                             //                         .chipselect
		.av_read                (),                                                       //              (terminated)
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_byteenable          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_waitrequest         (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (1),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_spi_spi_control_port_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (sys_spi_spi_control_port_agent_m0_address),              // avalon_universal_slave_0.address
		.uav_burstcount         (sys_spi_spi_control_port_agent_m0_burstcount),           //                         .burstcount
		.uav_read               (sys_spi_spi_control_port_agent_m0_read),                 //                         .read
		.uav_write              (sys_spi_spi_control_port_agent_m0_write),                //                         .write
		.uav_waitrequest        (sys_spi_spi_control_port_agent_m0_waitrequest),          //                         .waitrequest
		.uav_readdatavalid      (sys_spi_spi_control_port_agent_m0_readdatavalid),        //                         .readdatavalid
		.uav_byteenable         (sys_spi_spi_control_port_agent_m0_byteenable),           //                         .byteenable
		.uav_readdata           (sys_spi_spi_control_port_agent_m0_readdata),             //                         .readdata
		.uav_writedata          (sys_spi_spi_control_port_agent_m0_writedata),            //                         .writedata
		.uav_lock               (sys_spi_spi_control_port_agent_m0_lock),                 //                         .lock
		.uav_debugaccess        (sys_spi_spi_control_port_agent_m0_debugaccess),          //                         .debugaccess
		.av_address             (sys_spi_spi_control_port_address),                       //      avalon_anti_slave_0.address
		.av_write               (sys_spi_spi_control_port_write),                         //                         .write
		.av_read                (sys_spi_spi_control_port_read),                          //                         .read
		.av_readdata            (sys_spi_spi_control_port_readdata),                      //                         .readdata
		.av_writedata           (sys_spi_spi_control_port_writedata),                     //                         .writedata
		.av_chipselect          (sys_spi_spi_control_port_chipselect),                    //                         .chipselect
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_burstcount          (),                                                       //              (terminated)
		.av_byteenable          (),                                                       //              (terminated)
		.av_readdatavalid       (1'b0),                                                   //              (terminated)
		.av_waitrequest         (1'b0),                                                   //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_lock                (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_debugaccess         (),                                                       //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (24),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (3),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (1),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (1),
		.AV_BURSTCOUNT_SYMBOLS          (1),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_flash_uas_translator (
		.clk                    (sys_clk_clk_clk),                                        //                      clk.clk
		.reset                  (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //                    reset.reset
		.uav_address            (sys_flash_uas_agent_m0_address),                         // avalon_universal_slave_0.address
		.uav_burstcount         (sys_flash_uas_agent_m0_burstcount),                      //                         .burstcount
		.uav_read               (sys_flash_uas_agent_m0_read),                            //                         .read
		.uav_write              (sys_flash_uas_agent_m0_write),                           //                         .write
		.uav_waitrequest        (sys_flash_uas_agent_m0_waitrequest),                     //                         .waitrequest
		.uav_readdatavalid      (sys_flash_uas_agent_m0_readdatavalid),                   //                         .readdatavalid
		.uav_byteenable         (sys_flash_uas_agent_m0_byteenable),                      //                         .byteenable
		.uav_readdata           (sys_flash_uas_agent_m0_readdata),                        //                         .readdata
		.uav_writedata          (sys_flash_uas_agent_m0_writedata),                       //                         .writedata
		.uav_lock               (sys_flash_uas_agent_m0_lock),                            //                         .lock
		.uav_debugaccess        (sys_flash_uas_agent_m0_debugaccess),                     //                         .debugaccess
		.av_address             (sys_flash_uas_address),                                  //      avalon_anti_slave_0.address
		.av_write               (sys_flash_uas_write),                                    //                         .write
		.av_read                (sys_flash_uas_read),                                     //                         .read
		.av_readdata            (sys_flash_uas_readdata),                                 //                         .readdata
		.av_writedata           (sys_flash_uas_writedata),                                //                         .writedata
		.av_burstcount          (sys_flash_uas_burstcount),                               //                         .burstcount
		.av_byteenable          (sys_flash_uas_byteenable),                               //                         .byteenable
		.av_readdatavalid       (sys_flash_uas_readdatavalid),                            //                         .readdatavalid
		.av_waitrequest         (sys_flash_uas_waitrequest),                              //                         .waitrequest
		.av_lock                (sys_flash_uas_lock),                                     //                         .lock
		.av_debugaccess         (sys_flash_uas_debugaccess),                              //                         .debugaccess
		.av_begintransfer       (),                                                       //              (terminated)
		.av_beginbursttransfer  (),                                                       //              (terminated)
		.av_writebyteenable     (),                                                       //              (terminated)
		.av_chipselect          (),                                                       //              (terminated)
		.av_clken               (),                                                       //              (terminated)
		.uav_clken              (1'b0),                                                   //              (terminated)
		.av_outputenable        (),                                                       //              (terminated)
		.uav_response           (),                                                       //              (terminated)
		.av_response            (2'b00),                                                  //              (terminated)
		.uav_writeresponsevalid (),                                                       //              (terminated)
		.av_writeresponsevalid  (1'b0)                                                    //              (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_QOS_H                 (104),
		.PKT_QOS_L                 (104),
		.PKT_DATA_SIDEBAND_H       (102),
		.PKT_DATA_SIDEBAND_L       (102),
		.PKT_ADDR_SIDEBAND_H       (101),
		.PKT_ADDR_SIDEBAND_L       (101),
		.PKT_BURST_TYPE_H          (100),
		.PKT_BURST_TYPE_L          (99),
		.PKT_CACHE_H               (124),
		.PKT_CACHE_L               (121),
		.PKT_THREAD_ID_H           (117),
		.PKT_THREAD_ID_L           (117),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_EXCLUSIVE       (73),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.ST_DATA_W                 (130),
		.ST_CHANNEL_W              (45),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (1),
		.ID                        (2),
		.BURSTWRAP_VALUE           (511),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sys_cpu_data_master_agent (
		.clk                   (sys_clk_clk_clk),                                                        //       clk.clk
		.reset                 (sys_cpu_reset_reset_bridge_in_reset_reset),                              // clk_reset.reset
		.av_address            (sys_cpu_data_master_translator_avalon_universal_master_0_address),       //        av.address
		.av_write              (sys_cpu_data_master_translator_avalon_universal_master_0_write),         //          .write
		.av_read               (sys_cpu_data_master_translator_avalon_universal_master_0_read),          //          .read
		.av_writedata          (sys_cpu_data_master_translator_avalon_universal_master_0_writedata),     //          .writedata
		.av_readdata           (sys_cpu_data_master_translator_avalon_universal_master_0_readdata),      //          .readdata
		.av_waitrequest        (sys_cpu_data_master_translator_avalon_universal_master_0_waitrequest),   //          .waitrequest
		.av_readdatavalid      (sys_cpu_data_master_translator_avalon_universal_master_0_readdatavalid), //          .readdatavalid
		.av_byteenable         (sys_cpu_data_master_translator_avalon_universal_master_0_byteenable),    //          .byteenable
		.av_burstcount         (sys_cpu_data_master_translator_avalon_universal_master_0_burstcount),    //          .burstcount
		.av_debugaccess        (sys_cpu_data_master_translator_avalon_universal_master_0_debugaccess),   //          .debugaccess
		.av_lock               (sys_cpu_data_master_translator_avalon_universal_master_0_lock),          //          .lock
		.cp_valid              (sys_cpu_data_master_agent_cp_valid),                                     //        cp.valid
		.cp_data               (sys_cpu_data_master_agent_cp_data),                                      //          .data
		.cp_startofpacket      (sys_cpu_data_master_agent_cp_startofpacket),                             //          .startofpacket
		.cp_endofpacket        (sys_cpu_data_master_agent_cp_endofpacket),                               //          .endofpacket
		.cp_ready              (sys_cpu_data_master_agent_cp_ready),                                     //          .ready
		.rp_valid              (sys_cpu_data_master_limiter_rsp_src_valid),                              //        rp.valid
		.rp_data               (sys_cpu_data_master_limiter_rsp_src_data),                               //          .data
		.rp_channel            (sys_cpu_data_master_limiter_rsp_src_channel),                            //          .channel
		.rp_startofpacket      (sys_cpu_data_master_limiter_rsp_src_startofpacket),                      //          .startofpacket
		.rp_endofpacket        (sys_cpu_data_master_limiter_rsp_src_endofpacket),                        //          .endofpacket
		.rp_ready              (sys_cpu_data_master_limiter_rsp_src_ready),                              //          .ready
		.av_response           (),                                                                       // (terminated)
		.av_writeresponsevalid ()                                                                        // (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_QOS_H                 (104),
		.PKT_QOS_L                 (104),
		.PKT_DATA_SIDEBAND_H       (102),
		.PKT_DATA_SIDEBAND_L       (102),
		.PKT_ADDR_SIDEBAND_H       (101),
		.PKT_ADDR_SIDEBAND_L       (101),
		.PKT_BURST_TYPE_H          (100),
		.PKT_BURST_TYPE_L          (99),
		.PKT_CACHE_H               (124),
		.PKT_CACHE_L               (121),
		.PKT_THREAD_ID_H           (117),
		.PKT_THREAD_ID_L           (117),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_EXCLUSIVE       (73),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.ST_DATA_W                 (130),
		.ST_CHANNEL_W              (45),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (1),
		.ID                        (3),
		.BURSTWRAP_VALUE           (3),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sys_cpu_instruction_master_agent (
		.clk                   (sys_clk_clk_clk),                                                               //       clk.clk
		.reset                 (sys_cpu_reset_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.av_address            (sys_cpu_instruction_master_translator_avalon_universal_master_0_address),       //        av.address
		.av_write              (sys_cpu_instruction_master_translator_avalon_universal_master_0_write),         //          .write
		.av_read               (sys_cpu_instruction_master_translator_avalon_universal_master_0_read),          //          .read
		.av_writedata          (sys_cpu_instruction_master_translator_avalon_universal_master_0_writedata),     //          .writedata
		.av_readdata           (sys_cpu_instruction_master_translator_avalon_universal_master_0_readdata),      //          .readdata
		.av_waitrequest        (sys_cpu_instruction_master_translator_avalon_universal_master_0_waitrequest),   //          .waitrequest
		.av_readdatavalid      (sys_cpu_instruction_master_translator_avalon_universal_master_0_readdatavalid), //          .readdatavalid
		.av_byteenable         (sys_cpu_instruction_master_translator_avalon_universal_master_0_byteenable),    //          .byteenable
		.av_burstcount         (sys_cpu_instruction_master_translator_avalon_universal_master_0_burstcount),    //          .burstcount
		.av_debugaccess        (sys_cpu_instruction_master_translator_avalon_universal_master_0_debugaccess),   //          .debugaccess
		.av_lock               (sys_cpu_instruction_master_translator_avalon_universal_master_0_lock),          //          .lock
		.cp_valid              (sys_cpu_instruction_master_agent_cp_valid),                                     //        cp.valid
		.cp_data               (sys_cpu_instruction_master_agent_cp_data),                                      //          .data
		.cp_startofpacket      (sys_cpu_instruction_master_agent_cp_startofpacket),                             //          .startofpacket
		.cp_endofpacket        (sys_cpu_instruction_master_agent_cp_endofpacket),                               //          .endofpacket
		.cp_ready              (sys_cpu_instruction_master_agent_cp_ready),                                     //          .ready
		.rp_valid              (sys_cpu_instruction_master_limiter_rsp_src_valid),                              //        rp.valid
		.rp_data               (sys_cpu_instruction_master_limiter_rsp_src_data),                               //          .data
		.rp_channel            (sys_cpu_instruction_master_limiter_rsp_src_channel),                            //          .channel
		.rp_startofpacket      (sys_cpu_instruction_master_limiter_rsp_src_startofpacket),                      //          .startofpacket
		.rp_endofpacket        (sys_cpu_instruction_master_limiter_rsp_src_endofpacket),                        //          .endofpacket
		.rp_ready              (sys_cpu_instruction_master_limiter_rsp_src_ready),                              //          .ready
		.av_response           (),                                                                              // (terminated)
		.av_writeresponsevalid ()                                                                               // (terminated)
	);

	altera_merlin_axi_master_ni #(
		.ID_WIDTH                  (1),
		.ADDR_WIDTH                (32),
		.RDATA_WIDTH               (128),
		.WDATA_WIDTH               (128),
		.ADDR_USER_WIDTH           (1),
		.DATA_USER_WIDTH           (1),
		.AXI_BURST_LENGTH_WIDTH    (4),
		.AXI_LOCK_WIDTH            (2),
		.AXI_VERSION               ("AXI3"),
		.WRITE_ISSUING_CAPABILITY  (8),
		.READ_ISSUING_CAPABILITY   (1),
		.PKT_BEGIN_BURST           (211),
		.PKT_CACHE_H               (232),
		.PKT_CACHE_L               (229),
		.PKT_ADDR_SIDEBAND_H       (209),
		.PKT_ADDR_SIDEBAND_L       (209),
		.PKT_PROTECTION_H          (228),
		.PKT_PROTECTION_L          (226),
		.PKT_BURST_SIZE_H          (206),
		.PKT_BURST_SIZE_L          (204),
		.PKT_BURST_TYPE_H          (208),
		.PKT_BURST_TYPE_L          (207),
		.PKT_RESPONSE_STATUS_L     (233),
		.PKT_RESPONSE_STATUS_H     (234),
		.PKT_BURSTWRAP_H           (203),
		.PKT_BURSTWRAP_L           (195),
		.PKT_BYTE_CNT_H            (194),
		.PKT_BYTE_CNT_L            (182),
		.PKT_ADDR_H                (175),
		.PKT_ADDR_L                (144),
		.PKT_TRANS_EXCLUSIVE       (181),
		.PKT_TRANS_LOCK            (180),
		.PKT_TRANS_COMPRESSED_READ (176),
		.PKT_TRANS_POSTED          (177),
		.PKT_TRANS_WRITE           (178),
		.PKT_TRANS_READ            (179),
		.PKT_DATA_H                (127),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (143),
		.PKT_BYTEEN_L              (128),
		.PKT_SRC_ID_H              (218),
		.PKT_SRC_ID_L              (213),
		.PKT_DEST_ID_H             (224),
		.PKT_DEST_ID_L             (219),
		.PKT_THREAD_ID_H           (225),
		.PKT_THREAD_ID_L           (225),
		.PKT_QOS_L                 (212),
		.PKT_QOS_H                 (212),
		.PKT_ORI_BURST_SIZE_L      (235),
		.PKT_ORI_BURST_SIZE_H      (237),
		.PKT_DATA_SIDEBAND_H       (210),
		.PKT_DATA_SIDEBAND_L       (210),
		.ST_DATA_W                 (238),
		.ST_CHANNEL_W              (45),
		.ID                        (1)
	) axi_ad9680_dma_m_dest_axi_agent (
		.aclk                   (sys_dma_clk_clk_clk),                                          //              clk.clk
		.aresetn                (~axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), //        clk_reset.reset_n
		.write_cp_valid         (axi_ad9680_dma_m_dest_axi_agent_write_cp_valid),               //         write_cp.valid
		.write_cp_data          (axi_ad9680_dma_m_dest_axi_agent_write_cp_data),                //                 .data
		.write_cp_startofpacket (axi_ad9680_dma_m_dest_axi_agent_write_cp_startofpacket),       //                 .startofpacket
		.write_cp_endofpacket   (axi_ad9680_dma_m_dest_axi_agent_write_cp_endofpacket),         //                 .endofpacket
		.write_cp_ready         (axi_ad9680_dma_m_dest_axi_agent_write_cp_ready),               //                 .ready
		.write_rp_valid         (rsp_mux_002_src_valid),                                        //         write_rp.valid
		.write_rp_data          (rsp_mux_002_src_data),                                         //                 .data
		.write_rp_channel       (rsp_mux_002_src_channel),                                      //                 .channel
		.write_rp_startofpacket (rsp_mux_002_src_startofpacket),                                //                 .startofpacket
		.write_rp_endofpacket   (rsp_mux_002_src_endofpacket),                                  //                 .endofpacket
		.write_rp_ready         (rsp_mux_002_src_ready),                                        //                 .ready
		.read_cp_valid          (axi_ad9680_dma_m_dest_axi_agent_read_cp_valid),                //          read_cp.valid
		.read_cp_data           (axi_ad9680_dma_m_dest_axi_agent_read_cp_data),                 //                 .data
		.read_cp_startofpacket  (axi_ad9680_dma_m_dest_axi_agent_read_cp_startofpacket),        //                 .startofpacket
		.read_cp_endofpacket    (axi_ad9680_dma_m_dest_axi_agent_read_cp_endofpacket),          //                 .endofpacket
		.read_cp_ready          (axi_ad9680_dma_m_dest_axi_agent_read_cp_ready),                //                 .ready
		.read_rp_valid          (rsp_mux_003_src_valid),                                        //          read_rp.valid
		.read_rp_data           (rsp_mux_003_src_data),                                         //                 .data
		.read_rp_channel        (rsp_mux_003_src_channel),                                      //                 .channel
		.read_rp_startofpacket  (rsp_mux_003_src_startofpacket),                                //                 .startofpacket
		.read_rp_endofpacket    (rsp_mux_003_src_endofpacket),                                  //                 .endofpacket
		.read_rp_ready          (rsp_mux_003_src_ready),                                        //                 .ready
		.awid                   (axi_ad9680_dma_m_dest_axi_awid),                               // altera_axi_slave.awid
		.awaddr                 (axi_ad9680_dma_m_dest_axi_awaddr),                             //                 .awaddr
		.awlen                  (axi_ad9680_dma_m_dest_axi_awlen),                              //                 .awlen
		.awsize                 (axi_ad9680_dma_m_dest_axi_awsize),                             //                 .awsize
		.awburst                (axi_ad9680_dma_m_dest_axi_awburst),                            //                 .awburst
		.awlock                 (axi_ad9680_dma_m_dest_axi_awlock),                             //                 .awlock
		.awcache                (axi_ad9680_dma_m_dest_axi_awcache),                            //                 .awcache
		.awprot                 (axi_ad9680_dma_m_dest_axi_awprot),                             //                 .awprot
		.awvalid                (axi_ad9680_dma_m_dest_axi_awvalid),                            //                 .awvalid
		.awready                (axi_ad9680_dma_m_dest_axi_awready),                            //                 .awready
		.wid                    (axi_ad9680_dma_m_dest_axi_wid),                                //                 .wid
		.wdata                  (axi_ad9680_dma_m_dest_axi_wdata),                              //                 .wdata
		.wstrb                  (axi_ad9680_dma_m_dest_axi_wstrb),                              //                 .wstrb
		.wlast                  (axi_ad9680_dma_m_dest_axi_wlast),                              //                 .wlast
		.wvalid                 (axi_ad9680_dma_m_dest_axi_wvalid),                             //                 .wvalid
		.wready                 (axi_ad9680_dma_m_dest_axi_wready),                             //                 .wready
		.bid                    (axi_ad9680_dma_m_dest_axi_bid),                                //                 .bid
		.bresp                  (axi_ad9680_dma_m_dest_axi_bresp),                              //                 .bresp
		.bvalid                 (axi_ad9680_dma_m_dest_axi_bvalid),                             //                 .bvalid
		.bready                 (axi_ad9680_dma_m_dest_axi_bready),                             //                 .bready
		.arid                   (axi_ad9680_dma_m_dest_axi_arid),                               //                 .arid
		.araddr                 (axi_ad9680_dma_m_dest_axi_araddr),                             //                 .araddr
		.arlen                  (axi_ad9680_dma_m_dest_axi_arlen),                              //                 .arlen
		.arsize                 (axi_ad9680_dma_m_dest_axi_arsize),                             //                 .arsize
		.arburst                (axi_ad9680_dma_m_dest_axi_arburst),                            //                 .arburst
		.arlock                 (axi_ad9680_dma_m_dest_axi_arlock),                             //                 .arlock
		.arcache                (axi_ad9680_dma_m_dest_axi_arcache),                            //                 .arcache
		.arprot                 (axi_ad9680_dma_m_dest_axi_arprot),                             //                 .arprot
		.arvalid                (axi_ad9680_dma_m_dest_axi_arvalid),                            //                 .arvalid
		.arready                (axi_ad9680_dma_m_dest_axi_arready),                            //                 .arready
		.rid                    (axi_ad9680_dma_m_dest_axi_rid),                                //                 .rid
		.rdata                  (axi_ad9680_dma_m_dest_axi_rdata),                              //                 .rdata
		.rresp                  (axi_ad9680_dma_m_dest_axi_rresp),                              //                 .rresp
		.rlast                  (axi_ad9680_dma_m_dest_axi_rlast),                              //                 .rlast
		.rvalid                 (axi_ad9680_dma_m_dest_axi_rvalid),                             //                 .rvalid
		.rready                 (axi_ad9680_dma_m_dest_axi_rready),                             //                 .rready
		.awuser                 (1'b0),                                                         //      (terminated)
		.aruser                 (1'b0),                                                         //      (terminated)
		.awqos                  (4'b0000),                                                      //      (terminated)
		.arqos                  (4'b0000),                                                      //      (terminated)
		.awregion               (4'b0000),                                                      //      (terminated)
		.arregion               (4'b0000),                                                      //      (terminated)
		.wuser                  (1'b0),                                                         //      (terminated)
		.ruser                  (),                                                             //      (terminated)
		.buser                  ()                                                              //      (terminated)
	);

	altera_merlin_axi_master_ni #(
		.ID_WIDTH                  (1),
		.ADDR_WIDTH                (32),
		.RDATA_WIDTH               (128),
		.WDATA_WIDTH               (128),
		.ADDR_USER_WIDTH           (1),
		.DATA_USER_WIDTH           (1),
		.AXI_BURST_LENGTH_WIDTH    (4),
		.AXI_LOCK_WIDTH            (2),
		.AXI_VERSION               ("AXI3"),
		.WRITE_ISSUING_CAPABILITY  (1),
		.READ_ISSUING_CAPABILITY   (16),
		.PKT_BEGIN_BURST           (211),
		.PKT_CACHE_H               (232),
		.PKT_CACHE_L               (229),
		.PKT_ADDR_SIDEBAND_H       (209),
		.PKT_ADDR_SIDEBAND_L       (209),
		.PKT_PROTECTION_H          (228),
		.PKT_PROTECTION_L          (226),
		.PKT_BURST_SIZE_H          (206),
		.PKT_BURST_SIZE_L          (204),
		.PKT_BURST_TYPE_H          (208),
		.PKT_BURST_TYPE_L          (207),
		.PKT_RESPONSE_STATUS_L     (233),
		.PKT_RESPONSE_STATUS_H     (234),
		.PKT_BURSTWRAP_H           (203),
		.PKT_BURSTWRAP_L           (195),
		.PKT_BYTE_CNT_H            (194),
		.PKT_BYTE_CNT_L            (182),
		.PKT_ADDR_H                (175),
		.PKT_ADDR_L                (144),
		.PKT_TRANS_EXCLUSIVE       (181),
		.PKT_TRANS_LOCK            (180),
		.PKT_TRANS_COMPRESSED_READ (176),
		.PKT_TRANS_POSTED          (177),
		.PKT_TRANS_WRITE           (178),
		.PKT_TRANS_READ            (179),
		.PKT_DATA_H                (127),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (143),
		.PKT_BYTEEN_L              (128),
		.PKT_SRC_ID_H              (218),
		.PKT_SRC_ID_L              (213),
		.PKT_DEST_ID_H             (224),
		.PKT_DEST_ID_L             (219),
		.PKT_THREAD_ID_H           (225),
		.PKT_THREAD_ID_L           (225),
		.PKT_QOS_L                 (212),
		.PKT_QOS_H                 (212),
		.PKT_ORI_BURST_SIZE_L      (235),
		.PKT_ORI_BURST_SIZE_H      (237),
		.PKT_DATA_SIDEBAND_H       (210),
		.PKT_DATA_SIDEBAND_L       (210),
		.ST_DATA_W                 (238),
		.ST_CHANNEL_W              (45),
		.ID                        (0)
	) axi_ad9144_dma_m_src_axi_agent (
		.aclk                   (sys_dma_clk_clk_clk),                                          //              clk.clk
		.aresetn                (~axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), //        clk_reset.reset_n
		.write_cp_valid         (axi_ad9144_dma_m_src_axi_agent_write_cp_valid),                //         write_cp.valid
		.write_cp_data          (axi_ad9144_dma_m_src_axi_agent_write_cp_data),                 //                 .data
		.write_cp_startofpacket (axi_ad9144_dma_m_src_axi_agent_write_cp_startofpacket),        //                 .startofpacket
		.write_cp_endofpacket   (axi_ad9144_dma_m_src_axi_agent_write_cp_endofpacket),          //                 .endofpacket
		.write_cp_ready         (axi_ad9144_dma_m_src_axi_agent_write_cp_ready),                //                 .ready
		.write_rp_valid         (rsp_mux_004_src_valid),                                        //         write_rp.valid
		.write_rp_data          (rsp_mux_004_src_data),                                         //                 .data
		.write_rp_channel       (rsp_mux_004_src_channel),                                      //                 .channel
		.write_rp_startofpacket (rsp_mux_004_src_startofpacket),                                //                 .startofpacket
		.write_rp_endofpacket   (rsp_mux_004_src_endofpacket),                                  //                 .endofpacket
		.write_rp_ready         (rsp_mux_004_src_ready),                                        //                 .ready
		.read_cp_valid          (axi_ad9144_dma_m_src_axi_agent_read_cp_valid),                 //          read_cp.valid
		.read_cp_data           (axi_ad9144_dma_m_src_axi_agent_read_cp_data),                  //                 .data
		.read_cp_startofpacket  (axi_ad9144_dma_m_src_axi_agent_read_cp_startofpacket),         //                 .startofpacket
		.read_cp_endofpacket    (axi_ad9144_dma_m_src_axi_agent_read_cp_endofpacket),           //                 .endofpacket
		.read_cp_ready          (axi_ad9144_dma_m_src_axi_agent_read_cp_ready),                 //                 .ready
		.read_rp_valid          (rsp_mux_005_src_valid),                                        //          read_rp.valid
		.read_rp_data           (rsp_mux_005_src_data),                                         //                 .data
		.read_rp_channel        (rsp_mux_005_src_channel),                                      //                 .channel
		.read_rp_startofpacket  (rsp_mux_005_src_startofpacket),                                //                 .startofpacket
		.read_rp_endofpacket    (rsp_mux_005_src_endofpacket),                                  //                 .endofpacket
		.read_rp_ready          (rsp_mux_005_src_ready),                                        //                 .ready
		.awid                   (axi_ad9144_dma_m_src_axi_awid),                                // altera_axi_slave.awid
		.awaddr                 (axi_ad9144_dma_m_src_axi_awaddr),                              //                 .awaddr
		.awlen                  (axi_ad9144_dma_m_src_axi_awlen),                               //                 .awlen
		.awsize                 (axi_ad9144_dma_m_src_axi_awsize),                              //                 .awsize
		.awburst                (axi_ad9144_dma_m_src_axi_awburst),                             //                 .awburst
		.awlock                 (axi_ad9144_dma_m_src_axi_awlock),                              //                 .awlock
		.awcache                (axi_ad9144_dma_m_src_axi_awcache),                             //                 .awcache
		.awprot                 (axi_ad9144_dma_m_src_axi_awprot),                              //                 .awprot
		.awvalid                (axi_ad9144_dma_m_src_axi_awvalid),                             //                 .awvalid
		.awready                (axi_ad9144_dma_m_src_axi_awready),                             //                 .awready
		.wid                    (axi_ad9144_dma_m_src_axi_wid),                                 //                 .wid
		.wdata                  (axi_ad9144_dma_m_src_axi_wdata),                               //                 .wdata
		.wstrb                  (axi_ad9144_dma_m_src_axi_wstrb),                               //                 .wstrb
		.wlast                  (axi_ad9144_dma_m_src_axi_wlast),                               //                 .wlast
		.wvalid                 (axi_ad9144_dma_m_src_axi_wvalid),                              //                 .wvalid
		.wready                 (axi_ad9144_dma_m_src_axi_wready),                              //                 .wready
		.bid                    (axi_ad9144_dma_m_src_axi_bid),                                 //                 .bid
		.bresp                  (axi_ad9144_dma_m_src_axi_bresp),                               //                 .bresp
		.bvalid                 (axi_ad9144_dma_m_src_axi_bvalid),                              //                 .bvalid
		.bready                 (axi_ad9144_dma_m_src_axi_bready),                              //                 .bready
		.arid                   (axi_ad9144_dma_m_src_axi_arid),                                //                 .arid
		.araddr                 (axi_ad9144_dma_m_src_axi_araddr),                              //                 .araddr
		.arlen                  (axi_ad9144_dma_m_src_axi_arlen),                               //                 .arlen
		.arsize                 (axi_ad9144_dma_m_src_axi_arsize),                              //                 .arsize
		.arburst                (axi_ad9144_dma_m_src_axi_arburst),                             //                 .arburst
		.arlock                 (axi_ad9144_dma_m_src_axi_arlock),                              //                 .arlock
		.arcache                (axi_ad9144_dma_m_src_axi_arcache),                             //                 .arcache
		.arprot                 (axi_ad9144_dma_m_src_axi_arprot),                              //                 .arprot
		.arvalid                (axi_ad9144_dma_m_src_axi_arvalid),                             //                 .arvalid
		.arready                (axi_ad9144_dma_m_src_axi_arready),                             //                 .arready
		.rid                    (axi_ad9144_dma_m_src_axi_rid),                                 //                 .rid
		.rdata                  (axi_ad9144_dma_m_src_axi_rdata),                               //                 .rdata
		.rresp                  (axi_ad9144_dma_m_src_axi_rresp),                               //                 .rresp
		.rlast                  (axi_ad9144_dma_m_src_axi_rlast),                               //                 .rlast
		.rvalid                 (axi_ad9144_dma_m_src_axi_rvalid),                              //                 .rvalid
		.rready                 (axi_ad9144_dma_m_src_axi_rready),                              //                 .rready
		.awuser                 (1'b0),                                                         //      (terminated)
		.aruser                 (1'b0),                                                         //      (terminated)
		.awqos                  (4'b0000),                                                      //      (terminated)
		.arqos                  (4'b0000),                                                      //      (terminated)
		.awregion               (4'b0000),                                                      //      (terminated)
		.arregion               (4'b0000),                                                      //      (terminated)
		.wuser                  (1'b0),                                                         //      (terminated)
		.ruser                  (),                                                             //      (terminated)
		.buser                  ()                                                              //      (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_ORI_BURST_SIZE_H      (165),
		.PKT_ORI_BURST_SIZE_L      (163),
		.PKT_RESPONSE_STATUS_H     (162),
		.PKT_RESPONSE_STATUS_L     (161),
		.PKT_QOS_H                 (140),
		.PKT_QOS_L                 (140),
		.PKT_DATA_SIDEBAND_H       (138),
		.PKT_DATA_SIDEBAND_L       (138),
		.PKT_ADDR_SIDEBAND_H       (137),
		.PKT_ADDR_SIDEBAND_L       (137),
		.PKT_BURST_TYPE_H          (136),
		.PKT_BURST_TYPE_L          (135),
		.PKT_CACHE_H               (160),
		.PKT_CACHE_L               (157),
		.PKT_THREAD_ID_H           (153),
		.PKT_THREAD_ID_L           (153),
		.PKT_BURST_SIZE_H          (134),
		.PKT_BURST_SIZE_L          (132),
		.PKT_TRANS_EXCLUSIVE       (109),
		.PKT_TRANS_LOCK            (108),
		.PKT_BEGIN_BURST           (139),
		.PKT_PROTECTION_H          (156),
		.PKT_PROTECTION_L          (154),
		.PKT_BURSTWRAP_H           (131),
		.PKT_BURSTWRAP_L           (123),
		.PKT_BYTE_CNT_H            (122),
		.PKT_BYTE_CNT_L            (110),
		.PKT_ADDR_H                (103),
		.PKT_ADDR_L                (72),
		.PKT_TRANS_COMPRESSED_READ (104),
		.PKT_TRANS_POSTED          (105),
		.PKT_TRANS_WRITE           (106),
		.PKT_TRANS_READ            (107),
		.PKT_DATA_H                (63),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (71),
		.PKT_BYTEEN_L              (64),
		.PKT_SRC_ID_H              (146),
		.PKT_SRC_ID_L              (141),
		.PKT_DEST_ID_H             (152),
		.PKT_DEST_ID_L             (147),
		.ST_DATA_W                 (166),
		.ST_CHANNEL_W              (45),
		.AV_BURSTCOUNT_W           (10),
		.SUPPRESS_0_BYTEEN_RSP     (1),
		.ID                        (5),
		.BURSTWRAP_VALUE           (511),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sys_ethernet_dma_tx_mm_read_agent (
		.clk                   (sys_clk_clk_clk),                                                                //       clk.clk
		.reset                 (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                         // clk_reset.reset
		.av_address            (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_address),       //        av.address
		.av_write              (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_write),         //          .write
		.av_read               (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_read),          //          .read
		.av_writedata          (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_writedata),     //          .writedata
		.av_readdata           (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_readdata),      //          .readdata
		.av_waitrequest        (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_waitrequest),   //          .waitrequest
		.av_readdatavalid      (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_readdatavalid), //          .readdatavalid
		.av_byteenable         (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_byteenable),    //          .byteenable
		.av_burstcount         (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_burstcount),    //          .burstcount
		.av_debugaccess        (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_debugaccess),   //          .debugaccess
		.av_lock               (sys_ethernet_dma_tx_mm_read_translator_avalon_universal_master_0_lock),          //          .lock
		.cp_valid              (sys_ethernet_dma_tx_mm_read_agent_cp_valid),                                     //        cp.valid
		.cp_data               (sys_ethernet_dma_tx_mm_read_agent_cp_data),                                      //          .data
		.cp_startofpacket      (sys_ethernet_dma_tx_mm_read_agent_cp_startofpacket),                             //          .startofpacket
		.cp_endofpacket        (sys_ethernet_dma_tx_mm_read_agent_cp_endofpacket),                               //          .endofpacket
		.cp_ready              (sys_ethernet_dma_tx_mm_read_agent_cp_ready),                                     //          .ready
		.rp_valid              (rsp_mux_006_src_valid),                                                          //        rp.valid
		.rp_data               (rsp_mux_006_src_data),                                                           //          .data
		.rp_channel            (rsp_mux_006_src_channel),                                                        //          .channel
		.rp_startofpacket      (rsp_mux_006_src_startofpacket),                                                  //          .startofpacket
		.rp_endofpacket        (rsp_mux_006_src_endofpacket),                                                    //          .endofpacket
		.rp_ready              (rsp_mux_006_src_ready),                                                          //          .ready
		.av_response           (),                                                                               // (terminated)
		.av_writeresponsevalid ()                                                                                // (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_ORI_BURST_SIZE_H      (165),
		.PKT_ORI_BURST_SIZE_L      (163),
		.PKT_RESPONSE_STATUS_H     (162),
		.PKT_RESPONSE_STATUS_L     (161),
		.PKT_QOS_H                 (140),
		.PKT_QOS_L                 (140),
		.PKT_DATA_SIDEBAND_H       (138),
		.PKT_DATA_SIDEBAND_L       (138),
		.PKT_ADDR_SIDEBAND_H       (137),
		.PKT_ADDR_SIDEBAND_L       (137),
		.PKT_BURST_TYPE_H          (136),
		.PKT_BURST_TYPE_L          (135),
		.PKT_CACHE_H               (160),
		.PKT_CACHE_L               (157),
		.PKT_THREAD_ID_H           (153),
		.PKT_THREAD_ID_L           (153),
		.PKT_BURST_SIZE_H          (134),
		.PKT_BURST_SIZE_L          (132),
		.PKT_TRANS_EXCLUSIVE       (109),
		.PKT_TRANS_LOCK            (108),
		.PKT_BEGIN_BURST           (139),
		.PKT_PROTECTION_H          (156),
		.PKT_PROTECTION_L          (154),
		.PKT_BURSTWRAP_H           (131),
		.PKT_BURSTWRAP_L           (123),
		.PKT_BYTE_CNT_H            (122),
		.PKT_BYTE_CNT_L            (110),
		.PKT_ADDR_H                (103),
		.PKT_ADDR_L                (72),
		.PKT_TRANS_COMPRESSED_READ (104),
		.PKT_TRANS_POSTED          (105),
		.PKT_TRANS_WRITE           (106),
		.PKT_TRANS_READ            (107),
		.PKT_DATA_H                (63),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (71),
		.PKT_BYTEEN_L              (64),
		.PKT_SRC_ID_H              (146),
		.PKT_SRC_ID_L              (141),
		.PKT_DEST_ID_H             (152),
		.PKT_DEST_ID_L             (147),
		.ST_DATA_W                 (166),
		.ST_CHANNEL_W              (45),
		.AV_BURSTCOUNT_W           (10),
		.SUPPRESS_0_BYTEEN_RSP     (1),
		.ID                        (4),
		.BURSTWRAP_VALUE           (511),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sys_ethernet_dma_rx_mm_write_agent (
		.clk                   (sys_clk_clk_clk),                                                                 //       clk.clk
		.reset                 (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.av_address            (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_address),       //        av.address
		.av_write              (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_write),         //          .write
		.av_read               (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_read),          //          .read
		.av_writedata          (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_writedata),     //          .writedata
		.av_readdata           (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_readdata),      //          .readdata
		.av_waitrequest        (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_waitrequest),   //          .waitrequest
		.av_readdatavalid      (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_readdatavalid), //          .readdatavalid
		.av_byteenable         (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_byteenable),    //          .byteenable
		.av_burstcount         (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_burstcount),    //          .burstcount
		.av_debugaccess        (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_debugaccess),   //          .debugaccess
		.av_lock               (sys_ethernet_dma_rx_mm_write_translator_avalon_universal_master_0_lock),          //          .lock
		.cp_valid              (sys_ethernet_dma_rx_mm_write_agent_cp_valid),                                     //        cp.valid
		.cp_data               (sys_ethernet_dma_rx_mm_write_agent_cp_data),                                      //          .data
		.cp_startofpacket      (sys_ethernet_dma_rx_mm_write_agent_cp_startofpacket),                             //          .startofpacket
		.cp_endofpacket        (sys_ethernet_dma_rx_mm_write_agent_cp_endofpacket),                               //          .endofpacket
		.cp_ready              (sys_ethernet_dma_rx_mm_write_agent_cp_ready),                                     //          .ready
		.rp_valid              (rsp_mux_007_src_valid),                                                           //        rp.valid
		.rp_data               (rsp_mux_007_src_data),                                                            //          .data
		.rp_channel            (rsp_mux_007_src_channel),                                                         //          .channel
		.rp_startofpacket      (rsp_mux_007_src_startofpacket),                                                   //          .startofpacket
		.rp_endofpacket        (rsp_mux_007_src_endofpacket),                                                     //          .endofpacket
		.rp_ready              (rsp_mux_007_src_ready),                                                           //          .ready
		.av_response           (),                                                                                // (terminated)
		.av_writeresponsevalid ()                                                                                 // (terminated)
	);

	altera_merlin_axi_slave_ni #(
		.PKT_QOS_H                   (104),
		.PKT_QOS_L                   (104),
		.PKT_THREAD_ID_H             (117),
		.PKT_THREAD_ID_L             (117),
		.PKT_RESPONSE_STATUS_H       (126),
		.PKT_RESPONSE_STATUS_L       (125),
		.PKT_BEGIN_BURST             (103),
		.PKT_CACHE_H                 (124),
		.PKT_CACHE_L                 (121),
		.PKT_DATA_SIDEBAND_H         (102),
		.PKT_DATA_SIDEBAND_L         (102),
		.PKT_ADDR_SIDEBAND_H         (101),
		.PKT_ADDR_SIDEBAND_L         (101),
		.PKT_BURST_TYPE_H            (100),
		.PKT_BURST_TYPE_L            (99),
		.PKT_PROTECTION_H            (120),
		.PKT_PROTECTION_L            (118),
		.PKT_BURST_SIZE_H            (98),
		.PKT_BURST_SIZE_L            (96),
		.PKT_BURSTWRAP_H             (95),
		.PKT_BURSTWRAP_L             (87),
		.PKT_BYTE_CNT_H              (86),
		.PKT_BYTE_CNT_L              (74),
		.PKT_ADDR_H                  (67),
		.PKT_ADDR_L                  (36),
		.PKT_TRANS_EXCLUSIVE         (73),
		.PKT_TRANS_LOCK              (72),
		.PKT_TRANS_COMPRESSED_READ   (68),
		.PKT_TRANS_POSTED            (69),
		.PKT_TRANS_WRITE             (70),
		.PKT_TRANS_READ              (71),
		.PKT_DATA_H                  (31),
		.PKT_DATA_L                  (0),
		.PKT_BYTEEN_H                (35),
		.PKT_BYTEEN_L                (32),
		.PKT_SRC_ID_H                (110),
		.PKT_SRC_ID_L                (105),
		.PKT_DEST_ID_H               (116),
		.PKT_DEST_ID_L               (111),
		.PKT_ORI_BURST_SIZE_L        (127),
		.PKT_ORI_BURST_SIZE_H        (129),
		.ADDR_USER_WIDTH             (1),
		.DATA_USER_WIDTH             (1),
		.ST_DATA_W                   (130),
		.ADDR_WIDTH                  (12),
		.RDATA_WIDTH                 (32),
		.WDATA_WIDTH                 (32),
		.ST_CHANNEL_W                (45),
		.AXI_SLAVE_ID_W              (1),
		.PASS_ID_TO_SLAVE            (0),
		.AXI_VERSION                 ("AXI4Lite"),
		.WRITE_ACCEPTANCE_CAPABILITY (1),
		.READ_ACCEPTANCE_CAPABILITY  (1)
	) ad9144_jesd204_link_management_agent (
		.aclk                   (sys_clk_clk_clk),                                             //        clock_sink.clk
		.aresetn                (~axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),     //        reset_sink.reset_n
		.read_cp_valid          (agent_pipeline_001_source0_valid),                            //           read_cp.valid
		.read_cp_ready          (agent_pipeline_001_source0_ready),                            //                  .ready
		.read_cp_data           (agent_pipeline_001_source0_data),                             //                  .data
		.read_cp_channel        (agent_pipeline_001_source0_channel),                          //                  .channel
		.read_cp_startofpacket  (agent_pipeline_001_source0_startofpacket),                    //                  .startofpacket
		.read_cp_endofpacket    (agent_pipeline_001_source0_endofpacket),                      //                  .endofpacket
		.write_cp_ready         (agent_pipeline_source0_ready),                                //          write_cp.ready
		.write_cp_valid         (agent_pipeline_source0_valid),                                //                  .valid
		.write_cp_data          (agent_pipeline_source0_data),                                 //                  .data
		.write_cp_channel       (agent_pipeline_source0_channel),                              //                  .channel
		.write_cp_startofpacket (agent_pipeline_source0_startofpacket),                        //                  .startofpacket
		.write_cp_endofpacket   (agent_pipeline_source0_endofpacket),                          //                  .endofpacket
		.read_rp_ready          (ad9144_jesd204_link_management_agent_read_rp_ready),          //           read_rp.ready
		.read_rp_valid          (ad9144_jesd204_link_management_agent_read_rp_valid),          //                  .valid
		.read_rp_data           (ad9144_jesd204_link_management_agent_read_rp_data),           //                  .data
		.read_rp_startofpacket  (ad9144_jesd204_link_management_agent_read_rp_startofpacket),  //                  .startofpacket
		.read_rp_endofpacket    (ad9144_jesd204_link_management_agent_read_rp_endofpacket),    //                  .endofpacket
		.write_rp_ready         (ad9144_jesd204_link_management_agent_write_rp_ready),         //          write_rp.ready
		.write_rp_valid         (ad9144_jesd204_link_management_agent_write_rp_valid),         //                  .valid
		.write_rp_data          (ad9144_jesd204_link_management_agent_write_rp_data),          //                  .data
		.write_rp_startofpacket (ad9144_jesd204_link_management_agent_write_rp_startofpacket), //                  .startofpacket
		.write_rp_endofpacket   (ad9144_jesd204_link_management_agent_write_rp_endofpacket),   //                  .endofpacket
		.awaddr                 (ad9144_jesd204_link_management_awaddr),                       // altera_axi_master.awaddr
		.awprot                 (ad9144_jesd204_link_management_awprot),                       //                  .awprot
		.awvalid                (ad9144_jesd204_link_management_awvalid),                      //                  .awvalid
		.awready                (ad9144_jesd204_link_management_awready),                      //                  .awready
		.wdata                  (ad9144_jesd204_link_management_wdata),                        //                  .wdata
		.wstrb                  (ad9144_jesd204_link_management_wstrb),                        //                  .wstrb
		.wvalid                 (ad9144_jesd204_link_management_wvalid),                       //                  .wvalid
		.wready                 (ad9144_jesd204_link_management_wready),                       //                  .wready
		.bresp                  (ad9144_jesd204_link_management_bresp),                        //                  .bresp
		.bvalid                 (ad9144_jesd204_link_management_bvalid),                       //                  .bvalid
		.bready                 (ad9144_jesd204_link_management_bready),                       //                  .bready
		.araddr                 (ad9144_jesd204_link_management_araddr),                       //                  .araddr
		.arprot                 (ad9144_jesd204_link_management_arprot),                       //                  .arprot
		.arvalid                (ad9144_jesd204_link_management_arvalid),                      //                  .arvalid
		.arready                (ad9144_jesd204_link_management_arready),                      //                  .arready
		.rdata                  (ad9144_jesd204_link_management_rdata),                        //                  .rdata
		.rresp                  (ad9144_jesd204_link_management_rresp),                        //                  .rresp
		.rvalid                 (ad9144_jesd204_link_management_rvalid),                       //                  .rvalid
		.rready                 (ad9144_jesd204_link_management_rready)                        //                  .rready
	);

	altera_merlin_axi_slave_ni #(
		.PKT_QOS_H                   (104),
		.PKT_QOS_L                   (104),
		.PKT_THREAD_ID_H             (117),
		.PKT_THREAD_ID_L             (117),
		.PKT_RESPONSE_STATUS_H       (126),
		.PKT_RESPONSE_STATUS_L       (125),
		.PKT_BEGIN_BURST             (103),
		.PKT_CACHE_H                 (124),
		.PKT_CACHE_L                 (121),
		.PKT_DATA_SIDEBAND_H         (102),
		.PKT_DATA_SIDEBAND_L         (102),
		.PKT_ADDR_SIDEBAND_H         (101),
		.PKT_ADDR_SIDEBAND_L         (101),
		.PKT_BURST_TYPE_H            (100),
		.PKT_BURST_TYPE_L            (99),
		.PKT_PROTECTION_H            (120),
		.PKT_PROTECTION_L            (118),
		.PKT_BURST_SIZE_H            (98),
		.PKT_BURST_SIZE_L            (96),
		.PKT_BURSTWRAP_H             (95),
		.PKT_BURSTWRAP_L             (87),
		.PKT_BYTE_CNT_H              (86),
		.PKT_BYTE_CNT_L              (74),
		.PKT_ADDR_H                  (67),
		.PKT_ADDR_L                  (36),
		.PKT_TRANS_EXCLUSIVE         (73),
		.PKT_TRANS_LOCK              (72),
		.PKT_TRANS_COMPRESSED_READ   (68),
		.PKT_TRANS_POSTED            (69),
		.PKT_TRANS_WRITE             (70),
		.PKT_TRANS_READ              (71),
		.PKT_DATA_H                  (31),
		.PKT_DATA_L                  (0),
		.PKT_BYTEEN_H                (35),
		.PKT_BYTEEN_L                (32),
		.PKT_SRC_ID_H                (110),
		.PKT_SRC_ID_L                (105),
		.PKT_DEST_ID_H               (116),
		.PKT_DEST_ID_L               (111),
		.PKT_ORI_BURST_SIZE_L        (127),
		.PKT_ORI_BURST_SIZE_H        (129),
		.ADDR_USER_WIDTH             (1),
		.DATA_USER_WIDTH             (1),
		.ST_DATA_W                   (130),
		.ADDR_WIDTH                  (12),
		.RDATA_WIDTH                 (32),
		.WDATA_WIDTH                 (32),
		.ST_CHANNEL_W                (45),
		.AXI_SLAVE_ID_W              (1),
		.PASS_ID_TO_SLAVE            (0),
		.AXI_VERSION                 ("AXI4Lite"),
		.WRITE_ACCEPTANCE_CAPABILITY (1),
		.READ_ACCEPTANCE_CAPABILITY  (1)
	) ad9680_jesd204_link_management_agent (
		.aclk                   (sys_clk_clk_clk),                                             //        clock_sink.clk
		.aresetn                (~axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),     //        reset_sink.reset_n
		.read_cp_valid          (agent_pipeline_005_source0_valid),                            //           read_cp.valid
		.read_cp_ready          (agent_pipeline_005_source0_ready),                            //                  .ready
		.read_cp_data           (agent_pipeline_005_source0_data),                             //                  .data
		.read_cp_channel        (agent_pipeline_005_source0_channel),                          //                  .channel
		.read_cp_startofpacket  (agent_pipeline_005_source0_startofpacket),                    //                  .startofpacket
		.read_cp_endofpacket    (agent_pipeline_005_source0_endofpacket),                      //                  .endofpacket
		.write_cp_ready         (agent_pipeline_004_source0_ready),                            //          write_cp.ready
		.write_cp_valid         (agent_pipeline_004_source0_valid),                            //                  .valid
		.write_cp_data          (agent_pipeline_004_source0_data),                             //                  .data
		.write_cp_channel       (agent_pipeline_004_source0_channel),                          //                  .channel
		.write_cp_startofpacket (agent_pipeline_004_source0_startofpacket),                    //                  .startofpacket
		.write_cp_endofpacket   (agent_pipeline_004_source0_endofpacket),                      //                  .endofpacket
		.read_rp_ready          (ad9680_jesd204_link_management_agent_read_rp_ready),          //           read_rp.ready
		.read_rp_valid          (ad9680_jesd204_link_management_agent_read_rp_valid),          //                  .valid
		.read_rp_data           (ad9680_jesd204_link_management_agent_read_rp_data),           //                  .data
		.read_rp_startofpacket  (ad9680_jesd204_link_management_agent_read_rp_startofpacket),  //                  .startofpacket
		.read_rp_endofpacket    (ad9680_jesd204_link_management_agent_read_rp_endofpacket),    //                  .endofpacket
		.write_rp_ready         (ad9680_jesd204_link_management_agent_write_rp_ready),         //          write_rp.ready
		.write_rp_valid         (ad9680_jesd204_link_management_agent_write_rp_valid),         //                  .valid
		.write_rp_data          (ad9680_jesd204_link_management_agent_write_rp_data),          //                  .data
		.write_rp_startofpacket (ad9680_jesd204_link_management_agent_write_rp_startofpacket), //                  .startofpacket
		.write_rp_endofpacket   (ad9680_jesd204_link_management_agent_write_rp_endofpacket),   //                  .endofpacket
		.awaddr                 (ad9680_jesd204_link_management_awaddr),                       // altera_axi_master.awaddr
		.awprot                 (ad9680_jesd204_link_management_awprot),                       //                  .awprot
		.awvalid                (ad9680_jesd204_link_management_awvalid),                      //                  .awvalid
		.awready                (ad9680_jesd204_link_management_awready),                      //                  .awready
		.wdata                  (ad9680_jesd204_link_management_wdata),                        //                  .wdata
		.wstrb                  (ad9680_jesd204_link_management_wstrb),                        //                  .wstrb
		.wvalid                 (ad9680_jesd204_link_management_wvalid),                       //                  .wvalid
		.wready                 (ad9680_jesd204_link_management_wready),                       //                  .wready
		.bresp                  (ad9680_jesd204_link_management_bresp),                        //                  .bresp
		.bvalid                 (ad9680_jesd204_link_management_bvalid),                       //                  .bvalid
		.bready                 (ad9680_jesd204_link_management_bready),                       //                  .bready
		.araddr                 (ad9680_jesd204_link_management_araddr),                       //                  .araddr
		.arprot                 (ad9680_jesd204_link_management_arprot),                       //                  .arprot
		.arvalid                (ad9680_jesd204_link_management_arvalid),                      //                  .arvalid
		.arready                (ad9680_jesd204_link_management_arready),                      //                  .arready
		.rdata                  (ad9680_jesd204_link_management_rdata),                        //                  .rdata
		.rresp                  (ad9680_jesd204_link_management_rresp),                        //                  .rresp
		.rvalid                 (ad9680_jesd204_link_management_rvalid),                       //                  .rvalid
		.rready                 (ad9680_jesd204_link_management_rready)                        //                  .rready
	);

	altera_merlin_axi_slave_ni #(
		.PKT_QOS_H                   (104),
		.PKT_QOS_L                   (104),
		.PKT_THREAD_ID_H             (117),
		.PKT_THREAD_ID_L             (117),
		.PKT_RESPONSE_STATUS_H       (126),
		.PKT_RESPONSE_STATUS_L       (125),
		.PKT_BEGIN_BURST             (103),
		.PKT_CACHE_H                 (124),
		.PKT_CACHE_L                 (121),
		.PKT_DATA_SIDEBAND_H         (102),
		.PKT_DATA_SIDEBAND_L         (102),
		.PKT_ADDR_SIDEBAND_H         (101),
		.PKT_ADDR_SIDEBAND_L         (101),
		.PKT_BURST_TYPE_H            (100),
		.PKT_BURST_TYPE_L            (99),
		.PKT_PROTECTION_H            (120),
		.PKT_PROTECTION_L            (118),
		.PKT_BURST_SIZE_H            (98),
		.PKT_BURST_SIZE_L            (96),
		.PKT_BURSTWRAP_H             (95),
		.PKT_BURSTWRAP_L             (87),
		.PKT_BYTE_CNT_H              (86),
		.PKT_BYTE_CNT_L              (74),
		.PKT_ADDR_H                  (67),
		.PKT_ADDR_L                  (36),
		.PKT_TRANS_EXCLUSIVE         (73),
		.PKT_TRANS_LOCK              (72),
		.PKT_TRANS_COMPRESSED_READ   (68),
		.PKT_TRANS_POSTED            (69),
		.PKT_TRANS_WRITE             (70),
		.PKT_TRANS_READ              (71),
		.PKT_DATA_H                  (31),
		.PKT_DATA_L                  (0),
		.PKT_BYTEEN_H                (35),
		.PKT_BYTEEN_L                (32),
		.PKT_SRC_ID_H                (110),
		.PKT_SRC_ID_L                (105),
		.PKT_DEST_ID_H               (116),
		.PKT_DEST_ID_L               (111),
		.PKT_ORI_BURST_SIZE_L        (127),
		.PKT_ORI_BURST_SIZE_H        (129),
		.ADDR_USER_WIDTH             (1),
		.DATA_USER_WIDTH             (1),
		.ST_DATA_W                   (130),
		.ADDR_WIDTH                  (14),
		.RDATA_WIDTH                 (32),
		.WDATA_WIDTH                 (32),
		.ST_CHANNEL_W                (45),
		.AXI_SLAVE_ID_W              (1),
		.PASS_ID_TO_SLAVE            (0),
		.AXI_VERSION                 ("AXI4Lite"),
		.WRITE_ACCEPTANCE_CAPABILITY (1),
		.READ_ACCEPTANCE_CAPABILITY  (1)
	) ad9144_jesd204_link_reconfig_agent (
		.aclk                   (sys_clk_clk_clk),                                           //        clock_sink.clk
		.aresetn                (~axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),   //        reset_sink.reset_n
		.read_cp_valid          (agent_pipeline_009_source0_valid),                          //           read_cp.valid
		.read_cp_ready          (agent_pipeline_009_source0_ready),                          //                  .ready
		.read_cp_data           (agent_pipeline_009_source0_data),                           //                  .data
		.read_cp_channel        (agent_pipeline_009_source0_channel),                        //                  .channel
		.read_cp_startofpacket  (agent_pipeline_009_source0_startofpacket),                  //                  .startofpacket
		.read_cp_endofpacket    (agent_pipeline_009_source0_endofpacket),                    //                  .endofpacket
		.write_cp_ready         (agent_pipeline_008_source0_ready),                          //          write_cp.ready
		.write_cp_valid         (agent_pipeline_008_source0_valid),                          //                  .valid
		.write_cp_data          (agent_pipeline_008_source0_data),                           //                  .data
		.write_cp_channel       (agent_pipeline_008_source0_channel),                        //                  .channel
		.write_cp_startofpacket (agent_pipeline_008_source0_startofpacket),                  //                  .startofpacket
		.write_cp_endofpacket   (agent_pipeline_008_source0_endofpacket),                    //                  .endofpacket
		.read_rp_ready          (ad9144_jesd204_link_reconfig_agent_read_rp_ready),          //           read_rp.ready
		.read_rp_valid          (ad9144_jesd204_link_reconfig_agent_read_rp_valid),          //                  .valid
		.read_rp_data           (ad9144_jesd204_link_reconfig_agent_read_rp_data),           //                  .data
		.read_rp_startofpacket  (ad9144_jesd204_link_reconfig_agent_read_rp_startofpacket),  //                  .startofpacket
		.read_rp_endofpacket    (ad9144_jesd204_link_reconfig_agent_read_rp_endofpacket),    //                  .endofpacket
		.write_rp_ready         (ad9144_jesd204_link_reconfig_agent_write_rp_ready),         //          write_rp.ready
		.write_rp_valid         (ad9144_jesd204_link_reconfig_agent_write_rp_valid),         //                  .valid
		.write_rp_data          (ad9144_jesd204_link_reconfig_agent_write_rp_data),          //                  .data
		.write_rp_startofpacket (ad9144_jesd204_link_reconfig_agent_write_rp_startofpacket), //                  .startofpacket
		.write_rp_endofpacket   (ad9144_jesd204_link_reconfig_agent_write_rp_endofpacket),   //                  .endofpacket
		.awaddr                 (ad9144_jesd204_link_reconfig_awaddr),                       // altera_axi_master.awaddr
		.awprot                 (ad9144_jesd204_link_reconfig_awprot),                       //                  .awprot
		.awvalid                (ad9144_jesd204_link_reconfig_awvalid),                      //                  .awvalid
		.awready                (ad9144_jesd204_link_reconfig_awready),                      //                  .awready
		.wdata                  (ad9144_jesd204_link_reconfig_wdata),                        //                  .wdata
		.wstrb                  (ad9144_jesd204_link_reconfig_wstrb),                        //                  .wstrb
		.wvalid                 (ad9144_jesd204_link_reconfig_wvalid),                       //                  .wvalid
		.wready                 (ad9144_jesd204_link_reconfig_wready),                       //                  .wready
		.bresp                  (ad9144_jesd204_link_reconfig_bresp),                        //                  .bresp
		.bvalid                 (ad9144_jesd204_link_reconfig_bvalid),                       //                  .bvalid
		.bready                 (ad9144_jesd204_link_reconfig_bready),                       //                  .bready
		.araddr                 (ad9144_jesd204_link_reconfig_araddr),                       //                  .araddr
		.arprot                 (ad9144_jesd204_link_reconfig_arprot),                       //                  .arprot
		.arvalid                (ad9144_jesd204_link_reconfig_arvalid),                      //                  .arvalid
		.arready                (ad9144_jesd204_link_reconfig_arready),                      //                  .arready
		.rdata                  (ad9144_jesd204_link_reconfig_rdata),                        //                  .rdata
		.rresp                  (ad9144_jesd204_link_reconfig_rresp),                        //                  .rresp
		.rvalid                 (ad9144_jesd204_link_reconfig_rvalid),                       //                  .rvalid
		.rready                 (ad9144_jesd204_link_reconfig_rready)                        //                  .rready
	);

	altera_merlin_axi_slave_ni #(
		.PKT_QOS_H                   (104),
		.PKT_QOS_L                   (104),
		.PKT_THREAD_ID_H             (117),
		.PKT_THREAD_ID_L             (117),
		.PKT_RESPONSE_STATUS_H       (126),
		.PKT_RESPONSE_STATUS_L       (125),
		.PKT_BEGIN_BURST             (103),
		.PKT_CACHE_H                 (124),
		.PKT_CACHE_L                 (121),
		.PKT_DATA_SIDEBAND_H         (102),
		.PKT_DATA_SIDEBAND_L         (102),
		.PKT_ADDR_SIDEBAND_H         (101),
		.PKT_ADDR_SIDEBAND_L         (101),
		.PKT_BURST_TYPE_H            (100),
		.PKT_BURST_TYPE_L            (99),
		.PKT_PROTECTION_H            (120),
		.PKT_PROTECTION_L            (118),
		.PKT_BURST_SIZE_H            (98),
		.PKT_BURST_SIZE_L            (96),
		.PKT_BURSTWRAP_H             (95),
		.PKT_BURSTWRAP_L             (87),
		.PKT_BYTE_CNT_H              (86),
		.PKT_BYTE_CNT_L              (74),
		.PKT_ADDR_H                  (67),
		.PKT_ADDR_L                  (36),
		.PKT_TRANS_EXCLUSIVE         (73),
		.PKT_TRANS_LOCK              (72),
		.PKT_TRANS_COMPRESSED_READ   (68),
		.PKT_TRANS_POSTED            (69),
		.PKT_TRANS_WRITE             (70),
		.PKT_TRANS_READ              (71),
		.PKT_DATA_H                  (31),
		.PKT_DATA_L                  (0),
		.PKT_BYTEEN_H                (35),
		.PKT_BYTEEN_L                (32),
		.PKT_SRC_ID_H                (110),
		.PKT_SRC_ID_L                (105),
		.PKT_DEST_ID_H               (116),
		.PKT_DEST_ID_L               (111),
		.PKT_ORI_BURST_SIZE_L        (127),
		.PKT_ORI_BURST_SIZE_H        (129),
		.ADDR_USER_WIDTH             (1),
		.DATA_USER_WIDTH             (1),
		.ST_DATA_W                   (130),
		.ADDR_WIDTH                  (14),
		.RDATA_WIDTH                 (32),
		.WDATA_WIDTH                 (32),
		.ST_CHANNEL_W                (45),
		.AXI_SLAVE_ID_W              (1),
		.PASS_ID_TO_SLAVE            (0),
		.AXI_VERSION                 ("AXI4Lite"),
		.WRITE_ACCEPTANCE_CAPABILITY (1),
		.READ_ACCEPTANCE_CAPABILITY  (1)
	) ad9680_jesd204_link_reconfig_agent (
		.aclk                   (sys_clk_clk_clk),                                           //        clock_sink.clk
		.aresetn                (~axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),   //        reset_sink.reset_n
		.read_cp_valid          (agent_pipeline_013_source0_valid),                          //           read_cp.valid
		.read_cp_ready          (agent_pipeline_013_source0_ready),                          //                  .ready
		.read_cp_data           (agent_pipeline_013_source0_data),                           //                  .data
		.read_cp_channel        (agent_pipeline_013_source0_channel),                        //                  .channel
		.read_cp_startofpacket  (agent_pipeline_013_source0_startofpacket),                  //                  .startofpacket
		.read_cp_endofpacket    (agent_pipeline_013_source0_endofpacket),                    //                  .endofpacket
		.write_cp_ready         (agent_pipeline_012_source0_ready),                          //          write_cp.ready
		.write_cp_valid         (agent_pipeline_012_source0_valid),                          //                  .valid
		.write_cp_data          (agent_pipeline_012_source0_data),                           //                  .data
		.write_cp_channel       (agent_pipeline_012_source0_channel),                        //                  .channel
		.write_cp_startofpacket (agent_pipeline_012_source0_startofpacket),                  //                  .startofpacket
		.write_cp_endofpacket   (agent_pipeline_012_source0_endofpacket),                    //                  .endofpacket
		.read_rp_ready          (ad9680_jesd204_link_reconfig_agent_read_rp_ready),          //           read_rp.ready
		.read_rp_valid          (ad9680_jesd204_link_reconfig_agent_read_rp_valid),          //                  .valid
		.read_rp_data           (ad9680_jesd204_link_reconfig_agent_read_rp_data),           //                  .data
		.read_rp_startofpacket  (ad9680_jesd204_link_reconfig_agent_read_rp_startofpacket),  //                  .startofpacket
		.read_rp_endofpacket    (ad9680_jesd204_link_reconfig_agent_read_rp_endofpacket),    //                  .endofpacket
		.write_rp_ready         (ad9680_jesd204_link_reconfig_agent_write_rp_ready),         //          write_rp.ready
		.write_rp_valid         (ad9680_jesd204_link_reconfig_agent_write_rp_valid),         //                  .valid
		.write_rp_data          (ad9680_jesd204_link_reconfig_agent_write_rp_data),          //                  .data
		.write_rp_startofpacket (ad9680_jesd204_link_reconfig_agent_write_rp_startofpacket), //                  .startofpacket
		.write_rp_endofpacket   (ad9680_jesd204_link_reconfig_agent_write_rp_endofpacket),   //                  .endofpacket
		.awaddr                 (ad9680_jesd204_link_reconfig_awaddr),                       // altera_axi_master.awaddr
		.awprot                 (ad9680_jesd204_link_reconfig_awprot),                       //                  .awprot
		.awvalid                (ad9680_jesd204_link_reconfig_awvalid),                      //                  .awvalid
		.awready                (ad9680_jesd204_link_reconfig_awready),                      //                  .awready
		.wdata                  (ad9680_jesd204_link_reconfig_wdata),                        //                  .wdata
		.wstrb                  (ad9680_jesd204_link_reconfig_wstrb),                        //                  .wstrb
		.wvalid                 (ad9680_jesd204_link_reconfig_wvalid),                       //                  .wvalid
		.wready                 (ad9680_jesd204_link_reconfig_wready),                       //                  .wready
		.bresp                  (ad9680_jesd204_link_reconfig_bresp),                        //                  .bresp
		.bvalid                 (ad9680_jesd204_link_reconfig_bvalid),                       //                  .bvalid
		.bready                 (ad9680_jesd204_link_reconfig_bready),                       //                  .bready
		.araddr                 (ad9680_jesd204_link_reconfig_araddr),                       //                  .araddr
		.arprot                 (ad9680_jesd204_link_reconfig_arprot),                       //                  .arprot
		.arvalid                (ad9680_jesd204_link_reconfig_arvalid),                      //                  .arvalid
		.arready                (ad9680_jesd204_link_reconfig_arready),                      //                  .arready
		.rdata                  (ad9680_jesd204_link_reconfig_rdata),                        //                  .rdata
		.rresp                  (ad9680_jesd204_link_reconfig_rresp),                        //                  .rresp
		.rvalid                 (ad9680_jesd204_link_reconfig_rvalid),                       //                  .rvalid
		.rready                 (ad9680_jesd204_link_reconfig_rready)                        //                  .rready
	);

	altera_merlin_axi_slave_ni #(
		.PKT_QOS_H                   (104),
		.PKT_QOS_L                   (104),
		.PKT_THREAD_ID_H             (117),
		.PKT_THREAD_ID_L             (117),
		.PKT_RESPONSE_STATUS_H       (126),
		.PKT_RESPONSE_STATUS_L       (125),
		.PKT_BEGIN_BURST             (103),
		.PKT_CACHE_H                 (124),
		.PKT_CACHE_L                 (121),
		.PKT_DATA_SIDEBAND_H         (102),
		.PKT_DATA_SIDEBAND_L         (102),
		.PKT_ADDR_SIDEBAND_H         (101),
		.PKT_ADDR_SIDEBAND_L         (101),
		.PKT_BURST_TYPE_H            (100),
		.PKT_BURST_TYPE_L            (99),
		.PKT_PROTECTION_H            (120),
		.PKT_PROTECTION_L            (118),
		.PKT_BURST_SIZE_H            (98),
		.PKT_BURST_SIZE_L            (96),
		.PKT_BURSTWRAP_H             (95),
		.PKT_BURSTWRAP_L             (87),
		.PKT_BYTE_CNT_H              (86),
		.PKT_BYTE_CNT_L              (74),
		.PKT_ADDR_H                  (67),
		.PKT_ADDR_L                  (36),
		.PKT_TRANS_EXCLUSIVE         (73),
		.PKT_TRANS_LOCK              (72),
		.PKT_TRANS_COMPRESSED_READ   (68),
		.PKT_TRANS_POSTED            (69),
		.PKT_TRANS_WRITE             (70),
		.PKT_TRANS_READ              (71),
		.PKT_DATA_H                  (31),
		.PKT_DATA_L                  (0),
		.PKT_BYTEEN_H                (35),
		.PKT_BYTEEN_L                (32),
		.PKT_SRC_ID_H                (110),
		.PKT_SRC_ID_L                (105),
		.PKT_DEST_ID_H               (116),
		.PKT_DEST_ID_L               (111),
		.PKT_ORI_BURST_SIZE_L        (127),
		.PKT_ORI_BURST_SIZE_H        (129),
		.ADDR_USER_WIDTH             (1),
		.DATA_USER_WIDTH             (1),
		.ST_DATA_W                   (130),
		.ADDR_WIDTH                  (12),
		.RDATA_WIDTH                 (32),
		.WDATA_WIDTH                 (32),
		.ST_CHANNEL_W                (45),
		.AXI_SLAVE_ID_W              (1),
		.PASS_ID_TO_SLAVE            (0),
		.AXI_VERSION                 ("AXI4Lite"),
		.WRITE_ACCEPTANCE_CAPABILITY (1),
		.READ_ACCEPTANCE_CAPABILITY  (1)
	) axi_ad9144_dma_s_axi_agent (
		.aclk                   (sys_clk_clk_clk),                                         //        clock_sink.clk
		.aresetn                (~axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //        reset_sink.reset_n
		.read_cp_valid          (agent_pipeline_017_source0_valid),                        //           read_cp.valid
		.read_cp_ready          (agent_pipeline_017_source0_ready),                        //                  .ready
		.read_cp_data           (agent_pipeline_017_source0_data),                         //                  .data
		.read_cp_channel        (agent_pipeline_017_source0_channel),                      //                  .channel
		.read_cp_startofpacket  (agent_pipeline_017_source0_startofpacket),                //                  .startofpacket
		.read_cp_endofpacket    (agent_pipeline_017_source0_endofpacket),                  //                  .endofpacket
		.write_cp_ready         (agent_pipeline_016_source0_ready),                        //          write_cp.ready
		.write_cp_valid         (agent_pipeline_016_source0_valid),                        //                  .valid
		.write_cp_data          (agent_pipeline_016_source0_data),                         //                  .data
		.write_cp_channel       (agent_pipeline_016_source0_channel),                      //                  .channel
		.write_cp_startofpacket (agent_pipeline_016_source0_startofpacket),                //                  .startofpacket
		.write_cp_endofpacket   (agent_pipeline_016_source0_endofpacket),                  //                  .endofpacket
		.read_rp_ready          (axi_ad9144_dma_s_axi_agent_read_rp_ready),                //           read_rp.ready
		.read_rp_valid          (axi_ad9144_dma_s_axi_agent_read_rp_valid),                //                  .valid
		.read_rp_data           (axi_ad9144_dma_s_axi_agent_read_rp_data),                 //                  .data
		.read_rp_startofpacket  (axi_ad9144_dma_s_axi_agent_read_rp_startofpacket),        //                  .startofpacket
		.read_rp_endofpacket    (axi_ad9144_dma_s_axi_agent_read_rp_endofpacket),          //                  .endofpacket
		.write_rp_ready         (axi_ad9144_dma_s_axi_agent_write_rp_ready),               //          write_rp.ready
		.write_rp_valid         (axi_ad9144_dma_s_axi_agent_write_rp_valid),               //                  .valid
		.write_rp_data          (axi_ad9144_dma_s_axi_agent_write_rp_data),                //                  .data
		.write_rp_startofpacket (axi_ad9144_dma_s_axi_agent_write_rp_startofpacket),       //                  .startofpacket
		.write_rp_endofpacket   (axi_ad9144_dma_s_axi_agent_write_rp_endofpacket),         //                  .endofpacket
		.awaddr                 (axi_ad9144_dma_s_axi_awaddr),                             // altera_axi_master.awaddr
		.awprot                 (axi_ad9144_dma_s_axi_awprot),                             //                  .awprot
		.awvalid                (axi_ad9144_dma_s_axi_awvalid),                            //                  .awvalid
		.awready                (axi_ad9144_dma_s_axi_awready),                            //                  .awready
		.wdata                  (axi_ad9144_dma_s_axi_wdata),                              //                  .wdata
		.wstrb                  (axi_ad9144_dma_s_axi_wstrb),                              //                  .wstrb
		.wvalid                 (axi_ad9144_dma_s_axi_wvalid),                             //                  .wvalid
		.wready                 (axi_ad9144_dma_s_axi_wready),                             //                  .wready
		.bresp                  (axi_ad9144_dma_s_axi_bresp),                              //                  .bresp
		.bvalid                 (axi_ad9144_dma_s_axi_bvalid),                             //                  .bvalid
		.bready                 (axi_ad9144_dma_s_axi_bready),                             //                  .bready
		.araddr                 (axi_ad9144_dma_s_axi_araddr),                             //                  .araddr
		.arprot                 (axi_ad9144_dma_s_axi_arprot),                             //                  .arprot
		.arvalid                (axi_ad9144_dma_s_axi_arvalid),                            //                  .arvalid
		.arready                (axi_ad9144_dma_s_axi_arready),                            //                  .arready
		.rdata                  (axi_ad9144_dma_s_axi_rdata),                              //                  .rdata
		.rresp                  (axi_ad9144_dma_s_axi_rresp),                              //                  .rresp
		.rvalid                 (axi_ad9144_dma_s_axi_rvalid),                             //                  .rvalid
		.rready                 (axi_ad9144_dma_s_axi_rready)                              //                  .rready
	);

	altera_merlin_axi_slave_ni #(
		.PKT_QOS_H                   (104),
		.PKT_QOS_L                   (104),
		.PKT_THREAD_ID_H             (117),
		.PKT_THREAD_ID_L             (117),
		.PKT_RESPONSE_STATUS_H       (126),
		.PKT_RESPONSE_STATUS_L       (125),
		.PKT_BEGIN_BURST             (103),
		.PKT_CACHE_H                 (124),
		.PKT_CACHE_L                 (121),
		.PKT_DATA_SIDEBAND_H         (102),
		.PKT_DATA_SIDEBAND_L         (102),
		.PKT_ADDR_SIDEBAND_H         (101),
		.PKT_ADDR_SIDEBAND_L         (101),
		.PKT_BURST_TYPE_H            (100),
		.PKT_BURST_TYPE_L            (99),
		.PKT_PROTECTION_H            (120),
		.PKT_PROTECTION_L            (118),
		.PKT_BURST_SIZE_H            (98),
		.PKT_BURST_SIZE_L            (96),
		.PKT_BURSTWRAP_H             (95),
		.PKT_BURSTWRAP_L             (87),
		.PKT_BYTE_CNT_H              (86),
		.PKT_BYTE_CNT_L              (74),
		.PKT_ADDR_H                  (67),
		.PKT_ADDR_L                  (36),
		.PKT_TRANS_EXCLUSIVE         (73),
		.PKT_TRANS_LOCK              (72),
		.PKT_TRANS_COMPRESSED_READ   (68),
		.PKT_TRANS_POSTED            (69),
		.PKT_TRANS_WRITE             (70),
		.PKT_TRANS_READ              (71),
		.PKT_DATA_H                  (31),
		.PKT_DATA_L                  (0),
		.PKT_BYTEEN_H                (35),
		.PKT_BYTEEN_L                (32),
		.PKT_SRC_ID_H                (110),
		.PKT_SRC_ID_L                (105),
		.PKT_DEST_ID_H               (116),
		.PKT_DEST_ID_L               (111),
		.PKT_ORI_BURST_SIZE_L        (127),
		.PKT_ORI_BURST_SIZE_H        (129),
		.ADDR_USER_WIDTH             (1),
		.DATA_USER_WIDTH             (1),
		.ST_DATA_W                   (130),
		.ADDR_WIDTH                  (16),
		.RDATA_WIDTH                 (32),
		.WDATA_WIDTH                 (32),
		.ST_CHANNEL_W                (45),
		.AXI_SLAVE_ID_W              (1),
		.PASS_ID_TO_SLAVE            (0),
		.AXI_VERSION                 ("AXI4Lite"),
		.WRITE_ACCEPTANCE_CAPABILITY (1),
		.READ_ACCEPTANCE_CAPABILITY  (1)
	) axi_ad9144_core_s_axi_agent (
		.aclk                   (sys_clk_clk_clk),                                         //        clock_sink.clk
		.aresetn                (~axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //        reset_sink.reset_n
		.read_cp_valid          (agent_pipeline_021_source0_valid),                        //           read_cp.valid
		.read_cp_ready          (agent_pipeline_021_source0_ready),                        //                  .ready
		.read_cp_data           (agent_pipeline_021_source0_data),                         //                  .data
		.read_cp_channel        (agent_pipeline_021_source0_channel),                      //                  .channel
		.read_cp_startofpacket  (agent_pipeline_021_source0_startofpacket),                //                  .startofpacket
		.read_cp_endofpacket    (agent_pipeline_021_source0_endofpacket),                  //                  .endofpacket
		.write_cp_ready         (agent_pipeline_020_source0_ready),                        //          write_cp.ready
		.write_cp_valid         (agent_pipeline_020_source0_valid),                        //                  .valid
		.write_cp_data          (agent_pipeline_020_source0_data),                         //                  .data
		.write_cp_channel       (agent_pipeline_020_source0_channel),                      //                  .channel
		.write_cp_startofpacket (agent_pipeline_020_source0_startofpacket),                //                  .startofpacket
		.write_cp_endofpacket   (agent_pipeline_020_source0_endofpacket),                  //                  .endofpacket
		.read_rp_ready          (axi_ad9144_core_s_axi_agent_read_rp_ready),               //           read_rp.ready
		.read_rp_valid          (axi_ad9144_core_s_axi_agent_read_rp_valid),               //                  .valid
		.read_rp_data           (axi_ad9144_core_s_axi_agent_read_rp_data),                //                  .data
		.read_rp_startofpacket  (axi_ad9144_core_s_axi_agent_read_rp_startofpacket),       //                  .startofpacket
		.read_rp_endofpacket    (axi_ad9144_core_s_axi_agent_read_rp_endofpacket),         //                  .endofpacket
		.write_rp_ready         (axi_ad9144_core_s_axi_agent_write_rp_ready),              //          write_rp.ready
		.write_rp_valid         (axi_ad9144_core_s_axi_agent_write_rp_valid),              //                  .valid
		.write_rp_data          (axi_ad9144_core_s_axi_agent_write_rp_data),               //                  .data
		.write_rp_startofpacket (axi_ad9144_core_s_axi_agent_write_rp_startofpacket),      //                  .startofpacket
		.write_rp_endofpacket   (axi_ad9144_core_s_axi_agent_write_rp_endofpacket),        //                  .endofpacket
		.awaddr                 (axi_ad9144_core_s_axi_awaddr),                            // altera_axi_master.awaddr
		.awprot                 (axi_ad9144_core_s_axi_awprot),                            //                  .awprot
		.awvalid                (axi_ad9144_core_s_axi_awvalid),                           //                  .awvalid
		.awready                (axi_ad9144_core_s_axi_awready),                           //                  .awready
		.wdata                  (axi_ad9144_core_s_axi_wdata),                             //                  .wdata
		.wstrb                  (axi_ad9144_core_s_axi_wstrb),                             //                  .wstrb
		.wvalid                 (axi_ad9144_core_s_axi_wvalid),                            //                  .wvalid
		.wready                 (axi_ad9144_core_s_axi_wready),                            //                  .wready
		.bresp                  (axi_ad9144_core_s_axi_bresp),                             //                  .bresp
		.bvalid                 (axi_ad9144_core_s_axi_bvalid),                            //                  .bvalid
		.bready                 (axi_ad9144_core_s_axi_bready),                            //                  .bready
		.araddr                 (axi_ad9144_core_s_axi_araddr),                            //                  .araddr
		.arprot                 (axi_ad9144_core_s_axi_arprot),                            //                  .arprot
		.arvalid                (axi_ad9144_core_s_axi_arvalid),                           //                  .arvalid
		.arready                (axi_ad9144_core_s_axi_arready),                           //                  .arready
		.rdata                  (axi_ad9144_core_s_axi_rdata),                             //                  .rdata
		.rresp                  (axi_ad9144_core_s_axi_rresp),                             //                  .rresp
		.rvalid                 (axi_ad9144_core_s_axi_rvalid),                            //                  .rvalid
		.rready                 (axi_ad9144_core_s_axi_rready)                             //                  .rready
	);

	altera_merlin_axi_slave_ni #(
		.PKT_QOS_H                   (104),
		.PKT_QOS_L                   (104),
		.PKT_THREAD_ID_H             (117),
		.PKT_THREAD_ID_L             (117),
		.PKT_RESPONSE_STATUS_H       (126),
		.PKT_RESPONSE_STATUS_L       (125),
		.PKT_BEGIN_BURST             (103),
		.PKT_CACHE_H                 (124),
		.PKT_CACHE_L                 (121),
		.PKT_DATA_SIDEBAND_H         (102),
		.PKT_DATA_SIDEBAND_L         (102),
		.PKT_ADDR_SIDEBAND_H         (101),
		.PKT_ADDR_SIDEBAND_L         (101),
		.PKT_BURST_TYPE_H            (100),
		.PKT_BURST_TYPE_L            (99),
		.PKT_PROTECTION_H            (120),
		.PKT_PROTECTION_L            (118),
		.PKT_BURST_SIZE_H            (98),
		.PKT_BURST_SIZE_L            (96),
		.PKT_BURSTWRAP_H             (95),
		.PKT_BURSTWRAP_L             (87),
		.PKT_BYTE_CNT_H              (86),
		.PKT_BYTE_CNT_L              (74),
		.PKT_ADDR_H                  (67),
		.PKT_ADDR_L                  (36),
		.PKT_TRANS_EXCLUSIVE         (73),
		.PKT_TRANS_LOCK              (72),
		.PKT_TRANS_COMPRESSED_READ   (68),
		.PKT_TRANS_POSTED            (69),
		.PKT_TRANS_WRITE             (70),
		.PKT_TRANS_READ              (71),
		.PKT_DATA_H                  (31),
		.PKT_DATA_L                  (0),
		.PKT_BYTEEN_H                (35),
		.PKT_BYTEEN_L                (32),
		.PKT_SRC_ID_H                (110),
		.PKT_SRC_ID_L                (105),
		.PKT_DEST_ID_H               (116),
		.PKT_DEST_ID_L               (111),
		.PKT_ORI_BURST_SIZE_L        (127),
		.PKT_ORI_BURST_SIZE_H        (129),
		.ADDR_USER_WIDTH             (1),
		.DATA_USER_WIDTH             (1),
		.ST_DATA_W                   (130),
		.ADDR_WIDTH                  (12),
		.RDATA_WIDTH                 (32),
		.WDATA_WIDTH                 (32),
		.ST_CHANNEL_W                (45),
		.AXI_SLAVE_ID_W              (1),
		.PASS_ID_TO_SLAVE            (0),
		.AXI_VERSION                 ("AXI4Lite"),
		.WRITE_ACCEPTANCE_CAPABILITY (1),
		.READ_ACCEPTANCE_CAPABILITY  (1)
	) axi_ad9680_dma_s_axi_agent (
		.aclk                   (sys_clk_clk_clk),                                         //        clock_sink.clk
		.aresetn                (~axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //        reset_sink.reset_n
		.read_cp_valid          (agent_pipeline_025_source0_valid),                        //           read_cp.valid
		.read_cp_ready          (agent_pipeline_025_source0_ready),                        //                  .ready
		.read_cp_data           (agent_pipeline_025_source0_data),                         //                  .data
		.read_cp_channel        (agent_pipeline_025_source0_channel),                      //                  .channel
		.read_cp_startofpacket  (agent_pipeline_025_source0_startofpacket),                //                  .startofpacket
		.read_cp_endofpacket    (agent_pipeline_025_source0_endofpacket),                  //                  .endofpacket
		.write_cp_ready         (agent_pipeline_024_source0_ready),                        //          write_cp.ready
		.write_cp_valid         (agent_pipeline_024_source0_valid),                        //                  .valid
		.write_cp_data          (agent_pipeline_024_source0_data),                         //                  .data
		.write_cp_channel       (agent_pipeline_024_source0_channel),                      //                  .channel
		.write_cp_startofpacket (agent_pipeline_024_source0_startofpacket),                //                  .startofpacket
		.write_cp_endofpacket   (agent_pipeline_024_source0_endofpacket),                  //                  .endofpacket
		.read_rp_ready          (axi_ad9680_dma_s_axi_agent_read_rp_ready),                //           read_rp.ready
		.read_rp_valid          (axi_ad9680_dma_s_axi_agent_read_rp_valid),                //                  .valid
		.read_rp_data           (axi_ad9680_dma_s_axi_agent_read_rp_data),                 //                  .data
		.read_rp_startofpacket  (axi_ad9680_dma_s_axi_agent_read_rp_startofpacket),        //                  .startofpacket
		.read_rp_endofpacket    (axi_ad9680_dma_s_axi_agent_read_rp_endofpacket),          //                  .endofpacket
		.write_rp_ready         (axi_ad9680_dma_s_axi_agent_write_rp_ready),               //          write_rp.ready
		.write_rp_valid         (axi_ad9680_dma_s_axi_agent_write_rp_valid),               //                  .valid
		.write_rp_data          (axi_ad9680_dma_s_axi_agent_write_rp_data),                //                  .data
		.write_rp_startofpacket (axi_ad9680_dma_s_axi_agent_write_rp_startofpacket),       //                  .startofpacket
		.write_rp_endofpacket   (axi_ad9680_dma_s_axi_agent_write_rp_endofpacket),         //                  .endofpacket
		.awaddr                 (axi_ad9680_dma_s_axi_awaddr),                             // altera_axi_master.awaddr
		.awprot                 (axi_ad9680_dma_s_axi_awprot),                             //                  .awprot
		.awvalid                (axi_ad9680_dma_s_axi_awvalid),                            //                  .awvalid
		.awready                (axi_ad9680_dma_s_axi_awready),                            //                  .awready
		.wdata                  (axi_ad9680_dma_s_axi_wdata),                              //                  .wdata
		.wstrb                  (axi_ad9680_dma_s_axi_wstrb),                              //                  .wstrb
		.wvalid                 (axi_ad9680_dma_s_axi_wvalid),                             //                  .wvalid
		.wready                 (axi_ad9680_dma_s_axi_wready),                             //                  .wready
		.bresp                  (axi_ad9680_dma_s_axi_bresp),                              //                  .bresp
		.bvalid                 (axi_ad9680_dma_s_axi_bvalid),                             //                  .bvalid
		.bready                 (axi_ad9680_dma_s_axi_bready),                             //                  .bready
		.araddr                 (axi_ad9680_dma_s_axi_araddr),                             //                  .araddr
		.arprot                 (axi_ad9680_dma_s_axi_arprot),                             //                  .arprot
		.arvalid                (axi_ad9680_dma_s_axi_arvalid),                            //                  .arvalid
		.arready                (axi_ad9680_dma_s_axi_arready),                            //                  .arready
		.rdata                  (axi_ad9680_dma_s_axi_rdata),                              //                  .rdata
		.rresp                  (axi_ad9680_dma_s_axi_rresp),                              //                  .rresp
		.rvalid                 (axi_ad9680_dma_s_axi_rvalid),                             //                  .rvalid
		.rready                 (axi_ad9680_dma_s_axi_rready)                              //                  .rready
	);

	altera_merlin_axi_slave_ni #(
		.PKT_QOS_H                   (104),
		.PKT_QOS_L                   (104),
		.PKT_THREAD_ID_H             (117),
		.PKT_THREAD_ID_L             (117),
		.PKT_RESPONSE_STATUS_H       (126),
		.PKT_RESPONSE_STATUS_L       (125),
		.PKT_BEGIN_BURST             (103),
		.PKT_CACHE_H                 (124),
		.PKT_CACHE_L                 (121),
		.PKT_DATA_SIDEBAND_H         (102),
		.PKT_DATA_SIDEBAND_L         (102),
		.PKT_ADDR_SIDEBAND_H         (101),
		.PKT_ADDR_SIDEBAND_L         (101),
		.PKT_BURST_TYPE_H            (100),
		.PKT_BURST_TYPE_L            (99),
		.PKT_PROTECTION_H            (120),
		.PKT_PROTECTION_L            (118),
		.PKT_BURST_SIZE_H            (98),
		.PKT_BURST_SIZE_L            (96),
		.PKT_BURSTWRAP_H             (95),
		.PKT_BURSTWRAP_L             (87),
		.PKT_BYTE_CNT_H              (86),
		.PKT_BYTE_CNT_L              (74),
		.PKT_ADDR_H                  (67),
		.PKT_ADDR_L                  (36),
		.PKT_TRANS_EXCLUSIVE         (73),
		.PKT_TRANS_LOCK              (72),
		.PKT_TRANS_COMPRESSED_READ   (68),
		.PKT_TRANS_POSTED            (69),
		.PKT_TRANS_WRITE             (70),
		.PKT_TRANS_READ              (71),
		.PKT_DATA_H                  (31),
		.PKT_DATA_L                  (0),
		.PKT_BYTEEN_H                (35),
		.PKT_BYTEEN_L                (32),
		.PKT_SRC_ID_H                (110),
		.PKT_SRC_ID_L                (105),
		.PKT_DEST_ID_H               (116),
		.PKT_DEST_ID_L               (111),
		.PKT_ORI_BURST_SIZE_L        (127),
		.PKT_ORI_BURST_SIZE_H        (129),
		.ADDR_USER_WIDTH             (1),
		.DATA_USER_WIDTH             (1),
		.ST_DATA_W                   (130),
		.ADDR_WIDTH                  (16),
		.RDATA_WIDTH                 (32),
		.WDATA_WIDTH                 (32),
		.ST_CHANNEL_W                (45),
		.AXI_SLAVE_ID_W              (1),
		.PASS_ID_TO_SLAVE            (0),
		.AXI_VERSION                 ("AXI4Lite"),
		.WRITE_ACCEPTANCE_CAPABILITY (1),
		.READ_ACCEPTANCE_CAPABILITY  (1)
	) axi_ad9680_core_s_axi_agent (
		.aclk                   (sys_clk_clk_clk),                                         //        clock_sink.clk
		.aresetn                (~axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //        reset_sink.reset_n
		.read_cp_valid          (agent_pipeline_029_source0_valid),                        //           read_cp.valid
		.read_cp_ready          (agent_pipeline_029_source0_ready),                        //                  .ready
		.read_cp_data           (agent_pipeline_029_source0_data),                         //                  .data
		.read_cp_channel        (agent_pipeline_029_source0_channel),                      //                  .channel
		.read_cp_startofpacket  (agent_pipeline_029_source0_startofpacket),                //                  .startofpacket
		.read_cp_endofpacket    (agent_pipeline_029_source0_endofpacket),                  //                  .endofpacket
		.write_cp_ready         (agent_pipeline_028_source0_ready),                        //          write_cp.ready
		.write_cp_valid         (agent_pipeline_028_source0_valid),                        //                  .valid
		.write_cp_data          (agent_pipeline_028_source0_data),                         //                  .data
		.write_cp_channel       (agent_pipeline_028_source0_channel),                      //                  .channel
		.write_cp_startofpacket (agent_pipeline_028_source0_startofpacket),                //                  .startofpacket
		.write_cp_endofpacket   (agent_pipeline_028_source0_endofpacket),                  //                  .endofpacket
		.read_rp_ready          (axi_ad9680_core_s_axi_agent_read_rp_ready),               //           read_rp.ready
		.read_rp_valid          (axi_ad9680_core_s_axi_agent_read_rp_valid),               //                  .valid
		.read_rp_data           (axi_ad9680_core_s_axi_agent_read_rp_data),                //                  .data
		.read_rp_startofpacket  (axi_ad9680_core_s_axi_agent_read_rp_startofpacket),       //                  .startofpacket
		.read_rp_endofpacket    (axi_ad9680_core_s_axi_agent_read_rp_endofpacket),         //                  .endofpacket
		.write_rp_ready         (axi_ad9680_core_s_axi_agent_write_rp_ready),              //          write_rp.ready
		.write_rp_valid         (axi_ad9680_core_s_axi_agent_write_rp_valid),              //                  .valid
		.write_rp_data          (axi_ad9680_core_s_axi_agent_write_rp_data),               //                  .data
		.write_rp_startofpacket (axi_ad9680_core_s_axi_agent_write_rp_startofpacket),      //                  .startofpacket
		.write_rp_endofpacket   (axi_ad9680_core_s_axi_agent_write_rp_endofpacket),        //                  .endofpacket
		.awaddr                 (axi_ad9680_core_s_axi_awaddr),                            // altera_axi_master.awaddr
		.awprot                 (axi_ad9680_core_s_axi_awprot),                            //                  .awprot
		.awvalid                (axi_ad9680_core_s_axi_awvalid),                           //                  .awvalid
		.awready                (axi_ad9680_core_s_axi_awready),                           //                  .awready
		.wdata                  (axi_ad9680_core_s_axi_wdata),                             //                  .wdata
		.wstrb                  (axi_ad9680_core_s_axi_wstrb),                             //                  .wstrb
		.wvalid                 (axi_ad9680_core_s_axi_wvalid),                            //                  .wvalid
		.wready                 (axi_ad9680_core_s_axi_wready),                            //                  .wready
		.bresp                  (axi_ad9680_core_s_axi_bresp),                             //                  .bresp
		.bvalid                 (axi_ad9680_core_s_axi_bvalid),                            //                  .bvalid
		.bready                 (axi_ad9680_core_s_axi_bready),                            //                  .bready
		.araddr                 (axi_ad9680_core_s_axi_araddr),                            //                  .araddr
		.arprot                 (axi_ad9680_core_s_axi_arprot),                            //                  .arprot
		.arvalid                (axi_ad9680_core_s_axi_arvalid),                           //                  .arvalid
		.arready                (axi_ad9680_core_s_axi_arready),                           //                  .arready
		.rdata                  (axi_ad9680_core_s_axi_rdata),                             //                  .rdata
		.rresp                  (axi_ad9680_core_s_axi_rresp),                             //                  .rresp
		.rvalid                 (axi_ad9680_core_s_axi_rvalid),                            //                  .rvalid
		.rready                 (axi_ad9680_core_s_axi_rready)                             //                  .rready
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) sys_uart_avalon_jtag_slave_agent (
		.clk                     (sys_clk_clk_clk),                                             //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),      //       clk_reset.reset
		.m0_address              (sys_uart_avalon_jtag_slave_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sys_uart_avalon_jtag_slave_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sys_uart_avalon_jtag_slave_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sys_uart_avalon_jtag_slave_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sys_uart_avalon_jtag_slave_agent_m0_lock),                    //                .lock
		.m0_readdata             (sys_uart_avalon_jtag_slave_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sys_uart_avalon_jtag_slave_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sys_uart_avalon_jtag_slave_agent_m0_read),                    //                .read
		.m0_waitrequest          (sys_uart_avalon_jtag_slave_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sys_uart_avalon_jtag_slave_agent_m0_writedata),               //                .writedata
		.m0_write                (sys_uart_avalon_jtag_slave_agent_m0_write),                   //                .write
		.rp_endofpacket          (sys_uart_avalon_jtag_slave_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sys_uart_avalon_jtag_slave_agent_rp_ready),                   //                .ready
		.rp_valid                (sys_uart_avalon_jtag_slave_agent_rp_valid),                   //                .valid
		.rp_data                 (sys_uart_avalon_jtag_slave_agent_rp_data),                    //                .data
		.rp_startofpacket        (sys_uart_avalon_jtag_slave_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (agent_pipeline_032_source0_ready),                            //              cp.ready
		.cp_valid                (agent_pipeline_032_source0_valid),                            //                .valid
		.cp_data                 (agent_pipeline_032_source0_data),                             //                .data
		.cp_startofpacket        (agent_pipeline_032_source0_startofpacket),                    //                .startofpacket
		.cp_endofpacket          (agent_pipeline_032_source0_endofpacket),                      //                .endofpacket
		.cp_channel              (agent_pipeline_032_source0_channel),                          //                .channel
		.rf_sink_ready           (sys_uart_avalon_jtag_slave_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sys_uart_avalon_jtag_slave_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sys_uart_avalon_jtag_slave_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sys_uart_avalon_jtag_slave_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sys_uart_avalon_jtag_slave_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sys_uart_avalon_jtag_slave_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sys_uart_avalon_jtag_slave_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sys_uart_avalon_jtag_slave_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sys_uart_avalon_jtag_slave_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sys_uart_avalon_jtag_slave_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_out_0_ready),                               // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_out_0_valid),                               //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_out_0_data),                                //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_out_0_error),                               //                .error
		.rdata_fifo_src_ready    (sys_uart_avalon_jtag_slave_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_uart_avalon_jtag_slave_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sys_uart_avalon_jtag_slave_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                       //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                         //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_uart_avalon_jtag_slave_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                             //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),      // clk_reset.reset
		.in_data           (sys_uart_avalon_jtag_slave_agent_rf_source_data),             //        in.data
		.in_valid          (sys_uart_avalon_jtag_slave_agent_rf_source_valid),            //          .valid
		.in_ready          (sys_uart_avalon_jtag_slave_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sys_uart_avalon_jtag_slave_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sys_uart_avalon_jtag_slave_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sys_uart_avalon_jtag_slave_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sys_uart_avalon_jtag_slave_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sys_uart_avalon_jtag_slave_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sys_uart_avalon_jtag_slave_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sys_uart_avalon_jtag_slave_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                       // (terminated)
		.csr_read          (1'b0),                                                        // (terminated)
		.csr_write         (1'b0),                                                        // (terminated)
		.csr_readdata      (),                                                            // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                        // (terminated)
		.almost_full_data  (),                                                            // (terminated)
		.almost_empty_data (),                                                            // (terminated)
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.in_error          (1'b0),                                                        // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_channel        (1'b0),                                                        // (terminated)
		.out_channel       ()                                                             // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_uart_avalon_jtag_slave_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_uart_avalon_jtag_slave_agent_rdata_fifo_src_data),   //        in.data
		.in_valid          (sys_uart_avalon_jtag_slave_agent_rdata_fifo_src_valid),  //          .valid
		.in_ready          (sys_uart_avalon_jtag_slave_agent_rdata_fifo_src_ready),  //          .ready
		.out_data          (sys_uart_avalon_jtag_slave_agent_rdata_fifo_out_data),   //       out.data
		.out_valid         (sys_uart_avalon_jtag_slave_agent_rdata_fifo_out_valid),  //          .valid
		.out_ready         (sys_uart_avalon_jtag_slave_agent_rdata_fifo_out_ready),  //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) sys_ethernet_control_port_agent (
		.clk                     (sys_clk_clk_clk),                                            //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),     //       clk_reset.reset
		.m0_address              (sys_ethernet_control_port_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sys_ethernet_control_port_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sys_ethernet_control_port_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sys_ethernet_control_port_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sys_ethernet_control_port_agent_m0_lock),                    //                .lock
		.m0_readdata             (sys_ethernet_control_port_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sys_ethernet_control_port_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sys_ethernet_control_port_agent_m0_read),                    //                .read
		.m0_waitrequest          (sys_ethernet_control_port_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sys_ethernet_control_port_agent_m0_writedata),               //                .writedata
		.m0_write                (sys_ethernet_control_port_agent_m0_write),                   //                .write
		.rp_endofpacket          (sys_ethernet_control_port_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sys_ethernet_control_port_agent_rp_ready),                   //                .ready
		.rp_valid                (sys_ethernet_control_port_agent_rp_valid),                   //                .valid
		.rp_data                 (sys_ethernet_control_port_agent_rp_data),                    //                .data
		.rp_startofpacket        (sys_ethernet_control_port_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (agent_pipeline_034_source0_ready),                           //              cp.ready
		.cp_valid                (agent_pipeline_034_source0_valid),                           //                .valid
		.cp_data                 (agent_pipeline_034_source0_data),                            //                .data
		.cp_startofpacket        (agent_pipeline_034_source0_startofpacket),                   //                .startofpacket
		.cp_endofpacket          (agent_pipeline_034_source0_endofpacket),                     //                .endofpacket
		.cp_channel              (agent_pipeline_034_source0_channel),                         //                .channel
		.rf_sink_ready           (sys_ethernet_control_port_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sys_ethernet_control_port_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sys_ethernet_control_port_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sys_ethernet_control_port_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sys_ethernet_control_port_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sys_ethernet_control_port_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sys_ethernet_control_port_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sys_ethernet_control_port_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sys_ethernet_control_port_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sys_ethernet_control_port_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_001_out_0_ready),                          // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_001_out_0_valid),                          //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_001_out_0_data),                           //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_001_out_0_error),                          //                .error
		.rdata_fifo_src_ready    (sys_ethernet_control_port_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_ethernet_control_port_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sys_ethernet_control_port_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                      //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                        //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_ethernet_control_port_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                            //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),     // clk_reset.reset
		.in_data           (sys_ethernet_control_port_agent_rf_source_data),             //        in.data
		.in_valid          (sys_ethernet_control_port_agent_rf_source_valid),            //          .valid
		.in_ready          (sys_ethernet_control_port_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sys_ethernet_control_port_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sys_ethernet_control_port_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sys_ethernet_control_port_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sys_ethernet_control_port_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sys_ethernet_control_port_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sys_ethernet_control_port_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sys_ethernet_control_port_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                      // (terminated)
		.csr_read          (1'b0),                                                       // (terminated)
		.csr_write         (1'b0),                                                       // (terminated)
		.csr_readdata      (),                                                           // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                       // (terminated)
		.almost_full_data  (),                                                           // (terminated)
		.almost_empty_data (),                                                           // (terminated)
		.in_empty          (1'b0),                                                       // (terminated)
		.out_empty         (),                                                           // (terminated)
		.in_error          (1'b0),                                                       // (terminated)
		.out_error         (),                                                           // (terminated)
		.in_channel        (1'b0),                                                       // (terminated)
		.out_channel       ()                                                            // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_ethernet_control_port_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_ethernet_control_port_agent_rdata_fifo_src_data),    //        in.data
		.in_valid          (sys_ethernet_control_port_agent_rdata_fifo_src_valid),   //          .valid
		.in_ready          (sys_ethernet_control_port_agent_rdata_fifo_src_ready),   //          .ready
		.out_data          (sys_ethernet_control_port_agent_rdata_fifo_out_data),    //       out.data
		.out_valid         (sys_ethernet_control_port_agent_rdata_fifo_out_valid),   //          .valid
		.out_ready         (sys_ethernet_control_port_agent_rdata_fifo_out_ready),   //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) sys_id_control_slave_agent (
		.clk                     (sys_clk_clk_clk),                                        //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //       clk_reset.reset
		.m0_address              (sys_id_control_slave_agent_m0_address),                  //              m0.address
		.m0_burstcount           (sys_id_control_slave_agent_m0_burstcount),               //                .burstcount
		.m0_byteenable           (sys_id_control_slave_agent_m0_byteenable),               //                .byteenable
		.m0_debugaccess          (sys_id_control_slave_agent_m0_debugaccess),              //                .debugaccess
		.m0_lock                 (sys_id_control_slave_agent_m0_lock),                     //                .lock
		.m0_readdata             (sys_id_control_slave_agent_m0_readdata),                 //                .readdata
		.m0_readdatavalid        (sys_id_control_slave_agent_m0_readdatavalid),            //                .readdatavalid
		.m0_read                 (sys_id_control_slave_agent_m0_read),                     //                .read
		.m0_waitrequest          (sys_id_control_slave_agent_m0_waitrequest),              //                .waitrequest
		.m0_writedata            (sys_id_control_slave_agent_m0_writedata),                //                .writedata
		.m0_write                (sys_id_control_slave_agent_m0_write),                    //                .write
		.rp_endofpacket          (sys_id_control_slave_agent_rp_endofpacket),              //              rp.endofpacket
		.rp_ready                (sys_id_control_slave_agent_rp_ready),                    //                .ready
		.rp_valid                (sys_id_control_slave_agent_rp_valid),                    //                .valid
		.rp_data                 (sys_id_control_slave_agent_rp_data),                     //                .data
		.rp_startofpacket        (sys_id_control_slave_agent_rp_startofpacket),            //                .startofpacket
		.cp_ready                (agent_pipeline_036_source0_ready),                       //              cp.ready
		.cp_valid                (agent_pipeline_036_source0_valid),                       //                .valid
		.cp_data                 (agent_pipeline_036_source0_data),                        //                .data
		.cp_startofpacket        (agent_pipeline_036_source0_startofpacket),               //                .startofpacket
		.cp_endofpacket          (agent_pipeline_036_source0_endofpacket),                 //                .endofpacket
		.cp_channel              (agent_pipeline_036_source0_channel),                     //                .channel
		.rf_sink_ready           (sys_id_control_slave_agent_rsp_fifo_out_ready),          //         rf_sink.ready
		.rf_sink_valid           (sys_id_control_slave_agent_rsp_fifo_out_valid),          //                .valid
		.rf_sink_startofpacket   (sys_id_control_slave_agent_rsp_fifo_out_startofpacket),  //                .startofpacket
		.rf_sink_endofpacket     (sys_id_control_slave_agent_rsp_fifo_out_endofpacket),    //                .endofpacket
		.rf_sink_data            (sys_id_control_slave_agent_rsp_fifo_out_data),           //                .data
		.rf_source_ready         (sys_id_control_slave_agent_rf_source_ready),             //       rf_source.ready
		.rf_source_valid         (sys_id_control_slave_agent_rf_source_valid),             //                .valid
		.rf_source_startofpacket (sys_id_control_slave_agent_rf_source_startofpacket),     //                .startofpacket
		.rf_source_endofpacket   (sys_id_control_slave_agent_rf_source_endofpacket),       //                .endofpacket
		.rf_source_data          (sys_id_control_slave_agent_rf_source_data),              //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_002_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_002_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_002_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_002_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (sys_id_control_slave_agent_rdata_fifo_src_ready),        //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_id_control_slave_agent_rdata_fifo_src_valid),        //                .valid
		.rdata_fifo_src_data     (sys_id_control_slave_agent_rdata_fifo_src_data),         //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_id_control_slave_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_id_control_slave_agent_rf_source_data),              //        in.data
		.in_valid          (sys_id_control_slave_agent_rf_source_valid),             //          .valid
		.in_ready          (sys_id_control_slave_agent_rf_source_ready),             //          .ready
		.in_startofpacket  (sys_id_control_slave_agent_rf_source_startofpacket),     //          .startofpacket
		.in_endofpacket    (sys_id_control_slave_agent_rf_source_endofpacket),       //          .endofpacket
		.out_data          (sys_id_control_slave_agent_rsp_fifo_out_data),           //       out.data
		.out_valid         (sys_id_control_slave_agent_rsp_fifo_out_valid),          //          .valid
		.out_ready         (sys_id_control_slave_agent_rsp_fifo_out_ready),          //          .ready
		.out_startofpacket (sys_id_control_slave_agent_rsp_fifo_out_startofpacket),  //          .startofpacket
		.out_endofpacket   (sys_id_control_slave_agent_rsp_fifo_out_endofpacket),    //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_id_control_slave_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_id_control_slave_agent_rdata_fifo_src_data),         //        in.data
		.in_valid          (sys_id_control_slave_agent_rdata_fifo_src_valid),        //          .valid
		.in_ready          (sys_id_control_slave_agent_rdata_fifo_src_ready),        //          .ready
		.out_data          (sys_id_control_slave_agent_rdata_fifo_out_data),         //       out.data
		.out_valid         (sys_id_control_slave_agent_rdata_fifo_out_valid),        //          .valid
		.out_ready         (sys_id_control_slave_agent_rdata_fifo_out_ready),        //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) sys_ethernet_dma_rx_csr_agent (
		.clk                     (sys_clk_clk_clk),                                          //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),   //       clk_reset.reset
		.m0_address              (sys_ethernet_dma_rx_csr_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sys_ethernet_dma_rx_csr_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sys_ethernet_dma_rx_csr_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sys_ethernet_dma_rx_csr_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sys_ethernet_dma_rx_csr_agent_m0_lock),                    //                .lock
		.m0_readdata             (sys_ethernet_dma_rx_csr_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sys_ethernet_dma_rx_csr_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sys_ethernet_dma_rx_csr_agent_m0_read),                    //                .read
		.m0_waitrequest          (sys_ethernet_dma_rx_csr_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sys_ethernet_dma_rx_csr_agent_m0_writedata),               //                .writedata
		.m0_write                (sys_ethernet_dma_rx_csr_agent_m0_write),                   //                .write
		.rp_endofpacket          (sys_ethernet_dma_rx_csr_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sys_ethernet_dma_rx_csr_agent_rp_ready),                   //                .ready
		.rp_valid                (sys_ethernet_dma_rx_csr_agent_rp_valid),                   //                .valid
		.rp_data                 (sys_ethernet_dma_rx_csr_agent_rp_data),                    //                .data
		.rp_startofpacket        (sys_ethernet_dma_rx_csr_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (agent_pipeline_038_source0_ready),                         //              cp.ready
		.cp_valid                (agent_pipeline_038_source0_valid),                         //                .valid
		.cp_data                 (agent_pipeline_038_source0_data),                          //                .data
		.cp_startofpacket        (agent_pipeline_038_source0_startofpacket),                 //                .startofpacket
		.cp_endofpacket          (agent_pipeline_038_source0_endofpacket),                   //                .endofpacket
		.cp_channel              (agent_pipeline_038_source0_channel),                       //                .channel
		.rf_sink_ready           (sys_ethernet_dma_rx_csr_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sys_ethernet_dma_rx_csr_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sys_ethernet_dma_rx_csr_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sys_ethernet_dma_rx_csr_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sys_ethernet_dma_rx_csr_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sys_ethernet_dma_rx_csr_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sys_ethernet_dma_rx_csr_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sys_ethernet_dma_rx_csr_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sys_ethernet_dma_rx_csr_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sys_ethernet_dma_rx_csr_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_003_out_0_ready),                        // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_003_out_0_valid),                        //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_003_out_0_data),                         //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_003_out_0_error),                        //                .error
		.rdata_fifo_src_ready    (sys_ethernet_dma_rx_csr_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_ethernet_dma_rx_csr_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sys_ethernet_dma_rx_csr_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                    //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                      //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_ethernet_dma_rx_csr_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                          //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),   // clk_reset.reset
		.in_data           (sys_ethernet_dma_rx_csr_agent_rf_source_data),             //        in.data
		.in_valid          (sys_ethernet_dma_rx_csr_agent_rf_source_valid),            //          .valid
		.in_ready          (sys_ethernet_dma_rx_csr_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sys_ethernet_dma_rx_csr_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sys_ethernet_dma_rx_csr_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sys_ethernet_dma_rx_csr_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sys_ethernet_dma_rx_csr_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sys_ethernet_dma_rx_csr_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sys_ethernet_dma_rx_csr_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sys_ethernet_dma_rx_csr_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                    // (terminated)
		.csr_read          (1'b0),                                                     // (terminated)
		.csr_write         (1'b0),                                                     // (terminated)
		.csr_readdata      (),                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                     // (terminated)
		.almost_full_data  (),                                                         // (terminated)
		.almost_empty_data (),                                                         // (terminated)
		.in_empty          (1'b0),                                                     // (terminated)
		.out_empty         (),                                                         // (terminated)
		.in_error          (1'b0),                                                     // (terminated)
		.out_error         (),                                                         // (terminated)
		.in_channel        (1'b0),                                                     // (terminated)
		.out_channel       ()                                                          // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_ethernet_dma_rx_csr_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_ethernet_dma_rx_csr_agent_rdata_fifo_src_data),      //        in.data
		.in_valid          (sys_ethernet_dma_rx_csr_agent_rdata_fifo_src_valid),     //          .valid
		.in_ready          (sys_ethernet_dma_rx_csr_agent_rdata_fifo_src_ready),     //          .ready
		.out_data          (sys_ethernet_dma_rx_csr_agent_rdata_fifo_out_data),      //       out.data
		.out_valid         (sys_ethernet_dma_rx_csr_agent_rdata_fifo_out_valid),     //          .valid
		.out_ready         (sys_ethernet_dma_rx_csr_agent_rdata_fifo_out_ready),     //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) sys_ethernet_dma_tx_csr_agent (
		.clk                     (sys_clk_clk_clk),                                          //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),   //       clk_reset.reset
		.m0_address              (sys_ethernet_dma_tx_csr_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sys_ethernet_dma_tx_csr_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sys_ethernet_dma_tx_csr_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sys_ethernet_dma_tx_csr_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sys_ethernet_dma_tx_csr_agent_m0_lock),                    //                .lock
		.m0_readdata             (sys_ethernet_dma_tx_csr_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sys_ethernet_dma_tx_csr_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sys_ethernet_dma_tx_csr_agent_m0_read),                    //                .read
		.m0_waitrequest          (sys_ethernet_dma_tx_csr_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sys_ethernet_dma_tx_csr_agent_m0_writedata),               //                .writedata
		.m0_write                (sys_ethernet_dma_tx_csr_agent_m0_write),                   //                .write
		.rp_endofpacket          (sys_ethernet_dma_tx_csr_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sys_ethernet_dma_tx_csr_agent_rp_ready),                   //                .ready
		.rp_valid                (sys_ethernet_dma_tx_csr_agent_rp_valid),                   //                .valid
		.rp_data                 (sys_ethernet_dma_tx_csr_agent_rp_data),                    //                .data
		.rp_startofpacket        (sys_ethernet_dma_tx_csr_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (agent_pipeline_040_source0_ready),                         //              cp.ready
		.cp_valid                (agent_pipeline_040_source0_valid),                         //                .valid
		.cp_data                 (agent_pipeline_040_source0_data),                          //                .data
		.cp_startofpacket        (agent_pipeline_040_source0_startofpacket),                 //                .startofpacket
		.cp_endofpacket          (agent_pipeline_040_source0_endofpacket),                   //                .endofpacket
		.cp_channel              (agent_pipeline_040_source0_channel),                       //                .channel
		.rf_sink_ready           (sys_ethernet_dma_tx_csr_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sys_ethernet_dma_tx_csr_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sys_ethernet_dma_tx_csr_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sys_ethernet_dma_tx_csr_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sys_ethernet_dma_tx_csr_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sys_ethernet_dma_tx_csr_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sys_ethernet_dma_tx_csr_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sys_ethernet_dma_tx_csr_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sys_ethernet_dma_tx_csr_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sys_ethernet_dma_tx_csr_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_004_out_0_ready),                        // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_004_out_0_valid),                        //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_004_out_0_data),                         //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_004_out_0_error),                        //                .error
		.rdata_fifo_src_ready    (sys_ethernet_dma_tx_csr_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_ethernet_dma_tx_csr_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sys_ethernet_dma_tx_csr_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                    //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                      //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_ethernet_dma_tx_csr_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                          //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),   // clk_reset.reset
		.in_data           (sys_ethernet_dma_tx_csr_agent_rf_source_data),             //        in.data
		.in_valid          (sys_ethernet_dma_tx_csr_agent_rf_source_valid),            //          .valid
		.in_ready          (sys_ethernet_dma_tx_csr_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sys_ethernet_dma_tx_csr_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sys_ethernet_dma_tx_csr_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sys_ethernet_dma_tx_csr_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sys_ethernet_dma_tx_csr_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sys_ethernet_dma_tx_csr_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sys_ethernet_dma_tx_csr_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sys_ethernet_dma_tx_csr_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                    // (terminated)
		.csr_read          (1'b0),                                                     // (terminated)
		.csr_write         (1'b0),                                                     // (terminated)
		.csr_readdata      (),                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                     // (terminated)
		.almost_full_data  (),                                                         // (terminated)
		.almost_empty_data (),                                                         // (terminated)
		.in_empty          (1'b0),                                                     // (terminated)
		.out_empty         (),                                                         // (terminated)
		.in_error          (1'b0),                                                     // (terminated)
		.out_error         (),                                                         // (terminated)
		.in_channel        (1'b0),                                                     // (terminated)
		.out_channel       ()                                                          // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_ethernet_dma_tx_csr_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_ethernet_dma_tx_csr_agent_rdata_fifo_src_data),      //        in.data
		.in_valid          (sys_ethernet_dma_tx_csr_agent_rdata_fifo_src_valid),     //          .valid
		.in_ready          (sys_ethernet_dma_tx_csr_agent_rdata_fifo_src_ready),     //          .ready
		.out_data          (sys_ethernet_dma_tx_csr_agent_rdata_fifo_out_data),      //       out.data
		.out_valid         (sys_ethernet_dma_tx_csr_agent_rdata_fifo_out_valid),     //          .valid
		.out_ready         (sys_ethernet_dma_tx_csr_agent_rdata_fifo_out_ready),     //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (669),
		.PKT_ORI_BURST_SIZE_L      (667),
		.PKT_RESPONSE_STATUS_H     (666),
		.PKT_RESPONSE_STATUS_L     (665),
		.PKT_BURST_SIZE_H          (638),
		.PKT_BURST_SIZE_L          (636),
		.PKT_TRANS_LOCK            (612),
		.PKT_BEGIN_BURST           (643),
		.PKT_PROTECTION_H          (660),
		.PKT_PROTECTION_L          (658),
		.PKT_BURSTWRAP_H           (635),
		.PKT_BURSTWRAP_L           (627),
		.PKT_BYTE_CNT_H            (626),
		.PKT_BYTE_CNT_L            (614),
		.PKT_ADDR_H                (607),
		.PKT_ADDR_L                (576),
		.PKT_TRANS_COMPRESSED_READ (608),
		.PKT_TRANS_POSTED          (609),
		.PKT_TRANS_WRITE           (610),
		.PKT_TRANS_READ            (611),
		.PKT_DATA_H                (511),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (575),
		.PKT_BYTEEN_L              (512),
		.PKT_SRC_ID_H              (650),
		.PKT_SRC_ID_L              (645),
		.PKT_DEST_ID_H             (656),
		.PKT_DEST_ID_L             (651),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (670),
		.AVS_BURSTCOUNT_W          (13),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) sys_ddr3_cntrl_ctrl_amm_0_agent (
		.clk                     (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //             clk.clk
		.reset                   (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), //       clk_reset.reset
		.m0_address              (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_address),                             //              m0.address
		.m0_burstcount           (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_burstcount),                          //                .burstcount
		.m0_byteenable           (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_byteenable),                          //                .byteenable
		.m0_debugaccess          (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_debugaccess),                         //                .debugaccess
		.m0_lock                 (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_lock),                                //                .lock
		.m0_readdata             (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_readdata),                            //                .readdata
		.m0_readdatavalid        (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_readdatavalid),                       //                .readdatavalid
		.m0_read                 (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_read),                                //                .read
		.m0_waitrequest          (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_waitrequest),                         //                .waitrequest
		.m0_writedata            (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_writedata),                           //                .writedata
		.m0_write                (sys_ddr3_cntrl_ctrl_amm_0_agent_m0_write),                               //                .write
		.rp_endofpacket          (sys_ddr3_cntrl_ctrl_amm_0_agent_rp_endofpacket),                         //              rp.endofpacket
		.rp_ready                (sys_ddr3_cntrl_ctrl_amm_0_agent_rp_ready),                               //                .ready
		.rp_valid                (sys_ddr3_cntrl_ctrl_amm_0_agent_rp_valid),                               //                .valid
		.rp_data                 (sys_ddr3_cntrl_ctrl_amm_0_agent_rp_data),                                //                .data
		.rp_startofpacket        (sys_ddr3_cntrl_ctrl_amm_0_agent_rp_startofpacket),                       //                .startofpacket
		.cp_ready                (agent_pipeline_042_source0_ready),                                       //              cp.ready
		.cp_valid                (agent_pipeline_042_source0_valid),                                       //                .valid
		.cp_data                 (agent_pipeline_042_source0_data),                                        //                .data
		.cp_startofpacket        (agent_pipeline_042_source0_startofpacket),                               //                .startofpacket
		.cp_endofpacket          (agent_pipeline_042_source0_endofpacket),                                 //                .endofpacket
		.cp_channel              (agent_pipeline_042_source0_channel),                                     //                .channel
		.rf_sink_ready           (sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo_out_ready),                     //         rf_sink.ready
		.rf_sink_valid           (sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo_out_valid),                     //                .valid
		.rf_sink_startofpacket   (sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo_out_startofpacket),             //                .startofpacket
		.rf_sink_endofpacket     (sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo_out_endofpacket),               //                .endofpacket
		.rf_sink_data            (sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo_out_data),                      //                .data
		.rf_source_ready         (sys_ddr3_cntrl_ctrl_amm_0_agent_rf_source_ready),                        //       rf_source.ready
		.rf_source_valid         (sys_ddr3_cntrl_ctrl_amm_0_agent_rf_source_valid),                        //                .valid
		.rf_source_startofpacket (sys_ddr3_cntrl_ctrl_amm_0_agent_rf_source_startofpacket),                //                .startofpacket
		.rf_source_endofpacket   (sys_ddr3_cntrl_ctrl_amm_0_agent_rf_source_endofpacket),                  //                .endofpacket
		.rf_source_data          (sys_ddr3_cntrl_ctrl_amm_0_agent_rf_source_data),                         //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_005_out_0_ready),                                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_005_out_0_valid),                                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_005_out_0_data),                                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_005_out_0_error),                                      //                .error
		.rdata_fifo_src_ready    (sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo_src_ready),                   //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo_src_valid),                   //                .valid
		.rdata_fifo_src_data     (sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo_src_data),                    //                .data
		.m0_response             (2'b00),                                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (671),
		.FIFO_DEPTH          (65),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       clk.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_ddr3_cntrl_ctrl_amm_0_agent_rf_source_data),                         //        in.data
		.in_valid          (sys_ddr3_cntrl_ctrl_amm_0_agent_rf_source_valid),                        //          .valid
		.in_ready          (sys_ddr3_cntrl_ctrl_amm_0_agent_rf_source_ready),                        //          .ready
		.in_startofpacket  (sys_ddr3_cntrl_ctrl_amm_0_agent_rf_source_startofpacket),                //          .startofpacket
		.in_endofpacket    (sys_ddr3_cntrl_ctrl_amm_0_agent_rf_source_endofpacket),                  //          .endofpacket
		.out_data          (sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo_out_data),                      //       out.data
		.out_valid         (sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo_out_valid),                     //          .valid
		.out_ready         (sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo_out_ready),                     //          .ready
		.out_startofpacket (sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo_out_startofpacket),             //          .startofpacket
		.out_endofpacket   (sys_ddr3_cntrl_ctrl_amm_0_agent_rsp_fifo_out_endofpacket),               //          .endofpacket
		.csr_address       (2'b00),                                                                  // (terminated)
		.csr_read          (1'b0),                                                                   // (terminated)
		.csr_write         (1'b0),                                                                   // (terminated)
		.csr_readdata      (),                                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                   // (terminated)
		.almost_full_data  (),                                                                       // (terminated)
		.almost_empty_data (),                                                                       // (terminated)
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.in_error          (1'b0),                                                                   // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_channel        (1'b0),                                                                   // (terminated)
		.out_channel       ()                                                                        // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (514),
		.FIFO_DEPTH          (1024),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (3),
		.USE_MEMORY_BLOCKS   (1),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       clk.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo_src_data),                    //        in.data
		.in_valid          (sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo_src_valid),                   //          .valid
		.in_ready          (sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo_src_ready),                   //          .ready
		.out_data          (sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo_out_data),                    //       out.data
		.out_valid         (sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo_out_valid),                   //          .valid
		.out_ready         (sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo_out_ready),                   //          .ready
		.csr_address       (2'b00),                                                                  // (terminated)
		.csr_read          (1'b0),                                                                   // (terminated)
		.csr_write         (1'b0),                                                                   // (terminated)
		.csr_readdata      (),                                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                   // (terminated)
		.almost_full_data  (),                                                                       // (terminated)
		.almost_empty_data (),                                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                                   // (terminated)
		.out_startofpacket (),                                                                       // (terminated)
		.out_endofpacket   (),                                                                       // (terminated)
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.in_error          (1'b0),                                                                   // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_channel        (1'b0),                                                                   // (terminated)
		.out_channel       ()                                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) sys_cpu_debug_mem_slave_agent (
		.clk                     (sys_clk_clk_clk),                                          //             clk.clk
		.reset                   (sys_cpu_reset_reset_bridge_in_reset_reset),                //       clk_reset.reset
		.m0_address              (sys_cpu_debug_mem_slave_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sys_cpu_debug_mem_slave_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sys_cpu_debug_mem_slave_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sys_cpu_debug_mem_slave_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sys_cpu_debug_mem_slave_agent_m0_lock),                    //                .lock
		.m0_readdata             (sys_cpu_debug_mem_slave_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sys_cpu_debug_mem_slave_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sys_cpu_debug_mem_slave_agent_m0_read),                    //                .read
		.m0_waitrequest          (sys_cpu_debug_mem_slave_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sys_cpu_debug_mem_slave_agent_m0_writedata),               //                .writedata
		.m0_write                (sys_cpu_debug_mem_slave_agent_m0_write),                   //                .write
		.rp_endofpacket          (sys_cpu_debug_mem_slave_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sys_cpu_debug_mem_slave_agent_rp_ready),                   //                .ready
		.rp_valid                (sys_cpu_debug_mem_slave_agent_rp_valid),                   //                .valid
		.rp_data                 (sys_cpu_debug_mem_slave_agent_rp_data),                    //                .data
		.rp_startofpacket        (sys_cpu_debug_mem_slave_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (agent_pipeline_044_source0_ready),                         //              cp.ready
		.cp_valid                (agent_pipeline_044_source0_valid),                         //                .valid
		.cp_data                 (agent_pipeline_044_source0_data),                          //                .data
		.cp_startofpacket        (agent_pipeline_044_source0_startofpacket),                 //                .startofpacket
		.cp_endofpacket          (agent_pipeline_044_source0_endofpacket),                   //                .endofpacket
		.cp_channel              (agent_pipeline_044_source0_channel),                       //                .channel
		.rf_sink_ready           (sys_cpu_debug_mem_slave_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sys_cpu_debug_mem_slave_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sys_cpu_debug_mem_slave_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sys_cpu_debug_mem_slave_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sys_cpu_debug_mem_slave_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sys_cpu_debug_mem_slave_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sys_cpu_debug_mem_slave_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sys_cpu_debug_mem_slave_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sys_cpu_debug_mem_slave_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sys_cpu_debug_mem_slave_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_006_out_0_ready),                        // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_006_out_0_valid),                        //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_006_out_0_data),                         //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_006_out_0_error),                        //                .error
		.rdata_fifo_src_ready    (sys_cpu_debug_mem_slave_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_cpu_debug_mem_slave_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sys_cpu_debug_mem_slave_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                    //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                      //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_cpu_debug_mem_slave_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                          //       clk.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.in_data           (sys_cpu_debug_mem_slave_agent_rf_source_data),             //        in.data
		.in_valid          (sys_cpu_debug_mem_slave_agent_rf_source_valid),            //          .valid
		.in_ready          (sys_cpu_debug_mem_slave_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sys_cpu_debug_mem_slave_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sys_cpu_debug_mem_slave_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sys_cpu_debug_mem_slave_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sys_cpu_debug_mem_slave_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sys_cpu_debug_mem_slave_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sys_cpu_debug_mem_slave_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sys_cpu_debug_mem_slave_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                    // (terminated)
		.csr_read          (1'b0),                                                     // (terminated)
		.csr_write         (1'b0),                                                     // (terminated)
		.csr_readdata      (),                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                     // (terminated)
		.almost_full_data  (),                                                         // (terminated)
		.almost_empty_data (),                                                         // (terminated)
		.in_empty          (1'b0),                                                     // (terminated)
		.out_empty         (),                                                         // (terminated)
		.in_error          (1'b0),                                                     // (terminated)
		.out_error         (),                                                         // (terminated)
		.in_channel        (1'b0),                                                     // (terminated)
		.out_channel       ()                                                          // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_cpu_debug_mem_slave_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                    //       clk.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset),          // clk_reset.reset
		.in_data           (sys_cpu_debug_mem_slave_agent_rdata_fifo_src_data),  //        in.data
		.in_valid          (sys_cpu_debug_mem_slave_agent_rdata_fifo_src_valid), //          .valid
		.in_ready          (sys_cpu_debug_mem_slave_agent_rdata_fifo_src_ready), //          .ready
		.out_data          (sys_cpu_debug_mem_slave_agent_rdata_fifo_out_data),  //       out.data
		.out_valid         (sys_cpu_debug_mem_slave_agent_rdata_fifo_out_valid), //          .valid
		.out_ready         (sys_cpu_debug_mem_slave_agent_rdata_fifo_out_ready), //          .ready
		.csr_address       (2'b00),                                              // (terminated)
		.csr_read          (1'b0),                                               // (terminated)
		.csr_write         (1'b0),                                               // (terminated)
		.csr_readdata      (),                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),               // (terminated)
		.almost_full_data  (),                                                   // (terminated)
		.almost_empty_data (),                                                   // (terminated)
		.in_startofpacket  (1'b0),                                               // (terminated)
		.in_endofpacket    (1'b0),                                               // (terminated)
		.out_startofpacket (),                                                   // (terminated)
		.out_endofpacket   (),                                                   // (terminated)
		.in_empty          (1'b0),                                               // (terminated)
		.out_empty         (),                                                   // (terminated)
		.in_error          (1'b0),                                               // (terminated)
		.out_error         (),                                                   // (terminated)
		.in_channel        (1'b0),                                               // (terminated)
		.out_channel       ()                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (381),
		.PKT_ORI_BURST_SIZE_L      (379),
		.PKT_RESPONSE_STATUS_H     (378),
		.PKT_RESPONSE_STATUS_L     (377),
		.PKT_BURST_SIZE_H          (350),
		.PKT_BURST_SIZE_L          (348),
		.PKT_TRANS_LOCK            (324),
		.PKT_BEGIN_BURST           (355),
		.PKT_PROTECTION_H          (372),
		.PKT_PROTECTION_L          (370),
		.PKT_BURSTWRAP_H           (347),
		.PKT_BURSTWRAP_L           (339),
		.PKT_BYTE_CNT_H            (338),
		.PKT_BYTE_CNT_L            (326),
		.PKT_ADDR_H                (319),
		.PKT_ADDR_L                (288),
		.PKT_TRANS_COMPRESSED_READ (320),
		.PKT_TRANS_POSTED          (321),
		.PKT_TRANS_WRITE           (322),
		.PKT_TRANS_READ            (323),
		.PKT_DATA_H                (255),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (287),
		.PKT_BYTEEN_L              (256),
		.PKT_SRC_ID_H              (362),
		.PKT_SRC_ID_L              (357),
		.PKT_DEST_ID_H             (368),
		.PKT_DEST_ID_L             (363),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (382),
		.AVS_BURSTCOUNT_W          (6),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) sys_ethernet_dma_rx_descriptor_slave_agent (
		.clk                     (sys_clk_clk_clk),                                                       //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                //       clk_reset.reset
		.m0_address              (sys_ethernet_dma_rx_descriptor_slave_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sys_ethernet_dma_rx_descriptor_slave_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sys_ethernet_dma_rx_descriptor_slave_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sys_ethernet_dma_rx_descriptor_slave_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sys_ethernet_dma_rx_descriptor_slave_agent_m0_lock),                    //                .lock
		.m0_readdata             (sys_ethernet_dma_rx_descriptor_slave_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sys_ethernet_dma_rx_descriptor_slave_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sys_ethernet_dma_rx_descriptor_slave_agent_m0_read),                    //                .read
		.m0_waitrequest          (sys_ethernet_dma_rx_descriptor_slave_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sys_ethernet_dma_rx_descriptor_slave_agent_m0_writedata),               //                .writedata
		.m0_write                (sys_ethernet_dma_rx_descriptor_slave_agent_m0_write),                   //                .write
		.rp_endofpacket          (sys_ethernet_dma_rx_descriptor_slave_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sys_ethernet_dma_rx_descriptor_slave_agent_rp_ready),                   //                .ready
		.rp_valid                (sys_ethernet_dma_rx_descriptor_slave_agent_rp_valid),                   //                .valid
		.rp_data                 (sys_ethernet_dma_rx_descriptor_slave_agent_rp_data),                    //                .data
		.rp_startofpacket        (sys_ethernet_dma_rx_descriptor_slave_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (agent_pipeline_046_source0_ready),                                      //              cp.ready
		.cp_valid                (agent_pipeline_046_source0_valid),                                      //                .valid
		.cp_data                 (agent_pipeline_046_source0_data),                                       //                .data
		.cp_startofpacket        (agent_pipeline_046_source0_startofpacket),                              //                .startofpacket
		.cp_endofpacket          (agent_pipeline_046_source0_endofpacket),                                //                .endofpacket
		.cp_channel              (agent_pipeline_046_source0_channel),                                    //                .channel
		.rf_sink_ready           (sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sys_ethernet_dma_rx_descriptor_slave_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sys_ethernet_dma_rx_descriptor_slave_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sys_ethernet_dma_rx_descriptor_slave_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sys_ethernet_dma_rx_descriptor_slave_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sys_ethernet_dma_rx_descriptor_slave_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_007_out_0_ready),                                     // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_007_out_0_valid),                                     //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_007_out_0_data),                                      //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_007_out_0_error),                                     //                .error
		.rdata_fifo_src_ready    (sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                   //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (383),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                       //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.in_data           (sys_ethernet_dma_rx_descriptor_slave_agent_rf_source_data),             //        in.data
		.in_valid          (sys_ethernet_dma_rx_descriptor_slave_agent_rf_source_valid),            //          .valid
		.in_ready          (sys_ethernet_dma_rx_descriptor_slave_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sys_ethernet_dma_rx_descriptor_slave_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sys_ethernet_dma_rx_descriptor_slave_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sys_ethernet_dma_rx_descriptor_slave_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                 // (terminated)
		.csr_read          (1'b0),                                                                  // (terminated)
		.csr_write         (1'b0),                                                                  // (terminated)
		.csr_readdata      (),                                                                      // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                  // (terminated)
		.almost_full_data  (),                                                                      // (terminated)
		.almost_empty_data (),                                                                      // (terminated)
		.in_empty          (1'b0),                                                                  // (terminated)
		.out_empty         (),                                                                      // (terminated)
		.in_error          (1'b0),                                                                  // (terminated)
		.out_error         (),                                                                      // (terminated)
		.in_channel        (1'b0),                                                                  // (terminated)
		.out_channel       ()                                                                       // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (258),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                                 //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),          // clk_reset.reset
		.in_data           (sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo_src_data),  //        in.data
		.in_valid          (sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo_src_valid), //          .valid
		.in_ready          (sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo_src_ready), //          .ready
		.out_data          (sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo_out_data),  //       out.data
		.out_valid         (sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo_out_valid), //          .valid
		.out_ready         (sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo_out_ready), //          .ready
		.csr_address       (2'b00),                                                           // (terminated)
		.csr_read          (1'b0),                                                            // (terminated)
		.csr_write         (1'b0),                                                            // (terminated)
		.csr_readdata      (),                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                            // (terminated)
		.almost_full_data  (),                                                                // (terminated)
		.almost_empty_data (),                                                                // (terminated)
		.in_startofpacket  (1'b0),                                                            // (terminated)
		.in_endofpacket    (1'b0),                                                            // (terminated)
		.out_startofpacket (),                                                                // (terminated)
		.out_endofpacket   (),                                                                // (terminated)
		.in_empty          (1'b0),                                                            // (terminated)
		.out_empty         (),                                                                // (terminated)
		.in_error          (1'b0),                                                            // (terminated)
		.out_error         (),                                                                // (terminated)
		.in_channel        (1'b0),                                                            // (terminated)
		.out_channel       ()                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (381),
		.PKT_ORI_BURST_SIZE_L      (379),
		.PKT_RESPONSE_STATUS_H     (378),
		.PKT_RESPONSE_STATUS_L     (377),
		.PKT_BURST_SIZE_H          (350),
		.PKT_BURST_SIZE_L          (348),
		.PKT_TRANS_LOCK            (324),
		.PKT_BEGIN_BURST           (355),
		.PKT_PROTECTION_H          (372),
		.PKT_PROTECTION_L          (370),
		.PKT_BURSTWRAP_H           (347),
		.PKT_BURSTWRAP_L           (339),
		.PKT_BYTE_CNT_H            (338),
		.PKT_BYTE_CNT_L            (326),
		.PKT_ADDR_H                (319),
		.PKT_ADDR_L                (288),
		.PKT_TRANS_COMPRESSED_READ (320),
		.PKT_TRANS_POSTED          (321),
		.PKT_TRANS_WRITE           (322),
		.PKT_TRANS_READ            (323),
		.PKT_DATA_H                (255),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (287),
		.PKT_BYTEEN_L              (256),
		.PKT_SRC_ID_H              (362),
		.PKT_SRC_ID_L              (357),
		.PKT_DEST_ID_H             (368),
		.PKT_DEST_ID_L             (363),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (382),
		.AVS_BURSTCOUNT_W          (6),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) sys_ethernet_dma_tx_descriptor_slave_agent (
		.clk                     (sys_clk_clk_clk),                                                       //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                //       clk_reset.reset
		.m0_address              (sys_ethernet_dma_tx_descriptor_slave_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sys_ethernet_dma_tx_descriptor_slave_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sys_ethernet_dma_tx_descriptor_slave_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sys_ethernet_dma_tx_descriptor_slave_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sys_ethernet_dma_tx_descriptor_slave_agent_m0_lock),                    //                .lock
		.m0_readdata             (sys_ethernet_dma_tx_descriptor_slave_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sys_ethernet_dma_tx_descriptor_slave_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sys_ethernet_dma_tx_descriptor_slave_agent_m0_read),                    //                .read
		.m0_waitrequest          (sys_ethernet_dma_tx_descriptor_slave_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sys_ethernet_dma_tx_descriptor_slave_agent_m0_writedata),               //                .writedata
		.m0_write                (sys_ethernet_dma_tx_descriptor_slave_agent_m0_write),                   //                .write
		.rp_endofpacket          (sys_ethernet_dma_tx_descriptor_slave_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sys_ethernet_dma_tx_descriptor_slave_agent_rp_ready),                   //                .ready
		.rp_valid                (sys_ethernet_dma_tx_descriptor_slave_agent_rp_valid),                   //                .valid
		.rp_data                 (sys_ethernet_dma_tx_descriptor_slave_agent_rp_data),                    //                .data
		.rp_startofpacket        (sys_ethernet_dma_tx_descriptor_slave_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (agent_pipeline_048_source0_ready),                                      //              cp.ready
		.cp_valid                (agent_pipeline_048_source0_valid),                                      //                .valid
		.cp_data                 (agent_pipeline_048_source0_data),                                       //                .data
		.cp_startofpacket        (agent_pipeline_048_source0_startofpacket),                              //                .startofpacket
		.cp_endofpacket          (agent_pipeline_048_source0_endofpacket),                                //                .endofpacket
		.cp_channel              (agent_pipeline_048_source0_channel),                                    //                .channel
		.rf_sink_ready           (sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sys_ethernet_dma_tx_descriptor_slave_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sys_ethernet_dma_tx_descriptor_slave_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sys_ethernet_dma_tx_descriptor_slave_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sys_ethernet_dma_tx_descriptor_slave_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sys_ethernet_dma_tx_descriptor_slave_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_008_out_0_ready),                                     // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_008_out_0_valid),                                     //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_008_out_0_data),                                      //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_008_out_0_error),                                     //                .error
		.rdata_fifo_src_ready    (sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                   //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (383),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                       //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.in_data           (sys_ethernet_dma_tx_descriptor_slave_agent_rf_source_data),             //        in.data
		.in_valid          (sys_ethernet_dma_tx_descriptor_slave_agent_rf_source_valid),            //          .valid
		.in_ready          (sys_ethernet_dma_tx_descriptor_slave_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sys_ethernet_dma_tx_descriptor_slave_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sys_ethernet_dma_tx_descriptor_slave_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sys_ethernet_dma_tx_descriptor_slave_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                 // (terminated)
		.csr_read          (1'b0),                                                                  // (terminated)
		.csr_write         (1'b0),                                                                  // (terminated)
		.csr_readdata      (),                                                                      // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                  // (terminated)
		.almost_full_data  (),                                                                      // (terminated)
		.almost_empty_data (),                                                                      // (terminated)
		.in_empty          (1'b0),                                                                  // (terminated)
		.out_empty         (),                                                                      // (terminated)
		.in_error          (1'b0),                                                                  // (terminated)
		.out_error         (),                                                                      // (terminated)
		.in_channel        (1'b0),                                                                  // (terminated)
		.out_channel       ()                                                                       // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (258),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                                 //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),          // clk_reset.reset
		.in_data           (sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo_src_data),  //        in.data
		.in_valid          (sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo_src_valid), //          .valid
		.in_ready          (sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo_src_ready), //          .ready
		.out_data          (sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo_out_data),  //       out.data
		.out_valid         (sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo_out_valid), //          .valid
		.out_ready         (sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo_out_ready), //          .ready
		.csr_address       (2'b00),                                                           // (terminated)
		.csr_read          (1'b0),                                                            // (terminated)
		.csr_write         (1'b0),                                                            // (terminated)
		.csr_readdata      (),                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                            // (terminated)
		.almost_full_data  (),                                                                // (terminated)
		.almost_empty_data (),                                                                // (terminated)
		.in_startofpacket  (1'b0),                                                            // (terminated)
		.in_endofpacket    (1'b0),                                                            // (terminated)
		.out_startofpacket (),                                                                // (terminated)
		.out_endofpacket   (),                                                                // (terminated)
		.in_empty          (1'b0),                                                            // (terminated)
		.out_empty         (),                                                                // (terminated)
		.in_error          (1'b0),                                                            // (terminated)
		.out_error         (),                                                                // (terminated)
		.in_channel        (1'b0),                                                            // (terminated)
		.out_channel       ()                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) ad9144_jesd204_lane_pll_reconfig_agent (
		.clk                     (sys_clk_clk_clk),                                                   //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),            //       clk_reset.reset
		.m0_address              (ad9144_jesd204_lane_pll_reconfig_agent_m0_address),                 //              m0.address
		.m0_burstcount           (ad9144_jesd204_lane_pll_reconfig_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (ad9144_jesd204_lane_pll_reconfig_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (ad9144_jesd204_lane_pll_reconfig_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (ad9144_jesd204_lane_pll_reconfig_agent_m0_lock),                    //                .lock
		.m0_readdata             (ad9144_jesd204_lane_pll_reconfig_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (ad9144_jesd204_lane_pll_reconfig_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (ad9144_jesd204_lane_pll_reconfig_agent_m0_read),                    //                .read
		.m0_waitrequest          (ad9144_jesd204_lane_pll_reconfig_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (ad9144_jesd204_lane_pll_reconfig_agent_m0_writedata),               //                .writedata
		.m0_write                (ad9144_jesd204_lane_pll_reconfig_agent_m0_write),                   //                .write
		.rp_endofpacket          (ad9144_jesd204_lane_pll_reconfig_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (ad9144_jesd204_lane_pll_reconfig_agent_rp_ready),                   //                .ready
		.rp_valid                (ad9144_jesd204_lane_pll_reconfig_agent_rp_valid),                   //                .valid
		.rp_data                 (ad9144_jesd204_lane_pll_reconfig_agent_rp_data),                    //                .data
		.rp_startofpacket        (ad9144_jesd204_lane_pll_reconfig_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (agent_pipeline_050_source0_ready),                                  //              cp.ready
		.cp_valid                (agent_pipeline_050_source0_valid),                                  //                .valid
		.cp_data                 (agent_pipeline_050_source0_data),                                   //                .data
		.cp_startofpacket        (agent_pipeline_050_source0_startofpacket),                          //                .startofpacket
		.cp_endofpacket          (agent_pipeline_050_source0_endofpacket),                            //                .endofpacket
		.cp_channel              (agent_pipeline_050_source0_channel),                                //                .channel
		.rf_sink_ready           (ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (ad9144_jesd204_lane_pll_reconfig_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (ad9144_jesd204_lane_pll_reconfig_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (ad9144_jesd204_lane_pll_reconfig_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (ad9144_jesd204_lane_pll_reconfig_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (ad9144_jesd204_lane_pll_reconfig_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_009_out_0_ready),                                 // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_009_out_0_valid),                                 //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_009_out_0_data),                                  //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_009_out_0_error),                                 //                .error
		.rdata_fifo_src_ready    (ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                               //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                   //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),            // clk_reset.reset
		.in_data           (ad9144_jesd204_lane_pll_reconfig_agent_rf_source_data),             //        in.data
		.in_valid          (ad9144_jesd204_lane_pll_reconfig_agent_rf_source_valid),            //          .valid
		.in_ready          (ad9144_jesd204_lane_pll_reconfig_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (ad9144_jesd204_lane_pll_reconfig_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (ad9144_jesd204_lane_pll_reconfig_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (ad9144_jesd204_lane_pll_reconfig_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                             // (terminated)
		.csr_read          (1'b0),                                                              // (terminated)
		.csr_write         (1'b0),                                                              // (terminated)
		.csr_readdata      (),                                                                  // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                              // (terminated)
		.almost_full_data  (),                                                                  // (terminated)
		.almost_empty_data (),                                                                  // (terminated)
		.in_empty          (1'b0),                                                              // (terminated)
		.out_empty         (),                                                                  // (terminated)
		.in_error          (1'b0),                                                              // (terminated)
		.out_error         (),                                                                  // (terminated)
		.in_channel        (1'b0),                                                              // (terminated)
		.out_channel       ()                                                                   // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                             //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),      // clk_reset.reset
		.in_data           (ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo_src_data),  //        in.data
		.in_valid          (ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo_src_valid), //          .valid
		.in_ready          (ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo_src_ready), //          .ready
		.out_data          (ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo_out_data),  //       out.data
		.out_valid         (ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo_out_valid), //          .valid
		.out_ready         (ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo_out_ready), //          .ready
		.csr_address       (2'b00),                                                       // (terminated)
		.csr_read          (1'b0),                                                        // (terminated)
		.csr_write         (1'b0),                                                        // (terminated)
		.csr_readdata      (),                                                            // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                        // (terminated)
		.almost_full_data  (),                                                            // (terminated)
		.almost_empty_data (),                                                            // (terminated)
		.in_startofpacket  (1'b0),                                                        // (terminated)
		.in_endofpacket    (1'b0),                                                        // (terminated)
		.out_startofpacket (),                                                            // (terminated)
		.out_endofpacket   (),                                                            // (terminated)
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.in_error          (1'b0),                                                        // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_channel        (1'b0),                                                        // (terminated)
		.out_channel       ()                                                             // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) ad9144_jesd204_link_pll_reconfig_agent (
		.clk                     (sys_clk_clk_clk),                                                   //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),            //       clk_reset.reset
		.m0_address              (ad9144_jesd204_link_pll_reconfig_agent_m0_address),                 //              m0.address
		.m0_burstcount           (ad9144_jesd204_link_pll_reconfig_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (ad9144_jesd204_link_pll_reconfig_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (ad9144_jesd204_link_pll_reconfig_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (ad9144_jesd204_link_pll_reconfig_agent_m0_lock),                    //                .lock
		.m0_readdata             (ad9144_jesd204_link_pll_reconfig_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (ad9144_jesd204_link_pll_reconfig_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (ad9144_jesd204_link_pll_reconfig_agent_m0_read),                    //                .read
		.m0_waitrequest          (ad9144_jesd204_link_pll_reconfig_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (ad9144_jesd204_link_pll_reconfig_agent_m0_writedata),               //                .writedata
		.m0_write                (ad9144_jesd204_link_pll_reconfig_agent_m0_write),                   //                .write
		.rp_endofpacket          (ad9144_jesd204_link_pll_reconfig_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (ad9144_jesd204_link_pll_reconfig_agent_rp_ready),                   //                .ready
		.rp_valid                (ad9144_jesd204_link_pll_reconfig_agent_rp_valid),                   //                .valid
		.rp_data                 (ad9144_jesd204_link_pll_reconfig_agent_rp_data),                    //                .data
		.rp_startofpacket        (ad9144_jesd204_link_pll_reconfig_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (agent_pipeline_052_source0_ready),                                  //              cp.ready
		.cp_valid                (agent_pipeline_052_source0_valid),                                  //                .valid
		.cp_data                 (agent_pipeline_052_source0_data),                                   //                .data
		.cp_startofpacket        (agent_pipeline_052_source0_startofpacket),                          //                .startofpacket
		.cp_endofpacket          (agent_pipeline_052_source0_endofpacket),                            //                .endofpacket
		.cp_channel              (agent_pipeline_052_source0_channel),                                //                .channel
		.rf_sink_ready           (ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (ad9144_jesd204_link_pll_reconfig_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (ad9144_jesd204_link_pll_reconfig_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (ad9144_jesd204_link_pll_reconfig_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (ad9144_jesd204_link_pll_reconfig_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (ad9144_jesd204_link_pll_reconfig_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_010_out_0_ready),                                 // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_010_out_0_valid),                                 //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_010_out_0_data),                                  //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_010_out_0_error),                                 //                .error
		.rdata_fifo_src_ready    (ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                               //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                   //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),            // clk_reset.reset
		.in_data           (ad9144_jesd204_link_pll_reconfig_agent_rf_source_data),             //        in.data
		.in_valid          (ad9144_jesd204_link_pll_reconfig_agent_rf_source_valid),            //          .valid
		.in_ready          (ad9144_jesd204_link_pll_reconfig_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (ad9144_jesd204_link_pll_reconfig_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (ad9144_jesd204_link_pll_reconfig_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (ad9144_jesd204_link_pll_reconfig_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                             // (terminated)
		.csr_read          (1'b0),                                                              // (terminated)
		.csr_write         (1'b0),                                                              // (terminated)
		.csr_readdata      (),                                                                  // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                              // (terminated)
		.almost_full_data  (),                                                                  // (terminated)
		.almost_empty_data (),                                                                  // (terminated)
		.in_empty          (1'b0),                                                              // (terminated)
		.out_empty         (),                                                                  // (terminated)
		.in_error          (1'b0),                                                              // (terminated)
		.out_error         (),                                                                  // (terminated)
		.in_channel        (1'b0),                                                              // (terminated)
		.out_channel       ()                                                                   // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                             //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),      // clk_reset.reset
		.in_data           (ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo_src_data),  //        in.data
		.in_valid          (ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo_src_valid), //          .valid
		.in_ready          (ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo_src_ready), //          .ready
		.out_data          (ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo_out_data),  //       out.data
		.out_valid         (ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo_out_valid), //          .valid
		.out_ready         (ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo_out_ready), //          .ready
		.csr_address       (2'b00),                                                       // (terminated)
		.csr_read          (1'b0),                                                        // (terminated)
		.csr_write         (1'b0),                                                        // (terminated)
		.csr_readdata      (),                                                            // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                        // (terminated)
		.almost_full_data  (),                                                            // (terminated)
		.almost_empty_data (),                                                            // (terminated)
		.in_startofpacket  (1'b0),                                                        // (terminated)
		.in_endofpacket    (1'b0),                                                        // (terminated)
		.out_startofpacket (),                                                            // (terminated)
		.out_endofpacket   (),                                                            // (terminated)
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.in_error          (1'b0),                                                        // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_channel        (1'b0),                                                        // (terminated)
		.out_channel       ()                                                             // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) ad9680_jesd204_link_pll_reconfig_agent (
		.clk                     (sys_clk_clk_clk),                                                   //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),            //       clk_reset.reset
		.m0_address              (ad9680_jesd204_link_pll_reconfig_agent_m0_address),                 //              m0.address
		.m0_burstcount           (ad9680_jesd204_link_pll_reconfig_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (ad9680_jesd204_link_pll_reconfig_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (ad9680_jesd204_link_pll_reconfig_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (ad9680_jesd204_link_pll_reconfig_agent_m0_lock),                    //                .lock
		.m0_readdata             (ad9680_jesd204_link_pll_reconfig_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (ad9680_jesd204_link_pll_reconfig_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (ad9680_jesd204_link_pll_reconfig_agent_m0_read),                    //                .read
		.m0_waitrequest          (ad9680_jesd204_link_pll_reconfig_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (ad9680_jesd204_link_pll_reconfig_agent_m0_writedata),               //                .writedata
		.m0_write                (ad9680_jesd204_link_pll_reconfig_agent_m0_write),                   //                .write
		.rp_endofpacket          (ad9680_jesd204_link_pll_reconfig_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (ad9680_jesd204_link_pll_reconfig_agent_rp_ready),                   //                .ready
		.rp_valid                (ad9680_jesd204_link_pll_reconfig_agent_rp_valid),                   //                .valid
		.rp_data                 (ad9680_jesd204_link_pll_reconfig_agent_rp_data),                    //                .data
		.rp_startofpacket        (ad9680_jesd204_link_pll_reconfig_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (agent_pipeline_054_source0_ready),                                  //              cp.ready
		.cp_valid                (agent_pipeline_054_source0_valid),                                  //                .valid
		.cp_data                 (agent_pipeline_054_source0_data),                                   //                .data
		.cp_startofpacket        (agent_pipeline_054_source0_startofpacket),                          //                .startofpacket
		.cp_endofpacket          (agent_pipeline_054_source0_endofpacket),                            //                .endofpacket
		.cp_channel              (agent_pipeline_054_source0_channel),                                //                .channel
		.rf_sink_ready           (ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (ad9680_jesd204_link_pll_reconfig_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (ad9680_jesd204_link_pll_reconfig_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (ad9680_jesd204_link_pll_reconfig_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (ad9680_jesd204_link_pll_reconfig_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (ad9680_jesd204_link_pll_reconfig_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_011_out_0_ready),                                 // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_011_out_0_valid),                                 //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_011_out_0_data),                                  //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_011_out_0_error),                                 //                .error
		.rdata_fifo_src_ready    (ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                               //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                                   //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),            // clk_reset.reset
		.in_data           (ad9680_jesd204_link_pll_reconfig_agent_rf_source_data),             //        in.data
		.in_valid          (ad9680_jesd204_link_pll_reconfig_agent_rf_source_valid),            //          .valid
		.in_ready          (ad9680_jesd204_link_pll_reconfig_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (ad9680_jesd204_link_pll_reconfig_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (ad9680_jesd204_link_pll_reconfig_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (ad9680_jesd204_link_pll_reconfig_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                             // (terminated)
		.csr_read          (1'b0),                                                              // (terminated)
		.csr_write         (1'b0),                                                              // (terminated)
		.csr_readdata      (),                                                                  // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                              // (terminated)
		.almost_full_data  (),                                                                  // (terminated)
		.almost_empty_data (),                                                                  // (terminated)
		.in_empty          (1'b0),                                                              // (terminated)
		.out_empty         (),                                                                  // (terminated)
		.in_error          (1'b0),                                                              // (terminated)
		.out_error         (),                                                                  // (terminated)
		.in_channel        (1'b0),                                                              // (terminated)
		.out_channel       ()                                                                   // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                             //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),      // clk_reset.reset
		.in_data           (ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo_src_data),  //        in.data
		.in_valid          (ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo_src_valid), //          .valid
		.in_ready          (ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo_src_ready), //          .ready
		.out_data          (ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo_out_data),  //       out.data
		.out_valid         (ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo_out_valid), //          .valid
		.out_ready         (ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo_out_ready), //          .ready
		.csr_address       (2'b00),                                                       // (terminated)
		.csr_read          (1'b0),                                                        // (terminated)
		.csr_write         (1'b0),                                                        // (terminated)
		.csr_readdata      (),                                                            // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                        // (terminated)
		.almost_full_data  (),                                                            // (terminated)
		.almost_empty_data (),                                                            // (terminated)
		.in_startofpacket  (1'b0),                                                        // (terminated)
		.in_endofpacket    (1'b0),                                                        // (terminated)
		.out_startofpacket (),                                                            // (terminated)
		.out_endofpacket   (),                                                            // (terminated)
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.in_error          (1'b0),                                                        // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_channel        (1'b0),                                                        // (terminated)
		.out_channel       ()                                                             // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) avl_adxcfg_0_rcfg_s0_agent (
		.clk                     (sys_clk_clk_clk),                                        //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //       clk_reset.reset
		.m0_address              (avl_adxcfg_0_rcfg_s0_agent_m0_address),                  //              m0.address
		.m0_burstcount           (avl_adxcfg_0_rcfg_s0_agent_m0_burstcount),               //                .burstcount
		.m0_byteenable           (avl_adxcfg_0_rcfg_s0_agent_m0_byteenable),               //                .byteenable
		.m0_debugaccess          (avl_adxcfg_0_rcfg_s0_agent_m0_debugaccess),              //                .debugaccess
		.m0_lock                 (avl_adxcfg_0_rcfg_s0_agent_m0_lock),                     //                .lock
		.m0_readdata             (avl_adxcfg_0_rcfg_s0_agent_m0_readdata),                 //                .readdata
		.m0_readdatavalid        (avl_adxcfg_0_rcfg_s0_agent_m0_readdatavalid),            //                .readdatavalid
		.m0_read                 (avl_adxcfg_0_rcfg_s0_agent_m0_read),                     //                .read
		.m0_waitrequest          (avl_adxcfg_0_rcfg_s0_agent_m0_waitrequest),              //                .waitrequest
		.m0_writedata            (avl_adxcfg_0_rcfg_s0_agent_m0_writedata),                //                .writedata
		.m0_write                (avl_adxcfg_0_rcfg_s0_agent_m0_write),                    //                .write
		.rp_endofpacket          (avl_adxcfg_0_rcfg_s0_agent_rp_endofpacket),              //              rp.endofpacket
		.rp_ready                (avl_adxcfg_0_rcfg_s0_agent_rp_ready),                    //                .ready
		.rp_valid                (avl_adxcfg_0_rcfg_s0_agent_rp_valid),                    //                .valid
		.rp_data                 (avl_adxcfg_0_rcfg_s0_agent_rp_data),                     //                .data
		.rp_startofpacket        (avl_adxcfg_0_rcfg_s0_agent_rp_startofpacket),            //                .startofpacket
		.cp_ready                (agent_pipeline_056_source0_ready),                       //              cp.ready
		.cp_valid                (agent_pipeline_056_source0_valid),                       //                .valid
		.cp_data                 (agent_pipeline_056_source0_data),                        //                .data
		.cp_startofpacket        (agent_pipeline_056_source0_startofpacket),               //                .startofpacket
		.cp_endofpacket          (agent_pipeline_056_source0_endofpacket),                 //                .endofpacket
		.cp_channel              (agent_pipeline_056_source0_channel),                     //                .channel
		.rf_sink_ready           (avl_adxcfg_0_rcfg_s0_agent_rsp_fifo_out_ready),          //         rf_sink.ready
		.rf_sink_valid           (avl_adxcfg_0_rcfg_s0_agent_rsp_fifo_out_valid),          //                .valid
		.rf_sink_startofpacket   (avl_adxcfg_0_rcfg_s0_agent_rsp_fifo_out_startofpacket),  //                .startofpacket
		.rf_sink_endofpacket     (avl_adxcfg_0_rcfg_s0_agent_rsp_fifo_out_endofpacket),    //                .endofpacket
		.rf_sink_data            (avl_adxcfg_0_rcfg_s0_agent_rsp_fifo_out_data),           //                .data
		.rf_source_ready         (avl_adxcfg_0_rcfg_s0_agent_rf_source_ready),             //       rf_source.ready
		.rf_source_valid         (avl_adxcfg_0_rcfg_s0_agent_rf_source_valid),             //                .valid
		.rf_source_startofpacket (avl_adxcfg_0_rcfg_s0_agent_rf_source_startofpacket),     //                .startofpacket
		.rf_source_endofpacket   (avl_adxcfg_0_rcfg_s0_agent_rf_source_endofpacket),       //                .endofpacket
		.rf_source_data          (avl_adxcfg_0_rcfg_s0_agent_rf_source_data),              //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_012_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_012_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_012_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_012_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (avl_adxcfg_0_rcfg_s0_agent_rdata_fifo_src_ready),        //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (avl_adxcfg_0_rcfg_s0_agent_rdata_fifo_src_valid),        //                .valid
		.rdata_fifo_src_data     (avl_adxcfg_0_rcfg_s0_agent_rdata_fifo_src_data),         //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) avl_adxcfg_0_rcfg_s0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (avl_adxcfg_0_rcfg_s0_agent_rf_source_data),              //        in.data
		.in_valid          (avl_adxcfg_0_rcfg_s0_agent_rf_source_valid),             //          .valid
		.in_ready          (avl_adxcfg_0_rcfg_s0_agent_rf_source_ready),             //          .ready
		.in_startofpacket  (avl_adxcfg_0_rcfg_s0_agent_rf_source_startofpacket),     //          .startofpacket
		.in_endofpacket    (avl_adxcfg_0_rcfg_s0_agent_rf_source_endofpacket),       //          .endofpacket
		.out_data          (avl_adxcfg_0_rcfg_s0_agent_rsp_fifo_out_data),           //       out.data
		.out_valid         (avl_adxcfg_0_rcfg_s0_agent_rsp_fifo_out_valid),          //          .valid
		.out_ready         (avl_adxcfg_0_rcfg_s0_agent_rsp_fifo_out_ready),          //          .ready
		.out_startofpacket (avl_adxcfg_0_rcfg_s0_agent_rsp_fifo_out_startofpacket),  //          .startofpacket
		.out_endofpacket   (avl_adxcfg_0_rcfg_s0_agent_rsp_fifo_out_endofpacket),    //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) avl_adxcfg_0_rcfg_s0_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (avl_adxcfg_0_rcfg_s0_agent_rdata_fifo_src_data),         //        in.data
		.in_valid          (avl_adxcfg_0_rcfg_s0_agent_rdata_fifo_src_valid),        //          .valid
		.in_ready          (avl_adxcfg_0_rcfg_s0_agent_rdata_fifo_src_ready),        //          .ready
		.out_data          (avl_adxcfg_0_rcfg_s0_agent_rdata_fifo_out_data),         //       out.data
		.out_valid         (avl_adxcfg_0_rcfg_s0_agent_rdata_fifo_out_valid),        //          .valid
		.out_ready         (avl_adxcfg_0_rcfg_s0_agent_rdata_fifo_out_ready),        //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) avl_adxcfg_1_rcfg_s0_agent (
		.clk                     (sys_clk_clk_clk),                                        //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //       clk_reset.reset
		.m0_address              (avl_adxcfg_1_rcfg_s0_agent_m0_address),                  //              m0.address
		.m0_burstcount           (avl_adxcfg_1_rcfg_s0_agent_m0_burstcount),               //                .burstcount
		.m0_byteenable           (avl_adxcfg_1_rcfg_s0_agent_m0_byteenable),               //                .byteenable
		.m0_debugaccess          (avl_adxcfg_1_rcfg_s0_agent_m0_debugaccess),              //                .debugaccess
		.m0_lock                 (avl_adxcfg_1_rcfg_s0_agent_m0_lock),                     //                .lock
		.m0_readdata             (avl_adxcfg_1_rcfg_s0_agent_m0_readdata),                 //                .readdata
		.m0_readdatavalid        (avl_adxcfg_1_rcfg_s0_agent_m0_readdatavalid),            //                .readdatavalid
		.m0_read                 (avl_adxcfg_1_rcfg_s0_agent_m0_read),                     //                .read
		.m0_waitrequest          (avl_adxcfg_1_rcfg_s0_agent_m0_waitrequest),              //                .waitrequest
		.m0_writedata            (avl_adxcfg_1_rcfg_s0_agent_m0_writedata),                //                .writedata
		.m0_write                (avl_adxcfg_1_rcfg_s0_agent_m0_write),                    //                .write
		.rp_endofpacket          (avl_adxcfg_1_rcfg_s0_agent_rp_endofpacket),              //              rp.endofpacket
		.rp_ready                (avl_adxcfg_1_rcfg_s0_agent_rp_ready),                    //                .ready
		.rp_valid                (avl_adxcfg_1_rcfg_s0_agent_rp_valid),                    //                .valid
		.rp_data                 (avl_adxcfg_1_rcfg_s0_agent_rp_data),                     //                .data
		.rp_startofpacket        (avl_adxcfg_1_rcfg_s0_agent_rp_startofpacket),            //                .startofpacket
		.cp_ready                (agent_pipeline_058_source0_ready),                       //              cp.ready
		.cp_valid                (agent_pipeline_058_source0_valid),                       //                .valid
		.cp_data                 (agent_pipeline_058_source0_data),                        //                .data
		.cp_startofpacket        (agent_pipeline_058_source0_startofpacket),               //                .startofpacket
		.cp_endofpacket          (agent_pipeline_058_source0_endofpacket),                 //                .endofpacket
		.cp_channel              (agent_pipeline_058_source0_channel),                     //                .channel
		.rf_sink_ready           (avl_adxcfg_1_rcfg_s0_agent_rsp_fifo_out_ready),          //         rf_sink.ready
		.rf_sink_valid           (avl_adxcfg_1_rcfg_s0_agent_rsp_fifo_out_valid),          //                .valid
		.rf_sink_startofpacket   (avl_adxcfg_1_rcfg_s0_agent_rsp_fifo_out_startofpacket),  //                .startofpacket
		.rf_sink_endofpacket     (avl_adxcfg_1_rcfg_s0_agent_rsp_fifo_out_endofpacket),    //                .endofpacket
		.rf_sink_data            (avl_adxcfg_1_rcfg_s0_agent_rsp_fifo_out_data),           //                .data
		.rf_source_ready         (avl_adxcfg_1_rcfg_s0_agent_rf_source_ready),             //       rf_source.ready
		.rf_source_valid         (avl_adxcfg_1_rcfg_s0_agent_rf_source_valid),             //                .valid
		.rf_source_startofpacket (avl_adxcfg_1_rcfg_s0_agent_rf_source_startofpacket),     //                .startofpacket
		.rf_source_endofpacket   (avl_adxcfg_1_rcfg_s0_agent_rf_source_endofpacket),       //                .endofpacket
		.rf_source_data          (avl_adxcfg_1_rcfg_s0_agent_rf_source_data),              //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_013_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_013_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_013_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_013_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (avl_adxcfg_1_rcfg_s0_agent_rdata_fifo_src_ready),        //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (avl_adxcfg_1_rcfg_s0_agent_rdata_fifo_src_valid),        //                .valid
		.rdata_fifo_src_data     (avl_adxcfg_1_rcfg_s0_agent_rdata_fifo_src_data),         //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) avl_adxcfg_1_rcfg_s0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (avl_adxcfg_1_rcfg_s0_agent_rf_source_data),              //        in.data
		.in_valid          (avl_adxcfg_1_rcfg_s0_agent_rf_source_valid),             //          .valid
		.in_ready          (avl_adxcfg_1_rcfg_s0_agent_rf_source_ready),             //          .ready
		.in_startofpacket  (avl_adxcfg_1_rcfg_s0_agent_rf_source_startofpacket),     //          .startofpacket
		.in_endofpacket    (avl_adxcfg_1_rcfg_s0_agent_rf_source_endofpacket),       //          .endofpacket
		.out_data          (avl_adxcfg_1_rcfg_s0_agent_rsp_fifo_out_data),           //       out.data
		.out_valid         (avl_adxcfg_1_rcfg_s0_agent_rsp_fifo_out_valid),          //          .valid
		.out_ready         (avl_adxcfg_1_rcfg_s0_agent_rsp_fifo_out_ready),          //          .ready
		.out_startofpacket (avl_adxcfg_1_rcfg_s0_agent_rsp_fifo_out_startofpacket),  //          .startofpacket
		.out_endofpacket   (avl_adxcfg_1_rcfg_s0_agent_rsp_fifo_out_endofpacket),    //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) avl_adxcfg_1_rcfg_s0_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (avl_adxcfg_1_rcfg_s0_agent_rdata_fifo_src_data),         //        in.data
		.in_valid          (avl_adxcfg_1_rcfg_s0_agent_rdata_fifo_src_valid),        //          .valid
		.in_ready          (avl_adxcfg_1_rcfg_s0_agent_rdata_fifo_src_ready),        //          .ready
		.out_data          (avl_adxcfg_1_rcfg_s0_agent_rdata_fifo_out_data),         //       out.data
		.out_valid         (avl_adxcfg_1_rcfg_s0_agent_rdata_fifo_out_valid),        //          .valid
		.out_ready         (avl_adxcfg_1_rcfg_s0_agent_rdata_fifo_out_ready),        //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) avl_adxcfg_2_rcfg_s0_agent (
		.clk                     (sys_clk_clk_clk),                                        //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //       clk_reset.reset
		.m0_address              (avl_adxcfg_2_rcfg_s0_agent_m0_address),                  //              m0.address
		.m0_burstcount           (avl_adxcfg_2_rcfg_s0_agent_m0_burstcount),               //                .burstcount
		.m0_byteenable           (avl_adxcfg_2_rcfg_s0_agent_m0_byteenable),               //                .byteenable
		.m0_debugaccess          (avl_adxcfg_2_rcfg_s0_agent_m0_debugaccess),              //                .debugaccess
		.m0_lock                 (avl_adxcfg_2_rcfg_s0_agent_m0_lock),                     //                .lock
		.m0_readdata             (avl_adxcfg_2_rcfg_s0_agent_m0_readdata),                 //                .readdata
		.m0_readdatavalid        (avl_adxcfg_2_rcfg_s0_agent_m0_readdatavalid),            //                .readdatavalid
		.m0_read                 (avl_adxcfg_2_rcfg_s0_agent_m0_read),                     //                .read
		.m0_waitrequest          (avl_adxcfg_2_rcfg_s0_agent_m0_waitrequest),              //                .waitrequest
		.m0_writedata            (avl_adxcfg_2_rcfg_s0_agent_m0_writedata),                //                .writedata
		.m0_write                (avl_adxcfg_2_rcfg_s0_agent_m0_write),                    //                .write
		.rp_endofpacket          (avl_adxcfg_2_rcfg_s0_agent_rp_endofpacket),              //              rp.endofpacket
		.rp_ready                (avl_adxcfg_2_rcfg_s0_agent_rp_ready),                    //                .ready
		.rp_valid                (avl_adxcfg_2_rcfg_s0_agent_rp_valid),                    //                .valid
		.rp_data                 (avl_adxcfg_2_rcfg_s0_agent_rp_data),                     //                .data
		.rp_startofpacket        (avl_adxcfg_2_rcfg_s0_agent_rp_startofpacket),            //                .startofpacket
		.cp_ready                (agent_pipeline_060_source0_ready),                       //              cp.ready
		.cp_valid                (agent_pipeline_060_source0_valid),                       //                .valid
		.cp_data                 (agent_pipeline_060_source0_data),                        //                .data
		.cp_startofpacket        (agent_pipeline_060_source0_startofpacket),               //                .startofpacket
		.cp_endofpacket          (agent_pipeline_060_source0_endofpacket),                 //                .endofpacket
		.cp_channel              (agent_pipeline_060_source0_channel),                     //                .channel
		.rf_sink_ready           (avl_adxcfg_2_rcfg_s0_agent_rsp_fifo_out_ready),          //         rf_sink.ready
		.rf_sink_valid           (avl_adxcfg_2_rcfg_s0_agent_rsp_fifo_out_valid),          //                .valid
		.rf_sink_startofpacket   (avl_adxcfg_2_rcfg_s0_agent_rsp_fifo_out_startofpacket),  //                .startofpacket
		.rf_sink_endofpacket     (avl_adxcfg_2_rcfg_s0_agent_rsp_fifo_out_endofpacket),    //                .endofpacket
		.rf_sink_data            (avl_adxcfg_2_rcfg_s0_agent_rsp_fifo_out_data),           //                .data
		.rf_source_ready         (avl_adxcfg_2_rcfg_s0_agent_rf_source_ready),             //       rf_source.ready
		.rf_source_valid         (avl_adxcfg_2_rcfg_s0_agent_rf_source_valid),             //                .valid
		.rf_source_startofpacket (avl_adxcfg_2_rcfg_s0_agent_rf_source_startofpacket),     //                .startofpacket
		.rf_source_endofpacket   (avl_adxcfg_2_rcfg_s0_agent_rf_source_endofpacket),       //                .endofpacket
		.rf_source_data          (avl_adxcfg_2_rcfg_s0_agent_rf_source_data),              //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_014_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_014_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_014_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_014_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (avl_adxcfg_2_rcfg_s0_agent_rdata_fifo_src_ready),        //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (avl_adxcfg_2_rcfg_s0_agent_rdata_fifo_src_valid),        //                .valid
		.rdata_fifo_src_data     (avl_adxcfg_2_rcfg_s0_agent_rdata_fifo_src_data),         //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) avl_adxcfg_2_rcfg_s0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (avl_adxcfg_2_rcfg_s0_agent_rf_source_data),              //        in.data
		.in_valid          (avl_adxcfg_2_rcfg_s0_agent_rf_source_valid),             //          .valid
		.in_ready          (avl_adxcfg_2_rcfg_s0_agent_rf_source_ready),             //          .ready
		.in_startofpacket  (avl_adxcfg_2_rcfg_s0_agent_rf_source_startofpacket),     //          .startofpacket
		.in_endofpacket    (avl_adxcfg_2_rcfg_s0_agent_rf_source_endofpacket),       //          .endofpacket
		.out_data          (avl_adxcfg_2_rcfg_s0_agent_rsp_fifo_out_data),           //       out.data
		.out_valid         (avl_adxcfg_2_rcfg_s0_agent_rsp_fifo_out_valid),          //          .valid
		.out_ready         (avl_adxcfg_2_rcfg_s0_agent_rsp_fifo_out_ready),          //          .ready
		.out_startofpacket (avl_adxcfg_2_rcfg_s0_agent_rsp_fifo_out_startofpacket),  //          .startofpacket
		.out_endofpacket   (avl_adxcfg_2_rcfg_s0_agent_rsp_fifo_out_endofpacket),    //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) avl_adxcfg_2_rcfg_s0_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (avl_adxcfg_2_rcfg_s0_agent_rdata_fifo_src_data),         //        in.data
		.in_valid          (avl_adxcfg_2_rcfg_s0_agent_rdata_fifo_src_valid),        //          .valid
		.in_ready          (avl_adxcfg_2_rcfg_s0_agent_rdata_fifo_src_ready),        //          .ready
		.out_data          (avl_adxcfg_2_rcfg_s0_agent_rdata_fifo_out_data),         //       out.data
		.out_valid         (avl_adxcfg_2_rcfg_s0_agent_rdata_fifo_out_valid),        //          .valid
		.out_ready         (avl_adxcfg_2_rcfg_s0_agent_rdata_fifo_out_ready),        //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) avl_adxcfg_3_rcfg_s0_agent (
		.clk                     (sys_clk_clk_clk),                                        //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //       clk_reset.reset
		.m0_address              (avl_adxcfg_3_rcfg_s0_agent_m0_address),                  //              m0.address
		.m0_burstcount           (avl_adxcfg_3_rcfg_s0_agent_m0_burstcount),               //                .burstcount
		.m0_byteenable           (avl_adxcfg_3_rcfg_s0_agent_m0_byteenable),               //                .byteenable
		.m0_debugaccess          (avl_adxcfg_3_rcfg_s0_agent_m0_debugaccess),              //                .debugaccess
		.m0_lock                 (avl_adxcfg_3_rcfg_s0_agent_m0_lock),                     //                .lock
		.m0_readdata             (avl_adxcfg_3_rcfg_s0_agent_m0_readdata),                 //                .readdata
		.m0_readdatavalid        (avl_adxcfg_3_rcfg_s0_agent_m0_readdatavalid),            //                .readdatavalid
		.m0_read                 (avl_adxcfg_3_rcfg_s0_agent_m0_read),                     //                .read
		.m0_waitrequest          (avl_adxcfg_3_rcfg_s0_agent_m0_waitrequest),              //                .waitrequest
		.m0_writedata            (avl_adxcfg_3_rcfg_s0_agent_m0_writedata),                //                .writedata
		.m0_write                (avl_adxcfg_3_rcfg_s0_agent_m0_write),                    //                .write
		.rp_endofpacket          (avl_adxcfg_3_rcfg_s0_agent_rp_endofpacket),              //              rp.endofpacket
		.rp_ready                (avl_adxcfg_3_rcfg_s0_agent_rp_ready),                    //                .ready
		.rp_valid                (avl_adxcfg_3_rcfg_s0_agent_rp_valid),                    //                .valid
		.rp_data                 (avl_adxcfg_3_rcfg_s0_agent_rp_data),                     //                .data
		.rp_startofpacket        (avl_adxcfg_3_rcfg_s0_agent_rp_startofpacket),            //                .startofpacket
		.cp_ready                (agent_pipeline_062_source0_ready),                       //              cp.ready
		.cp_valid                (agent_pipeline_062_source0_valid),                       //                .valid
		.cp_data                 (agent_pipeline_062_source0_data),                        //                .data
		.cp_startofpacket        (agent_pipeline_062_source0_startofpacket),               //                .startofpacket
		.cp_endofpacket          (agent_pipeline_062_source0_endofpacket),                 //                .endofpacket
		.cp_channel              (agent_pipeline_062_source0_channel),                     //                .channel
		.rf_sink_ready           (avl_adxcfg_3_rcfg_s0_agent_rsp_fifo_out_ready),          //         rf_sink.ready
		.rf_sink_valid           (avl_adxcfg_3_rcfg_s0_agent_rsp_fifo_out_valid),          //                .valid
		.rf_sink_startofpacket   (avl_adxcfg_3_rcfg_s0_agent_rsp_fifo_out_startofpacket),  //                .startofpacket
		.rf_sink_endofpacket     (avl_adxcfg_3_rcfg_s0_agent_rsp_fifo_out_endofpacket),    //                .endofpacket
		.rf_sink_data            (avl_adxcfg_3_rcfg_s0_agent_rsp_fifo_out_data),           //                .data
		.rf_source_ready         (avl_adxcfg_3_rcfg_s0_agent_rf_source_ready),             //       rf_source.ready
		.rf_source_valid         (avl_adxcfg_3_rcfg_s0_agent_rf_source_valid),             //                .valid
		.rf_source_startofpacket (avl_adxcfg_3_rcfg_s0_agent_rf_source_startofpacket),     //                .startofpacket
		.rf_source_endofpacket   (avl_adxcfg_3_rcfg_s0_agent_rf_source_endofpacket),       //                .endofpacket
		.rf_source_data          (avl_adxcfg_3_rcfg_s0_agent_rf_source_data),              //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_015_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_015_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_015_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_015_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (avl_adxcfg_3_rcfg_s0_agent_rdata_fifo_src_ready),        //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (avl_adxcfg_3_rcfg_s0_agent_rdata_fifo_src_valid),        //                .valid
		.rdata_fifo_src_data     (avl_adxcfg_3_rcfg_s0_agent_rdata_fifo_src_data),         //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) avl_adxcfg_3_rcfg_s0_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (avl_adxcfg_3_rcfg_s0_agent_rf_source_data),              //        in.data
		.in_valid          (avl_adxcfg_3_rcfg_s0_agent_rf_source_valid),             //          .valid
		.in_ready          (avl_adxcfg_3_rcfg_s0_agent_rf_source_ready),             //          .ready
		.in_startofpacket  (avl_adxcfg_3_rcfg_s0_agent_rf_source_startofpacket),     //          .startofpacket
		.in_endofpacket    (avl_adxcfg_3_rcfg_s0_agent_rf_source_endofpacket),       //          .endofpacket
		.out_data          (avl_adxcfg_3_rcfg_s0_agent_rsp_fifo_out_data),           //       out.data
		.out_valid         (avl_adxcfg_3_rcfg_s0_agent_rsp_fifo_out_valid),          //          .valid
		.out_ready         (avl_adxcfg_3_rcfg_s0_agent_rsp_fifo_out_ready),          //          .ready
		.out_startofpacket (avl_adxcfg_3_rcfg_s0_agent_rsp_fifo_out_startofpacket),  //          .startofpacket
		.out_endofpacket   (avl_adxcfg_3_rcfg_s0_agent_rsp_fifo_out_endofpacket),    //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) avl_adxcfg_3_rcfg_s0_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (avl_adxcfg_3_rcfg_s0_agent_rdata_fifo_src_data),         //        in.data
		.in_valid          (avl_adxcfg_3_rcfg_s0_agent_rdata_fifo_src_valid),        //          .valid
		.in_ready          (avl_adxcfg_3_rcfg_s0_agent_rdata_fifo_src_ready),        //          .ready
		.out_data          (avl_adxcfg_3_rcfg_s0_agent_rdata_fifo_out_data),         //       out.data
		.out_valid         (avl_adxcfg_3_rcfg_s0_agent_rdata_fifo_out_valid),        //          .valid
		.out_ready         (avl_adxcfg_3_rcfg_s0_agent_rdata_fifo_out_ready),        //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) avl_adxcfg_0_rcfg_s1_agent (
		.clk                     (sys_clk_clk_clk),                                        //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //       clk_reset.reset
		.m0_address              (avl_adxcfg_0_rcfg_s1_agent_m0_address),                  //              m0.address
		.m0_burstcount           (avl_adxcfg_0_rcfg_s1_agent_m0_burstcount),               //                .burstcount
		.m0_byteenable           (avl_adxcfg_0_rcfg_s1_agent_m0_byteenable),               //                .byteenable
		.m0_debugaccess          (avl_adxcfg_0_rcfg_s1_agent_m0_debugaccess),              //                .debugaccess
		.m0_lock                 (avl_adxcfg_0_rcfg_s1_agent_m0_lock),                     //                .lock
		.m0_readdata             (avl_adxcfg_0_rcfg_s1_agent_m0_readdata),                 //                .readdata
		.m0_readdatavalid        (avl_adxcfg_0_rcfg_s1_agent_m0_readdatavalid),            //                .readdatavalid
		.m0_read                 (avl_adxcfg_0_rcfg_s1_agent_m0_read),                     //                .read
		.m0_waitrequest          (avl_adxcfg_0_rcfg_s1_agent_m0_waitrequest),              //                .waitrequest
		.m0_writedata            (avl_adxcfg_0_rcfg_s1_agent_m0_writedata),                //                .writedata
		.m0_write                (avl_adxcfg_0_rcfg_s1_agent_m0_write),                    //                .write
		.rp_endofpacket          (avl_adxcfg_0_rcfg_s1_agent_rp_endofpacket),              //              rp.endofpacket
		.rp_ready                (avl_adxcfg_0_rcfg_s1_agent_rp_ready),                    //                .ready
		.rp_valid                (avl_adxcfg_0_rcfg_s1_agent_rp_valid),                    //                .valid
		.rp_data                 (avl_adxcfg_0_rcfg_s1_agent_rp_data),                     //                .data
		.rp_startofpacket        (avl_adxcfg_0_rcfg_s1_agent_rp_startofpacket),            //                .startofpacket
		.cp_ready                (agent_pipeline_064_source0_ready),                       //              cp.ready
		.cp_valid                (agent_pipeline_064_source0_valid),                       //                .valid
		.cp_data                 (agent_pipeline_064_source0_data),                        //                .data
		.cp_startofpacket        (agent_pipeline_064_source0_startofpacket),               //                .startofpacket
		.cp_endofpacket          (agent_pipeline_064_source0_endofpacket),                 //                .endofpacket
		.cp_channel              (agent_pipeline_064_source0_channel),                     //                .channel
		.rf_sink_ready           (avl_adxcfg_0_rcfg_s1_agent_rsp_fifo_out_ready),          //         rf_sink.ready
		.rf_sink_valid           (avl_adxcfg_0_rcfg_s1_agent_rsp_fifo_out_valid),          //                .valid
		.rf_sink_startofpacket   (avl_adxcfg_0_rcfg_s1_agent_rsp_fifo_out_startofpacket),  //                .startofpacket
		.rf_sink_endofpacket     (avl_adxcfg_0_rcfg_s1_agent_rsp_fifo_out_endofpacket),    //                .endofpacket
		.rf_sink_data            (avl_adxcfg_0_rcfg_s1_agent_rsp_fifo_out_data),           //                .data
		.rf_source_ready         (avl_adxcfg_0_rcfg_s1_agent_rf_source_ready),             //       rf_source.ready
		.rf_source_valid         (avl_adxcfg_0_rcfg_s1_agent_rf_source_valid),             //                .valid
		.rf_source_startofpacket (avl_adxcfg_0_rcfg_s1_agent_rf_source_startofpacket),     //                .startofpacket
		.rf_source_endofpacket   (avl_adxcfg_0_rcfg_s1_agent_rf_source_endofpacket),       //                .endofpacket
		.rf_source_data          (avl_adxcfg_0_rcfg_s1_agent_rf_source_data),              //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_016_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_016_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_016_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_016_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (avl_adxcfg_0_rcfg_s1_agent_rdata_fifo_src_ready),        //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (avl_adxcfg_0_rcfg_s1_agent_rdata_fifo_src_valid),        //                .valid
		.rdata_fifo_src_data     (avl_adxcfg_0_rcfg_s1_agent_rdata_fifo_src_data),         //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) avl_adxcfg_0_rcfg_s1_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (avl_adxcfg_0_rcfg_s1_agent_rf_source_data),              //        in.data
		.in_valid          (avl_adxcfg_0_rcfg_s1_agent_rf_source_valid),             //          .valid
		.in_ready          (avl_adxcfg_0_rcfg_s1_agent_rf_source_ready),             //          .ready
		.in_startofpacket  (avl_adxcfg_0_rcfg_s1_agent_rf_source_startofpacket),     //          .startofpacket
		.in_endofpacket    (avl_adxcfg_0_rcfg_s1_agent_rf_source_endofpacket),       //          .endofpacket
		.out_data          (avl_adxcfg_0_rcfg_s1_agent_rsp_fifo_out_data),           //       out.data
		.out_valid         (avl_adxcfg_0_rcfg_s1_agent_rsp_fifo_out_valid),          //          .valid
		.out_ready         (avl_adxcfg_0_rcfg_s1_agent_rsp_fifo_out_ready),          //          .ready
		.out_startofpacket (avl_adxcfg_0_rcfg_s1_agent_rsp_fifo_out_startofpacket),  //          .startofpacket
		.out_endofpacket   (avl_adxcfg_0_rcfg_s1_agent_rsp_fifo_out_endofpacket),    //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) avl_adxcfg_0_rcfg_s1_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (avl_adxcfg_0_rcfg_s1_agent_rdata_fifo_src_data),         //        in.data
		.in_valid          (avl_adxcfg_0_rcfg_s1_agent_rdata_fifo_src_valid),        //          .valid
		.in_ready          (avl_adxcfg_0_rcfg_s1_agent_rdata_fifo_src_ready),        //          .ready
		.out_data          (avl_adxcfg_0_rcfg_s1_agent_rdata_fifo_out_data),         //       out.data
		.out_valid         (avl_adxcfg_0_rcfg_s1_agent_rdata_fifo_out_valid),        //          .valid
		.out_ready         (avl_adxcfg_0_rcfg_s1_agent_rdata_fifo_out_ready),        //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) avl_adxcfg_1_rcfg_s1_agent (
		.clk                     (sys_clk_clk_clk),                                        //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //       clk_reset.reset
		.m0_address              (avl_adxcfg_1_rcfg_s1_agent_m0_address),                  //              m0.address
		.m0_burstcount           (avl_adxcfg_1_rcfg_s1_agent_m0_burstcount),               //                .burstcount
		.m0_byteenable           (avl_adxcfg_1_rcfg_s1_agent_m0_byteenable),               //                .byteenable
		.m0_debugaccess          (avl_adxcfg_1_rcfg_s1_agent_m0_debugaccess),              //                .debugaccess
		.m0_lock                 (avl_adxcfg_1_rcfg_s1_agent_m0_lock),                     //                .lock
		.m0_readdata             (avl_adxcfg_1_rcfg_s1_agent_m0_readdata),                 //                .readdata
		.m0_readdatavalid        (avl_adxcfg_1_rcfg_s1_agent_m0_readdatavalid),            //                .readdatavalid
		.m0_read                 (avl_adxcfg_1_rcfg_s1_agent_m0_read),                     //                .read
		.m0_waitrequest          (avl_adxcfg_1_rcfg_s1_agent_m0_waitrequest),              //                .waitrequest
		.m0_writedata            (avl_adxcfg_1_rcfg_s1_agent_m0_writedata),                //                .writedata
		.m0_write                (avl_adxcfg_1_rcfg_s1_agent_m0_write),                    //                .write
		.rp_endofpacket          (avl_adxcfg_1_rcfg_s1_agent_rp_endofpacket),              //              rp.endofpacket
		.rp_ready                (avl_adxcfg_1_rcfg_s1_agent_rp_ready),                    //                .ready
		.rp_valid                (avl_adxcfg_1_rcfg_s1_agent_rp_valid),                    //                .valid
		.rp_data                 (avl_adxcfg_1_rcfg_s1_agent_rp_data),                     //                .data
		.rp_startofpacket        (avl_adxcfg_1_rcfg_s1_agent_rp_startofpacket),            //                .startofpacket
		.cp_ready                (agent_pipeline_066_source0_ready),                       //              cp.ready
		.cp_valid                (agent_pipeline_066_source0_valid),                       //                .valid
		.cp_data                 (agent_pipeline_066_source0_data),                        //                .data
		.cp_startofpacket        (agent_pipeline_066_source0_startofpacket),               //                .startofpacket
		.cp_endofpacket          (agent_pipeline_066_source0_endofpacket),                 //                .endofpacket
		.cp_channel              (agent_pipeline_066_source0_channel),                     //                .channel
		.rf_sink_ready           (avl_adxcfg_1_rcfg_s1_agent_rsp_fifo_out_ready),          //         rf_sink.ready
		.rf_sink_valid           (avl_adxcfg_1_rcfg_s1_agent_rsp_fifo_out_valid),          //                .valid
		.rf_sink_startofpacket   (avl_adxcfg_1_rcfg_s1_agent_rsp_fifo_out_startofpacket),  //                .startofpacket
		.rf_sink_endofpacket     (avl_adxcfg_1_rcfg_s1_agent_rsp_fifo_out_endofpacket),    //                .endofpacket
		.rf_sink_data            (avl_adxcfg_1_rcfg_s1_agent_rsp_fifo_out_data),           //                .data
		.rf_source_ready         (avl_adxcfg_1_rcfg_s1_agent_rf_source_ready),             //       rf_source.ready
		.rf_source_valid         (avl_adxcfg_1_rcfg_s1_agent_rf_source_valid),             //                .valid
		.rf_source_startofpacket (avl_adxcfg_1_rcfg_s1_agent_rf_source_startofpacket),     //                .startofpacket
		.rf_source_endofpacket   (avl_adxcfg_1_rcfg_s1_agent_rf_source_endofpacket),       //                .endofpacket
		.rf_source_data          (avl_adxcfg_1_rcfg_s1_agent_rf_source_data),              //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_017_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_017_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_017_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_017_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (avl_adxcfg_1_rcfg_s1_agent_rdata_fifo_src_ready),        //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (avl_adxcfg_1_rcfg_s1_agent_rdata_fifo_src_valid),        //                .valid
		.rdata_fifo_src_data     (avl_adxcfg_1_rcfg_s1_agent_rdata_fifo_src_data),         //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) avl_adxcfg_1_rcfg_s1_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (avl_adxcfg_1_rcfg_s1_agent_rf_source_data),              //        in.data
		.in_valid          (avl_adxcfg_1_rcfg_s1_agent_rf_source_valid),             //          .valid
		.in_ready          (avl_adxcfg_1_rcfg_s1_agent_rf_source_ready),             //          .ready
		.in_startofpacket  (avl_adxcfg_1_rcfg_s1_agent_rf_source_startofpacket),     //          .startofpacket
		.in_endofpacket    (avl_adxcfg_1_rcfg_s1_agent_rf_source_endofpacket),       //          .endofpacket
		.out_data          (avl_adxcfg_1_rcfg_s1_agent_rsp_fifo_out_data),           //       out.data
		.out_valid         (avl_adxcfg_1_rcfg_s1_agent_rsp_fifo_out_valid),          //          .valid
		.out_ready         (avl_adxcfg_1_rcfg_s1_agent_rsp_fifo_out_ready),          //          .ready
		.out_startofpacket (avl_adxcfg_1_rcfg_s1_agent_rsp_fifo_out_startofpacket),  //          .startofpacket
		.out_endofpacket   (avl_adxcfg_1_rcfg_s1_agent_rsp_fifo_out_endofpacket),    //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) avl_adxcfg_1_rcfg_s1_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (avl_adxcfg_1_rcfg_s1_agent_rdata_fifo_src_data),         //        in.data
		.in_valid          (avl_adxcfg_1_rcfg_s1_agent_rdata_fifo_src_valid),        //          .valid
		.in_ready          (avl_adxcfg_1_rcfg_s1_agent_rdata_fifo_src_ready),        //          .ready
		.out_data          (avl_adxcfg_1_rcfg_s1_agent_rdata_fifo_out_data),         //       out.data
		.out_valid         (avl_adxcfg_1_rcfg_s1_agent_rdata_fifo_out_valid),        //          .valid
		.out_ready         (avl_adxcfg_1_rcfg_s1_agent_rdata_fifo_out_ready),        //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) avl_adxcfg_2_rcfg_s1_agent (
		.clk                     (sys_clk_clk_clk),                                        //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //       clk_reset.reset
		.m0_address              (avl_adxcfg_2_rcfg_s1_agent_m0_address),                  //              m0.address
		.m0_burstcount           (avl_adxcfg_2_rcfg_s1_agent_m0_burstcount),               //                .burstcount
		.m0_byteenable           (avl_adxcfg_2_rcfg_s1_agent_m0_byteenable),               //                .byteenable
		.m0_debugaccess          (avl_adxcfg_2_rcfg_s1_agent_m0_debugaccess),              //                .debugaccess
		.m0_lock                 (avl_adxcfg_2_rcfg_s1_agent_m0_lock),                     //                .lock
		.m0_readdata             (avl_adxcfg_2_rcfg_s1_agent_m0_readdata),                 //                .readdata
		.m0_readdatavalid        (avl_adxcfg_2_rcfg_s1_agent_m0_readdatavalid),            //                .readdatavalid
		.m0_read                 (avl_adxcfg_2_rcfg_s1_agent_m0_read),                     //                .read
		.m0_waitrequest          (avl_adxcfg_2_rcfg_s1_agent_m0_waitrequest),              //                .waitrequest
		.m0_writedata            (avl_adxcfg_2_rcfg_s1_agent_m0_writedata),                //                .writedata
		.m0_write                (avl_adxcfg_2_rcfg_s1_agent_m0_write),                    //                .write
		.rp_endofpacket          (avl_adxcfg_2_rcfg_s1_agent_rp_endofpacket),              //              rp.endofpacket
		.rp_ready                (avl_adxcfg_2_rcfg_s1_agent_rp_ready),                    //                .ready
		.rp_valid                (avl_adxcfg_2_rcfg_s1_agent_rp_valid),                    //                .valid
		.rp_data                 (avl_adxcfg_2_rcfg_s1_agent_rp_data),                     //                .data
		.rp_startofpacket        (avl_adxcfg_2_rcfg_s1_agent_rp_startofpacket),            //                .startofpacket
		.cp_ready                (agent_pipeline_068_source0_ready),                       //              cp.ready
		.cp_valid                (agent_pipeline_068_source0_valid),                       //                .valid
		.cp_data                 (agent_pipeline_068_source0_data),                        //                .data
		.cp_startofpacket        (agent_pipeline_068_source0_startofpacket),               //                .startofpacket
		.cp_endofpacket          (agent_pipeline_068_source0_endofpacket),                 //                .endofpacket
		.cp_channel              (agent_pipeline_068_source0_channel),                     //                .channel
		.rf_sink_ready           (avl_adxcfg_2_rcfg_s1_agent_rsp_fifo_out_ready),          //         rf_sink.ready
		.rf_sink_valid           (avl_adxcfg_2_rcfg_s1_agent_rsp_fifo_out_valid),          //                .valid
		.rf_sink_startofpacket   (avl_adxcfg_2_rcfg_s1_agent_rsp_fifo_out_startofpacket),  //                .startofpacket
		.rf_sink_endofpacket     (avl_adxcfg_2_rcfg_s1_agent_rsp_fifo_out_endofpacket),    //                .endofpacket
		.rf_sink_data            (avl_adxcfg_2_rcfg_s1_agent_rsp_fifo_out_data),           //                .data
		.rf_source_ready         (avl_adxcfg_2_rcfg_s1_agent_rf_source_ready),             //       rf_source.ready
		.rf_source_valid         (avl_adxcfg_2_rcfg_s1_agent_rf_source_valid),             //                .valid
		.rf_source_startofpacket (avl_adxcfg_2_rcfg_s1_agent_rf_source_startofpacket),     //                .startofpacket
		.rf_source_endofpacket   (avl_adxcfg_2_rcfg_s1_agent_rf_source_endofpacket),       //                .endofpacket
		.rf_source_data          (avl_adxcfg_2_rcfg_s1_agent_rf_source_data),              //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_018_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_018_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_018_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_018_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (avl_adxcfg_2_rcfg_s1_agent_rdata_fifo_src_ready),        //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (avl_adxcfg_2_rcfg_s1_agent_rdata_fifo_src_valid),        //                .valid
		.rdata_fifo_src_data     (avl_adxcfg_2_rcfg_s1_agent_rdata_fifo_src_data),         //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) avl_adxcfg_2_rcfg_s1_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (avl_adxcfg_2_rcfg_s1_agent_rf_source_data),              //        in.data
		.in_valid          (avl_adxcfg_2_rcfg_s1_agent_rf_source_valid),             //          .valid
		.in_ready          (avl_adxcfg_2_rcfg_s1_agent_rf_source_ready),             //          .ready
		.in_startofpacket  (avl_adxcfg_2_rcfg_s1_agent_rf_source_startofpacket),     //          .startofpacket
		.in_endofpacket    (avl_adxcfg_2_rcfg_s1_agent_rf_source_endofpacket),       //          .endofpacket
		.out_data          (avl_adxcfg_2_rcfg_s1_agent_rsp_fifo_out_data),           //       out.data
		.out_valid         (avl_adxcfg_2_rcfg_s1_agent_rsp_fifo_out_valid),          //          .valid
		.out_ready         (avl_adxcfg_2_rcfg_s1_agent_rsp_fifo_out_ready),          //          .ready
		.out_startofpacket (avl_adxcfg_2_rcfg_s1_agent_rsp_fifo_out_startofpacket),  //          .startofpacket
		.out_endofpacket   (avl_adxcfg_2_rcfg_s1_agent_rsp_fifo_out_endofpacket),    //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) avl_adxcfg_2_rcfg_s1_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (avl_adxcfg_2_rcfg_s1_agent_rdata_fifo_src_data),         //        in.data
		.in_valid          (avl_adxcfg_2_rcfg_s1_agent_rdata_fifo_src_valid),        //          .valid
		.in_ready          (avl_adxcfg_2_rcfg_s1_agent_rdata_fifo_src_ready),        //          .ready
		.out_data          (avl_adxcfg_2_rcfg_s1_agent_rdata_fifo_out_data),         //       out.data
		.out_valid         (avl_adxcfg_2_rcfg_s1_agent_rdata_fifo_out_valid),        //          .valid
		.out_ready         (avl_adxcfg_2_rcfg_s1_agent_rdata_fifo_out_ready),        //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) avl_adxcfg_3_rcfg_s1_agent (
		.clk                     (sys_clk_clk_clk),                                        //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //       clk_reset.reset
		.m0_address              (avl_adxcfg_3_rcfg_s1_agent_m0_address),                  //              m0.address
		.m0_burstcount           (avl_adxcfg_3_rcfg_s1_agent_m0_burstcount),               //                .burstcount
		.m0_byteenable           (avl_adxcfg_3_rcfg_s1_agent_m0_byteenable),               //                .byteenable
		.m0_debugaccess          (avl_adxcfg_3_rcfg_s1_agent_m0_debugaccess),              //                .debugaccess
		.m0_lock                 (avl_adxcfg_3_rcfg_s1_agent_m0_lock),                     //                .lock
		.m0_readdata             (avl_adxcfg_3_rcfg_s1_agent_m0_readdata),                 //                .readdata
		.m0_readdatavalid        (avl_adxcfg_3_rcfg_s1_agent_m0_readdatavalid),            //                .readdatavalid
		.m0_read                 (avl_adxcfg_3_rcfg_s1_agent_m0_read),                     //                .read
		.m0_waitrequest          (avl_adxcfg_3_rcfg_s1_agent_m0_waitrequest),              //                .waitrequest
		.m0_writedata            (avl_adxcfg_3_rcfg_s1_agent_m0_writedata),                //                .writedata
		.m0_write                (avl_adxcfg_3_rcfg_s1_agent_m0_write),                    //                .write
		.rp_endofpacket          (avl_adxcfg_3_rcfg_s1_agent_rp_endofpacket),              //              rp.endofpacket
		.rp_ready                (avl_adxcfg_3_rcfg_s1_agent_rp_ready),                    //                .ready
		.rp_valid                (avl_adxcfg_3_rcfg_s1_agent_rp_valid),                    //                .valid
		.rp_data                 (avl_adxcfg_3_rcfg_s1_agent_rp_data),                     //                .data
		.rp_startofpacket        (avl_adxcfg_3_rcfg_s1_agent_rp_startofpacket),            //                .startofpacket
		.cp_ready                (agent_pipeline_070_source0_ready),                       //              cp.ready
		.cp_valid                (agent_pipeline_070_source0_valid),                       //                .valid
		.cp_data                 (agent_pipeline_070_source0_data),                        //                .data
		.cp_startofpacket        (agent_pipeline_070_source0_startofpacket),               //                .startofpacket
		.cp_endofpacket          (agent_pipeline_070_source0_endofpacket),                 //                .endofpacket
		.cp_channel              (agent_pipeline_070_source0_channel),                     //                .channel
		.rf_sink_ready           (avl_adxcfg_3_rcfg_s1_agent_rsp_fifo_out_ready),          //         rf_sink.ready
		.rf_sink_valid           (avl_adxcfg_3_rcfg_s1_agent_rsp_fifo_out_valid),          //                .valid
		.rf_sink_startofpacket   (avl_adxcfg_3_rcfg_s1_agent_rsp_fifo_out_startofpacket),  //                .startofpacket
		.rf_sink_endofpacket     (avl_adxcfg_3_rcfg_s1_agent_rsp_fifo_out_endofpacket),    //                .endofpacket
		.rf_sink_data            (avl_adxcfg_3_rcfg_s1_agent_rsp_fifo_out_data),           //                .data
		.rf_source_ready         (avl_adxcfg_3_rcfg_s1_agent_rf_source_ready),             //       rf_source.ready
		.rf_source_valid         (avl_adxcfg_3_rcfg_s1_agent_rf_source_valid),             //                .valid
		.rf_source_startofpacket (avl_adxcfg_3_rcfg_s1_agent_rf_source_startofpacket),     //                .startofpacket
		.rf_source_endofpacket   (avl_adxcfg_3_rcfg_s1_agent_rf_source_endofpacket),       //                .endofpacket
		.rf_source_data          (avl_adxcfg_3_rcfg_s1_agent_rf_source_data),              //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_019_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_019_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_019_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_019_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (avl_adxcfg_3_rcfg_s1_agent_rdata_fifo_src_ready),        //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (avl_adxcfg_3_rcfg_s1_agent_rdata_fifo_src_valid),        //                .valid
		.rdata_fifo_src_data     (avl_adxcfg_3_rcfg_s1_agent_rdata_fifo_src_data),         //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) avl_adxcfg_3_rcfg_s1_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (avl_adxcfg_3_rcfg_s1_agent_rf_source_data),              //        in.data
		.in_valid          (avl_adxcfg_3_rcfg_s1_agent_rf_source_valid),             //          .valid
		.in_ready          (avl_adxcfg_3_rcfg_s1_agent_rf_source_ready),             //          .ready
		.in_startofpacket  (avl_adxcfg_3_rcfg_s1_agent_rf_source_startofpacket),     //          .startofpacket
		.in_endofpacket    (avl_adxcfg_3_rcfg_s1_agent_rf_source_endofpacket),       //          .endofpacket
		.out_data          (avl_adxcfg_3_rcfg_s1_agent_rsp_fifo_out_data),           //       out.data
		.out_valid         (avl_adxcfg_3_rcfg_s1_agent_rsp_fifo_out_valid),          //          .valid
		.out_ready         (avl_adxcfg_3_rcfg_s1_agent_rsp_fifo_out_ready),          //          .ready
		.out_startofpacket (avl_adxcfg_3_rcfg_s1_agent_rsp_fifo_out_startofpacket),  //          .startofpacket
		.out_endofpacket   (avl_adxcfg_3_rcfg_s1_agent_rsp_fifo_out_endofpacket),    //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) avl_adxcfg_3_rcfg_s1_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (avl_adxcfg_3_rcfg_s1_agent_rdata_fifo_src_data),         //        in.data
		.in_valid          (avl_adxcfg_3_rcfg_s1_agent_rdata_fifo_src_valid),        //          .valid
		.in_ready          (avl_adxcfg_3_rcfg_s1_agent_rdata_fifo_src_ready),        //          .ready
		.out_data          (avl_adxcfg_3_rcfg_s1_agent_rdata_fifo_out_data),         //       out.data
		.out_valid         (avl_adxcfg_3_rcfg_s1_agent_rdata_fifo_out_valid),        //          .valid
		.out_ready         (avl_adxcfg_3_rcfg_s1_agent_rdata_fifo_out_ready),        //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) sys_ethernet_dma_rx_response_agent (
		.clk                     (sys_clk_clk_clk),                                               //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),        //       clk_reset.reset
		.m0_address              (sys_ethernet_dma_rx_response_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sys_ethernet_dma_rx_response_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sys_ethernet_dma_rx_response_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sys_ethernet_dma_rx_response_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sys_ethernet_dma_rx_response_agent_m0_lock),                    //                .lock
		.m0_readdata             (sys_ethernet_dma_rx_response_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sys_ethernet_dma_rx_response_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sys_ethernet_dma_rx_response_agent_m0_read),                    //                .read
		.m0_waitrequest          (sys_ethernet_dma_rx_response_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sys_ethernet_dma_rx_response_agent_m0_writedata),               //                .writedata
		.m0_write                (sys_ethernet_dma_rx_response_agent_m0_write),                   //                .write
		.rp_endofpacket          (sys_ethernet_dma_rx_response_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sys_ethernet_dma_rx_response_agent_rp_ready),                   //                .ready
		.rp_valid                (sys_ethernet_dma_rx_response_agent_rp_valid),                   //                .valid
		.rp_data                 (sys_ethernet_dma_rx_response_agent_rp_data),                    //                .data
		.rp_startofpacket        (sys_ethernet_dma_rx_response_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (agent_pipeline_072_source0_ready),                              //              cp.ready
		.cp_valid                (agent_pipeline_072_source0_valid),                              //                .valid
		.cp_data                 (agent_pipeline_072_source0_data),                               //                .data
		.cp_startofpacket        (agent_pipeline_072_source0_startofpacket),                      //                .startofpacket
		.cp_endofpacket          (agent_pipeline_072_source0_endofpacket),                        //                .endofpacket
		.cp_channel              (agent_pipeline_072_source0_channel),                            //                .channel
		.rf_sink_ready           (sys_ethernet_dma_rx_response_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sys_ethernet_dma_rx_response_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sys_ethernet_dma_rx_response_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sys_ethernet_dma_rx_response_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sys_ethernet_dma_rx_response_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sys_ethernet_dma_rx_response_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sys_ethernet_dma_rx_response_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sys_ethernet_dma_rx_response_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sys_ethernet_dma_rx_response_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sys_ethernet_dma_rx_response_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_020_out_0_ready),                             // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_020_out_0_valid),                             //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_020_out_0_data),                              //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_020_out_0_error),                             //                .error
		.rdata_fifo_src_ready    (sys_ethernet_dma_rx_response_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_ethernet_dma_rx_response_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sys_ethernet_dma_rx_response_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                         //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_ethernet_dma_rx_response_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                               //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),        // clk_reset.reset
		.in_data           (sys_ethernet_dma_rx_response_agent_rf_source_data),             //        in.data
		.in_valid          (sys_ethernet_dma_rx_response_agent_rf_source_valid),            //          .valid
		.in_ready          (sys_ethernet_dma_rx_response_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sys_ethernet_dma_rx_response_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sys_ethernet_dma_rx_response_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sys_ethernet_dma_rx_response_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sys_ethernet_dma_rx_response_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sys_ethernet_dma_rx_response_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sys_ethernet_dma_rx_response_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sys_ethernet_dma_rx_response_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                         // (terminated)
		.csr_read          (1'b0),                                                          // (terminated)
		.csr_write         (1'b0),                                                          // (terminated)
		.csr_readdata      (),                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                          // (terminated)
		.almost_full_data  (),                                                              // (terminated)
		.almost_empty_data (),                                                              // (terminated)
		.in_empty          (1'b0),                                                          // (terminated)
		.out_empty         (),                                                              // (terminated)
		.in_error          (1'b0),                                                          // (terminated)
		.out_error         (),                                                              // (terminated)
		.in_channel        (1'b0),                                                          // (terminated)
		.out_channel       ()                                                               // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_ethernet_dma_rx_response_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                         //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),  // clk_reset.reset
		.in_data           (sys_ethernet_dma_rx_response_agent_rdata_fifo_src_data),  //        in.data
		.in_valid          (sys_ethernet_dma_rx_response_agent_rdata_fifo_src_valid), //          .valid
		.in_ready          (sys_ethernet_dma_rx_response_agent_rdata_fifo_src_ready), //          .ready
		.out_data          (sys_ethernet_dma_rx_response_agent_rdata_fifo_out_data),  //       out.data
		.out_valid         (sys_ethernet_dma_rx_response_agent_rdata_fifo_out_valid), //          .valid
		.out_ready         (sys_ethernet_dma_rx_response_agent_rdata_fifo_out_ready), //          .ready
		.csr_address       (2'b00),                                                   // (terminated)
		.csr_read          (1'b0),                                                    // (terminated)
		.csr_write         (1'b0),                                                    // (terminated)
		.csr_readdata      (),                                                        // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                    // (terminated)
		.almost_full_data  (),                                                        // (terminated)
		.almost_empty_data (),                                                        // (terminated)
		.in_startofpacket  (1'b0),                                                    // (terminated)
		.in_endofpacket    (1'b0),                                                    // (terminated)
		.out_startofpacket (),                                                        // (terminated)
		.out_endofpacket   (),                                                        // (terminated)
		.in_empty          (1'b0),                                                    // (terminated)
		.out_empty         (),                                                        // (terminated)
		.in_error          (1'b0),                                                    // (terminated)
		.out_error         (),                                                        // (terminated)
		.in_channel        (1'b0),                                                    // (terminated)
		.out_channel       ()                                                         // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) sys_int_mem_s1_agent (
		.clk                     (sys_clk_clk_clk),                                        //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //       clk_reset.reset
		.m0_address              (sys_int_mem_s1_agent_m0_address),                        //              m0.address
		.m0_burstcount           (sys_int_mem_s1_agent_m0_burstcount),                     //                .burstcount
		.m0_byteenable           (sys_int_mem_s1_agent_m0_byteenable),                     //                .byteenable
		.m0_debugaccess          (sys_int_mem_s1_agent_m0_debugaccess),                    //                .debugaccess
		.m0_lock                 (sys_int_mem_s1_agent_m0_lock),                           //                .lock
		.m0_readdata             (sys_int_mem_s1_agent_m0_readdata),                       //                .readdata
		.m0_readdatavalid        (sys_int_mem_s1_agent_m0_readdatavalid),                  //                .readdatavalid
		.m0_read                 (sys_int_mem_s1_agent_m0_read),                           //                .read
		.m0_waitrequest          (sys_int_mem_s1_agent_m0_waitrequest),                    //                .waitrequest
		.m0_writedata            (sys_int_mem_s1_agent_m0_writedata),                      //                .writedata
		.m0_write                (sys_int_mem_s1_agent_m0_write),                          //                .write
		.rp_endofpacket          (sys_int_mem_s1_agent_rp_endofpacket),                    //              rp.endofpacket
		.rp_ready                (sys_int_mem_s1_agent_rp_ready),                          //                .ready
		.rp_valid                (sys_int_mem_s1_agent_rp_valid),                          //                .valid
		.rp_data                 (sys_int_mem_s1_agent_rp_data),                           //                .data
		.rp_startofpacket        (sys_int_mem_s1_agent_rp_startofpacket),                  //                .startofpacket
		.cp_ready                (agent_pipeline_074_source0_ready),                       //              cp.ready
		.cp_valid                (agent_pipeline_074_source0_valid),                       //                .valid
		.cp_data                 (agent_pipeline_074_source0_data),                        //                .data
		.cp_startofpacket        (agent_pipeline_074_source0_startofpacket),               //                .startofpacket
		.cp_endofpacket          (agent_pipeline_074_source0_endofpacket),                 //                .endofpacket
		.cp_channel              (agent_pipeline_074_source0_channel),                     //                .channel
		.rf_sink_ready           (sys_int_mem_s1_agent_rsp_fifo_out_ready),                //         rf_sink.ready
		.rf_sink_valid           (sys_int_mem_s1_agent_rsp_fifo_out_valid),                //                .valid
		.rf_sink_startofpacket   (sys_int_mem_s1_agent_rsp_fifo_out_startofpacket),        //                .startofpacket
		.rf_sink_endofpacket     (sys_int_mem_s1_agent_rsp_fifo_out_endofpacket),          //                .endofpacket
		.rf_sink_data            (sys_int_mem_s1_agent_rsp_fifo_out_data),                 //                .data
		.rf_source_ready         (sys_int_mem_s1_agent_rf_source_ready),                   //       rf_source.ready
		.rf_source_valid         (sys_int_mem_s1_agent_rf_source_valid),                   //                .valid
		.rf_source_startofpacket (sys_int_mem_s1_agent_rf_source_startofpacket),           //                .startofpacket
		.rf_source_endofpacket   (sys_int_mem_s1_agent_rf_source_endofpacket),             //                .endofpacket
		.rf_source_data          (sys_int_mem_s1_agent_rf_source_data),                    //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_021_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_021_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_021_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_021_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (sys_int_mem_s1_agent_rdata_fifo_src_ready),              //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_int_mem_s1_agent_rdata_fifo_src_valid),              //                .valid
		.rdata_fifo_src_data     (sys_int_mem_s1_agent_rdata_fifo_src_data),               //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_int_mem_s1_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_int_mem_s1_agent_rf_source_data),                    //        in.data
		.in_valid          (sys_int_mem_s1_agent_rf_source_valid),                   //          .valid
		.in_ready          (sys_int_mem_s1_agent_rf_source_ready),                   //          .ready
		.in_startofpacket  (sys_int_mem_s1_agent_rf_source_startofpacket),           //          .startofpacket
		.in_endofpacket    (sys_int_mem_s1_agent_rf_source_endofpacket),             //          .endofpacket
		.out_data          (sys_int_mem_s1_agent_rsp_fifo_out_data),                 //       out.data
		.out_valid         (sys_int_mem_s1_agent_rsp_fifo_out_valid),                //          .valid
		.out_ready         (sys_int_mem_s1_agent_rsp_fifo_out_ready),                //          .ready
		.out_startofpacket (sys_int_mem_s1_agent_rsp_fifo_out_startofpacket),        //          .startofpacket
		.out_endofpacket   (sys_int_mem_s1_agent_rsp_fifo_out_endofpacket),          //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_int_mem_s1_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_int_mem_s1_agent_rdata_fifo_src_data),               //        in.data
		.in_valid          (sys_int_mem_s1_agent_rdata_fifo_src_valid),              //          .valid
		.in_ready          (sys_int_mem_s1_agent_rdata_fifo_src_ready),              //          .ready
		.out_data          (sys_int_mem_s1_agent_rdata_fifo_out_data),               //       out.data
		.out_valid         (sys_int_mem_s1_agent_rdata_fifo_out_valid),              //          .valid
		.out_ready         (sys_int_mem_s1_agent_rdata_fifo_out_ready),              //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) sys_timer_1_s1_agent (
		.clk                     (sys_clk_clk_clk),                                        //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //       clk_reset.reset
		.m0_address              (sys_timer_1_s1_agent_m0_address),                        //              m0.address
		.m0_burstcount           (sys_timer_1_s1_agent_m0_burstcount),                     //                .burstcount
		.m0_byteenable           (sys_timer_1_s1_agent_m0_byteenable),                     //                .byteenable
		.m0_debugaccess          (sys_timer_1_s1_agent_m0_debugaccess),                    //                .debugaccess
		.m0_lock                 (sys_timer_1_s1_agent_m0_lock),                           //                .lock
		.m0_readdata             (sys_timer_1_s1_agent_m0_readdata),                       //                .readdata
		.m0_readdatavalid        (sys_timer_1_s1_agent_m0_readdatavalid),                  //                .readdatavalid
		.m0_read                 (sys_timer_1_s1_agent_m0_read),                           //                .read
		.m0_waitrequest          (sys_timer_1_s1_agent_m0_waitrequest),                    //                .waitrequest
		.m0_writedata            (sys_timer_1_s1_agent_m0_writedata),                      //                .writedata
		.m0_write                (sys_timer_1_s1_agent_m0_write),                          //                .write
		.rp_endofpacket          (sys_timer_1_s1_agent_rp_endofpacket),                    //              rp.endofpacket
		.rp_ready                (sys_timer_1_s1_agent_rp_ready),                          //                .ready
		.rp_valid                (sys_timer_1_s1_agent_rp_valid),                          //                .valid
		.rp_data                 (sys_timer_1_s1_agent_rp_data),                           //                .data
		.rp_startofpacket        (sys_timer_1_s1_agent_rp_startofpacket),                  //                .startofpacket
		.cp_ready                (agent_pipeline_076_source0_ready),                       //              cp.ready
		.cp_valid                (agent_pipeline_076_source0_valid),                       //                .valid
		.cp_data                 (agent_pipeline_076_source0_data),                        //                .data
		.cp_startofpacket        (agent_pipeline_076_source0_startofpacket),               //                .startofpacket
		.cp_endofpacket          (agent_pipeline_076_source0_endofpacket),                 //                .endofpacket
		.cp_channel              (agent_pipeline_076_source0_channel),                     //                .channel
		.rf_sink_ready           (sys_timer_1_s1_agent_rsp_fifo_out_ready),                //         rf_sink.ready
		.rf_sink_valid           (sys_timer_1_s1_agent_rsp_fifo_out_valid),                //                .valid
		.rf_sink_startofpacket   (sys_timer_1_s1_agent_rsp_fifo_out_startofpacket),        //                .startofpacket
		.rf_sink_endofpacket     (sys_timer_1_s1_agent_rsp_fifo_out_endofpacket),          //                .endofpacket
		.rf_sink_data            (sys_timer_1_s1_agent_rsp_fifo_out_data),                 //                .data
		.rf_source_ready         (sys_timer_1_s1_agent_rf_source_ready),                   //       rf_source.ready
		.rf_source_valid         (sys_timer_1_s1_agent_rf_source_valid),                   //                .valid
		.rf_source_startofpacket (sys_timer_1_s1_agent_rf_source_startofpacket),           //                .startofpacket
		.rf_source_endofpacket   (sys_timer_1_s1_agent_rf_source_endofpacket),             //                .endofpacket
		.rf_source_data          (sys_timer_1_s1_agent_rf_source_data),                    //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_022_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_022_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_022_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_022_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (sys_timer_1_s1_agent_rdata_fifo_src_ready),              //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_timer_1_s1_agent_rdata_fifo_src_valid),              //                .valid
		.rdata_fifo_src_data     (sys_timer_1_s1_agent_rdata_fifo_src_data),               //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_timer_1_s1_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_timer_1_s1_agent_rf_source_data),                    //        in.data
		.in_valid          (sys_timer_1_s1_agent_rf_source_valid),                   //          .valid
		.in_ready          (sys_timer_1_s1_agent_rf_source_ready),                   //          .ready
		.in_startofpacket  (sys_timer_1_s1_agent_rf_source_startofpacket),           //          .startofpacket
		.in_endofpacket    (sys_timer_1_s1_agent_rf_source_endofpacket),             //          .endofpacket
		.out_data          (sys_timer_1_s1_agent_rsp_fifo_out_data),                 //       out.data
		.out_valid         (sys_timer_1_s1_agent_rsp_fifo_out_valid),                //          .valid
		.out_ready         (sys_timer_1_s1_agent_rsp_fifo_out_ready),                //          .ready
		.out_startofpacket (sys_timer_1_s1_agent_rsp_fifo_out_startofpacket),        //          .startofpacket
		.out_endofpacket   (sys_timer_1_s1_agent_rsp_fifo_out_endofpacket),          //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_timer_1_s1_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_timer_1_s1_agent_rdata_fifo_src_data),               //        in.data
		.in_valid          (sys_timer_1_s1_agent_rdata_fifo_src_valid),              //          .valid
		.in_ready          (sys_timer_1_s1_agent_rdata_fifo_src_ready),              //          .ready
		.out_data          (sys_timer_1_s1_agent_rdata_fifo_out_data),               //       out.data
		.out_valid         (sys_timer_1_s1_agent_rdata_fifo_out_valid),              //          .valid
		.out_ready         (sys_timer_1_s1_agent_rdata_fifo_out_ready),              //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) sys_timer_2_s1_agent (
		.clk                     (sys_clk_clk_clk),                                        //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //       clk_reset.reset
		.m0_address              (sys_timer_2_s1_agent_m0_address),                        //              m0.address
		.m0_burstcount           (sys_timer_2_s1_agent_m0_burstcount),                     //                .burstcount
		.m0_byteenable           (sys_timer_2_s1_agent_m0_byteenable),                     //                .byteenable
		.m0_debugaccess          (sys_timer_2_s1_agent_m0_debugaccess),                    //                .debugaccess
		.m0_lock                 (sys_timer_2_s1_agent_m0_lock),                           //                .lock
		.m0_readdata             (sys_timer_2_s1_agent_m0_readdata),                       //                .readdata
		.m0_readdatavalid        (sys_timer_2_s1_agent_m0_readdatavalid),                  //                .readdatavalid
		.m0_read                 (sys_timer_2_s1_agent_m0_read),                           //                .read
		.m0_waitrequest          (sys_timer_2_s1_agent_m0_waitrequest),                    //                .waitrequest
		.m0_writedata            (sys_timer_2_s1_agent_m0_writedata),                      //                .writedata
		.m0_write                (sys_timer_2_s1_agent_m0_write),                          //                .write
		.rp_endofpacket          (sys_timer_2_s1_agent_rp_endofpacket),                    //              rp.endofpacket
		.rp_ready                (sys_timer_2_s1_agent_rp_ready),                          //                .ready
		.rp_valid                (sys_timer_2_s1_agent_rp_valid),                          //                .valid
		.rp_data                 (sys_timer_2_s1_agent_rp_data),                           //                .data
		.rp_startofpacket        (sys_timer_2_s1_agent_rp_startofpacket),                  //                .startofpacket
		.cp_ready                (agent_pipeline_078_source0_ready),                       //              cp.ready
		.cp_valid                (agent_pipeline_078_source0_valid),                       //                .valid
		.cp_data                 (agent_pipeline_078_source0_data),                        //                .data
		.cp_startofpacket        (agent_pipeline_078_source0_startofpacket),               //                .startofpacket
		.cp_endofpacket          (agent_pipeline_078_source0_endofpacket),                 //                .endofpacket
		.cp_channel              (agent_pipeline_078_source0_channel),                     //                .channel
		.rf_sink_ready           (sys_timer_2_s1_agent_rsp_fifo_out_ready),                //         rf_sink.ready
		.rf_sink_valid           (sys_timer_2_s1_agent_rsp_fifo_out_valid),                //                .valid
		.rf_sink_startofpacket   (sys_timer_2_s1_agent_rsp_fifo_out_startofpacket),        //                .startofpacket
		.rf_sink_endofpacket     (sys_timer_2_s1_agent_rsp_fifo_out_endofpacket),          //                .endofpacket
		.rf_sink_data            (sys_timer_2_s1_agent_rsp_fifo_out_data),                 //                .data
		.rf_source_ready         (sys_timer_2_s1_agent_rf_source_ready),                   //       rf_source.ready
		.rf_source_valid         (sys_timer_2_s1_agent_rf_source_valid),                   //                .valid
		.rf_source_startofpacket (sys_timer_2_s1_agent_rf_source_startofpacket),           //                .startofpacket
		.rf_source_endofpacket   (sys_timer_2_s1_agent_rf_source_endofpacket),             //                .endofpacket
		.rf_source_data          (sys_timer_2_s1_agent_rf_source_data),                    //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_023_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_023_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_023_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_023_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (sys_timer_2_s1_agent_rdata_fifo_src_ready),              //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_timer_2_s1_agent_rdata_fifo_src_valid),              //                .valid
		.rdata_fifo_src_data     (sys_timer_2_s1_agent_rdata_fifo_src_data),               //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_timer_2_s1_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_timer_2_s1_agent_rf_source_data),                    //        in.data
		.in_valid          (sys_timer_2_s1_agent_rf_source_valid),                   //          .valid
		.in_ready          (sys_timer_2_s1_agent_rf_source_ready),                   //          .ready
		.in_startofpacket  (sys_timer_2_s1_agent_rf_source_startofpacket),           //          .startofpacket
		.in_endofpacket    (sys_timer_2_s1_agent_rf_source_endofpacket),             //          .endofpacket
		.out_data          (sys_timer_2_s1_agent_rsp_fifo_out_data),                 //       out.data
		.out_valid         (sys_timer_2_s1_agent_rsp_fifo_out_valid),                //          .valid
		.out_ready         (sys_timer_2_s1_agent_rsp_fifo_out_ready),                //          .ready
		.out_startofpacket (sys_timer_2_s1_agent_rsp_fifo_out_startofpacket),        //          .startofpacket
		.out_endofpacket   (sys_timer_2_s1_agent_rsp_fifo_out_endofpacket),          //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_timer_2_s1_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_timer_2_s1_agent_rdata_fifo_src_data),               //        in.data
		.in_valid          (sys_timer_2_s1_agent_rdata_fifo_src_valid),              //          .valid
		.in_ready          (sys_timer_2_s1_agent_rdata_fifo_src_ready),              //          .ready
		.out_data          (sys_timer_2_s1_agent_rdata_fifo_out_data),               //       out.data
		.out_valid         (sys_timer_2_s1_agent_rdata_fifo_out_valid),              //          .valid
		.out_ready         (sys_timer_2_s1_agent_rdata_fifo_out_ready),              //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) sys_gpio_bd_s1_agent (
		.clk                     (sys_clk_clk_clk),                                        //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //       clk_reset.reset
		.m0_address              (sys_gpio_bd_s1_agent_m0_address),                        //              m0.address
		.m0_burstcount           (sys_gpio_bd_s1_agent_m0_burstcount),                     //                .burstcount
		.m0_byteenable           (sys_gpio_bd_s1_agent_m0_byteenable),                     //                .byteenable
		.m0_debugaccess          (sys_gpio_bd_s1_agent_m0_debugaccess),                    //                .debugaccess
		.m0_lock                 (sys_gpio_bd_s1_agent_m0_lock),                           //                .lock
		.m0_readdata             (sys_gpio_bd_s1_agent_m0_readdata),                       //                .readdata
		.m0_readdatavalid        (sys_gpio_bd_s1_agent_m0_readdatavalid),                  //                .readdatavalid
		.m0_read                 (sys_gpio_bd_s1_agent_m0_read),                           //                .read
		.m0_waitrequest          (sys_gpio_bd_s1_agent_m0_waitrequest),                    //                .waitrequest
		.m0_writedata            (sys_gpio_bd_s1_agent_m0_writedata),                      //                .writedata
		.m0_write                (sys_gpio_bd_s1_agent_m0_write),                          //                .write
		.rp_endofpacket          (sys_gpio_bd_s1_agent_rp_endofpacket),                    //              rp.endofpacket
		.rp_ready                (sys_gpio_bd_s1_agent_rp_ready),                          //                .ready
		.rp_valid                (sys_gpio_bd_s1_agent_rp_valid),                          //                .valid
		.rp_data                 (sys_gpio_bd_s1_agent_rp_data),                           //                .data
		.rp_startofpacket        (sys_gpio_bd_s1_agent_rp_startofpacket),                  //                .startofpacket
		.cp_ready                (agent_pipeline_080_source0_ready),                       //              cp.ready
		.cp_valid                (agent_pipeline_080_source0_valid),                       //                .valid
		.cp_data                 (agent_pipeline_080_source0_data),                        //                .data
		.cp_startofpacket        (agent_pipeline_080_source0_startofpacket),               //                .startofpacket
		.cp_endofpacket          (agent_pipeline_080_source0_endofpacket),                 //                .endofpacket
		.cp_channel              (agent_pipeline_080_source0_channel),                     //                .channel
		.rf_sink_ready           (sys_gpio_bd_s1_agent_rsp_fifo_out_ready),                //         rf_sink.ready
		.rf_sink_valid           (sys_gpio_bd_s1_agent_rsp_fifo_out_valid),                //                .valid
		.rf_sink_startofpacket   (sys_gpio_bd_s1_agent_rsp_fifo_out_startofpacket),        //                .startofpacket
		.rf_sink_endofpacket     (sys_gpio_bd_s1_agent_rsp_fifo_out_endofpacket),          //                .endofpacket
		.rf_sink_data            (sys_gpio_bd_s1_agent_rsp_fifo_out_data),                 //                .data
		.rf_source_ready         (sys_gpio_bd_s1_agent_rf_source_ready),                   //       rf_source.ready
		.rf_source_valid         (sys_gpio_bd_s1_agent_rf_source_valid),                   //                .valid
		.rf_source_startofpacket (sys_gpio_bd_s1_agent_rf_source_startofpacket),           //                .startofpacket
		.rf_source_endofpacket   (sys_gpio_bd_s1_agent_rf_source_endofpacket),             //                .endofpacket
		.rf_source_data          (sys_gpio_bd_s1_agent_rf_source_data),                    //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_024_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_024_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_024_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_024_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (sys_gpio_bd_s1_agent_rdata_fifo_src_ready),              //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_gpio_bd_s1_agent_rdata_fifo_src_valid),              //                .valid
		.rdata_fifo_src_data     (sys_gpio_bd_s1_agent_rdata_fifo_src_data),               //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_gpio_bd_s1_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_gpio_bd_s1_agent_rf_source_data),                    //        in.data
		.in_valid          (sys_gpio_bd_s1_agent_rf_source_valid),                   //          .valid
		.in_ready          (sys_gpio_bd_s1_agent_rf_source_ready),                   //          .ready
		.in_startofpacket  (sys_gpio_bd_s1_agent_rf_source_startofpacket),           //          .startofpacket
		.in_endofpacket    (sys_gpio_bd_s1_agent_rf_source_endofpacket),             //          .endofpacket
		.out_data          (sys_gpio_bd_s1_agent_rsp_fifo_out_data),                 //       out.data
		.out_valid         (sys_gpio_bd_s1_agent_rsp_fifo_out_valid),                //          .valid
		.out_ready         (sys_gpio_bd_s1_agent_rsp_fifo_out_ready),                //          .ready
		.out_startofpacket (sys_gpio_bd_s1_agent_rsp_fifo_out_startofpacket),        //          .startofpacket
		.out_endofpacket   (sys_gpio_bd_s1_agent_rsp_fifo_out_endofpacket),          //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_gpio_bd_s1_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_gpio_bd_s1_agent_rdata_fifo_src_data),               //        in.data
		.in_valid          (sys_gpio_bd_s1_agent_rdata_fifo_src_valid),              //          .valid
		.in_ready          (sys_gpio_bd_s1_agent_rdata_fifo_src_ready),              //          .ready
		.out_data          (sys_gpio_bd_s1_agent_rdata_fifo_out_data),               //       out.data
		.out_valid         (sys_gpio_bd_s1_agent_rdata_fifo_out_valid),              //          .valid
		.out_ready         (sys_gpio_bd_s1_agent_rdata_fifo_out_ready),              //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) sys_gpio_in_s1_agent (
		.clk                     (sys_clk_clk_clk),                                        //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //       clk_reset.reset
		.m0_address              (sys_gpio_in_s1_agent_m0_address),                        //              m0.address
		.m0_burstcount           (sys_gpio_in_s1_agent_m0_burstcount),                     //                .burstcount
		.m0_byteenable           (sys_gpio_in_s1_agent_m0_byteenable),                     //                .byteenable
		.m0_debugaccess          (sys_gpio_in_s1_agent_m0_debugaccess),                    //                .debugaccess
		.m0_lock                 (sys_gpio_in_s1_agent_m0_lock),                           //                .lock
		.m0_readdata             (sys_gpio_in_s1_agent_m0_readdata),                       //                .readdata
		.m0_readdatavalid        (sys_gpio_in_s1_agent_m0_readdatavalid),                  //                .readdatavalid
		.m0_read                 (sys_gpio_in_s1_agent_m0_read),                           //                .read
		.m0_waitrequest          (sys_gpio_in_s1_agent_m0_waitrequest),                    //                .waitrequest
		.m0_writedata            (sys_gpio_in_s1_agent_m0_writedata),                      //                .writedata
		.m0_write                (sys_gpio_in_s1_agent_m0_write),                          //                .write
		.rp_endofpacket          (sys_gpio_in_s1_agent_rp_endofpacket),                    //              rp.endofpacket
		.rp_ready                (sys_gpio_in_s1_agent_rp_ready),                          //                .ready
		.rp_valid                (sys_gpio_in_s1_agent_rp_valid),                          //                .valid
		.rp_data                 (sys_gpio_in_s1_agent_rp_data),                           //                .data
		.rp_startofpacket        (sys_gpio_in_s1_agent_rp_startofpacket),                  //                .startofpacket
		.cp_ready                (agent_pipeline_082_source0_ready),                       //              cp.ready
		.cp_valid                (agent_pipeline_082_source0_valid),                       //                .valid
		.cp_data                 (agent_pipeline_082_source0_data),                        //                .data
		.cp_startofpacket        (agent_pipeline_082_source0_startofpacket),               //                .startofpacket
		.cp_endofpacket          (agent_pipeline_082_source0_endofpacket),                 //                .endofpacket
		.cp_channel              (agent_pipeline_082_source0_channel),                     //                .channel
		.rf_sink_ready           (sys_gpio_in_s1_agent_rsp_fifo_out_ready),                //         rf_sink.ready
		.rf_sink_valid           (sys_gpio_in_s1_agent_rsp_fifo_out_valid),                //                .valid
		.rf_sink_startofpacket   (sys_gpio_in_s1_agent_rsp_fifo_out_startofpacket),        //                .startofpacket
		.rf_sink_endofpacket     (sys_gpio_in_s1_agent_rsp_fifo_out_endofpacket),          //                .endofpacket
		.rf_sink_data            (sys_gpio_in_s1_agent_rsp_fifo_out_data),                 //                .data
		.rf_source_ready         (sys_gpio_in_s1_agent_rf_source_ready),                   //       rf_source.ready
		.rf_source_valid         (sys_gpio_in_s1_agent_rf_source_valid),                   //                .valid
		.rf_source_startofpacket (sys_gpio_in_s1_agent_rf_source_startofpacket),           //                .startofpacket
		.rf_source_endofpacket   (sys_gpio_in_s1_agent_rf_source_endofpacket),             //                .endofpacket
		.rf_source_data          (sys_gpio_in_s1_agent_rf_source_data),                    //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_025_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_025_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_025_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_025_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (sys_gpio_in_s1_agent_rdata_fifo_src_ready),              //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_gpio_in_s1_agent_rdata_fifo_src_valid),              //                .valid
		.rdata_fifo_src_data     (sys_gpio_in_s1_agent_rdata_fifo_src_data),               //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_gpio_in_s1_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_gpio_in_s1_agent_rf_source_data),                    //        in.data
		.in_valid          (sys_gpio_in_s1_agent_rf_source_valid),                   //          .valid
		.in_ready          (sys_gpio_in_s1_agent_rf_source_ready),                   //          .ready
		.in_startofpacket  (sys_gpio_in_s1_agent_rf_source_startofpacket),           //          .startofpacket
		.in_endofpacket    (sys_gpio_in_s1_agent_rf_source_endofpacket),             //          .endofpacket
		.out_data          (sys_gpio_in_s1_agent_rsp_fifo_out_data),                 //       out.data
		.out_valid         (sys_gpio_in_s1_agent_rsp_fifo_out_valid),                //          .valid
		.out_ready         (sys_gpio_in_s1_agent_rsp_fifo_out_ready),                //          .ready
		.out_startofpacket (sys_gpio_in_s1_agent_rsp_fifo_out_startofpacket),        //          .startofpacket
		.out_endofpacket   (sys_gpio_in_s1_agent_rsp_fifo_out_endofpacket),          //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_gpio_in_s1_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_gpio_in_s1_agent_rdata_fifo_src_data),               //        in.data
		.in_valid          (sys_gpio_in_s1_agent_rdata_fifo_src_valid),              //          .valid
		.in_ready          (sys_gpio_in_s1_agent_rdata_fifo_src_ready),              //          .ready
		.out_data          (sys_gpio_in_s1_agent_rdata_fifo_out_data),               //       out.data
		.out_valid         (sys_gpio_in_s1_agent_rdata_fifo_out_valid),              //          .valid
		.out_ready         (sys_gpio_in_s1_agent_rdata_fifo_out_ready),              //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) sys_gpio_out_s1_agent (
		.clk                     (sys_clk_clk_clk),                                        //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //       clk_reset.reset
		.m0_address              (sys_gpio_out_s1_agent_m0_address),                       //              m0.address
		.m0_burstcount           (sys_gpio_out_s1_agent_m0_burstcount),                    //                .burstcount
		.m0_byteenable           (sys_gpio_out_s1_agent_m0_byteenable),                    //                .byteenable
		.m0_debugaccess          (sys_gpio_out_s1_agent_m0_debugaccess),                   //                .debugaccess
		.m0_lock                 (sys_gpio_out_s1_agent_m0_lock),                          //                .lock
		.m0_readdata             (sys_gpio_out_s1_agent_m0_readdata),                      //                .readdata
		.m0_readdatavalid        (sys_gpio_out_s1_agent_m0_readdatavalid),                 //                .readdatavalid
		.m0_read                 (sys_gpio_out_s1_agent_m0_read),                          //                .read
		.m0_waitrequest          (sys_gpio_out_s1_agent_m0_waitrequest),                   //                .waitrequest
		.m0_writedata            (sys_gpio_out_s1_agent_m0_writedata),                     //                .writedata
		.m0_write                (sys_gpio_out_s1_agent_m0_write),                         //                .write
		.rp_endofpacket          (sys_gpio_out_s1_agent_rp_endofpacket),                   //              rp.endofpacket
		.rp_ready                (sys_gpio_out_s1_agent_rp_ready),                         //                .ready
		.rp_valid                (sys_gpio_out_s1_agent_rp_valid),                         //                .valid
		.rp_data                 (sys_gpio_out_s1_agent_rp_data),                          //                .data
		.rp_startofpacket        (sys_gpio_out_s1_agent_rp_startofpacket),                 //                .startofpacket
		.cp_ready                (agent_pipeline_084_source0_ready),                       //              cp.ready
		.cp_valid                (agent_pipeline_084_source0_valid),                       //                .valid
		.cp_data                 (agent_pipeline_084_source0_data),                        //                .data
		.cp_startofpacket        (agent_pipeline_084_source0_startofpacket),               //                .startofpacket
		.cp_endofpacket          (agent_pipeline_084_source0_endofpacket),                 //                .endofpacket
		.cp_channel              (agent_pipeline_084_source0_channel),                     //                .channel
		.rf_sink_ready           (sys_gpio_out_s1_agent_rsp_fifo_out_ready),               //         rf_sink.ready
		.rf_sink_valid           (sys_gpio_out_s1_agent_rsp_fifo_out_valid),               //                .valid
		.rf_sink_startofpacket   (sys_gpio_out_s1_agent_rsp_fifo_out_startofpacket),       //                .startofpacket
		.rf_sink_endofpacket     (sys_gpio_out_s1_agent_rsp_fifo_out_endofpacket),         //                .endofpacket
		.rf_sink_data            (sys_gpio_out_s1_agent_rsp_fifo_out_data),                //                .data
		.rf_source_ready         (sys_gpio_out_s1_agent_rf_source_ready),                  //       rf_source.ready
		.rf_source_valid         (sys_gpio_out_s1_agent_rf_source_valid),                  //                .valid
		.rf_source_startofpacket (sys_gpio_out_s1_agent_rf_source_startofpacket),          //                .startofpacket
		.rf_source_endofpacket   (sys_gpio_out_s1_agent_rf_source_endofpacket),            //                .endofpacket
		.rf_source_data          (sys_gpio_out_s1_agent_rf_source_data),                   //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_026_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_026_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_026_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_026_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (sys_gpio_out_s1_agent_rdata_fifo_src_ready),             //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_gpio_out_s1_agent_rdata_fifo_src_valid),             //                .valid
		.rdata_fifo_src_data     (sys_gpio_out_s1_agent_rdata_fifo_src_data),              //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_gpio_out_s1_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_gpio_out_s1_agent_rf_source_data),                   //        in.data
		.in_valid          (sys_gpio_out_s1_agent_rf_source_valid),                  //          .valid
		.in_ready          (sys_gpio_out_s1_agent_rf_source_ready),                  //          .ready
		.in_startofpacket  (sys_gpio_out_s1_agent_rf_source_startofpacket),          //          .startofpacket
		.in_endofpacket    (sys_gpio_out_s1_agent_rf_source_endofpacket),            //          .endofpacket
		.out_data          (sys_gpio_out_s1_agent_rsp_fifo_out_data),                //       out.data
		.out_valid         (sys_gpio_out_s1_agent_rsp_fifo_out_valid),               //          .valid
		.out_ready         (sys_gpio_out_s1_agent_rsp_fifo_out_ready),               //          .ready
		.out_startofpacket (sys_gpio_out_s1_agent_rsp_fifo_out_startofpacket),       //          .startofpacket
		.out_endofpacket   (sys_gpio_out_s1_agent_rsp_fifo_out_endofpacket),         //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_gpio_out_s1_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_gpio_out_s1_agent_rdata_fifo_src_data),              //        in.data
		.in_valid          (sys_gpio_out_s1_agent_rdata_fifo_src_valid),             //          .valid
		.in_ready          (sys_gpio_out_s1_agent_rdata_fifo_src_ready),             //          .ready
		.out_data          (sys_gpio_out_s1_agent_rdata_fifo_out_data),              //       out.data
		.out_valid         (sys_gpio_out_s1_agent_rdata_fifo_out_valid),             //          .valid
		.out_ready         (sys_gpio_out_s1_agent_rdata_fifo_out_ready),             //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) sys_spi_spi_control_port_agent (
		.clk                     (sys_clk_clk_clk),                                           //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),    //       clk_reset.reset
		.m0_address              (sys_spi_spi_control_port_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sys_spi_spi_control_port_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sys_spi_spi_control_port_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sys_spi_spi_control_port_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sys_spi_spi_control_port_agent_m0_lock),                    //                .lock
		.m0_readdata             (sys_spi_spi_control_port_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sys_spi_spi_control_port_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sys_spi_spi_control_port_agent_m0_read),                    //                .read
		.m0_waitrequest          (sys_spi_spi_control_port_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sys_spi_spi_control_port_agent_m0_writedata),               //                .writedata
		.m0_write                (sys_spi_spi_control_port_agent_m0_write),                   //                .write
		.rp_endofpacket          (sys_spi_spi_control_port_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sys_spi_spi_control_port_agent_rp_ready),                   //                .ready
		.rp_valid                (sys_spi_spi_control_port_agent_rp_valid),                   //                .valid
		.rp_data                 (sys_spi_spi_control_port_agent_rp_data),                    //                .data
		.rp_startofpacket        (sys_spi_spi_control_port_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (agent_pipeline_086_source0_ready),                          //              cp.ready
		.cp_valid                (agent_pipeline_086_source0_valid),                          //                .valid
		.cp_data                 (agent_pipeline_086_source0_data),                           //                .data
		.cp_startofpacket        (agent_pipeline_086_source0_startofpacket),                  //                .startofpacket
		.cp_endofpacket          (agent_pipeline_086_source0_endofpacket),                    //                .endofpacket
		.cp_channel              (agent_pipeline_086_source0_channel),                        //                .channel
		.rf_sink_ready           (sys_spi_spi_control_port_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sys_spi_spi_control_port_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sys_spi_spi_control_port_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sys_spi_spi_control_port_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sys_spi_spi_control_port_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sys_spi_spi_control_port_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sys_spi_spi_control_port_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sys_spi_spi_control_port_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sys_spi_spi_control_port_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sys_spi_spi_control_port_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_027_out_0_ready),                         // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_027_out_0_valid),                         //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_027_out_0_data),                          //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_027_out_0_error),                         //                .error
		.rdata_fifo_src_ready    (sys_spi_spi_control_port_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_spi_spi_control_port_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sys_spi_spi_control_port_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                       //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_spi_spi_control_port_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                           //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),    // clk_reset.reset
		.in_data           (sys_spi_spi_control_port_agent_rf_source_data),             //        in.data
		.in_valid          (sys_spi_spi_control_port_agent_rf_source_valid),            //          .valid
		.in_ready          (sys_spi_spi_control_port_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sys_spi_spi_control_port_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sys_spi_spi_control_port_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sys_spi_spi_control_port_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sys_spi_spi_control_port_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sys_spi_spi_control_port_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sys_spi_spi_control_port_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sys_spi_spi_control_port_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                     // (terminated)
		.csr_read          (1'b0),                                                      // (terminated)
		.csr_write         (1'b0),                                                      // (terminated)
		.csr_readdata      (),                                                          // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                      // (terminated)
		.almost_full_data  (),                                                          // (terminated)
		.almost_empty_data (),                                                          // (terminated)
		.in_empty          (1'b0),                                                      // (terminated)
		.out_empty         (),                                                          // (terminated)
		.in_error          (1'b0),                                                      // (terminated)
		.out_error         (),                                                          // (terminated)
		.in_channel        (1'b0),                                                      // (terminated)
		.out_channel       ()                                                           // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_spi_spi_control_port_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_spi_spi_control_port_agent_rdata_fifo_src_data),     //        in.data
		.in_valid          (sys_spi_spi_control_port_agent_rdata_fifo_src_valid),    //          .valid
		.in_ready          (sys_spi_spi_control_port_agent_rdata_fifo_src_ready),    //          .ready
		.out_data          (sys_spi_spi_control_port_agent_rdata_fifo_out_data),     //       out.data
		.out_valid         (sys_spi_spi_control_port_agent_rdata_fifo_out_valid),    //          .valid
		.out_ready         (sys_spi_spi_control_port_agent_rdata_fifo_out_ready),    //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_ORI_BURST_SIZE_H      (129),
		.PKT_ORI_BURST_SIZE_L      (127),
		.PKT_RESPONSE_STATUS_H     (126),
		.PKT_RESPONSE_STATUS_L     (125),
		.PKT_BURST_SIZE_H          (98),
		.PKT_BURST_SIZE_L          (96),
		.PKT_TRANS_LOCK            (72),
		.PKT_BEGIN_BURST           (103),
		.PKT_PROTECTION_H          (120),
		.PKT_PROTECTION_L          (118),
		.PKT_BURSTWRAP_H           (95),
		.PKT_BURSTWRAP_L           (87),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_ADDR_H                (67),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (68),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.PKT_TRANS_READ            (71),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SYMBOL_W              (8),
		.ST_CHANNEL_W              (45),
		.ST_DATA_W                 (130),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (1),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.ECC_ENABLE                (0)
	) sys_flash_uas_agent (
		.clk                     (sys_clk_clk_clk),                                        //             clk.clk
		.reset                   (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), //       clk_reset.reset
		.m0_address              (sys_flash_uas_agent_m0_address),                         //              m0.address
		.m0_burstcount           (sys_flash_uas_agent_m0_burstcount),                      //                .burstcount
		.m0_byteenable           (sys_flash_uas_agent_m0_byteenable),                      //                .byteenable
		.m0_debugaccess          (sys_flash_uas_agent_m0_debugaccess),                     //                .debugaccess
		.m0_lock                 (sys_flash_uas_agent_m0_lock),                            //                .lock
		.m0_readdata             (sys_flash_uas_agent_m0_readdata),                        //                .readdata
		.m0_readdatavalid        (sys_flash_uas_agent_m0_readdatavalid),                   //                .readdatavalid
		.m0_read                 (sys_flash_uas_agent_m0_read),                            //                .read
		.m0_waitrequest          (sys_flash_uas_agent_m0_waitrequest),                     //                .waitrequest
		.m0_writedata            (sys_flash_uas_agent_m0_writedata),                       //                .writedata
		.m0_write                (sys_flash_uas_agent_m0_write),                           //                .write
		.rp_endofpacket          (sys_flash_uas_agent_rp_endofpacket),                     //              rp.endofpacket
		.rp_ready                (sys_flash_uas_agent_rp_ready),                           //                .ready
		.rp_valid                (sys_flash_uas_agent_rp_valid),                           //                .valid
		.rp_data                 (sys_flash_uas_agent_rp_data),                            //                .data
		.rp_startofpacket        (sys_flash_uas_agent_rp_startofpacket),                   //                .startofpacket
		.cp_ready                (agent_pipeline_088_source0_ready),                       //              cp.ready
		.cp_valid                (agent_pipeline_088_source0_valid),                       //                .valid
		.cp_data                 (agent_pipeline_088_source0_data),                        //                .data
		.cp_startofpacket        (agent_pipeline_088_source0_startofpacket),               //                .startofpacket
		.cp_endofpacket          (agent_pipeline_088_source0_endofpacket),                 //                .endofpacket
		.cp_channel              (agent_pipeline_088_source0_channel),                     //                .channel
		.rf_sink_ready           (sys_flash_uas_agent_rsp_fifo_out_ready),                 //         rf_sink.ready
		.rf_sink_valid           (sys_flash_uas_agent_rsp_fifo_out_valid),                 //                .valid
		.rf_sink_startofpacket   (sys_flash_uas_agent_rsp_fifo_out_startofpacket),         //                .startofpacket
		.rf_sink_endofpacket     (sys_flash_uas_agent_rsp_fifo_out_endofpacket),           //                .endofpacket
		.rf_sink_data            (sys_flash_uas_agent_rsp_fifo_out_data),                  //                .data
		.rf_source_ready         (sys_flash_uas_agent_rf_source_ready),                    //       rf_source.ready
		.rf_source_valid         (sys_flash_uas_agent_rf_source_valid),                    //                .valid
		.rf_source_startofpacket (sys_flash_uas_agent_rf_source_startofpacket),            //                .startofpacket
		.rf_source_endofpacket   (sys_flash_uas_agent_rf_source_endofpacket),              //                .endofpacket
		.rf_source_data          (sys_flash_uas_agent_rf_source_data),                     //                .data
		.rdata_fifo_sink_ready   (avalon_st_adapter_028_out_0_ready),                      // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (avalon_st_adapter_028_out_0_valid),                      //                .valid
		.rdata_fifo_sink_data    (avalon_st_adapter_028_out_0_data),                       //                .data
		.rdata_fifo_sink_error   (avalon_st_adapter_028_out_0_error),                      //                .error
		.rdata_fifo_src_ready    (sys_flash_uas_agent_rdata_fifo_src_ready),               //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_flash_uas_agent_rdata_fifo_src_valid),               //                .valid
		.rdata_fifo_src_data     (sys_flash_uas_agent_rdata_fifo_src_data),                //                .data
		.m0_response             (2'b00),                                                  //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (131),
		.FIFO_DEPTH          (4),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_flash_uas_agent_rsp_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_flash_uas_agent_rf_source_data),                     //        in.data
		.in_valid          (sys_flash_uas_agent_rf_source_valid),                    //          .valid
		.in_ready          (sys_flash_uas_agent_rf_source_ready),                    //          .ready
		.in_startofpacket  (sys_flash_uas_agent_rf_source_startofpacket),            //          .startofpacket
		.in_endofpacket    (sys_flash_uas_agent_rf_source_endofpacket),              //          .endofpacket
		.out_data          (sys_flash_uas_agent_rsp_fifo_out_data),                  //       out.data
		.out_valid         (sys_flash_uas_agent_rsp_fifo_out_valid),                 //          .valid
		.out_ready         (sys_flash_uas_agent_rsp_fifo_out_ready),                 //          .ready
		.out_startofpacket (sys_flash_uas_agent_rsp_fifo_out_startofpacket),         //          .startofpacket
		.out_endofpacket   (sys_flash_uas_agent_rsp_fifo_out_endofpacket),           //          .endofpacket
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (4),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_flash_uas_agent_rdata_fifo (
		.clk               (sys_clk_clk_clk),                                        //       clk.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.in_data           (sys_flash_uas_agent_rdata_fifo_src_data),                //        in.data
		.in_valid          (sys_flash_uas_agent_rdata_fifo_src_valid),               //          .valid
		.in_ready          (sys_flash_uas_agent_rdata_fifo_src_ready),               //          .ready
		.out_data          (sys_flash_uas_agent_rdata_fifo_out_data),                //       out.data
		.out_valid         (sys_flash_uas_agent_rdata_fifo_out_valid),               //          .valid
		.out_ready         (sys_flash_uas_agent_rdata_fifo_out_ready),               //          .ready
		.csr_address       (2'b00),                                                  // (terminated)
		.csr_read          (1'b0),                                                   // (terminated)
		.csr_write         (1'b0),                                                   // (terminated)
		.csr_readdata      (),                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                   // (terminated)
		.almost_full_data  (),                                                       // (terminated)
		.almost_empty_data (),                                                       // (terminated)
		.in_startofpacket  (1'b0),                                                   // (terminated)
		.in_endofpacket    (1'b0),                                                   // (terminated)
		.out_startofpacket (),                                                       // (terminated)
		.out_endofpacket   (),                                                       // (terminated)
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_channel        (1'b0),                                                   // (terminated)
		.out_channel       ()                                                        // (terminated)
	);

	system_bd_altera_merlin_router_181_zn255xi router (
		.sink_ready         (sys_cpu_data_master_agent_cp_ready),         //      sink.ready
		.sink_valid         (sys_cpu_data_master_agent_cp_valid),         //          .valid
		.sink_data          (sys_cpu_data_master_agent_cp_data),          //          .data
		.sink_startofpacket (sys_cpu_data_master_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sys_cpu_data_master_agent_cp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                            //       clk.clk
		.reset              (sys_cpu_reset_reset_bridge_in_reset_reset),  // clk_reset.reset
		.src_ready          (router_src_ready),                           //       src.ready
		.src_valid          (router_src_valid),                           //          .valid
		.src_data           (router_src_data),                            //          .data
		.src_channel        (router_src_channel),                         //          .channel
		.src_startofpacket  (router_src_startofpacket),                   //          .startofpacket
		.src_endofpacket    (router_src_endofpacket)                      //          .endofpacket
	);

	system_bd_altera_merlin_router_181_jlajz7i router_001 (
		.sink_ready         (sys_cpu_instruction_master_agent_cp_ready),         //      sink.ready
		.sink_valid         (sys_cpu_instruction_master_agent_cp_valid),         //          .valid
		.sink_data          (sys_cpu_instruction_master_agent_cp_data),          //          .data
		.sink_startofpacket (sys_cpu_instruction_master_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sys_cpu_instruction_master_agent_cp_endofpacket),   //          .endofpacket
		.clk                (sys_clk_clk_clk),                                   //       clk.clk
		.reset              (sys_cpu_reset_reset_bridge_in_reset_reset),         // clk_reset.reset
		.src_ready          (router_001_src_ready),                              //       src.ready
		.src_valid          (router_001_src_valid),                              //          .valid
		.src_data           (router_001_src_data),                               //          .data
		.src_channel        (router_001_src_channel),                            //          .channel
		.src_startofpacket  (router_001_src_startofpacket),                      //          .startofpacket
		.src_endofpacket    (router_001_src_endofpacket)                         //          .endofpacket
	);

	system_bd_altera_merlin_router_181_hy55ybi router_002 (
		.sink_ready         (axi_ad9680_dma_m_dest_axi_agent_write_cp_ready),              //      sink.ready
		.sink_valid         (axi_ad9680_dma_m_dest_axi_agent_write_cp_valid),              //          .valid
		.sink_data          (axi_ad9680_dma_m_dest_axi_agent_write_cp_data),               //          .data
		.sink_startofpacket (axi_ad9680_dma_m_dest_axi_agent_write_cp_startofpacket),      //          .startofpacket
		.sink_endofpacket   (axi_ad9680_dma_m_dest_axi_agent_write_cp_endofpacket),        //          .endofpacket
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_002_src_ready),                                        //       src.ready
		.src_valid          (router_002_src_valid),                                        //          .valid
		.src_data           (router_002_src_data),                                         //          .data
		.src_channel        (router_002_src_channel),                                      //          .channel
		.src_startofpacket  (router_002_src_startofpacket),                                //          .startofpacket
		.src_endofpacket    (router_002_src_endofpacket)                                   //          .endofpacket
	);

	system_bd_altera_merlin_router_181_hy55ybi router_003 (
		.sink_ready         (axi_ad9680_dma_m_dest_axi_agent_read_cp_ready),               //      sink.ready
		.sink_valid         (axi_ad9680_dma_m_dest_axi_agent_read_cp_valid),               //          .valid
		.sink_data          (axi_ad9680_dma_m_dest_axi_agent_read_cp_data),                //          .data
		.sink_startofpacket (axi_ad9680_dma_m_dest_axi_agent_read_cp_startofpacket),       //          .startofpacket
		.sink_endofpacket   (axi_ad9680_dma_m_dest_axi_agent_read_cp_endofpacket),         //          .endofpacket
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_003_src_ready),                                        //       src.ready
		.src_valid          (router_003_src_valid),                                        //          .valid
		.src_data           (router_003_src_data),                                         //          .data
		.src_channel        (router_003_src_channel),                                      //          .channel
		.src_startofpacket  (router_003_src_startofpacket),                                //          .startofpacket
		.src_endofpacket    (router_003_src_endofpacket)                                   //          .endofpacket
	);

	system_bd_altera_merlin_router_181_hy55ybi router_004 (
		.sink_ready         (axi_ad9144_dma_m_src_axi_agent_write_cp_ready),               //      sink.ready
		.sink_valid         (axi_ad9144_dma_m_src_axi_agent_write_cp_valid),               //          .valid
		.sink_data          (axi_ad9144_dma_m_src_axi_agent_write_cp_data),                //          .data
		.sink_startofpacket (axi_ad9144_dma_m_src_axi_agent_write_cp_startofpacket),       //          .startofpacket
		.sink_endofpacket   (axi_ad9144_dma_m_src_axi_agent_write_cp_endofpacket),         //          .endofpacket
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_004_src_ready),                                        //       src.ready
		.src_valid          (router_004_src_valid),                                        //          .valid
		.src_data           (router_004_src_data),                                         //          .data
		.src_channel        (router_004_src_channel),                                      //          .channel
		.src_startofpacket  (router_004_src_startofpacket),                                //          .startofpacket
		.src_endofpacket    (router_004_src_endofpacket)                                   //          .endofpacket
	);

	system_bd_altera_merlin_router_181_hy55ybi router_005 (
		.sink_ready         (axi_ad9144_dma_m_src_axi_agent_read_cp_ready),                //      sink.ready
		.sink_valid         (axi_ad9144_dma_m_src_axi_agent_read_cp_valid),                //          .valid
		.sink_data          (axi_ad9144_dma_m_src_axi_agent_read_cp_data),                 //          .data
		.sink_startofpacket (axi_ad9144_dma_m_src_axi_agent_read_cp_startofpacket),        //          .startofpacket
		.sink_endofpacket   (axi_ad9144_dma_m_src_axi_agent_read_cp_endofpacket),          //          .endofpacket
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_005_src_ready),                                        //       src.ready
		.src_valid          (router_005_src_valid),                                        //          .valid
		.src_data           (router_005_src_data),                                         //          .data
		.src_channel        (router_005_src_channel),                                      //          .channel
		.src_startofpacket  (router_005_src_startofpacket),                                //          .startofpacket
		.src_endofpacket    (router_005_src_endofpacket)                                   //          .endofpacket
	);

	system_bd_altera_merlin_router_181_ud7dcxq router_006 (
		.sink_ready         (sys_ethernet_dma_tx_mm_read_agent_cp_ready),             //      sink.ready
		.sink_valid         (sys_ethernet_dma_tx_mm_read_agent_cp_valid),             //          .valid
		.sink_data          (sys_ethernet_dma_tx_mm_read_agent_cp_data),              //          .data
		.sink_startofpacket (sys_ethernet_dma_tx_mm_read_agent_cp_startofpacket),     //          .startofpacket
		.sink_endofpacket   (sys_ethernet_dma_tx_mm_read_agent_cp_endofpacket),       //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_006_src_ready),                                   //       src.ready
		.src_valid          (router_006_src_valid),                                   //          .valid
		.src_data           (router_006_src_data),                                    //          .data
		.src_channel        (router_006_src_channel),                                 //          .channel
		.src_startofpacket  (router_006_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_006_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_ud7dcxq router_007 (
		.sink_ready         (sys_ethernet_dma_rx_mm_write_agent_cp_ready),            //      sink.ready
		.sink_valid         (sys_ethernet_dma_rx_mm_write_agent_cp_valid),            //          .valid
		.sink_data          (sys_ethernet_dma_rx_mm_write_agent_cp_data),             //          .data
		.sink_startofpacket (sys_ethernet_dma_rx_mm_write_agent_cp_startofpacket),    //          .startofpacket
		.sink_endofpacket   (sys_ethernet_dma_rx_mm_write_agent_cp_endofpacket),      //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_007_src_ready),                                   //       src.ready
		.src_valid          (router_007_src_valid),                                   //          .valid
		.src_data           (router_007_src_data),                                    //          .data
		.src_channel        (router_007_src_channel),                                 //          .channel
		.src_startofpacket  (router_007_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_007_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_008 (
		.sink_ready         (agent_pipeline_002_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_002_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_002_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_002_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_002_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_008_src_ready),                                   //       src.ready
		.src_valid          (router_008_src_valid),                                   //          .valid
		.src_data           (router_008_src_data),                                    //          .data
		.src_channel        (router_008_src_channel),                                 //          .channel
		.src_startofpacket  (router_008_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_008_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_009 (
		.sink_ready         (agent_pipeline_003_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_003_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_003_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_003_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_003_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_009_src_ready),                                   //       src.ready
		.src_valid          (router_009_src_valid),                                   //          .valid
		.src_data           (router_009_src_data),                                    //          .data
		.src_channel        (router_009_src_channel),                                 //          .channel
		.src_startofpacket  (router_009_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_009_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_010 (
		.sink_ready         (agent_pipeline_006_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_006_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_006_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_006_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_006_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_010_src_ready),                                   //       src.ready
		.src_valid          (router_010_src_valid),                                   //          .valid
		.src_data           (router_010_src_data),                                    //          .data
		.src_channel        (router_010_src_channel),                                 //          .channel
		.src_startofpacket  (router_010_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_010_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_011 (
		.sink_ready         (agent_pipeline_007_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_007_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_007_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_007_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_007_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_011_src_ready),                                   //       src.ready
		.src_valid          (router_011_src_valid),                                   //          .valid
		.src_data           (router_011_src_data),                                    //          .data
		.src_channel        (router_011_src_channel),                                 //          .channel
		.src_startofpacket  (router_011_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_011_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_012 (
		.sink_ready         (agent_pipeline_010_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_010_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_010_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_010_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_010_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_012_src_ready),                                   //       src.ready
		.src_valid          (router_012_src_valid),                                   //          .valid
		.src_data           (router_012_src_data),                                    //          .data
		.src_channel        (router_012_src_channel),                                 //          .channel
		.src_startofpacket  (router_012_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_012_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_013 (
		.sink_ready         (agent_pipeline_011_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_011_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_011_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_011_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_011_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_013_src_ready),                                   //       src.ready
		.src_valid          (router_013_src_valid),                                   //          .valid
		.src_data           (router_013_src_data),                                    //          .data
		.src_channel        (router_013_src_channel),                                 //          .channel
		.src_startofpacket  (router_013_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_013_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_014 (
		.sink_ready         (agent_pipeline_014_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_014_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_014_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_014_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_014_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_014_src_ready),                                   //       src.ready
		.src_valid          (router_014_src_valid),                                   //          .valid
		.src_data           (router_014_src_data),                                    //          .data
		.src_channel        (router_014_src_channel),                                 //          .channel
		.src_startofpacket  (router_014_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_014_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_015 (
		.sink_ready         (agent_pipeline_015_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_015_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_015_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_015_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_015_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_015_src_ready),                                   //       src.ready
		.src_valid          (router_015_src_valid),                                   //          .valid
		.src_data           (router_015_src_data),                                    //          .data
		.src_channel        (router_015_src_channel),                                 //          .channel
		.src_startofpacket  (router_015_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_015_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_016 (
		.sink_ready         (agent_pipeline_018_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_018_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_018_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_018_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_018_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_016_src_ready),                                   //       src.ready
		.src_valid          (router_016_src_valid),                                   //          .valid
		.src_data           (router_016_src_data),                                    //          .data
		.src_channel        (router_016_src_channel),                                 //          .channel
		.src_startofpacket  (router_016_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_016_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_017 (
		.sink_ready         (agent_pipeline_019_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_019_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_019_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_019_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_019_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_017_src_ready),                                   //       src.ready
		.src_valid          (router_017_src_valid),                                   //          .valid
		.src_data           (router_017_src_data),                                    //          .data
		.src_channel        (router_017_src_channel),                                 //          .channel
		.src_startofpacket  (router_017_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_017_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_018 (
		.sink_ready         (agent_pipeline_022_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_022_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_022_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_022_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_022_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_018_src_ready),                                   //       src.ready
		.src_valid          (router_018_src_valid),                                   //          .valid
		.src_data           (router_018_src_data),                                    //          .data
		.src_channel        (router_018_src_channel),                                 //          .channel
		.src_startofpacket  (router_018_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_018_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_019 (
		.sink_ready         (agent_pipeline_023_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_023_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_023_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_023_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_023_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_019_src_ready),                                   //       src.ready
		.src_valid          (router_019_src_valid),                                   //          .valid
		.src_data           (router_019_src_data),                                    //          .data
		.src_channel        (router_019_src_channel),                                 //          .channel
		.src_startofpacket  (router_019_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_019_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_020 (
		.sink_ready         (agent_pipeline_026_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_026_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_026_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_026_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_026_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_020_src_ready),                                   //       src.ready
		.src_valid          (router_020_src_valid),                                   //          .valid
		.src_data           (router_020_src_data),                                    //          .data
		.src_channel        (router_020_src_channel),                                 //          .channel
		.src_startofpacket  (router_020_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_020_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_021 (
		.sink_ready         (agent_pipeline_027_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_027_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_027_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_027_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_027_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_021_src_ready),                                   //       src.ready
		.src_valid          (router_021_src_valid),                                   //          .valid
		.src_data           (router_021_src_data),                                    //          .data
		.src_channel        (router_021_src_channel),                                 //          .channel
		.src_startofpacket  (router_021_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_021_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_022 (
		.sink_ready         (agent_pipeline_030_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_030_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_030_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_030_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_030_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_022_src_ready),                                   //       src.ready
		.src_valid          (router_022_src_valid),                                   //          .valid
		.src_data           (router_022_src_data),                                    //          .data
		.src_channel        (router_022_src_channel),                                 //          .channel
		.src_startofpacket  (router_022_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_022_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_023 (
		.sink_ready         (agent_pipeline_031_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_031_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_031_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_031_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_031_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_023_src_ready),                                   //       src.ready
		.src_valid          (router_023_src_valid),                                   //          .valid
		.src_data           (router_023_src_data),                                    //          .data
		.src_channel        (router_023_src_channel),                                 //          .channel
		.src_startofpacket  (router_023_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_023_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_024 (
		.sink_ready         (agent_pipeline_033_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_033_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_033_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_033_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_033_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_024_src_ready),                                   //       src.ready
		.src_valid          (router_024_src_valid),                                   //          .valid
		.src_data           (router_024_src_data),                                    //          .data
		.src_channel        (router_024_src_channel),                                 //          .channel
		.src_startofpacket  (router_024_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_024_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_025 (
		.sink_ready         (agent_pipeline_035_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_035_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_035_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_035_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_035_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_025_src_ready),                                   //       src.ready
		.src_valid          (router_025_src_valid),                                   //          .valid
		.src_data           (router_025_src_data),                                    //          .data
		.src_channel        (router_025_src_channel),                                 //          .channel
		.src_startofpacket  (router_025_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_025_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_026 (
		.sink_ready         (agent_pipeline_037_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_037_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_037_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_037_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_037_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_026_src_ready),                                   //       src.ready
		.src_valid          (router_026_src_valid),                                   //          .valid
		.src_data           (router_026_src_data),                                    //          .data
		.src_channel        (router_026_src_channel),                                 //          .channel
		.src_startofpacket  (router_026_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_026_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_027 (
		.sink_ready         (agent_pipeline_039_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_039_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_039_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_039_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_039_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_027_src_ready),                                   //       src.ready
		.src_valid          (router_027_src_valid),                                   //          .valid
		.src_data           (router_027_src_data),                                    //          .data
		.src_channel        (router_027_src_channel),                                 //          .channel
		.src_startofpacket  (router_027_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_027_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_028 (
		.sink_ready         (agent_pipeline_041_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_041_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_041_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_041_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_041_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_028_src_ready),                                   //       src.ready
		.src_valid          (router_028_src_valid),                                   //          .valid
		.src_data           (router_028_src_data),                                    //          .data
		.src_channel        (router_028_src_channel),                                 //          .channel
		.src_startofpacket  (router_028_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_028_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2sfvzsi router_029 (
		.sink_ready         (agent_pipeline_043_source0_ready),                                       //      sink.ready
		.sink_valid         (agent_pipeline_043_source0_valid),                                       //          .valid
		.sink_data          (agent_pipeline_043_source0_data),                                        //          .data
		.sink_startofpacket (agent_pipeline_043_source0_startofpacket),                               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_043_source0_endofpacket),                                 //          .endofpacket
		.clk                (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       clk.clk
		.reset              (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_029_src_ready),                                                   //       src.ready
		.src_valid          (router_029_src_valid),                                                   //          .valid
		.src_data           (router_029_src_data),                                                    //          .data
		.src_channel        (router_029_src_channel),                                                 //          .channel
		.src_startofpacket  (router_029_src_startofpacket),                                           //          .startofpacket
		.src_endofpacket    (router_029_src_endofpacket)                                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_ifjucri router_030 (
		.sink_ready         (agent_pipeline_045_source0_ready),          //      sink.ready
		.sink_valid         (agent_pipeline_045_source0_valid),          //          .valid
		.sink_data          (agent_pipeline_045_source0_data),           //          .data
		.sink_startofpacket (agent_pipeline_045_source0_startofpacket),  //          .startofpacket
		.sink_endofpacket   (agent_pipeline_045_source0_endofpacket),    //          .endofpacket
		.clk                (sys_clk_clk_clk),                           //       clk.clk
		.reset              (sys_cpu_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_030_src_ready),                      //       src.ready
		.src_valid          (router_030_src_valid),                      //          .valid
		.src_data           (router_030_src_data),                       //          .data
		.src_channel        (router_030_src_channel),                    //          .channel
		.src_startofpacket  (router_030_src_startofpacket),              //          .startofpacket
		.src_endofpacket    (router_030_src_endofpacket)                 //          .endofpacket
	);

	system_bd_altera_merlin_router_181_ojgycvi router_031 (
		.sink_ready         (agent_pipeline_047_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_047_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_047_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_047_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_047_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_031_src_ready),                                   //       src.ready
		.src_valid          (router_031_src_valid),                                   //          .valid
		.src_data           (router_031_src_data),                                    //          .data
		.src_channel        (router_031_src_channel),                                 //          .channel
		.src_startofpacket  (router_031_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_031_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_ojgycvi router_032 (
		.sink_ready         (agent_pipeline_049_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_049_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_049_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_049_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_049_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_032_src_ready),                                   //       src.ready
		.src_valid          (router_032_src_valid),                                   //          .valid
		.src_data           (router_032_src_data),                                    //          .data
		.src_channel        (router_032_src_channel),                                 //          .channel
		.src_startofpacket  (router_032_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_032_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_033 (
		.sink_ready         (agent_pipeline_051_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_051_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_051_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_051_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_051_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_033_src_ready),                                   //       src.ready
		.src_valid          (router_033_src_valid),                                   //          .valid
		.src_data           (router_033_src_data),                                    //          .data
		.src_channel        (router_033_src_channel),                                 //          .channel
		.src_startofpacket  (router_033_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_033_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_034 (
		.sink_ready         (agent_pipeline_053_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_053_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_053_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_053_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_053_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_034_src_ready),                                   //       src.ready
		.src_valid          (router_034_src_valid),                                   //          .valid
		.src_data           (router_034_src_data),                                    //          .data
		.src_channel        (router_034_src_channel),                                 //          .channel
		.src_startofpacket  (router_034_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_034_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_035 (
		.sink_ready         (agent_pipeline_055_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_055_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_055_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_055_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_055_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_035_src_ready),                                   //       src.ready
		.src_valid          (router_035_src_valid),                                   //          .valid
		.src_data           (router_035_src_data),                                    //          .data
		.src_channel        (router_035_src_channel),                                 //          .channel
		.src_startofpacket  (router_035_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_035_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_036 (
		.sink_ready         (agent_pipeline_057_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_057_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_057_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_057_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_057_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_036_src_ready),                                   //       src.ready
		.src_valid          (router_036_src_valid),                                   //          .valid
		.src_data           (router_036_src_data),                                    //          .data
		.src_channel        (router_036_src_channel),                                 //          .channel
		.src_startofpacket  (router_036_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_036_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_037 (
		.sink_ready         (agent_pipeline_059_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_059_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_059_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_059_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_059_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_037_src_ready),                                   //       src.ready
		.src_valid          (router_037_src_valid),                                   //          .valid
		.src_data           (router_037_src_data),                                    //          .data
		.src_channel        (router_037_src_channel),                                 //          .channel
		.src_startofpacket  (router_037_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_037_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_038 (
		.sink_ready         (agent_pipeline_061_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_061_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_061_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_061_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_061_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_038_src_ready),                                   //       src.ready
		.src_valid          (router_038_src_valid),                                   //          .valid
		.src_data           (router_038_src_data),                                    //          .data
		.src_channel        (router_038_src_channel),                                 //          .channel
		.src_startofpacket  (router_038_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_038_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_039 (
		.sink_ready         (agent_pipeline_063_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_063_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_063_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_063_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_063_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_039_src_ready),                                   //       src.ready
		.src_valid          (router_039_src_valid),                                   //          .valid
		.src_data           (router_039_src_data),                                    //          .data
		.src_channel        (router_039_src_channel),                                 //          .channel
		.src_startofpacket  (router_039_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_039_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_040 (
		.sink_ready         (agent_pipeline_065_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_065_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_065_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_065_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_065_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_040_src_ready),                                   //       src.ready
		.src_valid          (router_040_src_valid),                                   //          .valid
		.src_data           (router_040_src_data),                                    //          .data
		.src_channel        (router_040_src_channel),                                 //          .channel
		.src_startofpacket  (router_040_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_040_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_041 (
		.sink_ready         (agent_pipeline_067_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_067_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_067_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_067_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_067_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_041_src_ready),                                   //       src.ready
		.src_valid          (router_041_src_valid),                                   //          .valid
		.src_data           (router_041_src_data),                                    //          .data
		.src_channel        (router_041_src_channel),                                 //          .channel
		.src_startofpacket  (router_041_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_041_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_042 (
		.sink_ready         (agent_pipeline_069_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_069_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_069_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_069_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_069_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_042_src_ready),                                   //       src.ready
		.src_valid          (router_042_src_valid),                                   //          .valid
		.src_data           (router_042_src_data),                                    //          .data
		.src_channel        (router_042_src_channel),                                 //          .channel
		.src_startofpacket  (router_042_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_042_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_043 (
		.sink_ready         (agent_pipeline_071_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_071_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_071_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_071_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_071_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_043_src_ready),                                   //       src.ready
		.src_valid          (router_043_src_valid),                                   //          .valid
		.src_data           (router_043_src_data),                                    //          .data
		.src_channel        (router_043_src_channel),                                 //          .channel
		.src_startofpacket  (router_043_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_043_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_044 (
		.sink_ready         (agent_pipeline_073_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_073_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_073_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_073_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_073_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_044_src_ready),                                   //       src.ready
		.src_valid          (router_044_src_valid),                                   //          .valid
		.src_data           (router_044_src_data),                                    //          .data
		.src_channel        (router_044_src_channel),                                 //          .channel
		.src_startofpacket  (router_044_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_044_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_ifjucri router_045 (
		.sink_ready         (agent_pipeline_075_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_075_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_075_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_075_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_075_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_045_src_ready),                                   //       src.ready
		.src_valid          (router_045_src_valid),                                   //          .valid
		.src_data           (router_045_src_data),                                    //          .data
		.src_channel        (router_045_src_channel),                                 //          .channel
		.src_startofpacket  (router_045_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_045_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_046 (
		.sink_ready         (agent_pipeline_077_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_077_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_077_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_077_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_077_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_046_src_ready),                                   //       src.ready
		.src_valid          (router_046_src_valid),                                   //          .valid
		.src_data           (router_046_src_data),                                    //          .data
		.src_channel        (router_046_src_channel),                                 //          .channel
		.src_startofpacket  (router_046_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_046_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_047 (
		.sink_ready         (agent_pipeline_079_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_079_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_079_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_079_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_079_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_047_src_ready),                                   //       src.ready
		.src_valid          (router_047_src_valid),                                   //          .valid
		.src_data           (router_047_src_data),                                    //          .data
		.src_channel        (router_047_src_channel),                                 //          .channel
		.src_startofpacket  (router_047_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_047_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_048 (
		.sink_ready         (agent_pipeline_081_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_081_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_081_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_081_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_081_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_048_src_ready),                                   //       src.ready
		.src_valid          (router_048_src_valid),                                   //          .valid
		.src_data           (router_048_src_data),                                    //          .data
		.src_channel        (router_048_src_channel),                                 //          .channel
		.src_startofpacket  (router_048_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_048_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_049 (
		.sink_ready         (agent_pipeline_083_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_083_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_083_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_083_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_083_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_049_src_ready),                                   //       src.ready
		.src_valid          (router_049_src_valid),                                   //          .valid
		.src_data           (router_049_src_data),                                    //          .data
		.src_channel        (router_049_src_channel),                                 //          .channel
		.src_startofpacket  (router_049_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_049_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_050 (
		.sink_ready         (agent_pipeline_085_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_085_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_085_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_085_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_085_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_050_src_ready),                                   //       src.ready
		.src_valid          (router_050_src_valid),                                   //          .valid
		.src_data           (router_050_src_data),                                    //          .data
		.src_channel        (router_050_src_channel),                                 //          .channel
		.src_startofpacket  (router_050_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_050_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_2fdjoey router_051 (
		.sink_ready         (agent_pipeline_087_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_087_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_087_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_087_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_087_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_051_src_ready),                                   //       src.ready
		.src_valid          (router_051_src_valid),                                   //          .valid
		.src_data           (router_051_src_data),                                    //          .data
		.src_channel        (router_051_src_channel),                                 //          .channel
		.src_startofpacket  (router_051_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_051_src_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_router_181_ifjucri router_052 (
		.sink_ready         (agent_pipeline_089_source0_ready),                       //      sink.ready
		.sink_valid         (agent_pipeline_089_source0_valid),                       //          .valid
		.sink_data          (agent_pipeline_089_source0_data),                        //          .data
		.sink_startofpacket (agent_pipeline_089_source0_startofpacket),               //          .startofpacket
		.sink_endofpacket   (agent_pipeline_089_source0_endofpacket),                 //          .endofpacket
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_052_src_ready),                                   //       src.ready
		.src_valid          (router_052_src_valid),                                   //          .valid
		.src_data           (router_052_src_data),                                    //          .data
		.src_channel        (router_052_src_channel),                                 //          .channel
		.src_startofpacket  (router_052_src_startofpacket),                           //          .startofpacket
		.src_endofpacket    (router_052_src_endofpacket)                              //          .endofpacket
	);

	altera_merlin_traffic_limiter #(
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.MAX_OUTSTANDING_RESPONSES (84),
		.PIPELINED                 (0),
		.ST_DATA_W                 (130),
		.ST_CHANNEL_W              (45),
		.VALID_WIDTH               (1),
		.ENFORCE_ORDER             (1),
		.PREVENT_HAZARDS           (1),
		.SUPPORTS_POSTED_WRITES    (1),
		.SUPPORTS_NONPOSTED_WRITES (0),
		.REORDER                   (0)
	) sys_cpu_data_master_limiter (
		.clk                    (sys_clk_clk_clk),                                   //       clk.clk
		.reset                  (sys_cpu_reset_reset_bridge_in_reset_reset),         // clk_reset.reset
		.cmd_sink_ready         (router_src_ready),                                  //  cmd_sink.ready
		.cmd_sink_valid         (router_src_valid),                                  //          .valid
		.cmd_sink_data          (router_src_data),                                   //          .data
		.cmd_sink_channel       (router_src_channel),                                //          .channel
		.cmd_sink_startofpacket (router_src_startofpacket),                          //          .startofpacket
		.cmd_sink_endofpacket   (router_src_endofpacket),                            //          .endofpacket
		.cmd_src_ready          (sys_cpu_data_master_limiter_cmd_src_ready),         //   cmd_src.ready
		.cmd_src_data           (sys_cpu_data_master_limiter_cmd_src_data),          //          .data
		.cmd_src_channel        (sys_cpu_data_master_limiter_cmd_src_channel),       //          .channel
		.cmd_src_startofpacket  (sys_cpu_data_master_limiter_cmd_src_startofpacket), //          .startofpacket
		.cmd_src_endofpacket    (sys_cpu_data_master_limiter_cmd_src_endofpacket),   //          .endofpacket
		.cmd_src_valid          (sys_cpu_data_master_limiter_cmd_src_valid),         //          .valid
		.rsp_sink_ready         (limiter_pipeline_001_source0_ready),                //  rsp_sink.ready
		.rsp_sink_valid         (limiter_pipeline_001_source0_valid),                //          .valid
		.rsp_sink_channel       (limiter_pipeline_001_source0_channel),              //          .channel
		.rsp_sink_data          (limiter_pipeline_001_source0_data),                 //          .data
		.rsp_sink_startofpacket (limiter_pipeline_001_source0_startofpacket),        //          .startofpacket
		.rsp_sink_endofpacket   (limiter_pipeline_001_source0_endofpacket),          //          .endofpacket
		.rsp_src_ready          (sys_cpu_data_master_limiter_rsp_src_ready),         //   rsp_src.ready
		.rsp_src_valid          (sys_cpu_data_master_limiter_rsp_src_valid),         //          .valid
		.rsp_src_data           (sys_cpu_data_master_limiter_rsp_src_data),          //          .data
		.rsp_src_channel        (sys_cpu_data_master_limiter_rsp_src_channel),       //          .channel
		.rsp_src_startofpacket  (sys_cpu_data_master_limiter_rsp_src_startofpacket), //          .startofpacket
		.rsp_src_endofpacket    (sys_cpu_data_master_limiter_rsp_src_endofpacket)    //          .endofpacket
	);

	altera_merlin_traffic_limiter #(
		.PKT_DEST_ID_H             (116),
		.PKT_DEST_ID_L             (111),
		.PKT_SRC_ID_H              (110),
		.PKT_SRC_ID_L              (105),
		.PKT_BYTE_CNT_H            (86),
		.PKT_BYTE_CNT_L            (74),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_TRANS_POSTED          (69),
		.PKT_TRANS_WRITE           (70),
		.MAX_OUTSTANDING_RESPONSES (86),
		.PIPELINED                 (0),
		.ST_DATA_W                 (130),
		.ST_CHANNEL_W              (45),
		.VALID_WIDTH               (1),
		.ENFORCE_ORDER             (1),
		.PREVENT_HAZARDS           (0),
		.SUPPORTS_POSTED_WRITES    (1),
		.SUPPORTS_NONPOSTED_WRITES (0),
		.REORDER                   (0)
	) sys_cpu_instruction_master_limiter (
		.clk                    (sys_clk_clk_clk),                                          //       clk.clk
		.reset                  (sys_cpu_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.cmd_sink_ready         (router_001_src_ready),                                     //  cmd_sink.ready
		.cmd_sink_valid         (router_001_src_valid),                                     //          .valid
		.cmd_sink_data          (router_001_src_data),                                      //          .data
		.cmd_sink_channel       (router_001_src_channel),                                   //          .channel
		.cmd_sink_startofpacket (router_001_src_startofpacket),                             //          .startofpacket
		.cmd_sink_endofpacket   (router_001_src_endofpacket),                               //          .endofpacket
		.cmd_src_ready          (sys_cpu_instruction_master_limiter_cmd_src_ready),         //   cmd_src.ready
		.cmd_src_data           (sys_cpu_instruction_master_limiter_cmd_src_data),          //          .data
		.cmd_src_channel        (sys_cpu_instruction_master_limiter_cmd_src_channel),       //          .channel
		.cmd_src_startofpacket  (sys_cpu_instruction_master_limiter_cmd_src_startofpacket), //          .startofpacket
		.cmd_src_endofpacket    (sys_cpu_instruction_master_limiter_cmd_src_endofpacket),   //          .endofpacket
		.cmd_src_valid          (sys_cpu_instruction_master_limiter_cmd_src_valid),         //          .valid
		.rsp_sink_ready         (limiter_pipeline_003_source0_ready),                       //  rsp_sink.ready
		.rsp_sink_valid         (limiter_pipeline_003_source0_valid),                       //          .valid
		.rsp_sink_channel       (limiter_pipeline_003_source0_channel),                     //          .channel
		.rsp_sink_data          (limiter_pipeline_003_source0_data),                        //          .data
		.rsp_sink_startofpacket (limiter_pipeline_003_source0_startofpacket),               //          .startofpacket
		.rsp_sink_endofpacket   (limiter_pipeline_003_source0_endofpacket),                 //          .endofpacket
		.rsp_src_ready          (sys_cpu_instruction_master_limiter_rsp_src_ready),         //   rsp_src.ready
		.rsp_src_valid          (sys_cpu_instruction_master_limiter_rsp_src_valid),         //          .valid
		.rsp_src_data           (sys_cpu_instruction_master_limiter_rsp_src_data),          //          .data
		.rsp_src_channel        (sys_cpu_instruction_master_limiter_rsp_src_channel),       //          .channel
		.rsp_src_startofpacket  (sys_cpu_instruction_master_limiter_rsp_src_startofpacket), //          .startofpacket
		.rsp_src_endofpacket    (sys_cpu_instruction_master_limiter_rsp_src_endofpacket)    //          .endofpacket
	);

	altera_merlin_burst_adapter #(
		.PKT_ADDR_H                (607),
		.PKT_ADDR_L                (576),
		.PKT_BEGIN_BURST           (643),
		.PKT_BYTE_CNT_H            (626),
		.PKT_BYTE_CNT_L            (614),
		.PKT_BYTEEN_H              (575),
		.PKT_BYTEEN_L              (512),
		.PKT_BURST_SIZE_H          (638),
		.PKT_BURST_SIZE_L          (636),
		.PKT_BURST_TYPE_H          (640),
		.PKT_BURST_TYPE_L          (639),
		.PKT_BURSTWRAP_H           (635),
		.PKT_BURSTWRAP_L           (627),
		.PKT_TRANS_COMPRESSED_READ (608),
		.PKT_TRANS_WRITE           (610),
		.PKT_TRANS_READ            (611),
		.OUT_NARROW_SIZE           (0),
		.IN_NARROW_SIZE            (1),
		.OUT_FIXED                 (0),
		.OUT_COMPLETE_WRAP         (0),
		.ST_DATA_W                 (670),
		.ST_CHANNEL_W              (45),
		.OUT_BYTE_CNT_H            (626),
		.OUT_BURSTWRAP_H           (635),
		.COMPRESSED_READ_SUPPORT   (1),
		.BYTEENABLE_SYNTHESIS      (1),
		.PIPE_INPUTS               (0),
		.NO_WRAP_SUPPORT           (0),
		.INCOMPLETE_WRAP_SUPPORT   (0),
		.BURSTWRAP_CONST_MASK      (0),
		.BURSTWRAP_CONST_VALUE     (0),
		.ADAPTER_VERSION           ("new")
	) sys_ddr3_cntrl_ctrl_amm_0_burst_adapter (
		.clk                   (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       cr0.clk
		.reset                 (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.sink0_valid           (cmd_mux_021_src_valid),                                                  //     sink0.valid
		.sink0_data            (cmd_mux_021_src_data),                                                   //          .data
		.sink0_channel         (cmd_mux_021_src_channel),                                                //          .channel
		.sink0_startofpacket   (cmd_mux_021_src_startofpacket),                                          //          .startofpacket
		.sink0_endofpacket     (cmd_mux_021_src_endofpacket),                                            //          .endofpacket
		.sink0_ready           (cmd_mux_021_src_ready),                                                  //          .ready
		.source0_valid         (sys_ddr3_cntrl_ctrl_amm_0_burst_adapter_source0_valid),                  //   source0.valid
		.source0_data          (sys_ddr3_cntrl_ctrl_amm_0_burst_adapter_source0_data),                   //          .data
		.source0_channel       (sys_ddr3_cntrl_ctrl_amm_0_burst_adapter_source0_channel),                //          .channel
		.source0_startofpacket (sys_ddr3_cntrl_ctrl_amm_0_burst_adapter_source0_startofpacket),          //          .startofpacket
		.source0_endofpacket   (sys_ddr3_cntrl_ctrl_amm_0_burst_adapter_source0_endofpacket),            //          .endofpacket
		.source0_ready         (sys_ddr3_cntrl_ctrl_amm_0_burst_adapter_source0_ready)                   //          .ready
	);

	altera_merlin_burst_adapter #(
		.PKT_ADDR_H                (319),
		.PKT_ADDR_L                (288),
		.PKT_BEGIN_BURST           (355),
		.PKT_BYTE_CNT_H            (338),
		.PKT_BYTE_CNT_L            (326),
		.PKT_BYTEEN_H              (287),
		.PKT_BYTEEN_L              (256),
		.PKT_BURST_SIZE_H          (350),
		.PKT_BURST_SIZE_L          (348),
		.PKT_BURST_TYPE_H          (352),
		.PKT_BURST_TYPE_L          (351),
		.PKT_BURSTWRAP_H           (347),
		.PKT_BURSTWRAP_L           (339),
		.PKT_TRANS_COMPRESSED_READ (320),
		.PKT_TRANS_WRITE           (322),
		.PKT_TRANS_READ            (323),
		.OUT_NARROW_SIZE           (0),
		.IN_NARROW_SIZE            (1),
		.OUT_FIXED                 (0),
		.OUT_COMPLETE_WRAP         (0),
		.ST_DATA_W                 (382),
		.ST_CHANNEL_W              (45),
		.OUT_BYTE_CNT_H            (331),
		.OUT_BURSTWRAP_H           (347),
		.COMPRESSED_READ_SUPPORT   (0),
		.BYTEENABLE_SYNTHESIS      (1),
		.PIPE_INPUTS               (0),
		.NO_WRAP_SUPPORT           (0),
		.INCOMPLETE_WRAP_SUPPORT   (0),
		.BURSTWRAP_CONST_MASK      (511),
		.BURSTWRAP_CONST_VALUE     (511),
		.ADAPTER_VERSION           ("new")
	) sys_ethernet_dma_rx_descriptor_slave_burst_adapter (
		.clk                   (sys_clk_clk_clk),                                                          //       cr0.clk
		.reset                 (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                   // cr0_reset.reset
		.sink0_valid           (cmd_mux_023_src_valid),                                                    //     sink0.valid
		.sink0_data            (cmd_mux_023_src_data),                                                     //          .data
		.sink0_channel         (cmd_mux_023_src_channel),                                                  //          .channel
		.sink0_startofpacket   (cmd_mux_023_src_startofpacket),                                            //          .startofpacket
		.sink0_endofpacket     (cmd_mux_023_src_endofpacket),                                              //          .endofpacket
		.sink0_ready           (cmd_mux_023_src_ready),                                                    //          .ready
		.source0_valid         (sys_ethernet_dma_rx_descriptor_slave_burst_adapter_source0_valid),         //   source0.valid
		.source0_data          (sys_ethernet_dma_rx_descriptor_slave_burst_adapter_source0_data),          //          .data
		.source0_channel       (sys_ethernet_dma_rx_descriptor_slave_burst_adapter_source0_channel),       //          .channel
		.source0_startofpacket (sys_ethernet_dma_rx_descriptor_slave_burst_adapter_source0_startofpacket), //          .startofpacket
		.source0_endofpacket   (sys_ethernet_dma_rx_descriptor_slave_burst_adapter_source0_endofpacket),   //          .endofpacket
		.source0_ready         (sys_ethernet_dma_rx_descriptor_slave_burst_adapter_source0_ready)          //          .ready
	);

	altera_merlin_burst_adapter #(
		.PKT_ADDR_H                (319),
		.PKT_ADDR_L                (288),
		.PKT_BEGIN_BURST           (355),
		.PKT_BYTE_CNT_H            (338),
		.PKT_BYTE_CNT_L            (326),
		.PKT_BYTEEN_H              (287),
		.PKT_BYTEEN_L              (256),
		.PKT_BURST_SIZE_H          (350),
		.PKT_BURST_SIZE_L          (348),
		.PKT_BURST_TYPE_H          (352),
		.PKT_BURST_TYPE_L          (351),
		.PKT_BURSTWRAP_H           (347),
		.PKT_BURSTWRAP_L           (339),
		.PKT_TRANS_COMPRESSED_READ (320),
		.PKT_TRANS_WRITE           (322),
		.PKT_TRANS_READ            (323),
		.OUT_NARROW_SIZE           (0),
		.IN_NARROW_SIZE            (1),
		.OUT_FIXED                 (0),
		.OUT_COMPLETE_WRAP         (0),
		.ST_DATA_W                 (382),
		.ST_CHANNEL_W              (45),
		.OUT_BYTE_CNT_H            (331),
		.OUT_BURSTWRAP_H           (347),
		.COMPRESSED_READ_SUPPORT   (0),
		.BYTEENABLE_SYNTHESIS      (1),
		.PIPE_INPUTS               (0),
		.NO_WRAP_SUPPORT           (0),
		.INCOMPLETE_WRAP_SUPPORT   (0),
		.BURSTWRAP_CONST_MASK      (511),
		.BURSTWRAP_CONST_VALUE     (511),
		.ADAPTER_VERSION           ("new")
	) sys_ethernet_dma_tx_descriptor_slave_burst_adapter (
		.clk                   (sys_clk_clk_clk),                                                          //       cr0.clk
		.reset                 (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                   // cr0_reset.reset
		.sink0_valid           (cmd_mux_024_src_valid),                                                    //     sink0.valid
		.sink0_data            (cmd_mux_024_src_data),                                                     //          .data
		.sink0_channel         (cmd_mux_024_src_channel),                                                  //          .channel
		.sink0_startofpacket   (cmd_mux_024_src_startofpacket),                                            //          .startofpacket
		.sink0_endofpacket     (cmd_mux_024_src_endofpacket),                                              //          .endofpacket
		.sink0_ready           (cmd_mux_024_src_ready),                                                    //          .ready
		.source0_valid         (sys_ethernet_dma_tx_descriptor_slave_burst_adapter_source0_valid),         //   source0.valid
		.source0_data          (sys_ethernet_dma_tx_descriptor_slave_burst_adapter_source0_data),          //          .data
		.source0_channel       (sys_ethernet_dma_tx_descriptor_slave_burst_adapter_source0_channel),       //          .channel
		.source0_startofpacket (sys_ethernet_dma_tx_descriptor_slave_burst_adapter_source0_startofpacket), //          .startofpacket
		.source0_endofpacket   (sys_ethernet_dma_tx_descriptor_slave_burst_adapter_source0_endofpacket),   //          .endofpacket
		.source0_ready         (sys_ethernet_dma_tx_descriptor_slave_burst_adapter_source0_ready)          //          .ready
	);

	system_bd_altera_merlin_demultiplexer_181_5nwlmuy cmd_demux (
		.clk                 (sys_clk_clk_clk),                           //       clk.clk
		.reset               (sys_cpu_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready          (limiter_pipeline_source0_ready),            //      sink.ready
		.sink_channel        (limiter_pipeline_source0_channel),          //          .channel
		.sink_data           (limiter_pipeline_source0_data),             //          .data
		.sink_startofpacket  (limiter_pipeline_source0_startofpacket),    //          .startofpacket
		.sink_endofpacket    (limiter_pipeline_source0_endofpacket),      //          .endofpacket
		.sink_valid          (limiter_pipeline_source0_valid),            //          .valid
		.src0_ready          (cmd_demux_src0_ready),                      //      src0.ready
		.src0_valid          (cmd_demux_src0_valid),                      //          .valid
		.src0_data           (cmd_demux_src0_data),                       //          .data
		.src0_channel        (cmd_demux_src0_channel),                    //          .channel
		.src0_startofpacket  (cmd_demux_src0_startofpacket),              //          .startofpacket
		.src0_endofpacket    (cmd_demux_src0_endofpacket),                //          .endofpacket
		.src1_ready          (cmd_demux_src1_ready),                      //      src1.ready
		.src1_valid          (cmd_demux_src1_valid),                      //          .valid
		.src1_data           (cmd_demux_src1_data),                       //          .data
		.src1_channel        (cmd_demux_src1_channel),                    //          .channel
		.src1_startofpacket  (cmd_demux_src1_startofpacket),              //          .startofpacket
		.src1_endofpacket    (cmd_demux_src1_endofpacket),                //          .endofpacket
		.src2_ready          (cmd_demux_src2_ready),                      //      src2.ready
		.src2_valid          (cmd_demux_src2_valid),                      //          .valid
		.src2_data           (cmd_demux_src2_data),                       //          .data
		.src2_channel        (cmd_demux_src2_channel),                    //          .channel
		.src2_startofpacket  (cmd_demux_src2_startofpacket),              //          .startofpacket
		.src2_endofpacket    (cmd_demux_src2_endofpacket),                //          .endofpacket
		.src3_ready          (cmd_demux_src3_ready),                      //      src3.ready
		.src3_valid          (cmd_demux_src3_valid),                      //          .valid
		.src3_data           (cmd_demux_src3_data),                       //          .data
		.src3_channel        (cmd_demux_src3_channel),                    //          .channel
		.src3_startofpacket  (cmd_demux_src3_startofpacket),              //          .startofpacket
		.src3_endofpacket    (cmd_demux_src3_endofpacket),                //          .endofpacket
		.src4_ready          (cmd_demux_src4_ready),                      //      src4.ready
		.src4_valid          (cmd_demux_src4_valid),                      //          .valid
		.src4_data           (cmd_demux_src4_data),                       //          .data
		.src4_channel        (cmd_demux_src4_channel),                    //          .channel
		.src4_startofpacket  (cmd_demux_src4_startofpacket),              //          .startofpacket
		.src4_endofpacket    (cmd_demux_src4_endofpacket),                //          .endofpacket
		.src5_ready          (cmd_demux_src5_ready),                      //      src5.ready
		.src5_valid          (cmd_demux_src5_valid),                      //          .valid
		.src5_data           (cmd_demux_src5_data),                       //          .data
		.src5_channel        (cmd_demux_src5_channel),                    //          .channel
		.src5_startofpacket  (cmd_demux_src5_startofpacket),              //          .startofpacket
		.src5_endofpacket    (cmd_demux_src5_endofpacket),                //          .endofpacket
		.src6_ready          (cmd_demux_src6_ready),                      //      src6.ready
		.src6_valid          (cmd_demux_src6_valid),                      //          .valid
		.src6_data           (cmd_demux_src6_data),                       //          .data
		.src6_channel        (cmd_demux_src6_channel),                    //          .channel
		.src6_startofpacket  (cmd_demux_src6_startofpacket),              //          .startofpacket
		.src6_endofpacket    (cmd_demux_src6_endofpacket),                //          .endofpacket
		.src7_ready          (cmd_demux_src7_ready),                      //      src7.ready
		.src7_valid          (cmd_demux_src7_valid),                      //          .valid
		.src7_data           (cmd_demux_src7_data),                       //          .data
		.src7_channel        (cmd_demux_src7_channel),                    //          .channel
		.src7_startofpacket  (cmd_demux_src7_startofpacket),              //          .startofpacket
		.src7_endofpacket    (cmd_demux_src7_endofpacket),                //          .endofpacket
		.src8_ready          (cmd_demux_src8_ready),                      //      src8.ready
		.src8_valid          (cmd_demux_src8_valid),                      //          .valid
		.src8_data           (cmd_demux_src8_data),                       //          .data
		.src8_channel        (cmd_demux_src8_channel),                    //          .channel
		.src8_startofpacket  (cmd_demux_src8_startofpacket),              //          .startofpacket
		.src8_endofpacket    (cmd_demux_src8_endofpacket),                //          .endofpacket
		.src9_ready          (cmd_demux_src9_ready),                      //      src9.ready
		.src9_valid          (cmd_demux_src9_valid),                      //          .valid
		.src9_data           (cmd_demux_src9_data),                       //          .data
		.src9_channel        (cmd_demux_src9_channel),                    //          .channel
		.src9_startofpacket  (cmd_demux_src9_startofpacket),              //          .startofpacket
		.src9_endofpacket    (cmd_demux_src9_endofpacket),                //          .endofpacket
		.src10_ready         (cmd_demux_src10_ready),                     //     src10.ready
		.src10_valid         (cmd_demux_src10_valid),                     //          .valid
		.src10_data          (cmd_demux_src10_data),                      //          .data
		.src10_channel       (cmd_demux_src10_channel),                   //          .channel
		.src10_startofpacket (cmd_demux_src10_startofpacket),             //          .startofpacket
		.src10_endofpacket   (cmd_demux_src10_endofpacket),               //          .endofpacket
		.src11_ready         (cmd_demux_src11_ready),                     //     src11.ready
		.src11_valid         (cmd_demux_src11_valid),                     //          .valid
		.src11_data          (cmd_demux_src11_data),                      //          .data
		.src11_channel       (cmd_demux_src11_channel),                   //          .channel
		.src11_startofpacket (cmd_demux_src11_startofpacket),             //          .startofpacket
		.src11_endofpacket   (cmd_demux_src11_endofpacket),               //          .endofpacket
		.src12_ready         (cmd_demux_src12_ready),                     //     src12.ready
		.src12_valid         (cmd_demux_src12_valid),                     //          .valid
		.src12_data          (cmd_demux_src12_data),                      //          .data
		.src12_channel       (cmd_demux_src12_channel),                   //          .channel
		.src12_startofpacket (cmd_demux_src12_startofpacket),             //          .startofpacket
		.src12_endofpacket   (cmd_demux_src12_endofpacket),               //          .endofpacket
		.src13_ready         (cmd_demux_src13_ready),                     //     src13.ready
		.src13_valid         (cmd_demux_src13_valid),                     //          .valid
		.src13_data          (cmd_demux_src13_data),                      //          .data
		.src13_channel       (cmd_demux_src13_channel),                   //          .channel
		.src13_startofpacket (cmd_demux_src13_startofpacket),             //          .startofpacket
		.src13_endofpacket   (cmd_demux_src13_endofpacket),               //          .endofpacket
		.src14_ready         (cmd_demux_src14_ready),                     //     src14.ready
		.src14_valid         (cmd_demux_src14_valid),                     //          .valid
		.src14_data          (cmd_demux_src14_data),                      //          .data
		.src14_channel       (cmd_demux_src14_channel),                   //          .channel
		.src14_startofpacket (cmd_demux_src14_startofpacket),             //          .startofpacket
		.src14_endofpacket   (cmd_demux_src14_endofpacket),               //          .endofpacket
		.src15_ready         (cmd_demux_src15_ready),                     //     src15.ready
		.src15_valid         (cmd_demux_src15_valid),                     //          .valid
		.src15_data          (cmd_demux_src15_data),                      //          .data
		.src15_channel       (cmd_demux_src15_channel),                   //          .channel
		.src15_startofpacket (cmd_demux_src15_startofpacket),             //          .startofpacket
		.src15_endofpacket   (cmd_demux_src15_endofpacket),               //          .endofpacket
		.src16_ready         (cmd_demux_src16_ready),                     //     src16.ready
		.src16_valid         (cmd_demux_src16_valid),                     //          .valid
		.src16_data          (cmd_demux_src16_data),                      //          .data
		.src16_channel       (cmd_demux_src16_channel),                   //          .channel
		.src16_startofpacket (cmd_demux_src16_startofpacket),             //          .startofpacket
		.src16_endofpacket   (cmd_demux_src16_endofpacket),               //          .endofpacket
		.src17_ready         (cmd_demux_src17_ready),                     //     src17.ready
		.src17_valid         (cmd_demux_src17_valid),                     //          .valid
		.src17_data          (cmd_demux_src17_data),                      //          .data
		.src17_channel       (cmd_demux_src17_channel),                   //          .channel
		.src17_startofpacket (cmd_demux_src17_startofpacket),             //          .startofpacket
		.src17_endofpacket   (cmd_demux_src17_endofpacket),               //          .endofpacket
		.src18_ready         (cmd_demux_src18_ready),                     //     src18.ready
		.src18_valid         (cmd_demux_src18_valid),                     //          .valid
		.src18_data          (cmd_demux_src18_data),                      //          .data
		.src18_channel       (cmd_demux_src18_channel),                   //          .channel
		.src18_startofpacket (cmd_demux_src18_startofpacket),             //          .startofpacket
		.src18_endofpacket   (cmd_demux_src18_endofpacket),               //          .endofpacket
		.src19_ready         (cmd_demux_src19_ready),                     //     src19.ready
		.src19_valid         (cmd_demux_src19_valid),                     //          .valid
		.src19_data          (cmd_demux_src19_data),                      //          .data
		.src19_channel       (cmd_demux_src19_channel),                   //          .channel
		.src19_startofpacket (cmd_demux_src19_startofpacket),             //          .startofpacket
		.src19_endofpacket   (cmd_demux_src19_endofpacket),               //          .endofpacket
		.src20_ready         (cmd_demux_src20_ready),                     //     src20.ready
		.src20_valid         (cmd_demux_src20_valid),                     //          .valid
		.src20_data          (cmd_demux_src20_data),                      //          .data
		.src20_channel       (cmd_demux_src20_channel),                   //          .channel
		.src20_startofpacket (cmd_demux_src20_startofpacket),             //          .startofpacket
		.src20_endofpacket   (cmd_demux_src20_endofpacket),               //          .endofpacket
		.src21_ready         (cmd_demux_src21_ready),                     //     src21.ready
		.src21_valid         (cmd_demux_src21_valid),                     //          .valid
		.src21_data          (cmd_demux_src21_data),                      //          .data
		.src21_channel       (cmd_demux_src21_channel),                   //          .channel
		.src21_startofpacket (cmd_demux_src21_startofpacket),             //          .startofpacket
		.src21_endofpacket   (cmd_demux_src21_endofpacket),               //          .endofpacket
		.src22_ready         (cmd_demux_src22_ready),                     //     src22.ready
		.src22_valid         (cmd_demux_src22_valid),                     //          .valid
		.src22_data          (cmd_demux_src22_data),                      //          .data
		.src22_channel       (cmd_demux_src22_channel),                   //          .channel
		.src22_startofpacket (cmd_demux_src22_startofpacket),             //          .startofpacket
		.src22_endofpacket   (cmd_demux_src22_endofpacket),               //          .endofpacket
		.src23_ready         (cmd_demux_src23_ready),                     //     src23.ready
		.src23_valid         (cmd_demux_src23_valid),                     //          .valid
		.src23_data          (cmd_demux_src23_data),                      //          .data
		.src23_channel       (cmd_demux_src23_channel),                   //          .channel
		.src23_startofpacket (cmd_demux_src23_startofpacket),             //          .startofpacket
		.src23_endofpacket   (cmd_demux_src23_endofpacket),               //          .endofpacket
		.src24_ready         (cmd_demux_src24_ready),                     //     src24.ready
		.src24_valid         (cmd_demux_src24_valid),                     //          .valid
		.src24_data          (cmd_demux_src24_data),                      //          .data
		.src24_channel       (cmd_demux_src24_channel),                   //          .channel
		.src24_startofpacket (cmd_demux_src24_startofpacket),             //          .startofpacket
		.src24_endofpacket   (cmd_demux_src24_endofpacket),               //          .endofpacket
		.src25_ready         (cmd_demux_src25_ready),                     //     src25.ready
		.src25_valid         (cmd_demux_src25_valid),                     //          .valid
		.src25_data          (cmd_demux_src25_data),                      //          .data
		.src25_channel       (cmd_demux_src25_channel),                   //          .channel
		.src25_startofpacket (cmd_demux_src25_startofpacket),             //          .startofpacket
		.src25_endofpacket   (cmd_demux_src25_endofpacket),               //          .endofpacket
		.src26_ready         (cmd_demux_src26_ready),                     //     src26.ready
		.src26_valid         (cmd_demux_src26_valid),                     //          .valid
		.src26_data          (cmd_demux_src26_data),                      //          .data
		.src26_channel       (cmd_demux_src26_channel),                   //          .channel
		.src26_startofpacket (cmd_demux_src26_startofpacket),             //          .startofpacket
		.src26_endofpacket   (cmd_demux_src26_endofpacket),               //          .endofpacket
		.src27_ready         (cmd_demux_src27_ready),                     //     src27.ready
		.src27_valid         (cmd_demux_src27_valid),                     //          .valid
		.src27_data          (cmd_demux_src27_data),                      //          .data
		.src27_channel       (cmd_demux_src27_channel),                   //          .channel
		.src27_startofpacket (cmd_demux_src27_startofpacket),             //          .startofpacket
		.src27_endofpacket   (cmd_demux_src27_endofpacket),               //          .endofpacket
		.src28_ready         (cmd_demux_src28_ready),                     //     src28.ready
		.src28_valid         (cmd_demux_src28_valid),                     //          .valid
		.src28_data          (cmd_demux_src28_data),                      //          .data
		.src28_channel       (cmd_demux_src28_channel),                   //          .channel
		.src28_startofpacket (cmd_demux_src28_startofpacket),             //          .startofpacket
		.src28_endofpacket   (cmd_demux_src28_endofpacket),               //          .endofpacket
		.src29_ready         (cmd_demux_src29_ready),                     //     src29.ready
		.src29_valid         (cmd_demux_src29_valid),                     //          .valid
		.src29_data          (cmd_demux_src29_data),                      //          .data
		.src29_channel       (cmd_demux_src29_channel),                   //          .channel
		.src29_startofpacket (cmd_demux_src29_startofpacket),             //          .startofpacket
		.src29_endofpacket   (cmd_demux_src29_endofpacket),               //          .endofpacket
		.src30_ready         (cmd_demux_src30_ready),                     //     src30.ready
		.src30_valid         (cmd_demux_src30_valid),                     //          .valid
		.src30_data          (cmd_demux_src30_data),                      //          .data
		.src30_channel       (cmd_demux_src30_channel),                   //          .channel
		.src30_startofpacket (cmd_demux_src30_startofpacket),             //          .startofpacket
		.src30_endofpacket   (cmd_demux_src30_endofpacket),               //          .endofpacket
		.src31_ready         (cmd_demux_src31_ready),                     //     src31.ready
		.src31_valid         (cmd_demux_src31_valid),                     //          .valid
		.src31_data          (cmd_demux_src31_data),                      //          .data
		.src31_channel       (cmd_demux_src31_channel),                   //          .channel
		.src31_startofpacket (cmd_demux_src31_startofpacket),             //          .startofpacket
		.src31_endofpacket   (cmd_demux_src31_endofpacket),               //          .endofpacket
		.src32_ready         (cmd_demux_src32_ready),                     //     src32.ready
		.src32_valid         (cmd_demux_src32_valid),                     //          .valid
		.src32_data          (cmd_demux_src32_data),                      //          .data
		.src32_channel       (cmd_demux_src32_channel),                   //          .channel
		.src32_startofpacket (cmd_demux_src32_startofpacket),             //          .startofpacket
		.src32_endofpacket   (cmd_demux_src32_endofpacket),               //          .endofpacket
		.src33_ready         (cmd_demux_src33_ready),                     //     src33.ready
		.src33_valid         (cmd_demux_src33_valid),                     //          .valid
		.src33_data          (cmd_demux_src33_data),                      //          .data
		.src33_channel       (cmd_demux_src33_channel),                   //          .channel
		.src33_startofpacket (cmd_demux_src33_startofpacket),             //          .startofpacket
		.src33_endofpacket   (cmd_demux_src33_endofpacket),               //          .endofpacket
		.src34_ready         (cmd_demux_src34_ready),                     //     src34.ready
		.src34_valid         (cmd_demux_src34_valid),                     //          .valid
		.src34_data          (cmd_demux_src34_data),                      //          .data
		.src34_channel       (cmd_demux_src34_channel),                   //          .channel
		.src34_startofpacket (cmd_demux_src34_startofpacket),             //          .startofpacket
		.src34_endofpacket   (cmd_demux_src34_endofpacket),               //          .endofpacket
		.src35_ready         (cmd_demux_src35_ready),                     //     src35.ready
		.src35_valid         (cmd_demux_src35_valid),                     //          .valid
		.src35_data          (cmd_demux_src35_data),                      //          .data
		.src35_channel       (cmd_demux_src35_channel),                   //          .channel
		.src35_startofpacket (cmd_demux_src35_startofpacket),             //          .startofpacket
		.src35_endofpacket   (cmd_demux_src35_endofpacket),               //          .endofpacket
		.src36_ready         (cmd_demux_src36_ready),                     //     src36.ready
		.src36_valid         (cmd_demux_src36_valid),                     //          .valid
		.src36_data          (cmd_demux_src36_data),                      //          .data
		.src36_channel       (cmd_demux_src36_channel),                   //          .channel
		.src36_startofpacket (cmd_demux_src36_startofpacket),             //          .startofpacket
		.src36_endofpacket   (cmd_demux_src36_endofpacket),               //          .endofpacket
		.src37_ready         (cmd_demux_src37_ready),                     //     src37.ready
		.src37_valid         (cmd_demux_src37_valid),                     //          .valid
		.src37_data          (cmd_demux_src37_data),                      //          .data
		.src37_channel       (cmd_demux_src37_channel),                   //          .channel
		.src37_startofpacket (cmd_demux_src37_startofpacket),             //          .startofpacket
		.src37_endofpacket   (cmd_demux_src37_endofpacket),               //          .endofpacket
		.src38_ready         (cmd_demux_src38_ready),                     //     src38.ready
		.src38_valid         (cmd_demux_src38_valid),                     //          .valid
		.src38_data          (cmd_demux_src38_data),                      //          .data
		.src38_channel       (cmd_demux_src38_channel),                   //          .channel
		.src38_startofpacket (cmd_demux_src38_startofpacket),             //          .startofpacket
		.src38_endofpacket   (cmd_demux_src38_endofpacket),               //          .endofpacket
		.src39_ready         (cmd_demux_src39_ready),                     //     src39.ready
		.src39_valid         (cmd_demux_src39_valid),                     //          .valid
		.src39_data          (cmd_demux_src39_data),                      //          .data
		.src39_channel       (cmd_demux_src39_channel),                   //          .channel
		.src39_startofpacket (cmd_demux_src39_startofpacket),             //          .startofpacket
		.src39_endofpacket   (cmd_demux_src39_endofpacket),               //          .endofpacket
		.src40_ready         (cmd_demux_src40_ready),                     //     src40.ready
		.src40_valid         (cmd_demux_src40_valid),                     //          .valid
		.src40_data          (cmd_demux_src40_data),                      //          .data
		.src40_channel       (cmd_demux_src40_channel),                   //          .channel
		.src40_startofpacket (cmd_demux_src40_startofpacket),             //          .startofpacket
		.src40_endofpacket   (cmd_demux_src40_endofpacket),               //          .endofpacket
		.src41_ready         (cmd_demux_src41_ready),                     //     src41.ready
		.src41_valid         (cmd_demux_src41_valid),                     //          .valid
		.src41_data          (cmd_demux_src41_data),                      //          .data
		.src41_channel       (cmd_demux_src41_channel),                   //          .channel
		.src41_startofpacket (cmd_demux_src41_startofpacket),             //          .startofpacket
		.src41_endofpacket   (cmd_demux_src41_endofpacket),               //          .endofpacket
		.src42_ready         (cmd_demux_src42_ready),                     //     src42.ready
		.src42_valid         (cmd_demux_src42_valid),                     //          .valid
		.src42_data          (cmd_demux_src42_data),                      //          .data
		.src42_channel       (cmd_demux_src42_channel),                   //          .channel
		.src42_startofpacket (cmd_demux_src42_startofpacket),             //          .startofpacket
		.src42_endofpacket   (cmd_demux_src42_endofpacket),               //          .endofpacket
		.src43_ready         (cmd_demux_src43_ready),                     //     src43.ready
		.src43_valid         (cmd_demux_src43_valid),                     //          .valid
		.src43_data          (cmd_demux_src43_data),                      //          .data
		.src43_channel       (cmd_demux_src43_channel),                   //          .channel
		.src43_startofpacket (cmd_demux_src43_startofpacket),             //          .startofpacket
		.src43_endofpacket   (cmd_demux_src43_endofpacket),               //          .endofpacket
		.src44_ready         (cmd_demux_src44_ready),                     //     src44.ready
		.src44_valid         (cmd_demux_src44_valid),                     //          .valid
		.src44_data          (cmd_demux_src44_data),                      //          .data
		.src44_channel       (cmd_demux_src44_channel),                   //          .channel
		.src44_startofpacket (cmd_demux_src44_startofpacket),             //          .startofpacket
		.src44_endofpacket   (cmd_demux_src44_endofpacket)                //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_ehr42rq cmd_demux_001 (
		.clk                (sys_clk_clk_clk),                            //       clk.clk
		.reset              (sys_cpu_reset_reset_bridge_in_reset_reset),  // clk_reset.reset
		.sink_ready         (limiter_pipeline_002_source0_ready),         //      sink.ready
		.sink_channel       (limiter_pipeline_002_source0_channel),       //          .channel
		.sink_data          (limiter_pipeline_002_source0_data),          //          .data
		.sink_startofpacket (limiter_pipeline_002_source0_startofpacket), //          .startofpacket
		.sink_endofpacket   (limiter_pipeline_002_source0_endofpacket),   //          .endofpacket
		.sink_valid         (limiter_pipeline_002_source0_valid),         //          .valid
		.src0_ready         (cmd_demux_001_src0_ready),                   //      src0.ready
		.src0_valid         (cmd_demux_001_src0_valid),                   //          .valid
		.src0_data          (cmd_demux_001_src0_data),                    //          .data
		.src0_channel       (cmd_demux_001_src0_channel),                 //          .channel
		.src0_startofpacket (cmd_demux_001_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (cmd_demux_001_src0_endofpacket),             //          .endofpacket
		.src1_ready         (cmd_demux_001_src1_ready),                   //      src1.ready
		.src1_valid         (cmd_demux_001_src1_valid),                   //          .valid
		.src1_data          (cmd_demux_001_src1_data),                    //          .data
		.src1_channel       (cmd_demux_001_src1_channel),                 //          .channel
		.src1_startofpacket (cmd_demux_001_src1_startofpacket),           //          .startofpacket
		.src1_endofpacket   (cmd_demux_001_src1_endofpacket),             //          .endofpacket
		.src2_ready         (cmd_demux_001_src2_ready),                   //      src2.ready
		.src2_valid         (cmd_demux_001_src2_valid),                   //          .valid
		.src2_data          (cmd_demux_001_src2_data),                    //          .data
		.src2_channel       (cmd_demux_001_src2_channel),                 //          .channel
		.src2_startofpacket (cmd_demux_001_src2_startofpacket),           //          .startofpacket
		.src2_endofpacket   (cmd_demux_001_src2_endofpacket),             //          .endofpacket
		.src3_ready         (cmd_demux_001_src3_ready),                   //      src3.ready
		.src3_valid         (cmd_demux_001_src3_valid),                   //          .valid
		.src3_data          (cmd_demux_001_src3_data),                    //          .data
		.src3_channel       (cmd_demux_001_src3_channel),                 //          .channel
		.src3_startofpacket (cmd_demux_001_src3_startofpacket),           //          .startofpacket
		.src3_endofpacket   (cmd_demux_001_src3_endofpacket)              //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_iovyooq cmd_demux_002 (
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_002_src_ready),                                        //      sink.ready
		.sink_channel       (router_002_src_channel),                                      //          .channel
		.sink_data          (router_002_src_data),                                         //          .data
		.sink_startofpacket (router_002_src_startofpacket),                                //          .startofpacket
		.sink_endofpacket   (router_002_src_endofpacket),                                  //          .endofpacket
		.sink_valid         (router_002_src_valid),                                        //          .valid
		.src0_ready         (cmd_demux_002_src0_ready),                                    //      src0.ready
		.src0_valid         (cmd_demux_002_src0_valid),                                    //          .valid
		.src0_data          (cmd_demux_002_src0_data),                                     //          .data
		.src0_channel       (cmd_demux_002_src0_channel),                                  //          .channel
		.src0_startofpacket (cmd_demux_002_src0_startofpacket),                            //          .startofpacket
		.src0_endofpacket   (cmd_demux_002_src0_endofpacket)                               //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_iovyooq cmd_demux_003 (
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_003_src_ready),                                        //      sink.ready
		.sink_channel       (router_003_src_channel),                                      //          .channel
		.sink_data          (router_003_src_data),                                         //          .data
		.sink_startofpacket (router_003_src_startofpacket),                                //          .startofpacket
		.sink_endofpacket   (router_003_src_endofpacket),                                  //          .endofpacket
		.sink_valid         (router_003_src_valid),                                        //          .valid
		.src0_ready         (cmd_demux_003_src0_ready),                                    //      src0.ready
		.src0_valid         (cmd_demux_003_src0_valid),                                    //          .valid
		.src0_data          (cmd_demux_003_src0_data),                                     //          .data
		.src0_channel       (cmd_demux_003_src0_channel),                                  //          .channel
		.src0_startofpacket (cmd_demux_003_src0_startofpacket),                            //          .startofpacket
		.src0_endofpacket   (cmd_demux_003_src0_endofpacket)                               //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_iovyooq cmd_demux_004 (
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_004_src_ready),                                        //      sink.ready
		.sink_channel       (router_004_src_channel),                                      //          .channel
		.sink_data          (router_004_src_data),                                         //          .data
		.sink_startofpacket (router_004_src_startofpacket),                                //          .startofpacket
		.sink_endofpacket   (router_004_src_endofpacket),                                  //          .endofpacket
		.sink_valid         (router_004_src_valid),                                        //          .valid
		.src0_ready         (cmd_demux_004_src0_ready),                                    //      src0.ready
		.src0_valid         (cmd_demux_004_src0_valid),                                    //          .valid
		.src0_data          (cmd_demux_004_src0_data),                                     //          .data
		.src0_channel       (cmd_demux_004_src0_channel),                                  //          .channel
		.src0_startofpacket (cmd_demux_004_src0_startofpacket),                            //          .startofpacket
		.src0_endofpacket   (cmd_demux_004_src0_endofpacket)                               //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_iovyooq cmd_demux_005 (
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_005_src_ready),                                        //      sink.ready
		.sink_channel       (router_005_src_channel),                                      //          .channel
		.sink_data          (router_005_src_data),                                         //          .data
		.sink_startofpacket (router_005_src_startofpacket),                                //          .startofpacket
		.sink_endofpacket   (router_005_src_endofpacket),                                  //          .endofpacket
		.sink_valid         (router_005_src_valid),                                        //          .valid
		.src0_ready         (cmd_demux_005_src0_ready),                                    //      src0.ready
		.src0_valid         (cmd_demux_005_src0_valid),                                    //          .valid
		.src0_data          (cmd_demux_005_src0_data),                                     //          .data
		.src0_channel       (cmd_demux_005_src0_channel),                                  //          .channel
		.src0_startofpacket (cmd_demux_005_src0_startofpacket),                            //          .startofpacket
		.src0_endofpacket   (cmd_demux_005_src0_endofpacket)                               //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_fk5hakq cmd_demux_006 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_006_src_ready),                                   //      sink.ready
		.sink_channel       (router_006_src_channel),                                 //          .channel
		.sink_data          (router_006_src_data),                                    //          .data
		.sink_startofpacket (router_006_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_006_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_006_src_valid),                                   //          .valid
		.src0_ready         (cmd_demux_006_src0_ready),                               //      src0.ready
		.src0_valid         (cmd_demux_006_src0_valid),                               //          .valid
		.src0_data          (cmd_demux_006_src0_data),                                //          .data
		.src0_channel       (cmd_demux_006_src0_channel),                             //          .channel
		.src0_startofpacket (cmd_demux_006_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (cmd_demux_006_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_fk5hakq cmd_demux_007 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_007_src_ready),                                   //      sink.ready
		.sink_channel       (router_007_src_channel),                                 //          .channel
		.sink_data          (router_007_src_data),                                    //          .data
		.sink_startofpacket (router_007_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_007_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_007_src_valid),                                   //          .valid
		.src0_ready         (cmd_demux_007_src0_ready),                               //      src0.ready
		.src0_valid         (cmd_demux_007_src0_valid),                               //          .valid
		.src0_data          (cmd_demux_007_src0_data),                                //          .data
		.src0_channel       (cmd_demux_007_src0_channel),                             //          .channel
		.src0_startofpacket (cmd_demux_007_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (cmd_demux_007_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_src_ready),                                      //       src.ready
		.src_valid           (cmd_mux_src_valid),                                      //          .valid
		.src_data            (cmd_mux_src_data),                                       //          .data
		.src_channel         (cmd_mux_src_channel),                                    //          .channel
		.src_startofpacket   (cmd_mux_src_startofpacket),                              //          .startofpacket
		.src_endofpacket     (cmd_mux_src_endofpacket),                                //          .endofpacket
		.sink0_ready         (mux_pipeline_source0_ready),                             //     sink0.ready
		.sink0_valid         (mux_pipeline_source0_valid),                             //          .valid
		.sink0_channel       (mux_pipeline_source0_channel),                           //          .channel
		.sink0_data          (mux_pipeline_source0_data),                              //          .data
		.sink0_startofpacket (mux_pipeline_source0_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_source0_endofpacket)                        //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_001 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_001_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_001_src_valid),                                  //          .valid
		.src_data            (cmd_mux_001_src_data),                                   //          .data
		.src_channel         (cmd_mux_001_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_001_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_001_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_001_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_001_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_001_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_001_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_001_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_001_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_002 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_002_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_002_src_valid),                                  //          .valid
		.src_data            (cmd_mux_002_src_data),                                   //          .data
		.src_channel         (cmd_mux_002_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_002_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_002_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_002_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_002_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_002_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_002_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_002_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_002_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_003 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_003_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_003_src_valid),                                  //          .valid
		.src_data            (cmd_mux_003_src_data),                                   //          .data
		.src_channel         (cmd_mux_003_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_003_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_003_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_003_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_003_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_003_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_003_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_003_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_003_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_004 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_004_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_004_src_valid),                                  //          .valid
		.src_data            (cmd_mux_004_src_data),                                   //          .data
		.src_channel         (cmd_mux_004_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_004_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_004_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_004_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_004_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_004_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_004_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_004_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_004_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_005 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_005_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_005_src_valid),                                  //          .valid
		.src_data            (cmd_mux_005_src_data),                                   //          .data
		.src_channel         (cmd_mux_005_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_005_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_005_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_005_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_005_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_005_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_005_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_005_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_005_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_006 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_006_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_006_src_valid),                                  //          .valid
		.src_data            (cmd_mux_006_src_data),                                   //          .data
		.src_channel         (cmd_mux_006_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_006_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_006_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_006_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_006_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_006_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_006_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_006_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_006_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_007 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_007_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_007_src_valid),                                  //          .valid
		.src_data            (cmd_mux_007_src_data),                                   //          .data
		.src_channel         (cmd_mux_007_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_007_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_007_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_007_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_007_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_007_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_007_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_007_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_007_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_008 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_008_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_008_src_valid),                                  //          .valid
		.src_data            (cmd_mux_008_src_data),                                   //          .data
		.src_channel         (cmd_mux_008_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_008_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_008_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_008_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_008_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_008_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_008_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_008_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_008_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_009 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_009_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_009_src_valid),                                  //          .valid
		.src_data            (cmd_mux_009_src_data),                                   //          .data
		.src_channel         (cmd_mux_009_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_009_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_009_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_009_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_009_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_009_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_009_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_009_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_009_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_010 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_010_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_010_src_valid),                                  //          .valid
		.src_data            (cmd_mux_010_src_data),                                   //          .data
		.src_channel         (cmd_mux_010_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_010_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_010_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_010_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_010_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_010_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_010_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_010_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_010_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_011 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_011_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_011_src_valid),                                  //          .valid
		.src_data            (cmd_mux_011_src_data),                                   //          .data
		.src_channel         (cmd_mux_011_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_011_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_011_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_011_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_011_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_011_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_011_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_011_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_011_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_012 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_012_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_012_src_valid),                                  //          .valid
		.src_data            (cmd_mux_012_src_data),                                   //          .data
		.src_channel         (cmd_mux_012_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_012_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_012_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_012_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_012_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_012_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_012_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_012_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_012_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_013 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_013_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_013_src_valid),                                  //          .valid
		.src_data            (cmd_mux_013_src_data),                                   //          .data
		.src_channel         (cmd_mux_013_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_013_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_013_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_013_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_013_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_013_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_013_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_013_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_013_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_014 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_014_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_014_src_valid),                                  //          .valid
		.src_data            (cmd_mux_014_src_data),                                   //          .data
		.src_channel         (cmd_mux_014_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_014_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_014_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_014_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_014_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_014_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_014_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_014_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_014_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_015 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_015_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_015_src_valid),                                  //          .valid
		.src_data            (cmd_mux_015_src_data),                                   //          .data
		.src_channel         (cmd_mux_015_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_015_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_015_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_015_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_015_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_015_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_015_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_015_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_015_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_016 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_016_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_016_src_valid),                                  //          .valid
		.src_data            (cmd_mux_016_src_data),                                   //          .data
		.src_channel         (cmd_mux_016_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_016_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_016_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_016_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_016_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_016_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_016_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_016_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_016_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_017 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_017_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_017_src_valid),                                  //          .valid
		.src_data            (cmd_mux_017_src_data),                                   //          .data
		.src_channel         (cmd_mux_017_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_017_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_017_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_017_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_017_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_017_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_017_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_017_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_017_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_018 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_018_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_018_src_valid),                                  //          .valid
		.src_data            (cmd_mux_018_src_data),                                   //          .data
		.src_channel         (cmd_mux_018_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_018_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_018_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_018_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_018_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_018_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_018_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_018_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_018_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_019 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_019_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_019_src_valid),                                  //          .valid
		.src_data            (cmd_mux_019_src_data),                                   //          .data
		.src_channel         (cmd_mux_019_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_019_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_019_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_019_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_019_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_019_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_019_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_019_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_019_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_020 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_020_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_020_src_valid),                                  //          .valid
		.src_data            (cmd_mux_020_src_data),                                   //          .data
		.src_channel         (cmd_mux_020_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_020_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_020_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_020_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_020_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_020_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_020_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_020_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_020_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_cmuyv5y cmd_mux_021 (
		.clk                 (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       clk.clk
		.reset               (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_021_src_ready),                                                  //       src.ready
		.src_valid           (cmd_mux_021_src_valid),                                                  //          .valid
		.src_data            (cmd_mux_021_src_data),                                                   //          .data
		.src_channel         (cmd_mux_021_src_channel),                                                //          .channel
		.src_startofpacket   (cmd_mux_021_src_startofpacket),                                          //          .startofpacket
		.src_endofpacket     (cmd_mux_021_src_endofpacket),                                            //          .endofpacket
		.sink0_ready         (mux_pipeline_021_source0_ready),                                         //     sink0.ready
		.sink0_valid         (mux_pipeline_021_source0_valid),                                         //          .valid
		.sink0_channel       (mux_pipeline_021_source0_channel),                                       //          .channel
		.sink0_data          (mux_pipeline_021_source0_data),                                          //          .data
		.sink0_startofpacket (mux_pipeline_021_source0_startofpacket),                                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_021_source0_endofpacket),                                   //          .endofpacket
		.sink1_ready         (mux_pipeline_022_source0_ready),                                         //     sink1.ready
		.sink1_valid         (mux_pipeline_022_source0_valid),                                         //          .valid
		.sink1_channel       (mux_pipeline_022_source0_channel),                                       //          .channel
		.sink1_data          (mux_pipeline_022_source0_data),                                          //          .data
		.sink1_startofpacket (mux_pipeline_022_source0_startofpacket),                                 //          .startofpacket
		.sink1_endofpacket   (mux_pipeline_022_source0_endofpacket),                                   //          .endofpacket
		.sink2_ready         (mux_pipeline_023_source0_ready),                                         //     sink2.ready
		.sink2_valid         (mux_pipeline_023_source0_valid),                                         //          .valid
		.sink2_channel       (mux_pipeline_023_source0_channel),                                       //          .channel
		.sink2_data          (mux_pipeline_023_source0_data),                                          //          .data
		.sink2_startofpacket (mux_pipeline_023_source0_startofpacket),                                 //          .startofpacket
		.sink2_endofpacket   (mux_pipeline_023_source0_endofpacket),                                   //          .endofpacket
		.sink3_ready         (mux_pipeline_024_source0_ready),                                         //     sink3.ready
		.sink3_valid         (mux_pipeline_024_source0_valid),                                         //          .valid
		.sink3_channel       (mux_pipeline_024_source0_channel),                                       //          .channel
		.sink3_data          (mux_pipeline_024_source0_data),                                          //          .data
		.sink3_startofpacket (mux_pipeline_024_source0_startofpacket),                                 //          .startofpacket
		.sink3_endofpacket   (mux_pipeline_024_source0_endofpacket),                                   //          .endofpacket
		.sink4_ready         (mux_pipeline_025_source0_ready),                                         //     sink4.ready
		.sink4_valid         (mux_pipeline_025_source0_valid),                                         //          .valid
		.sink4_channel       (mux_pipeline_025_source0_channel),                                       //          .channel
		.sink4_data          (mux_pipeline_025_source0_data),                                          //          .data
		.sink4_startofpacket (mux_pipeline_025_source0_startofpacket),                                 //          .startofpacket
		.sink4_endofpacket   (mux_pipeline_025_source0_endofpacket),                                   //          .endofpacket
		.sink5_ready         (mux_pipeline_026_source0_ready),                                         //     sink5.ready
		.sink5_valid         (mux_pipeline_026_source0_valid),                                         //          .valid
		.sink5_channel       (mux_pipeline_026_source0_channel),                                       //          .channel
		.sink5_data          (mux_pipeline_026_source0_data),                                          //          .data
		.sink5_startofpacket (mux_pipeline_026_source0_startofpacket),                                 //          .startofpacket
		.sink5_endofpacket   (mux_pipeline_026_source0_endofpacket),                                   //          .endofpacket
		.sink6_ready         (mux_pipeline_027_source0_ready),                                         //     sink6.ready
		.sink6_valid         (mux_pipeline_027_source0_valid),                                         //          .valid
		.sink6_channel       (mux_pipeline_027_source0_channel),                                       //          .channel
		.sink6_data          (mux_pipeline_027_source0_data),                                          //          .data
		.sink6_startofpacket (mux_pipeline_027_source0_startofpacket),                                 //          .startofpacket
		.sink6_endofpacket   (mux_pipeline_027_source0_endofpacket),                                   //          .endofpacket
		.sink7_ready         (mux_pipeline_028_source0_ready),                                         //     sink7.ready
		.sink7_valid         (mux_pipeline_028_source0_valid),                                         //          .valid
		.sink7_channel       (mux_pipeline_028_source0_channel),                                       //          .channel
		.sink7_data          (mux_pipeline_028_source0_data),                                          //          .data
		.sink7_startofpacket (mux_pipeline_028_source0_startofpacket),                                 //          .startofpacket
		.sink7_endofpacket   (mux_pipeline_028_source0_endofpacket)                                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_3l6vajq cmd_mux_022 (
		.clk                 (sys_clk_clk_clk),                           //       clk.clk
		.reset               (sys_cpu_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_022_src_ready),                     //       src.ready
		.src_valid           (cmd_mux_022_src_valid),                     //          .valid
		.src_data            (cmd_mux_022_src_data),                      //          .data
		.src_channel         (cmd_mux_022_src_channel),                   //          .channel
		.src_startofpacket   (cmd_mux_022_src_startofpacket),             //          .startofpacket
		.src_endofpacket     (cmd_mux_022_src_endofpacket),               //          .endofpacket
		.sink0_ready         (mux_pipeline_029_source0_ready),            //     sink0.ready
		.sink0_valid         (mux_pipeline_029_source0_valid),            //          .valid
		.sink0_channel       (mux_pipeline_029_source0_channel),          //          .channel
		.sink0_data          (mux_pipeline_029_source0_data),             //          .data
		.sink0_startofpacket (mux_pipeline_029_source0_startofpacket),    //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_029_source0_endofpacket),      //          .endofpacket
		.sink1_ready         (mux_pipeline_030_source0_ready),            //     sink1.ready
		.sink1_valid         (mux_pipeline_030_source0_valid),            //          .valid
		.sink1_channel       (mux_pipeline_030_source0_channel),          //          .channel
		.sink1_data          (mux_pipeline_030_source0_data),             //          .data
		.sink1_startofpacket (mux_pipeline_030_source0_startofpacket),    //          .startofpacket
		.sink1_endofpacket   (mux_pipeline_030_source0_endofpacket)       //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_imbpwqq cmd_mux_023 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_023_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_023_src_valid),                                  //          .valid
		.src_data            (cmd_mux_023_src_data),                                   //          .data
		.src_channel         (cmd_mux_023_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_023_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_023_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_031_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_031_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_031_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_031_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_031_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_031_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_imbpwqq cmd_mux_024 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_024_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_024_src_valid),                                  //          .valid
		.src_data            (cmd_mux_024_src_data),                                   //          .data
		.src_channel         (cmd_mux_024_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_024_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_024_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_032_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_032_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_032_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_032_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_032_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_032_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_025 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_025_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_025_src_valid),                                  //          .valid
		.src_data            (cmd_mux_025_src_data),                                   //          .data
		.src_channel         (cmd_mux_025_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_025_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_025_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_033_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_033_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_033_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_033_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_033_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_033_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_026 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_026_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_026_src_valid),                                  //          .valid
		.src_data            (cmd_mux_026_src_data),                                   //          .data
		.src_channel         (cmd_mux_026_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_026_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_026_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_034_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_034_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_034_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_034_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_034_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_034_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_027 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_027_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_027_src_valid),                                  //          .valid
		.src_data            (cmd_mux_027_src_data),                                   //          .data
		.src_channel         (cmd_mux_027_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_027_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_027_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_035_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_035_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_035_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_035_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_035_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_035_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_028 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_028_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_028_src_valid),                                  //          .valid
		.src_data            (cmd_mux_028_src_data),                                   //          .data
		.src_channel         (cmd_mux_028_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_028_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_028_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_036_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_036_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_036_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_036_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_036_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_036_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_029 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_029_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_029_src_valid),                                  //          .valid
		.src_data            (cmd_mux_029_src_data),                                   //          .data
		.src_channel         (cmd_mux_029_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_029_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_029_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_037_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_037_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_037_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_037_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_037_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_037_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_030 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_030_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_030_src_valid),                                  //          .valid
		.src_data            (cmd_mux_030_src_data),                                   //          .data
		.src_channel         (cmd_mux_030_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_030_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_030_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_038_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_038_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_038_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_038_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_038_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_038_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_031 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_031_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_031_src_valid),                                  //          .valid
		.src_data            (cmd_mux_031_src_data),                                   //          .data
		.src_channel         (cmd_mux_031_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_031_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_031_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_039_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_039_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_039_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_039_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_039_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_039_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_032 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_032_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_032_src_valid),                                  //          .valid
		.src_data            (cmd_mux_032_src_data),                                   //          .data
		.src_channel         (cmd_mux_032_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_032_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_032_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_040_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_040_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_040_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_040_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_040_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_040_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_033 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_033_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_033_src_valid),                                  //          .valid
		.src_data            (cmd_mux_033_src_data),                                   //          .data
		.src_channel         (cmd_mux_033_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_033_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_033_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_041_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_041_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_041_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_041_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_041_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_041_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_034 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_034_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_034_src_valid),                                  //          .valid
		.src_data            (cmd_mux_034_src_data),                                   //          .data
		.src_channel         (cmd_mux_034_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_034_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_034_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_042_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_042_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_042_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_042_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_042_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_042_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_035 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_035_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_035_src_valid),                                  //          .valid
		.src_data            (cmd_mux_035_src_data),                                   //          .data
		.src_channel         (cmd_mux_035_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_035_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_035_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_043_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_043_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_043_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_043_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_043_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_043_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_036 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_036_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_036_src_valid),                                  //          .valid
		.src_data            (cmd_mux_036_src_data),                                   //          .data
		.src_channel         (cmd_mux_036_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_036_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_036_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_044_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_044_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_044_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_044_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_044_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_044_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_3l6vajq cmd_mux_037 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_037_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_037_src_valid),                                  //          .valid
		.src_data            (cmd_mux_037_src_data),                                   //          .data
		.src_channel         (cmd_mux_037_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_037_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_037_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_045_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_045_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_045_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_045_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_045_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_045_source0_endofpacket),                   //          .endofpacket
		.sink1_ready         (mux_pipeline_046_source0_ready),                         //     sink1.ready
		.sink1_valid         (mux_pipeline_046_source0_valid),                         //          .valid
		.sink1_channel       (mux_pipeline_046_source0_channel),                       //          .channel
		.sink1_data          (mux_pipeline_046_source0_data),                          //          .data
		.sink1_startofpacket (mux_pipeline_046_source0_startofpacket),                 //          .startofpacket
		.sink1_endofpacket   (mux_pipeline_046_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_038 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_038_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_038_src_valid),                                  //          .valid
		.src_data            (cmd_mux_038_src_data),                                   //          .data
		.src_channel         (cmd_mux_038_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_038_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_038_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_047_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_047_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_047_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_047_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_047_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_047_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_039 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_039_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_039_src_valid),                                  //          .valid
		.src_data            (cmd_mux_039_src_data),                                   //          .data
		.src_channel         (cmd_mux_039_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_039_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_039_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_048_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_048_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_048_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_048_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_048_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_048_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_040 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_040_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_040_src_valid),                                  //          .valid
		.src_data            (cmd_mux_040_src_data),                                   //          .data
		.src_channel         (cmd_mux_040_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_040_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_040_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_049_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_049_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_049_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_049_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_049_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_049_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_041 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_041_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_041_src_valid),                                  //          .valid
		.src_data            (cmd_mux_041_src_data),                                   //          .data
		.src_channel         (cmd_mux_041_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_041_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_041_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_050_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_050_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_050_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_050_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_050_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_050_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_042 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_042_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_042_src_valid),                                  //          .valid
		.src_data            (cmd_mux_042_src_data),                                   //          .data
		.src_channel         (cmd_mux_042_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_042_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_042_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_051_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_051_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_051_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_051_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_051_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_051_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_47fgbri cmd_mux_043 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_043_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_043_src_valid),                                  //          .valid
		.src_data            (cmd_mux_043_src_data),                                   //          .data
		.src_channel         (cmd_mux_043_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_043_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_043_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_052_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_052_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_052_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_052_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_052_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_052_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_3l6vajq cmd_mux_044 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_044_src_ready),                                  //       src.ready
		.src_valid           (cmd_mux_044_src_valid),                                  //          .valid
		.src_data            (cmd_mux_044_src_data),                                   //          .data
		.src_channel         (cmd_mux_044_src_channel),                                //          .channel
		.src_startofpacket   (cmd_mux_044_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (cmd_mux_044_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_053_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_053_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_053_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_053_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_053_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_053_source0_endofpacket),                   //          .endofpacket
		.sink1_ready         (mux_pipeline_054_source0_ready),                         //     sink1.ready
		.sink1_valid         (mux_pipeline_054_source0_valid),                         //          .valid
		.sink1_channel       (mux_pipeline_054_source0_channel),                       //          .channel
		.sink1_data          (mux_pipeline_054_source0_data),                          //          .data
		.sink1_startofpacket (mux_pipeline_054_source0_startofpacket),                 //          .startofpacket
		.sink1_endofpacket   (mux_pipeline_054_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_008_src_ready),                                   //      sink.ready
		.sink_channel       (router_008_src_channel),                                 //          .channel
		.sink_data          (router_008_src_data),                                    //          .data
		.sink_startofpacket (router_008_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_008_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_008_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_src0_ready),                                   //      src0.ready
		.src0_valid         (rsp_demux_src0_valid),                                   //          .valid
		.src0_data          (rsp_demux_src0_data),                                    //          .data
		.src0_channel       (rsp_demux_src0_channel),                                 //          .channel
		.src0_startofpacket (rsp_demux_src0_startofpacket),                           //          .startofpacket
		.src0_endofpacket   (rsp_demux_src0_endofpacket)                              //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_001 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_009_src_ready),                                   //      sink.ready
		.sink_channel       (router_009_src_channel),                                 //          .channel
		.sink_data          (router_009_src_data),                                    //          .data
		.sink_startofpacket (router_009_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_009_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_009_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_001_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_001_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_001_src0_data),                                //          .data
		.src0_channel       (rsp_demux_001_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_001_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_001_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_002 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_010_src_ready),                                   //      sink.ready
		.sink_channel       (router_010_src_channel),                                 //          .channel
		.sink_data          (router_010_src_data),                                    //          .data
		.sink_startofpacket (router_010_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_010_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_010_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_002_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_002_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_002_src0_data),                                //          .data
		.src0_channel       (rsp_demux_002_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_002_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_002_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_003 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_011_src_ready),                                   //      sink.ready
		.sink_channel       (router_011_src_channel),                                 //          .channel
		.sink_data          (router_011_src_data),                                    //          .data
		.sink_startofpacket (router_011_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_011_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_011_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_003_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_003_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_003_src0_data),                                //          .data
		.src0_channel       (rsp_demux_003_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_003_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_003_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_004 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_012_src_ready),                                   //      sink.ready
		.sink_channel       (router_012_src_channel),                                 //          .channel
		.sink_data          (router_012_src_data),                                    //          .data
		.sink_startofpacket (router_012_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_012_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_012_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_004_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_004_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_004_src0_data),                                //          .data
		.src0_channel       (rsp_demux_004_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_004_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_004_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_005 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_013_src_ready),                                   //      sink.ready
		.sink_channel       (router_013_src_channel),                                 //          .channel
		.sink_data          (router_013_src_data),                                    //          .data
		.sink_startofpacket (router_013_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_013_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_013_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_005_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_005_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_005_src0_data),                                //          .data
		.src0_channel       (rsp_demux_005_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_005_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_005_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_006 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_014_src_ready),                                   //      sink.ready
		.sink_channel       (router_014_src_channel),                                 //          .channel
		.sink_data          (router_014_src_data),                                    //          .data
		.sink_startofpacket (router_014_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_014_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_014_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_006_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_006_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_006_src0_data),                                //          .data
		.src0_channel       (rsp_demux_006_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_006_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_006_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_007 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_015_src_ready),                                   //      sink.ready
		.sink_channel       (router_015_src_channel),                                 //          .channel
		.sink_data          (router_015_src_data),                                    //          .data
		.sink_startofpacket (router_015_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_015_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_015_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_007_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_007_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_007_src0_data),                                //          .data
		.src0_channel       (rsp_demux_007_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_007_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_007_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_008 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_016_src_ready),                                   //      sink.ready
		.sink_channel       (router_016_src_channel),                                 //          .channel
		.sink_data          (router_016_src_data),                                    //          .data
		.sink_startofpacket (router_016_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_016_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_016_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_008_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_008_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_008_src0_data),                                //          .data
		.src0_channel       (rsp_demux_008_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_008_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_008_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_009 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_017_src_ready),                                   //      sink.ready
		.sink_channel       (router_017_src_channel),                                 //          .channel
		.sink_data          (router_017_src_data),                                    //          .data
		.sink_startofpacket (router_017_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_017_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_017_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_009_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_009_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_009_src0_data),                                //          .data
		.src0_channel       (rsp_demux_009_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_009_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_009_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_010 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_018_src_ready),                                   //      sink.ready
		.sink_channel       (router_018_src_channel),                                 //          .channel
		.sink_data          (router_018_src_data),                                    //          .data
		.sink_startofpacket (router_018_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_018_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_018_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_010_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_010_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_010_src0_data),                                //          .data
		.src0_channel       (rsp_demux_010_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_010_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_010_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_011 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_019_src_ready),                                   //      sink.ready
		.sink_channel       (router_019_src_channel),                                 //          .channel
		.sink_data          (router_019_src_data),                                    //          .data
		.sink_startofpacket (router_019_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_019_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_019_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_011_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_011_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_011_src0_data),                                //          .data
		.src0_channel       (rsp_demux_011_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_011_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_011_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_012 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_020_src_ready),                                   //      sink.ready
		.sink_channel       (router_020_src_channel),                                 //          .channel
		.sink_data          (router_020_src_data),                                    //          .data
		.sink_startofpacket (router_020_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_020_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_020_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_012_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_012_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_012_src0_data),                                //          .data
		.src0_channel       (rsp_demux_012_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_012_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_012_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_013 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_021_src_ready),                                   //      sink.ready
		.sink_channel       (router_021_src_channel),                                 //          .channel
		.sink_data          (router_021_src_data),                                    //          .data
		.sink_startofpacket (router_021_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_021_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_021_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_013_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_013_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_013_src0_data),                                //          .data
		.src0_channel       (rsp_demux_013_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_013_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_013_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_014 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_022_src_ready),                                   //      sink.ready
		.sink_channel       (router_022_src_channel),                                 //          .channel
		.sink_data          (router_022_src_data),                                    //          .data
		.sink_startofpacket (router_022_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_022_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_022_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_014_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_014_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_014_src0_data),                                //          .data
		.src0_channel       (rsp_demux_014_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_014_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_014_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_015 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_023_src_ready),                                   //      sink.ready
		.sink_channel       (router_023_src_channel),                                 //          .channel
		.sink_data          (router_023_src_data),                                    //          .data
		.sink_startofpacket (router_023_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_023_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_023_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_015_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_015_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_015_src0_data),                                //          .data
		.src0_channel       (rsp_demux_015_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_015_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_015_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_016 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_024_src_ready),                                   //      sink.ready
		.sink_channel       (router_024_src_channel),                                 //          .channel
		.sink_data          (router_024_src_data),                                    //          .data
		.sink_startofpacket (router_024_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_024_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_024_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_016_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_016_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_016_src0_data),                                //          .data
		.src0_channel       (rsp_demux_016_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_016_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_016_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_017 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_025_src_ready),                                   //      sink.ready
		.sink_channel       (router_025_src_channel),                                 //          .channel
		.sink_data          (router_025_src_data),                                    //          .data
		.sink_startofpacket (router_025_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_025_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_025_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_017_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_017_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_017_src0_data),                                //          .data
		.src0_channel       (rsp_demux_017_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_017_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_017_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_018 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_026_src_ready),                                   //      sink.ready
		.sink_channel       (router_026_src_channel),                                 //          .channel
		.sink_data          (router_026_src_data),                                    //          .data
		.sink_startofpacket (router_026_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_026_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_026_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_018_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_018_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_018_src0_data),                                //          .data
		.src0_channel       (rsp_demux_018_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_018_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_018_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_019 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_027_src_ready),                                   //      sink.ready
		.sink_channel       (router_027_src_channel),                                 //          .channel
		.sink_data          (router_027_src_data),                                    //          .data
		.sink_startofpacket (router_027_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_027_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_027_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_019_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_019_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_019_src0_data),                                //          .data
		.src0_channel       (rsp_demux_019_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_019_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_019_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_020 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_028_src_ready),                                   //      sink.ready
		.sink_channel       (router_028_src_channel),                                 //          .channel
		.sink_data          (router_028_src_data),                                    //          .data
		.sink_startofpacket (router_028_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_028_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_028_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_020_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_020_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_020_src0_data),                                //          .data
		.src0_channel       (rsp_demux_020_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_020_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_020_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_jkqvu3i rsp_demux_021 (
		.clk                (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       clk.clk
		.reset              (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_029_src_ready),                                                   //      sink.ready
		.sink_channel       (router_029_src_channel),                                                 //          .channel
		.sink_data          (router_029_src_data),                                                    //          .data
		.sink_startofpacket (router_029_src_startofpacket),                                           //          .startofpacket
		.sink_endofpacket   (router_029_src_endofpacket),                                             //          .endofpacket
		.sink_valid         (router_029_src_valid),                                                   //          .valid
		.src0_ready         (rsp_demux_021_src0_ready),                                               //      src0.ready
		.src0_valid         (rsp_demux_021_src0_valid),                                               //          .valid
		.src0_data          (rsp_demux_021_src0_data),                                                //          .data
		.src0_channel       (rsp_demux_021_src0_channel),                                             //          .channel
		.src0_startofpacket (rsp_demux_021_src0_startofpacket),                                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_021_src0_endofpacket),                                         //          .endofpacket
		.src1_ready         (rsp_demux_021_src1_ready),                                               //      src1.ready
		.src1_valid         (rsp_demux_021_src1_valid),                                               //          .valid
		.src1_data          (rsp_demux_021_src1_data),                                                //          .data
		.src1_channel       (rsp_demux_021_src1_channel),                                             //          .channel
		.src1_startofpacket (rsp_demux_021_src1_startofpacket),                                       //          .startofpacket
		.src1_endofpacket   (rsp_demux_021_src1_endofpacket),                                         //          .endofpacket
		.src2_ready         (rsp_demux_021_src2_ready),                                               //      src2.ready
		.src2_valid         (rsp_demux_021_src2_valid),                                               //          .valid
		.src2_data          (rsp_demux_021_src2_data),                                                //          .data
		.src2_channel       (rsp_demux_021_src2_channel),                                             //          .channel
		.src2_startofpacket (rsp_demux_021_src2_startofpacket),                                       //          .startofpacket
		.src2_endofpacket   (rsp_demux_021_src2_endofpacket),                                         //          .endofpacket
		.src3_ready         (rsp_demux_021_src3_ready),                                               //      src3.ready
		.src3_valid         (rsp_demux_021_src3_valid),                                               //          .valid
		.src3_data          (rsp_demux_021_src3_data),                                                //          .data
		.src3_channel       (rsp_demux_021_src3_channel),                                             //          .channel
		.src3_startofpacket (rsp_demux_021_src3_startofpacket),                                       //          .startofpacket
		.src3_endofpacket   (rsp_demux_021_src3_endofpacket),                                         //          .endofpacket
		.src4_ready         (rsp_demux_021_src4_ready),                                               //      src4.ready
		.src4_valid         (rsp_demux_021_src4_valid),                                               //          .valid
		.src4_data          (rsp_demux_021_src4_data),                                                //          .data
		.src4_channel       (rsp_demux_021_src4_channel),                                             //          .channel
		.src4_startofpacket (rsp_demux_021_src4_startofpacket),                                       //          .startofpacket
		.src4_endofpacket   (rsp_demux_021_src4_endofpacket),                                         //          .endofpacket
		.src5_ready         (rsp_demux_021_src5_ready),                                               //      src5.ready
		.src5_valid         (rsp_demux_021_src5_valid),                                               //          .valid
		.src5_data          (rsp_demux_021_src5_data),                                                //          .data
		.src5_channel       (rsp_demux_021_src5_channel),                                             //          .channel
		.src5_startofpacket (rsp_demux_021_src5_startofpacket),                                       //          .startofpacket
		.src5_endofpacket   (rsp_demux_021_src5_endofpacket),                                         //          .endofpacket
		.src6_ready         (rsp_demux_021_src6_ready),                                               //      src6.ready
		.src6_valid         (rsp_demux_021_src6_valid),                                               //          .valid
		.src6_data          (rsp_demux_021_src6_data),                                                //          .data
		.src6_channel       (rsp_demux_021_src6_channel),                                             //          .channel
		.src6_startofpacket (rsp_demux_021_src6_startofpacket),                                       //          .startofpacket
		.src6_endofpacket   (rsp_demux_021_src6_endofpacket),                                         //          .endofpacket
		.src7_ready         (rsp_demux_021_src7_ready),                                               //      src7.ready
		.src7_valid         (rsp_demux_021_src7_valid),                                               //          .valid
		.src7_data          (rsp_demux_021_src7_data),                                                //          .data
		.src7_channel       (rsp_demux_021_src7_channel),                                             //          .channel
		.src7_startofpacket (rsp_demux_021_src7_startofpacket),                                       //          .startofpacket
		.src7_endofpacket   (rsp_demux_021_src7_endofpacket)                                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_35yalzy rsp_demux_022 (
		.clk                (sys_clk_clk_clk),                           //       clk.clk
		.reset              (sys_cpu_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_030_src_ready),                      //      sink.ready
		.sink_channel       (router_030_src_channel),                    //          .channel
		.sink_data          (router_030_src_data),                       //          .data
		.sink_startofpacket (router_030_src_startofpacket),              //          .startofpacket
		.sink_endofpacket   (router_030_src_endofpacket),                //          .endofpacket
		.sink_valid         (router_030_src_valid),                      //          .valid
		.src0_ready         (rsp_demux_022_src0_ready),                  //      src0.ready
		.src0_valid         (rsp_demux_022_src0_valid),                  //          .valid
		.src0_data          (rsp_demux_022_src0_data),                   //          .data
		.src0_channel       (rsp_demux_022_src0_channel),                //          .channel
		.src0_startofpacket (rsp_demux_022_src0_startofpacket),          //          .startofpacket
		.src0_endofpacket   (rsp_demux_022_src0_endofpacket),            //          .endofpacket
		.src1_ready         (rsp_demux_022_src1_ready),                  //      src1.ready
		.src1_valid         (rsp_demux_022_src1_valid),                  //          .valid
		.src1_data          (rsp_demux_022_src1_data),                   //          .data
		.src1_channel       (rsp_demux_022_src1_channel),                //          .channel
		.src1_startofpacket (rsp_demux_022_src1_startofpacket),          //          .startofpacket
		.src1_endofpacket   (rsp_demux_022_src1_endofpacket)             //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_wvauzsi rsp_demux_023 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_031_src_ready),                                   //      sink.ready
		.sink_channel       (router_031_src_channel),                                 //          .channel
		.sink_data          (router_031_src_data),                                    //          .data
		.sink_startofpacket (router_031_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_031_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_031_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_023_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_023_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_023_src0_data),                                //          .data
		.src0_channel       (rsp_demux_023_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_023_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_023_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_wvauzsi rsp_demux_024 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_032_src_ready),                                   //      sink.ready
		.sink_channel       (router_032_src_channel),                                 //          .channel
		.sink_data          (router_032_src_data),                                    //          .data
		.sink_startofpacket (router_032_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_032_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_032_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_024_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_024_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_024_src0_data),                                //          .data
		.src0_channel       (rsp_demux_024_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_024_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_024_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_025 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_033_src_ready),                                   //      sink.ready
		.sink_channel       (router_033_src_channel),                                 //          .channel
		.sink_data          (router_033_src_data),                                    //          .data
		.sink_startofpacket (router_033_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_033_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_033_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_025_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_025_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_025_src0_data),                                //          .data
		.src0_channel       (rsp_demux_025_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_025_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_025_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_026 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_034_src_ready),                                   //      sink.ready
		.sink_channel       (router_034_src_channel),                                 //          .channel
		.sink_data          (router_034_src_data),                                    //          .data
		.sink_startofpacket (router_034_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_034_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_034_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_026_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_026_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_026_src0_data),                                //          .data
		.src0_channel       (rsp_demux_026_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_026_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_026_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_027 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_035_src_ready),                                   //      sink.ready
		.sink_channel       (router_035_src_channel),                                 //          .channel
		.sink_data          (router_035_src_data),                                    //          .data
		.sink_startofpacket (router_035_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_035_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_035_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_027_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_027_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_027_src0_data),                                //          .data
		.src0_channel       (rsp_demux_027_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_027_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_027_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_028 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_036_src_ready),                                   //      sink.ready
		.sink_channel       (router_036_src_channel),                                 //          .channel
		.sink_data          (router_036_src_data),                                    //          .data
		.sink_startofpacket (router_036_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_036_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_036_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_028_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_028_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_028_src0_data),                                //          .data
		.src0_channel       (rsp_demux_028_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_028_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_028_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_029 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_037_src_ready),                                   //      sink.ready
		.sink_channel       (router_037_src_channel),                                 //          .channel
		.sink_data          (router_037_src_data),                                    //          .data
		.sink_startofpacket (router_037_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_037_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_037_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_029_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_029_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_029_src0_data),                                //          .data
		.src0_channel       (rsp_demux_029_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_029_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_029_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_030 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_038_src_ready),                                   //      sink.ready
		.sink_channel       (router_038_src_channel),                                 //          .channel
		.sink_data          (router_038_src_data),                                    //          .data
		.sink_startofpacket (router_038_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_038_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_038_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_030_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_030_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_030_src0_data),                                //          .data
		.src0_channel       (rsp_demux_030_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_030_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_030_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_031 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_039_src_ready),                                   //      sink.ready
		.sink_channel       (router_039_src_channel),                                 //          .channel
		.sink_data          (router_039_src_data),                                    //          .data
		.sink_startofpacket (router_039_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_039_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_039_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_031_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_031_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_031_src0_data),                                //          .data
		.src0_channel       (rsp_demux_031_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_031_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_031_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_032 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_040_src_ready),                                   //      sink.ready
		.sink_channel       (router_040_src_channel),                                 //          .channel
		.sink_data          (router_040_src_data),                                    //          .data
		.sink_startofpacket (router_040_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_040_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_040_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_032_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_032_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_032_src0_data),                                //          .data
		.src0_channel       (rsp_demux_032_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_032_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_032_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_033 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_041_src_ready),                                   //      sink.ready
		.sink_channel       (router_041_src_channel),                                 //          .channel
		.sink_data          (router_041_src_data),                                    //          .data
		.sink_startofpacket (router_041_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_041_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_041_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_033_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_033_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_033_src0_data),                                //          .data
		.src0_channel       (rsp_demux_033_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_033_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_033_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_034 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_042_src_ready),                                   //      sink.ready
		.sink_channel       (router_042_src_channel),                                 //          .channel
		.sink_data          (router_042_src_data),                                    //          .data
		.sink_startofpacket (router_042_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_042_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_042_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_034_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_034_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_034_src0_data),                                //          .data
		.src0_channel       (rsp_demux_034_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_034_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_034_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_035 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_043_src_ready),                                   //      sink.ready
		.sink_channel       (router_043_src_channel),                                 //          .channel
		.sink_data          (router_043_src_data),                                    //          .data
		.sink_startofpacket (router_043_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_043_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_043_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_035_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_035_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_035_src0_data),                                //          .data
		.src0_channel       (rsp_demux_035_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_035_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_035_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_036 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_044_src_ready),                                   //      sink.ready
		.sink_channel       (router_044_src_channel),                                 //          .channel
		.sink_data          (router_044_src_data),                                    //          .data
		.sink_startofpacket (router_044_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_044_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_044_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_036_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_036_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_036_src0_data),                                //          .data
		.src0_channel       (rsp_demux_036_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_036_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_036_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_35yalzy rsp_demux_037 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_045_src_ready),                                   //      sink.ready
		.sink_channel       (router_045_src_channel),                                 //          .channel
		.sink_data          (router_045_src_data),                                    //          .data
		.sink_startofpacket (router_045_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_045_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_045_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_037_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_037_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_037_src0_data),                                //          .data
		.src0_channel       (rsp_demux_037_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_037_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_037_src0_endofpacket),                         //          .endofpacket
		.src1_ready         (rsp_demux_037_src1_ready),                               //      src1.ready
		.src1_valid         (rsp_demux_037_src1_valid),                               //          .valid
		.src1_data          (rsp_demux_037_src1_data),                                //          .data
		.src1_channel       (rsp_demux_037_src1_channel),                             //          .channel
		.src1_startofpacket (rsp_demux_037_src1_startofpacket),                       //          .startofpacket
		.src1_endofpacket   (rsp_demux_037_src1_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_038 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_046_src_ready),                                   //      sink.ready
		.sink_channel       (router_046_src_channel),                                 //          .channel
		.sink_data          (router_046_src_data),                                    //          .data
		.sink_startofpacket (router_046_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_046_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_046_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_038_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_038_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_038_src0_data),                                //          .data
		.src0_channel       (rsp_demux_038_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_038_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_038_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_039 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_047_src_ready),                                   //      sink.ready
		.sink_channel       (router_047_src_channel),                                 //          .channel
		.sink_data          (router_047_src_data),                                    //          .data
		.sink_startofpacket (router_047_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_047_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_047_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_039_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_039_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_039_src0_data),                                //          .data
		.src0_channel       (rsp_demux_039_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_039_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_039_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_040 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_048_src_ready),                                   //      sink.ready
		.sink_channel       (router_048_src_channel),                                 //          .channel
		.sink_data          (router_048_src_data),                                    //          .data
		.sink_startofpacket (router_048_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_048_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_048_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_040_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_040_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_040_src0_data),                                //          .data
		.src0_channel       (rsp_demux_040_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_040_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_040_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_041 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_049_src_ready),                                   //      sink.ready
		.sink_channel       (router_049_src_channel),                                 //          .channel
		.sink_data          (router_049_src_data),                                    //          .data
		.sink_startofpacket (router_049_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_049_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_049_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_041_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_041_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_041_src0_data),                                //          .data
		.src0_channel       (rsp_demux_041_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_041_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_041_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_042 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_050_src_ready),                                   //      sink.ready
		.sink_channel       (router_050_src_channel),                                 //          .channel
		.sink_data          (router_050_src_data),                                    //          .data
		.sink_startofpacket (router_050_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_050_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_050_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_042_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_042_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_042_src0_data),                                //          .data
		.src0_channel       (rsp_demux_042_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_042_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_042_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_pdke4ry rsp_demux_043 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_051_src_ready),                                   //      sink.ready
		.sink_channel       (router_051_src_channel),                                 //          .channel
		.sink_data          (router_051_src_data),                                    //          .data
		.sink_startofpacket (router_051_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_051_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_051_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_043_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_043_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_043_src0_data),                                //          .data
		.src0_channel       (rsp_demux_043_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_043_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_043_src0_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_35yalzy rsp_demux_044 (
		.clk                (sys_clk_clk_clk),                                        //       clk.clk
		.reset              (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_052_src_ready),                                   //      sink.ready
		.sink_channel       (router_052_src_channel),                                 //          .channel
		.sink_data          (router_052_src_data),                                    //          .data
		.sink_startofpacket (router_052_src_startofpacket),                           //          .startofpacket
		.sink_endofpacket   (router_052_src_endofpacket),                             //          .endofpacket
		.sink_valid         (router_052_src_valid),                                   //          .valid
		.src0_ready         (rsp_demux_044_src0_ready),                               //      src0.ready
		.src0_valid         (rsp_demux_044_src0_valid),                               //          .valid
		.src0_data          (rsp_demux_044_src0_data),                                //          .data
		.src0_channel       (rsp_demux_044_src0_channel),                             //          .channel
		.src0_startofpacket (rsp_demux_044_src0_startofpacket),                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_044_src0_endofpacket),                         //          .endofpacket
		.src1_ready         (rsp_demux_044_src1_ready),                               //      src1.ready
		.src1_valid         (rsp_demux_044_src1_valid),                               //          .valid
		.src1_data          (rsp_demux_044_src1_data),                                //          .data
		.src1_channel       (rsp_demux_044_src1_channel),                             //          .channel
		.src1_startofpacket (rsp_demux_044_src1_startofpacket),                       //          .startofpacket
		.src1_endofpacket   (rsp_demux_044_src1_endofpacket)                          //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_y55ibki rsp_mux (
		.clk                  (sys_clk_clk_clk),                           //       clk.clk
		.reset                (sys_cpu_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready            (rsp_mux_src_ready),                         //       src.ready
		.src_valid            (rsp_mux_src_valid),                         //          .valid
		.src_data             (rsp_mux_src_data),                          //          .data
		.src_channel          (rsp_mux_src_channel),                       //          .channel
		.src_startofpacket    (rsp_mux_src_startofpacket),                 //          .startofpacket
		.src_endofpacket      (rsp_mux_src_endofpacket),                   //          .endofpacket
		.sink0_ready          (mux_pipeline_055_source0_ready),            //     sink0.ready
		.sink0_valid          (mux_pipeline_055_source0_valid),            //          .valid
		.sink0_channel        (mux_pipeline_055_source0_channel),          //          .channel
		.sink0_data           (mux_pipeline_055_source0_data),             //          .data
		.sink0_startofpacket  (mux_pipeline_055_source0_startofpacket),    //          .startofpacket
		.sink0_endofpacket    (mux_pipeline_055_source0_endofpacket),      //          .endofpacket
		.sink1_ready          (mux_pipeline_056_source0_ready),            //     sink1.ready
		.sink1_valid          (mux_pipeline_056_source0_valid),            //          .valid
		.sink1_channel        (mux_pipeline_056_source0_channel),          //          .channel
		.sink1_data           (mux_pipeline_056_source0_data),             //          .data
		.sink1_startofpacket  (mux_pipeline_056_source0_startofpacket),    //          .startofpacket
		.sink1_endofpacket    (mux_pipeline_056_source0_endofpacket),      //          .endofpacket
		.sink2_ready          (mux_pipeline_057_source0_ready),            //     sink2.ready
		.sink2_valid          (mux_pipeline_057_source0_valid),            //          .valid
		.sink2_channel        (mux_pipeline_057_source0_channel),          //          .channel
		.sink2_data           (mux_pipeline_057_source0_data),             //          .data
		.sink2_startofpacket  (mux_pipeline_057_source0_startofpacket),    //          .startofpacket
		.sink2_endofpacket    (mux_pipeline_057_source0_endofpacket),      //          .endofpacket
		.sink3_ready          (mux_pipeline_058_source0_ready),            //     sink3.ready
		.sink3_valid          (mux_pipeline_058_source0_valid),            //          .valid
		.sink3_channel        (mux_pipeline_058_source0_channel),          //          .channel
		.sink3_data           (mux_pipeline_058_source0_data),             //          .data
		.sink3_startofpacket  (mux_pipeline_058_source0_startofpacket),    //          .startofpacket
		.sink3_endofpacket    (mux_pipeline_058_source0_endofpacket),      //          .endofpacket
		.sink4_ready          (mux_pipeline_059_source0_ready),            //     sink4.ready
		.sink4_valid          (mux_pipeline_059_source0_valid),            //          .valid
		.sink4_channel        (mux_pipeline_059_source0_channel),          //          .channel
		.sink4_data           (mux_pipeline_059_source0_data),             //          .data
		.sink4_startofpacket  (mux_pipeline_059_source0_startofpacket),    //          .startofpacket
		.sink4_endofpacket    (mux_pipeline_059_source0_endofpacket),      //          .endofpacket
		.sink5_ready          (mux_pipeline_060_source0_ready),            //     sink5.ready
		.sink5_valid          (mux_pipeline_060_source0_valid),            //          .valid
		.sink5_channel        (mux_pipeline_060_source0_channel),          //          .channel
		.sink5_data           (mux_pipeline_060_source0_data),             //          .data
		.sink5_startofpacket  (mux_pipeline_060_source0_startofpacket),    //          .startofpacket
		.sink5_endofpacket    (mux_pipeline_060_source0_endofpacket),      //          .endofpacket
		.sink6_ready          (mux_pipeline_061_source0_ready),            //     sink6.ready
		.sink6_valid          (mux_pipeline_061_source0_valid),            //          .valid
		.sink6_channel        (mux_pipeline_061_source0_channel),          //          .channel
		.sink6_data           (mux_pipeline_061_source0_data),             //          .data
		.sink6_startofpacket  (mux_pipeline_061_source0_startofpacket),    //          .startofpacket
		.sink6_endofpacket    (mux_pipeline_061_source0_endofpacket),      //          .endofpacket
		.sink7_ready          (mux_pipeline_062_source0_ready),            //     sink7.ready
		.sink7_valid          (mux_pipeline_062_source0_valid),            //          .valid
		.sink7_channel        (mux_pipeline_062_source0_channel),          //          .channel
		.sink7_data           (mux_pipeline_062_source0_data),             //          .data
		.sink7_startofpacket  (mux_pipeline_062_source0_startofpacket),    //          .startofpacket
		.sink7_endofpacket    (mux_pipeline_062_source0_endofpacket),      //          .endofpacket
		.sink8_ready          (mux_pipeline_063_source0_ready),            //     sink8.ready
		.sink8_valid          (mux_pipeline_063_source0_valid),            //          .valid
		.sink8_channel        (mux_pipeline_063_source0_channel),          //          .channel
		.sink8_data           (mux_pipeline_063_source0_data),             //          .data
		.sink8_startofpacket  (mux_pipeline_063_source0_startofpacket),    //          .startofpacket
		.sink8_endofpacket    (mux_pipeline_063_source0_endofpacket),      //          .endofpacket
		.sink9_ready          (mux_pipeline_064_source0_ready),            //     sink9.ready
		.sink9_valid          (mux_pipeline_064_source0_valid),            //          .valid
		.sink9_channel        (mux_pipeline_064_source0_channel),          //          .channel
		.sink9_data           (mux_pipeline_064_source0_data),             //          .data
		.sink9_startofpacket  (mux_pipeline_064_source0_startofpacket),    //          .startofpacket
		.sink9_endofpacket    (mux_pipeline_064_source0_endofpacket),      //          .endofpacket
		.sink10_ready         (mux_pipeline_065_source0_ready),            //    sink10.ready
		.sink10_valid         (mux_pipeline_065_source0_valid),            //          .valid
		.sink10_channel       (mux_pipeline_065_source0_channel),          //          .channel
		.sink10_data          (mux_pipeline_065_source0_data),             //          .data
		.sink10_startofpacket (mux_pipeline_065_source0_startofpacket),    //          .startofpacket
		.sink10_endofpacket   (mux_pipeline_065_source0_endofpacket),      //          .endofpacket
		.sink11_ready         (mux_pipeline_066_source0_ready),            //    sink11.ready
		.sink11_valid         (mux_pipeline_066_source0_valid),            //          .valid
		.sink11_channel       (mux_pipeline_066_source0_channel),          //          .channel
		.sink11_data          (mux_pipeline_066_source0_data),             //          .data
		.sink11_startofpacket (mux_pipeline_066_source0_startofpacket),    //          .startofpacket
		.sink11_endofpacket   (mux_pipeline_066_source0_endofpacket),      //          .endofpacket
		.sink12_ready         (mux_pipeline_067_source0_ready),            //    sink12.ready
		.sink12_valid         (mux_pipeline_067_source0_valid),            //          .valid
		.sink12_channel       (mux_pipeline_067_source0_channel),          //          .channel
		.sink12_data          (mux_pipeline_067_source0_data),             //          .data
		.sink12_startofpacket (mux_pipeline_067_source0_startofpacket),    //          .startofpacket
		.sink12_endofpacket   (mux_pipeline_067_source0_endofpacket),      //          .endofpacket
		.sink13_ready         (mux_pipeline_068_source0_ready),            //    sink13.ready
		.sink13_valid         (mux_pipeline_068_source0_valid),            //          .valid
		.sink13_channel       (mux_pipeline_068_source0_channel),          //          .channel
		.sink13_data          (mux_pipeline_068_source0_data),             //          .data
		.sink13_startofpacket (mux_pipeline_068_source0_startofpacket),    //          .startofpacket
		.sink13_endofpacket   (mux_pipeline_068_source0_endofpacket),      //          .endofpacket
		.sink14_ready         (mux_pipeline_069_source0_ready),            //    sink14.ready
		.sink14_valid         (mux_pipeline_069_source0_valid),            //          .valid
		.sink14_channel       (mux_pipeline_069_source0_channel),          //          .channel
		.sink14_data          (mux_pipeline_069_source0_data),             //          .data
		.sink14_startofpacket (mux_pipeline_069_source0_startofpacket),    //          .startofpacket
		.sink14_endofpacket   (mux_pipeline_069_source0_endofpacket),      //          .endofpacket
		.sink15_ready         (mux_pipeline_070_source0_ready),            //    sink15.ready
		.sink15_valid         (mux_pipeline_070_source0_valid),            //          .valid
		.sink15_channel       (mux_pipeline_070_source0_channel),          //          .channel
		.sink15_data          (mux_pipeline_070_source0_data),             //          .data
		.sink15_startofpacket (mux_pipeline_070_source0_startofpacket),    //          .startofpacket
		.sink15_endofpacket   (mux_pipeline_070_source0_endofpacket),      //          .endofpacket
		.sink16_ready         (mux_pipeline_071_source0_ready),            //    sink16.ready
		.sink16_valid         (mux_pipeline_071_source0_valid),            //          .valid
		.sink16_channel       (mux_pipeline_071_source0_channel),          //          .channel
		.sink16_data          (mux_pipeline_071_source0_data),             //          .data
		.sink16_startofpacket (mux_pipeline_071_source0_startofpacket),    //          .startofpacket
		.sink16_endofpacket   (mux_pipeline_071_source0_endofpacket),      //          .endofpacket
		.sink17_ready         (mux_pipeline_072_source0_ready),            //    sink17.ready
		.sink17_valid         (mux_pipeline_072_source0_valid),            //          .valid
		.sink17_channel       (mux_pipeline_072_source0_channel),          //          .channel
		.sink17_data          (mux_pipeline_072_source0_data),             //          .data
		.sink17_startofpacket (mux_pipeline_072_source0_startofpacket),    //          .startofpacket
		.sink17_endofpacket   (mux_pipeline_072_source0_endofpacket),      //          .endofpacket
		.sink18_ready         (mux_pipeline_073_source0_ready),            //    sink18.ready
		.sink18_valid         (mux_pipeline_073_source0_valid),            //          .valid
		.sink18_channel       (mux_pipeline_073_source0_channel),          //          .channel
		.sink18_data          (mux_pipeline_073_source0_data),             //          .data
		.sink18_startofpacket (mux_pipeline_073_source0_startofpacket),    //          .startofpacket
		.sink18_endofpacket   (mux_pipeline_073_source0_endofpacket),      //          .endofpacket
		.sink19_ready         (mux_pipeline_074_source0_ready),            //    sink19.ready
		.sink19_valid         (mux_pipeline_074_source0_valid),            //          .valid
		.sink19_channel       (mux_pipeline_074_source0_channel),          //          .channel
		.sink19_data          (mux_pipeline_074_source0_data),             //          .data
		.sink19_startofpacket (mux_pipeline_074_source0_startofpacket),    //          .startofpacket
		.sink19_endofpacket   (mux_pipeline_074_source0_endofpacket),      //          .endofpacket
		.sink20_ready         (mux_pipeline_075_source0_ready),            //    sink20.ready
		.sink20_valid         (mux_pipeline_075_source0_valid),            //          .valid
		.sink20_channel       (mux_pipeline_075_source0_channel),          //          .channel
		.sink20_data          (mux_pipeline_075_source0_data),             //          .data
		.sink20_startofpacket (mux_pipeline_075_source0_startofpacket),    //          .startofpacket
		.sink20_endofpacket   (mux_pipeline_075_source0_endofpacket),      //          .endofpacket
		.sink21_ready         (mux_pipeline_076_source0_ready),            //    sink21.ready
		.sink21_valid         (mux_pipeline_076_source0_valid),            //          .valid
		.sink21_channel       (mux_pipeline_076_source0_channel),          //          .channel
		.sink21_data          (mux_pipeline_076_source0_data),             //          .data
		.sink21_startofpacket (mux_pipeline_076_source0_startofpacket),    //          .startofpacket
		.sink21_endofpacket   (mux_pipeline_076_source0_endofpacket),      //          .endofpacket
		.sink22_ready         (mux_pipeline_077_source0_ready),            //    sink22.ready
		.sink22_valid         (mux_pipeline_077_source0_valid),            //          .valid
		.sink22_channel       (mux_pipeline_077_source0_channel),          //          .channel
		.sink22_data          (mux_pipeline_077_source0_data),             //          .data
		.sink22_startofpacket (mux_pipeline_077_source0_startofpacket),    //          .startofpacket
		.sink22_endofpacket   (mux_pipeline_077_source0_endofpacket),      //          .endofpacket
		.sink23_ready         (mux_pipeline_078_source0_ready),            //    sink23.ready
		.sink23_valid         (mux_pipeline_078_source0_valid),            //          .valid
		.sink23_channel       (mux_pipeline_078_source0_channel),          //          .channel
		.sink23_data          (mux_pipeline_078_source0_data),             //          .data
		.sink23_startofpacket (mux_pipeline_078_source0_startofpacket),    //          .startofpacket
		.sink23_endofpacket   (mux_pipeline_078_source0_endofpacket),      //          .endofpacket
		.sink24_ready         (mux_pipeline_079_source0_ready),            //    sink24.ready
		.sink24_valid         (mux_pipeline_079_source0_valid),            //          .valid
		.sink24_channel       (mux_pipeline_079_source0_channel),          //          .channel
		.sink24_data          (mux_pipeline_079_source0_data),             //          .data
		.sink24_startofpacket (mux_pipeline_079_source0_startofpacket),    //          .startofpacket
		.sink24_endofpacket   (mux_pipeline_079_source0_endofpacket),      //          .endofpacket
		.sink25_ready         (mux_pipeline_080_source0_ready),            //    sink25.ready
		.sink25_valid         (mux_pipeline_080_source0_valid),            //          .valid
		.sink25_channel       (mux_pipeline_080_source0_channel),          //          .channel
		.sink25_data          (mux_pipeline_080_source0_data),             //          .data
		.sink25_startofpacket (mux_pipeline_080_source0_startofpacket),    //          .startofpacket
		.sink25_endofpacket   (mux_pipeline_080_source0_endofpacket),      //          .endofpacket
		.sink26_ready         (mux_pipeline_081_source0_ready),            //    sink26.ready
		.sink26_valid         (mux_pipeline_081_source0_valid),            //          .valid
		.sink26_channel       (mux_pipeline_081_source0_channel),          //          .channel
		.sink26_data          (mux_pipeline_081_source0_data),             //          .data
		.sink26_startofpacket (mux_pipeline_081_source0_startofpacket),    //          .startofpacket
		.sink26_endofpacket   (mux_pipeline_081_source0_endofpacket),      //          .endofpacket
		.sink27_ready         (mux_pipeline_082_source0_ready),            //    sink27.ready
		.sink27_valid         (mux_pipeline_082_source0_valid),            //          .valid
		.sink27_channel       (mux_pipeline_082_source0_channel),          //          .channel
		.sink27_data          (mux_pipeline_082_source0_data),             //          .data
		.sink27_startofpacket (mux_pipeline_082_source0_startofpacket),    //          .startofpacket
		.sink27_endofpacket   (mux_pipeline_082_source0_endofpacket),      //          .endofpacket
		.sink28_ready         (mux_pipeline_083_source0_ready),            //    sink28.ready
		.sink28_valid         (mux_pipeline_083_source0_valid),            //          .valid
		.sink28_channel       (mux_pipeline_083_source0_channel),          //          .channel
		.sink28_data          (mux_pipeline_083_source0_data),             //          .data
		.sink28_startofpacket (mux_pipeline_083_source0_startofpacket),    //          .startofpacket
		.sink28_endofpacket   (mux_pipeline_083_source0_endofpacket),      //          .endofpacket
		.sink29_ready         (mux_pipeline_084_source0_ready),            //    sink29.ready
		.sink29_valid         (mux_pipeline_084_source0_valid),            //          .valid
		.sink29_channel       (mux_pipeline_084_source0_channel),          //          .channel
		.sink29_data          (mux_pipeline_084_source0_data),             //          .data
		.sink29_startofpacket (mux_pipeline_084_source0_startofpacket),    //          .startofpacket
		.sink29_endofpacket   (mux_pipeline_084_source0_endofpacket),      //          .endofpacket
		.sink30_ready         (mux_pipeline_085_source0_ready),            //    sink30.ready
		.sink30_valid         (mux_pipeline_085_source0_valid),            //          .valid
		.sink30_channel       (mux_pipeline_085_source0_channel),          //          .channel
		.sink30_data          (mux_pipeline_085_source0_data),             //          .data
		.sink30_startofpacket (mux_pipeline_085_source0_startofpacket),    //          .startofpacket
		.sink30_endofpacket   (mux_pipeline_085_source0_endofpacket),      //          .endofpacket
		.sink31_ready         (mux_pipeline_086_source0_ready),            //    sink31.ready
		.sink31_valid         (mux_pipeline_086_source0_valid),            //          .valid
		.sink31_channel       (mux_pipeline_086_source0_channel),          //          .channel
		.sink31_data          (mux_pipeline_086_source0_data),             //          .data
		.sink31_startofpacket (mux_pipeline_086_source0_startofpacket),    //          .startofpacket
		.sink31_endofpacket   (mux_pipeline_086_source0_endofpacket),      //          .endofpacket
		.sink32_ready         (mux_pipeline_087_source0_ready),            //    sink32.ready
		.sink32_valid         (mux_pipeline_087_source0_valid),            //          .valid
		.sink32_channel       (mux_pipeline_087_source0_channel),          //          .channel
		.sink32_data          (mux_pipeline_087_source0_data),             //          .data
		.sink32_startofpacket (mux_pipeline_087_source0_startofpacket),    //          .startofpacket
		.sink32_endofpacket   (mux_pipeline_087_source0_endofpacket),      //          .endofpacket
		.sink33_ready         (mux_pipeline_088_source0_ready),            //    sink33.ready
		.sink33_valid         (mux_pipeline_088_source0_valid),            //          .valid
		.sink33_channel       (mux_pipeline_088_source0_channel),          //          .channel
		.sink33_data          (mux_pipeline_088_source0_data),             //          .data
		.sink33_startofpacket (mux_pipeline_088_source0_startofpacket),    //          .startofpacket
		.sink33_endofpacket   (mux_pipeline_088_source0_endofpacket),      //          .endofpacket
		.sink34_ready         (mux_pipeline_089_source0_ready),            //    sink34.ready
		.sink34_valid         (mux_pipeline_089_source0_valid),            //          .valid
		.sink34_channel       (mux_pipeline_089_source0_channel),          //          .channel
		.sink34_data          (mux_pipeline_089_source0_data),             //          .data
		.sink34_startofpacket (mux_pipeline_089_source0_startofpacket),    //          .startofpacket
		.sink34_endofpacket   (mux_pipeline_089_source0_endofpacket),      //          .endofpacket
		.sink35_ready         (mux_pipeline_090_source0_ready),            //    sink35.ready
		.sink35_valid         (mux_pipeline_090_source0_valid),            //          .valid
		.sink35_channel       (mux_pipeline_090_source0_channel),          //          .channel
		.sink35_data          (mux_pipeline_090_source0_data),             //          .data
		.sink35_startofpacket (mux_pipeline_090_source0_startofpacket),    //          .startofpacket
		.sink35_endofpacket   (mux_pipeline_090_source0_endofpacket),      //          .endofpacket
		.sink36_ready         (mux_pipeline_091_source0_ready),            //    sink36.ready
		.sink36_valid         (mux_pipeline_091_source0_valid),            //          .valid
		.sink36_channel       (mux_pipeline_091_source0_channel),          //          .channel
		.sink36_data          (mux_pipeline_091_source0_data),             //          .data
		.sink36_startofpacket (mux_pipeline_091_source0_startofpacket),    //          .startofpacket
		.sink36_endofpacket   (mux_pipeline_091_source0_endofpacket),      //          .endofpacket
		.sink37_ready         (mux_pipeline_092_source0_ready),            //    sink37.ready
		.sink37_valid         (mux_pipeline_092_source0_valid),            //          .valid
		.sink37_channel       (mux_pipeline_092_source0_channel),          //          .channel
		.sink37_data          (mux_pipeline_092_source0_data),             //          .data
		.sink37_startofpacket (mux_pipeline_092_source0_startofpacket),    //          .startofpacket
		.sink37_endofpacket   (mux_pipeline_092_source0_endofpacket),      //          .endofpacket
		.sink38_ready         (mux_pipeline_093_source0_ready),            //    sink38.ready
		.sink38_valid         (mux_pipeline_093_source0_valid),            //          .valid
		.sink38_channel       (mux_pipeline_093_source0_channel),          //          .channel
		.sink38_data          (mux_pipeline_093_source0_data),             //          .data
		.sink38_startofpacket (mux_pipeline_093_source0_startofpacket),    //          .startofpacket
		.sink38_endofpacket   (mux_pipeline_093_source0_endofpacket),      //          .endofpacket
		.sink39_ready         (mux_pipeline_094_source0_ready),            //    sink39.ready
		.sink39_valid         (mux_pipeline_094_source0_valid),            //          .valid
		.sink39_channel       (mux_pipeline_094_source0_channel),          //          .channel
		.sink39_data          (mux_pipeline_094_source0_data),             //          .data
		.sink39_startofpacket (mux_pipeline_094_source0_startofpacket),    //          .startofpacket
		.sink39_endofpacket   (mux_pipeline_094_source0_endofpacket),      //          .endofpacket
		.sink40_ready         (mux_pipeline_095_source0_ready),            //    sink40.ready
		.sink40_valid         (mux_pipeline_095_source0_valid),            //          .valid
		.sink40_channel       (mux_pipeline_095_source0_channel),          //          .channel
		.sink40_data          (mux_pipeline_095_source0_data),             //          .data
		.sink40_startofpacket (mux_pipeline_095_source0_startofpacket),    //          .startofpacket
		.sink40_endofpacket   (mux_pipeline_095_source0_endofpacket),      //          .endofpacket
		.sink41_ready         (mux_pipeline_096_source0_ready),            //    sink41.ready
		.sink41_valid         (mux_pipeline_096_source0_valid),            //          .valid
		.sink41_channel       (mux_pipeline_096_source0_channel),          //          .channel
		.sink41_data          (mux_pipeline_096_source0_data),             //          .data
		.sink41_startofpacket (mux_pipeline_096_source0_startofpacket),    //          .startofpacket
		.sink41_endofpacket   (mux_pipeline_096_source0_endofpacket),      //          .endofpacket
		.sink42_ready         (mux_pipeline_097_source0_ready),            //    sink42.ready
		.sink42_valid         (mux_pipeline_097_source0_valid),            //          .valid
		.sink42_channel       (mux_pipeline_097_source0_channel),          //          .channel
		.sink42_data          (mux_pipeline_097_source0_data),             //          .data
		.sink42_startofpacket (mux_pipeline_097_source0_startofpacket),    //          .startofpacket
		.sink42_endofpacket   (mux_pipeline_097_source0_endofpacket),      //          .endofpacket
		.sink43_ready         (mux_pipeline_098_source0_ready),            //    sink43.ready
		.sink43_valid         (mux_pipeline_098_source0_valid),            //          .valid
		.sink43_channel       (mux_pipeline_098_source0_channel),          //          .channel
		.sink43_data          (mux_pipeline_098_source0_data),             //          .data
		.sink43_startofpacket (mux_pipeline_098_source0_startofpacket),    //          .startofpacket
		.sink43_endofpacket   (mux_pipeline_098_source0_endofpacket),      //          .endofpacket
		.sink44_ready         (mux_pipeline_099_source0_ready),            //    sink44.ready
		.sink44_valid         (mux_pipeline_099_source0_valid),            //          .valid
		.sink44_channel       (mux_pipeline_099_source0_channel),          //          .channel
		.sink44_data          (mux_pipeline_099_source0_data),             //          .data
		.sink44_startofpacket (mux_pipeline_099_source0_startofpacket),    //          .startofpacket
		.sink44_endofpacket   (mux_pipeline_099_source0_endofpacket)       //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_cidgwia rsp_mux_001 (
		.clk                 (sys_clk_clk_clk),                           //       clk.clk
		.reset               (sys_cpu_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_001_src_ready),                     //       src.ready
		.src_valid           (rsp_mux_001_src_valid),                     //          .valid
		.src_data            (rsp_mux_001_src_data),                      //          .data
		.src_channel         (rsp_mux_001_src_channel),                   //          .channel
		.src_startofpacket   (rsp_mux_001_src_startofpacket),             //          .startofpacket
		.src_endofpacket     (rsp_mux_001_src_endofpacket),               //          .endofpacket
		.sink0_ready         (mux_pipeline_100_source0_ready),            //     sink0.ready
		.sink0_valid         (mux_pipeline_100_source0_valid),            //          .valid
		.sink0_channel       (mux_pipeline_100_source0_channel),          //          .channel
		.sink0_data          (mux_pipeline_100_source0_data),             //          .data
		.sink0_startofpacket (mux_pipeline_100_source0_startofpacket),    //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_100_source0_endofpacket),      //          .endofpacket
		.sink1_ready         (mux_pipeline_101_source0_ready),            //     sink1.ready
		.sink1_valid         (mux_pipeline_101_source0_valid),            //          .valid
		.sink1_channel       (mux_pipeline_101_source0_channel),          //          .channel
		.sink1_data          (mux_pipeline_101_source0_data),             //          .data
		.sink1_startofpacket (mux_pipeline_101_source0_startofpacket),    //          .startofpacket
		.sink1_endofpacket   (mux_pipeline_101_source0_endofpacket),      //          .endofpacket
		.sink2_ready         (mux_pipeline_102_source0_ready),            //     sink2.ready
		.sink2_valid         (mux_pipeline_102_source0_valid),            //          .valid
		.sink2_channel       (mux_pipeline_102_source0_channel),          //          .channel
		.sink2_data          (mux_pipeline_102_source0_data),             //          .data
		.sink2_startofpacket (mux_pipeline_102_source0_startofpacket),    //          .startofpacket
		.sink2_endofpacket   (mux_pipeline_102_source0_endofpacket),      //          .endofpacket
		.sink3_ready         (mux_pipeline_103_source0_ready),            //     sink3.ready
		.sink3_valid         (mux_pipeline_103_source0_valid),            //          .valid
		.sink3_channel       (mux_pipeline_103_source0_channel),          //          .channel
		.sink3_data          (mux_pipeline_103_source0_data),             //          .data
		.sink3_startofpacket (mux_pipeline_103_source0_startofpacket),    //          .startofpacket
		.sink3_endofpacket   (mux_pipeline_103_source0_endofpacket)       //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_5h2wizi rsp_mux_002 (
		.clk                 (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset               (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_002_src_ready),                                       //       src.ready
		.src_valid           (rsp_mux_002_src_valid),                                       //          .valid
		.src_data            (rsp_mux_002_src_data),                                        //          .data
		.src_channel         (rsp_mux_002_src_channel),                                     //          .channel
		.src_startofpacket   (rsp_mux_002_src_startofpacket),                               //          .startofpacket
		.src_endofpacket     (rsp_mux_002_src_endofpacket),                                 //          .endofpacket
		.sink0_ready         (mux_pipeline_104_source0_ready),                              //     sink0.ready
		.sink0_valid         (mux_pipeline_104_source0_valid),                              //          .valid
		.sink0_channel       (mux_pipeline_104_source0_channel),                            //          .channel
		.sink0_data          (mux_pipeline_104_source0_data),                               //          .data
		.sink0_startofpacket (mux_pipeline_104_source0_startofpacket),                      //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_104_source0_endofpacket)                         //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_5h2wizi rsp_mux_003 (
		.clk                 (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset               (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_003_src_ready),                                       //       src.ready
		.src_valid           (rsp_mux_003_src_valid),                                       //          .valid
		.src_data            (rsp_mux_003_src_data),                                        //          .data
		.src_channel         (rsp_mux_003_src_channel),                                     //          .channel
		.src_startofpacket   (rsp_mux_003_src_startofpacket),                               //          .startofpacket
		.src_endofpacket     (rsp_mux_003_src_endofpacket),                                 //          .endofpacket
		.sink0_ready         (mux_pipeline_105_source0_ready),                              //     sink0.ready
		.sink0_valid         (mux_pipeline_105_source0_valid),                              //          .valid
		.sink0_channel       (mux_pipeline_105_source0_channel),                            //          .channel
		.sink0_data          (mux_pipeline_105_source0_data),                               //          .data
		.sink0_startofpacket (mux_pipeline_105_source0_startofpacket),                      //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_105_source0_endofpacket)                         //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_5h2wizi rsp_mux_004 (
		.clk                 (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset               (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_004_src_ready),                                       //       src.ready
		.src_valid           (rsp_mux_004_src_valid),                                       //          .valid
		.src_data            (rsp_mux_004_src_data),                                        //          .data
		.src_channel         (rsp_mux_004_src_channel),                                     //          .channel
		.src_startofpacket   (rsp_mux_004_src_startofpacket),                               //          .startofpacket
		.src_endofpacket     (rsp_mux_004_src_endofpacket),                                 //          .endofpacket
		.sink0_ready         (mux_pipeline_106_source0_ready),                              //     sink0.ready
		.sink0_valid         (mux_pipeline_106_source0_valid),                              //          .valid
		.sink0_channel       (mux_pipeline_106_source0_channel),                            //          .channel
		.sink0_data          (mux_pipeline_106_source0_data),                               //          .data
		.sink0_startofpacket (mux_pipeline_106_source0_startofpacket),                      //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_106_source0_endofpacket)                         //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_5h2wizi rsp_mux_005 (
		.clk                 (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset               (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_005_src_ready),                                       //       src.ready
		.src_valid           (rsp_mux_005_src_valid),                                       //          .valid
		.src_data            (rsp_mux_005_src_data),                                        //          .data
		.src_channel         (rsp_mux_005_src_channel),                                     //          .channel
		.src_startofpacket   (rsp_mux_005_src_startofpacket),                               //          .startofpacket
		.src_endofpacket     (rsp_mux_005_src_endofpacket),                                 //          .endofpacket
		.sink0_ready         (mux_pipeline_107_source0_ready),                              //     sink0.ready
		.sink0_valid         (mux_pipeline_107_source0_valid),                              //          .valid
		.sink0_channel       (mux_pipeline_107_source0_channel),                            //          .channel
		.sink0_data          (mux_pipeline_107_source0_data),                               //          .data
		.sink0_startofpacket (mux_pipeline_107_source0_startofpacket),                      //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_107_source0_endofpacket)                         //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_4tfi4ky rsp_mux_006 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_006_src_ready),                                  //       src.ready
		.src_valid           (rsp_mux_006_src_valid),                                  //          .valid
		.src_data            (rsp_mux_006_src_data),                                   //          .data
		.src_channel         (rsp_mux_006_src_channel),                                //          .channel
		.src_startofpacket   (rsp_mux_006_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (rsp_mux_006_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_108_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_108_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_108_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_108_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_108_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_108_source0_endofpacket)                    //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_4tfi4ky rsp_mux_007 (
		.clk                 (sys_clk_clk_clk),                                        //       clk.clk
		.reset               (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_007_src_ready),                                  //       src.ready
		.src_valid           (rsp_mux_007_src_valid),                                  //          .valid
		.src_data            (rsp_mux_007_src_data),                                   //          .data
		.src_channel         (rsp_mux_007_src_channel),                                //          .channel
		.src_startofpacket   (rsp_mux_007_src_startofpacket),                          //          .startofpacket
		.src_endofpacket     (rsp_mux_007_src_endofpacket),                            //          .endofpacket
		.sink0_ready         (mux_pipeline_109_source0_ready),                         //     sink0.ready
		.sink0_valid         (mux_pipeline_109_source0_valid),                         //          .valid
		.sink0_channel       (mux_pipeline_109_source0_channel),                       //          .channel
		.sink0_data          (mux_pipeline_109_source0_data),                          //          .data
		.sink0_startofpacket (mux_pipeline_109_source0_startofpacket),                 //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_109_source0_endofpacket)                    //          .endofpacket
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (67),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (86),
		.IN_PKT_BYTE_CNT_L             (74),
		.IN_PKT_TRANS_COMPRESSED_READ  (68),
		.IN_PKT_TRANS_WRITE            (70),
		.IN_PKT_BURSTWRAP_H            (95),
		.IN_PKT_BURSTWRAP_L            (87),
		.IN_PKT_BURST_SIZE_H           (98),
		.IN_PKT_BURST_SIZE_L           (96),
		.IN_PKT_RESPONSE_STATUS_H      (126),
		.IN_PKT_RESPONSE_STATUS_L      (125),
		.IN_PKT_TRANS_EXCLUSIVE        (73),
		.IN_PKT_BURST_TYPE_H           (100),
		.IN_PKT_BURST_TYPE_L           (99),
		.IN_PKT_ORI_BURST_SIZE_L       (127),
		.IN_PKT_ORI_BURST_SIZE_H       (129),
		.IN_ST_DATA_W                  (130),
		.OUT_PKT_ADDR_H                (607),
		.OUT_PKT_ADDR_L                (576),
		.OUT_PKT_DATA_H                (511),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (575),
		.OUT_PKT_BYTEEN_L              (512),
		.OUT_PKT_BYTE_CNT_H            (626),
		.OUT_PKT_BYTE_CNT_L            (614),
		.OUT_PKT_TRANS_COMPRESSED_READ (608),
		.OUT_PKT_BURST_SIZE_H          (638),
		.OUT_PKT_BURST_SIZE_L          (636),
		.OUT_PKT_RESPONSE_STATUS_H     (666),
		.OUT_PKT_RESPONSE_STATUS_L     (665),
		.OUT_PKT_TRANS_EXCLUSIVE       (613),
		.OUT_PKT_BURST_TYPE_H          (640),
		.OUT_PKT_BURST_TYPE_L          (639),
		.OUT_PKT_ORI_BURST_SIZE_L      (667),
		.OUT_PKT_ORI_BURST_SIZE_H      (669),
		.OUT_ST_DATA_W                 (670),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (0),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (0),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter (
		.clk                  (sys_clk_clk_clk),                                                                      //       clk.clk
		.reset                (sys_cpu_reset_reset_bridge_in_reset_reset),                                            // clk_reset.reset
		.in_valid             (cmd_demux_src21_valid),                                                                //      sink.valid
		.in_channel           (cmd_demux_src21_channel),                                                              //          .channel
		.in_startofpacket     (cmd_demux_src21_startofpacket),                                                        //          .startofpacket
		.in_endofpacket       (cmd_demux_src21_endofpacket),                                                          //          .endofpacket
		.in_ready             (cmd_demux_src21_ready),                                                                //          .ready
		.in_data              (cmd_demux_src21_data),                                                                 //          .data
		.out_endofpacket      (sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data),          //          .data
		.out_channel          (sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel),       //          .channel
		.out_valid            (sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid),         //          .valid
		.out_ready            (sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (67),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (86),
		.IN_PKT_BYTE_CNT_L             (74),
		.IN_PKT_TRANS_COMPRESSED_READ  (68),
		.IN_PKT_TRANS_WRITE            (70),
		.IN_PKT_BURSTWRAP_H            (95),
		.IN_PKT_BURSTWRAP_L            (87),
		.IN_PKT_BURST_SIZE_H           (98),
		.IN_PKT_BURST_SIZE_L           (96),
		.IN_PKT_RESPONSE_STATUS_H      (126),
		.IN_PKT_RESPONSE_STATUS_L      (125),
		.IN_PKT_TRANS_EXCLUSIVE        (73),
		.IN_PKT_BURST_TYPE_H           (100),
		.IN_PKT_BURST_TYPE_L           (99),
		.IN_PKT_ORI_BURST_SIZE_L       (127),
		.IN_PKT_ORI_BURST_SIZE_H       (129),
		.IN_ST_DATA_W                  (130),
		.OUT_PKT_ADDR_H                (319),
		.OUT_PKT_ADDR_L                (288),
		.OUT_PKT_DATA_H                (255),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (287),
		.OUT_PKT_BYTEEN_L              (256),
		.OUT_PKT_BYTE_CNT_H            (338),
		.OUT_PKT_BYTE_CNT_L            (326),
		.OUT_PKT_TRANS_COMPRESSED_READ (320),
		.OUT_PKT_BURST_SIZE_H          (350),
		.OUT_PKT_BURST_SIZE_L          (348),
		.OUT_PKT_RESPONSE_STATUS_H     (378),
		.OUT_PKT_RESPONSE_STATUS_L     (377),
		.OUT_PKT_TRANS_EXCLUSIVE       (325),
		.OUT_PKT_BURST_TYPE_H          (352),
		.OUT_PKT_BURST_TYPE_L          (351),
		.OUT_PKT_ORI_BURST_SIZE_L      (379),
		.OUT_PKT_ORI_BURST_SIZE_H      (381),
		.OUT_ST_DATA_W                 (382),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (0),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (0),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter (
		.clk                  (sys_clk_clk_clk),                                                                                 //       clk.clk
		.reset                (sys_cpu_reset_reset_bridge_in_reset_reset),                                                       // clk_reset.reset
		.in_valid             (cmd_demux_src23_valid),                                                                           //      sink.valid
		.in_channel           (cmd_demux_src23_channel),                                                                         //          .channel
		.in_startofpacket     (cmd_demux_src23_startofpacket),                                                                   //          .startofpacket
		.in_endofpacket       (cmd_demux_src23_endofpacket),                                                                     //          .endofpacket
		.in_ready             (cmd_demux_src23_ready),                                                                           //          .ready
		.in_data              (cmd_demux_src23_data),                                                                            //          .data
		.out_endofpacket      (sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter_src_data),          //          .data
		.out_channel          (sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter_src_channel),       //          .channel
		.out_valid            (sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter_src_valid),         //          .valid
		.out_ready            (sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                           // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (67),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (86),
		.IN_PKT_BYTE_CNT_L             (74),
		.IN_PKT_TRANS_COMPRESSED_READ  (68),
		.IN_PKT_TRANS_WRITE            (70),
		.IN_PKT_BURSTWRAP_H            (95),
		.IN_PKT_BURSTWRAP_L            (87),
		.IN_PKT_BURST_SIZE_H           (98),
		.IN_PKT_BURST_SIZE_L           (96),
		.IN_PKT_RESPONSE_STATUS_H      (126),
		.IN_PKT_RESPONSE_STATUS_L      (125),
		.IN_PKT_TRANS_EXCLUSIVE        (73),
		.IN_PKT_BURST_TYPE_H           (100),
		.IN_PKT_BURST_TYPE_L           (99),
		.IN_PKT_ORI_BURST_SIZE_L       (127),
		.IN_PKT_ORI_BURST_SIZE_H       (129),
		.IN_ST_DATA_W                  (130),
		.OUT_PKT_ADDR_H                (319),
		.OUT_PKT_ADDR_L                (288),
		.OUT_PKT_DATA_H                (255),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (287),
		.OUT_PKT_BYTEEN_L              (256),
		.OUT_PKT_BYTE_CNT_H            (338),
		.OUT_PKT_BYTE_CNT_L            (326),
		.OUT_PKT_TRANS_COMPRESSED_READ (320),
		.OUT_PKT_BURST_SIZE_H          (350),
		.OUT_PKT_BURST_SIZE_L          (348),
		.OUT_PKT_RESPONSE_STATUS_H     (378),
		.OUT_PKT_RESPONSE_STATUS_L     (377),
		.OUT_PKT_TRANS_EXCLUSIVE       (325),
		.OUT_PKT_BURST_TYPE_H          (352),
		.OUT_PKT_BURST_TYPE_L          (351),
		.OUT_PKT_ORI_BURST_SIZE_L      (379),
		.OUT_PKT_ORI_BURST_SIZE_H      (381),
		.OUT_ST_DATA_W                 (382),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (0),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (0),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter (
		.clk                  (sys_clk_clk_clk),                                                                                 //       clk.clk
		.reset                (sys_cpu_reset_reset_bridge_in_reset_reset),                                                       // clk_reset.reset
		.in_valid             (cmd_demux_src24_valid),                                                                           //      sink.valid
		.in_channel           (cmd_demux_src24_channel),                                                                         //          .channel
		.in_startofpacket     (cmd_demux_src24_startofpacket),                                                                   //          .startofpacket
		.in_endofpacket       (cmd_demux_src24_endofpacket),                                                                     //          .endofpacket
		.in_ready             (cmd_demux_src24_ready),                                                                           //          .ready
		.in_data              (cmd_demux_src24_data),                                                                            //          .data
		.out_endofpacket      (sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter_src_data),          //          .data
		.out_channel          (sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter_src_channel),       //          .channel
		.out_valid            (sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter_src_valid),         //          .valid
		.out_ready            (sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                           // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (67),
		.IN_PKT_ADDR_L                 (36),
		.IN_PKT_DATA_H                 (31),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (35),
		.IN_PKT_BYTEEN_L               (32),
		.IN_PKT_BYTE_CNT_H             (86),
		.IN_PKT_BYTE_CNT_L             (74),
		.IN_PKT_TRANS_COMPRESSED_READ  (68),
		.IN_PKT_TRANS_WRITE            (70),
		.IN_PKT_BURSTWRAP_H            (95),
		.IN_PKT_BURSTWRAP_L            (87),
		.IN_PKT_BURST_SIZE_H           (98),
		.IN_PKT_BURST_SIZE_L           (96),
		.IN_PKT_RESPONSE_STATUS_H      (126),
		.IN_PKT_RESPONSE_STATUS_L      (125),
		.IN_PKT_TRANS_EXCLUSIVE        (73),
		.IN_PKT_BURST_TYPE_H           (100),
		.IN_PKT_BURST_TYPE_L           (99),
		.IN_PKT_ORI_BURST_SIZE_L       (127),
		.IN_PKT_ORI_BURST_SIZE_H       (129),
		.IN_ST_DATA_W                  (130),
		.OUT_PKT_ADDR_H                (607),
		.OUT_PKT_ADDR_L                (576),
		.OUT_PKT_DATA_H                (511),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (575),
		.OUT_PKT_BYTEEN_L              (512),
		.OUT_PKT_BYTE_CNT_H            (626),
		.OUT_PKT_BYTE_CNT_L            (614),
		.OUT_PKT_TRANS_COMPRESSED_READ (608),
		.OUT_PKT_BURST_SIZE_H          (638),
		.OUT_PKT_BURST_SIZE_L          (636),
		.OUT_PKT_RESPONSE_STATUS_H     (666),
		.OUT_PKT_RESPONSE_STATUS_L     (665),
		.OUT_PKT_TRANS_EXCLUSIVE       (613),
		.OUT_PKT_BURST_TYPE_H          (640),
		.OUT_PKT_BURST_TYPE_L          (639),
		.OUT_PKT_ORI_BURST_SIZE_L      (667),
		.OUT_PKT_ORI_BURST_SIZE_H      (669),
		.OUT_ST_DATA_W                 (670),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (0),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (0),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter (
		.clk                  (sys_clk_clk_clk),                                                                             //       clk.clk
		.reset                (sys_cpu_reset_reset_bridge_in_reset_reset),                                                   // clk_reset.reset
		.in_valid             (cmd_demux_001_src0_valid),                                                                    //      sink.valid
		.in_channel           (cmd_demux_001_src0_channel),                                                                  //          .channel
		.in_startofpacket     (cmd_demux_001_src0_startofpacket),                                                            //          .startofpacket
		.in_endofpacket       (cmd_demux_001_src0_endofpacket),                                                              //          .endofpacket
		.in_ready             (cmd_demux_001_src0_ready),                                                                    //          .ready
		.in_data              (cmd_demux_001_src0_data),                                                                     //          .data
		.out_endofpacket      (sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data),          //          .data
		.out_channel          (sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel),       //          .channel
		.out_valid            (sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid),         //          .valid
		.out_ready            (sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                       // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (175),
		.IN_PKT_ADDR_L                 (144),
		.IN_PKT_DATA_H                 (127),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (143),
		.IN_PKT_BYTEEN_L               (128),
		.IN_PKT_BYTE_CNT_H             (194),
		.IN_PKT_BYTE_CNT_L             (182),
		.IN_PKT_TRANS_COMPRESSED_READ  (176),
		.IN_PKT_TRANS_WRITE            (178),
		.IN_PKT_BURSTWRAP_H            (203),
		.IN_PKT_BURSTWRAP_L            (195),
		.IN_PKT_BURST_SIZE_H           (206),
		.IN_PKT_BURST_SIZE_L           (204),
		.IN_PKT_RESPONSE_STATUS_H      (234),
		.IN_PKT_RESPONSE_STATUS_L      (233),
		.IN_PKT_TRANS_EXCLUSIVE        (181),
		.IN_PKT_BURST_TYPE_H           (208),
		.IN_PKT_BURST_TYPE_L           (207),
		.IN_PKT_ORI_BURST_SIZE_L       (235),
		.IN_PKT_ORI_BURST_SIZE_H       (237),
		.IN_ST_DATA_W                  (238),
		.OUT_PKT_ADDR_H                (607),
		.OUT_PKT_ADDR_L                (576),
		.OUT_PKT_DATA_H                (511),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (575),
		.OUT_PKT_BYTEEN_L              (512),
		.OUT_PKT_BYTE_CNT_H            (626),
		.OUT_PKT_BYTE_CNT_L            (614),
		.OUT_PKT_TRANS_COMPRESSED_READ (608),
		.OUT_PKT_BURST_SIZE_H          (638),
		.OUT_PKT_BURST_SIZE_L          (636),
		.OUT_PKT_RESPONSE_STATUS_H     (666),
		.OUT_PKT_RESPONSE_STATUS_L     (665),
		.OUT_PKT_TRANS_EXCLUSIVE       (613),
		.OUT_PKT_BURST_TYPE_H          (640),
		.OUT_PKT_BURST_TYPE_L          (639),
		.OUT_PKT_ORI_BURST_SIZE_L      (667),
		.OUT_PKT_ORI_BURST_SIZE_H      (669),
		.OUT_ST_DATA_W                 (670),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (0),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (0),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter (
		.clk                  (sys_dma_clk_clk_clk),                                                                           //       clk.clk
		.reset                (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset),                                   // clk_reset.reset
		.in_valid             (cmd_demux_002_src0_valid),                                                                      //      sink.valid
		.in_channel           (cmd_demux_002_src0_channel),                                                                    //          .channel
		.in_startofpacket     (cmd_demux_002_src0_startofpacket),                                                              //          .startofpacket
		.in_endofpacket       (cmd_demux_002_src0_endofpacket),                                                                //          .endofpacket
		.in_ready             (cmd_demux_002_src0_ready),                                                                      //          .ready
		.in_data              (cmd_demux_002_src0_data),                                                                       //          .data
		.out_endofpacket      (axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data),          //          .data
		.out_channel          (axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel),       //          .channel
		.out_valid            (axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid),         //          .valid
		.out_ready            (axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                         // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (175),
		.IN_PKT_ADDR_L                 (144),
		.IN_PKT_DATA_H                 (127),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (143),
		.IN_PKT_BYTEEN_L               (128),
		.IN_PKT_BYTE_CNT_H             (194),
		.IN_PKT_BYTE_CNT_L             (182),
		.IN_PKT_TRANS_COMPRESSED_READ  (176),
		.IN_PKT_TRANS_WRITE            (178),
		.IN_PKT_BURSTWRAP_H            (203),
		.IN_PKT_BURSTWRAP_L            (195),
		.IN_PKT_BURST_SIZE_H           (206),
		.IN_PKT_BURST_SIZE_L           (204),
		.IN_PKT_RESPONSE_STATUS_H      (234),
		.IN_PKT_RESPONSE_STATUS_L      (233),
		.IN_PKT_TRANS_EXCLUSIVE        (181),
		.IN_PKT_BURST_TYPE_H           (208),
		.IN_PKT_BURST_TYPE_L           (207),
		.IN_PKT_ORI_BURST_SIZE_L       (235),
		.IN_PKT_ORI_BURST_SIZE_H       (237),
		.IN_ST_DATA_W                  (238),
		.OUT_PKT_ADDR_H                (607),
		.OUT_PKT_ADDR_L                (576),
		.OUT_PKT_DATA_H                (511),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (575),
		.OUT_PKT_BYTEEN_L              (512),
		.OUT_PKT_BYTE_CNT_H            (626),
		.OUT_PKT_BYTE_CNT_L            (614),
		.OUT_PKT_TRANS_COMPRESSED_READ (608),
		.OUT_PKT_BURST_SIZE_H          (638),
		.OUT_PKT_BURST_SIZE_L          (636),
		.OUT_PKT_RESPONSE_STATUS_H     (666),
		.OUT_PKT_RESPONSE_STATUS_L     (665),
		.OUT_PKT_TRANS_EXCLUSIVE       (613),
		.OUT_PKT_BURST_TYPE_H          (640),
		.OUT_PKT_BURST_TYPE_L          (639),
		.OUT_PKT_ORI_BURST_SIZE_L      (667),
		.OUT_PKT_ORI_BURST_SIZE_H      (669),
		.OUT_ST_DATA_W                 (670),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (0),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (0),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter (
		.clk                  (sys_dma_clk_clk_clk),                                                                           //       clk.clk
		.reset                (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset),                                   // clk_reset.reset
		.in_valid             (cmd_demux_003_src0_valid),                                                                      //      sink.valid
		.in_channel           (cmd_demux_003_src0_channel),                                                                    //          .channel
		.in_startofpacket     (cmd_demux_003_src0_startofpacket),                                                              //          .startofpacket
		.in_endofpacket       (cmd_demux_003_src0_endofpacket),                                                                //          .endofpacket
		.in_ready             (cmd_demux_003_src0_ready),                                                                      //          .ready
		.in_data              (cmd_demux_003_src0_data),                                                                       //          .data
		.out_endofpacket      (axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data),          //          .data
		.out_channel          (axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel),       //          .channel
		.out_valid            (axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid),         //          .valid
		.out_ready            (axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                         // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (175),
		.IN_PKT_ADDR_L                 (144),
		.IN_PKT_DATA_H                 (127),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (143),
		.IN_PKT_BYTEEN_L               (128),
		.IN_PKT_BYTE_CNT_H             (194),
		.IN_PKT_BYTE_CNT_L             (182),
		.IN_PKT_TRANS_COMPRESSED_READ  (176),
		.IN_PKT_TRANS_WRITE            (178),
		.IN_PKT_BURSTWRAP_H            (203),
		.IN_PKT_BURSTWRAP_L            (195),
		.IN_PKT_BURST_SIZE_H           (206),
		.IN_PKT_BURST_SIZE_L           (204),
		.IN_PKT_RESPONSE_STATUS_H      (234),
		.IN_PKT_RESPONSE_STATUS_L      (233),
		.IN_PKT_TRANS_EXCLUSIVE        (181),
		.IN_PKT_BURST_TYPE_H           (208),
		.IN_PKT_BURST_TYPE_L           (207),
		.IN_PKT_ORI_BURST_SIZE_L       (235),
		.IN_PKT_ORI_BURST_SIZE_H       (237),
		.IN_ST_DATA_W                  (238),
		.OUT_PKT_ADDR_H                (607),
		.OUT_PKT_ADDR_L                (576),
		.OUT_PKT_DATA_H                (511),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (575),
		.OUT_PKT_BYTEEN_L              (512),
		.OUT_PKT_BYTE_CNT_H            (626),
		.OUT_PKT_BYTE_CNT_L            (614),
		.OUT_PKT_TRANS_COMPRESSED_READ (608),
		.OUT_PKT_BURST_SIZE_H          (638),
		.OUT_PKT_BURST_SIZE_L          (636),
		.OUT_PKT_RESPONSE_STATUS_H     (666),
		.OUT_PKT_RESPONSE_STATUS_L     (665),
		.OUT_PKT_TRANS_EXCLUSIVE       (613),
		.OUT_PKT_BURST_TYPE_H          (640),
		.OUT_PKT_BURST_TYPE_L          (639),
		.OUT_PKT_ORI_BURST_SIZE_L      (667),
		.OUT_PKT_ORI_BURST_SIZE_H      (669),
		.OUT_ST_DATA_W                 (670),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (0),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (0),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter (
		.clk                  (sys_dma_clk_clk_clk),                                                                          //       clk.clk
		.reset                (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset),                                  // clk_reset.reset
		.in_valid             (cmd_demux_004_src0_valid),                                                                     //      sink.valid
		.in_channel           (cmd_demux_004_src0_channel),                                                                   //          .channel
		.in_startofpacket     (cmd_demux_004_src0_startofpacket),                                                             //          .startofpacket
		.in_endofpacket       (cmd_demux_004_src0_endofpacket),                                                               //          .endofpacket
		.in_ready             (cmd_demux_004_src0_ready),                                                                     //          .ready
		.in_data              (cmd_demux_004_src0_data),                                                                      //          .data
		.out_endofpacket      (axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data),          //          .data
		.out_channel          (axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel),       //          .channel
		.out_valid            (axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid),         //          .valid
		.out_ready            (axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                        // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (175),
		.IN_PKT_ADDR_L                 (144),
		.IN_PKT_DATA_H                 (127),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (143),
		.IN_PKT_BYTEEN_L               (128),
		.IN_PKT_BYTE_CNT_H             (194),
		.IN_PKT_BYTE_CNT_L             (182),
		.IN_PKT_TRANS_COMPRESSED_READ  (176),
		.IN_PKT_TRANS_WRITE            (178),
		.IN_PKT_BURSTWRAP_H            (203),
		.IN_PKT_BURSTWRAP_L            (195),
		.IN_PKT_BURST_SIZE_H           (206),
		.IN_PKT_BURST_SIZE_L           (204),
		.IN_PKT_RESPONSE_STATUS_H      (234),
		.IN_PKT_RESPONSE_STATUS_L      (233),
		.IN_PKT_TRANS_EXCLUSIVE        (181),
		.IN_PKT_BURST_TYPE_H           (208),
		.IN_PKT_BURST_TYPE_L           (207),
		.IN_PKT_ORI_BURST_SIZE_L       (235),
		.IN_PKT_ORI_BURST_SIZE_H       (237),
		.IN_ST_DATA_W                  (238),
		.OUT_PKT_ADDR_H                (607),
		.OUT_PKT_ADDR_L                (576),
		.OUT_PKT_DATA_H                (511),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (575),
		.OUT_PKT_BYTEEN_L              (512),
		.OUT_PKT_BYTE_CNT_H            (626),
		.OUT_PKT_BYTE_CNT_L            (614),
		.OUT_PKT_TRANS_COMPRESSED_READ (608),
		.OUT_PKT_BURST_SIZE_H          (638),
		.OUT_PKT_BURST_SIZE_L          (636),
		.OUT_PKT_RESPONSE_STATUS_H     (666),
		.OUT_PKT_RESPONSE_STATUS_L     (665),
		.OUT_PKT_TRANS_EXCLUSIVE       (613),
		.OUT_PKT_BURST_TYPE_H          (640),
		.OUT_PKT_BURST_TYPE_L          (639),
		.OUT_PKT_ORI_BURST_SIZE_L      (667),
		.OUT_PKT_ORI_BURST_SIZE_H      (669),
		.OUT_ST_DATA_W                 (670),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (0),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (0),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter (
		.clk                  (sys_dma_clk_clk_clk),                                                                          //       clk.clk
		.reset                (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset),                                  // clk_reset.reset
		.in_valid             (cmd_demux_005_src0_valid),                                                                     //      sink.valid
		.in_channel           (cmd_demux_005_src0_channel),                                                                   //          .channel
		.in_startofpacket     (cmd_demux_005_src0_startofpacket),                                                             //          .startofpacket
		.in_endofpacket       (cmd_demux_005_src0_endofpacket),                                                               //          .endofpacket
		.in_ready             (cmd_demux_005_src0_ready),                                                                     //          .ready
		.in_data              (cmd_demux_005_src0_data),                                                                      //          .data
		.out_endofpacket      (axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data),          //          .data
		.out_channel          (axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel),       //          .channel
		.out_valid            (axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid),         //          .valid
		.out_ready            (axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                        // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (103),
		.IN_PKT_ADDR_L                 (72),
		.IN_PKT_DATA_H                 (63),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (71),
		.IN_PKT_BYTEEN_L               (64),
		.IN_PKT_BYTE_CNT_H             (122),
		.IN_PKT_BYTE_CNT_L             (110),
		.IN_PKT_TRANS_COMPRESSED_READ  (104),
		.IN_PKT_TRANS_WRITE            (106),
		.IN_PKT_BURSTWRAP_H            (131),
		.IN_PKT_BURSTWRAP_L            (123),
		.IN_PKT_BURST_SIZE_H           (134),
		.IN_PKT_BURST_SIZE_L           (132),
		.IN_PKT_RESPONSE_STATUS_H      (162),
		.IN_PKT_RESPONSE_STATUS_L      (161),
		.IN_PKT_TRANS_EXCLUSIVE        (109),
		.IN_PKT_BURST_TYPE_H           (136),
		.IN_PKT_BURST_TYPE_L           (135),
		.IN_PKT_ORI_BURST_SIZE_L       (163),
		.IN_PKT_ORI_BURST_SIZE_H       (165),
		.IN_ST_DATA_W                  (166),
		.OUT_PKT_ADDR_H                (607),
		.OUT_PKT_ADDR_L                (576),
		.OUT_PKT_DATA_H                (511),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (575),
		.OUT_PKT_BYTEEN_L              (512),
		.OUT_PKT_BYTE_CNT_H            (626),
		.OUT_PKT_BYTE_CNT_L            (614),
		.OUT_PKT_TRANS_COMPRESSED_READ (608),
		.OUT_PKT_BURST_SIZE_H          (638),
		.OUT_PKT_BURST_SIZE_L          (636),
		.OUT_PKT_RESPONSE_STATUS_H     (666),
		.OUT_PKT_RESPONSE_STATUS_L     (665),
		.OUT_PKT_TRANS_EXCLUSIVE       (613),
		.OUT_PKT_BURST_TYPE_H          (640),
		.OUT_PKT_BURST_TYPE_L          (639),
		.OUT_PKT_ORI_BURST_SIZE_L      (667),
		.OUT_PKT_ORI_BURST_SIZE_H      (669),
		.OUT_ST_DATA_W                 (670),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (0),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (0),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter (
		.clk                  (sys_clk_clk_clk),                                                                              //       clk.clk
		.reset                (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.in_valid             (cmd_demux_006_src0_valid),                                                                     //      sink.valid
		.in_channel           (cmd_demux_006_src0_channel),                                                                   //          .channel
		.in_startofpacket     (cmd_demux_006_src0_startofpacket),                                                             //          .startofpacket
		.in_endofpacket       (cmd_demux_006_src0_endofpacket),                                                               //          .endofpacket
		.in_ready             (cmd_demux_006_src0_ready),                                                                     //          .ready
		.in_data              (cmd_demux_006_src0_data),                                                                      //          .data
		.out_endofpacket      (sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data),          //          .data
		.out_channel          (sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel),       //          .channel
		.out_valid            (sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid),         //          .valid
		.out_ready            (sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                        // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (103),
		.IN_PKT_ADDR_L                 (72),
		.IN_PKT_DATA_H                 (63),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (71),
		.IN_PKT_BYTEEN_L               (64),
		.IN_PKT_BYTE_CNT_H             (122),
		.IN_PKT_BYTE_CNT_L             (110),
		.IN_PKT_TRANS_COMPRESSED_READ  (104),
		.IN_PKT_TRANS_WRITE            (106),
		.IN_PKT_BURSTWRAP_H            (131),
		.IN_PKT_BURSTWRAP_L            (123),
		.IN_PKT_BURST_SIZE_H           (134),
		.IN_PKT_BURST_SIZE_L           (132),
		.IN_PKT_RESPONSE_STATUS_H      (162),
		.IN_PKT_RESPONSE_STATUS_L      (161),
		.IN_PKT_TRANS_EXCLUSIVE        (109),
		.IN_PKT_BURST_TYPE_H           (136),
		.IN_PKT_BURST_TYPE_L           (135),
		.IN_PKT_ORI_BURST_SIZE_L       (163),
		.IN_PKT_ORI_BURST_SIZE_H       (165),
		.IN_ST_DATA_W                  (166),
		.OUT_PKT_ADDR_H                (607),
		.OUT_PKT_ADDR_L                (576),
		.OUT_PKT_DATA_H                (511),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (575),
		.OUT_PKT_BYTEEN_L              (512),
		.OUT_PKT_BYTE_CNT_H            (626),
		.OUT_PKT_BYTE_CNT_L            (614),
		.OUT_PKT_TRANS_COMPRESSED_READ (608),
		.OUT_PKT_BURST_SIZE_H          (638),
		.OUT_PKT_BURST_SIZE_L          (636),
		.OUT_PKT_RESPONSE_STATUS_H     (666),
		.OUT_PKT_RESPONSE_STATUS_L     (665),
		.OUT_PKT_TRANS_EXCLUSIVE       (613),
		.OUT_PKT_BURST_TYPE_H          (640),
		.OUT_PKT_BURST_TYPE_L          (639),
		.OUT_PKT_ORI_BURST_SIZE_L      (667),
		.OUT_PKT_ORI_BURST_SIZE_H      (669),
		.OUT_ST_DATA_W                 (670),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (0),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (0),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter (
		.clk                  (sys_clk_clk_clk),                                                                               //       clk.clk
		.reset                (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                                        // clk_reset.reset
		.in_valid             (cmd_demux_007_src0_valid),                                                                      //      sink.valid
		.in_channel           (cmd_demux_007_src0_channel),                                                                    //          .channel
		.in_startofpacket     (cmd_demux_007_src0_startofpacket),                                                              //          .startofpacket
		.in_endofpacket       (cmd_demux_007_src0_endofpacket),                                                                //          .endofpacket
		.in_ready             (cmd_demux_007_src0_ready),                                                                      //          .ready
		.in_data              (cmd_demux_007_src0_data),                                                                       //          .data
		.out_endofpacket      (sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data),          //          .data
		.out_channel          (sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel),       //          .channel
		.out_valid            (sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid),         //          .valid
		.out_ready            (sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                         // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (607),
		.IN_PKT_ADDR_L                 (576),
		.IN_PKT_DATA_H                 (511),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (575),
		.IN_PKT_BYTEEN_L               (512),
		.IN_PKT_BYTE_CNT_H             (626),
		.IN_PKT_BYTE_CNT_L             (614),
		.IN_PKT_TRANS_COMPRESSED_READ  (608),
		.IN_PKT_TRANS_WRITE            (610),
		.IN_PKT_BURSTWRAP_H            (635),
		.IN_PKT_BURSTWRAP_L            (627),
		.IN_PKT_BURST_SIZE_H           (638),
		.IN_PKT_BURST_SIZE_L           (636),
		.IN_PKT_RESPONSE_STATUS_H      (666),
		.IN_PKT_RESPONSE_STATUS_L      (665),
		.IN_PKT_TRANS_EXCLUSIVE        (613),
		.IN_PKT_BURST_TYPE_H           (640),
		.IN_PKT_BURST_TYPE_L           (639),
		.IN_PKT_ORI_BURST_SIZE_L       (667),
		.IN_PKT_ORI_BURST_SIZE_H       (669),
		.IN_ST_DATA_W                  (670),
		.OUT_PKT_ADDR_H                (67),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (86),
		.OUT_PKT_BYTE_CNT_L            (74),
		.OUT_PKT_TRANS_COMPRESSED_READ (68),
		.OUT_PKT_BURST_SIZE_H          (98),
		.OUT_PKT_BURST_SIZE_L          (96),
		.OUT_PKT_RESPONSE_STATUS_H     (126),
		.OUT_PKT_RESPONSE_STATUS_L     (125),
		.OUT_PKT_TRANS_EXCLUSIVE       (73),
		.OUT_PKT_BURST_TYPE_H          (100),
		.OUT_PKT_BURST_TYPE_L          (99),
		.OUT_PKT_ORI_BURST_SIZE_L      (127),
		.OUT_PKT_ORI_BURST_SIZE_H      (129),
		.OUT_ST_DATA_W                 (130),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (1),
		.RESPONSE_PATH                 (1),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (1),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter (
		.clk                  (sys_ddr3_cntrl_emif_usr_clk_clk),                                                      //       clk.clk
		.reset                (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),               // clk_reset.reset
		.in_valid             (pipeline_stage_source0_valid),                                                         //      sink.valid
		.in_channel           (pipeline_stage_source0_channel),                                                       //          .channel
		.in_startofpacket     (pipeline_stage_source0_startofpacket),                                                 //          .startofpacket
		.in_endofpacket       (pipeline_stage_source0_endofpacket),                                                   //          .endofpacket
		.in_ready             (pipeline_stage_source0_ready),                                                         //          .ready
		.in_data              (pipeline_stage_source0_data),                                                          //          .data
		.out_endofpacket      (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter_src_data),          //          .data
		.out_channel          (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter_src_channel),       //          .channel
		.out_valid            (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter_src_valid),         //          .valid
		.out_ready            (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (607),
		.IN_PKT_ADDR_L                 (576),
		.IN_PKT_DATA_H                 (511),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (575),
		.IN_PKT_BYTEEN_L               (512),
		.IN_PKT_BYTE_CNT_H             (626),
		.IN_PKT_BYTE_CNT_L             (614),
		.IN_PKT_TRANS_COMPRESSED_READ  (608),
		.IN_PKT_TRANS_WRITE            (610),
		.IN_PKT_BURSTWRAP_H            (635),
		.IN_PKT_BURSTWRAP_L            (627),
		.IN_PKT_BURST_SIZE_H           (638),
		.IN_PKT_BURST_SIZE_L           (636),
		.IN_PKT_RESPONSE_STATUS_H      (666),
		.IN_PKT_RESPONSE_STATUS_L      (665),
		.IN_PKT_TRANS_EXCLUSIVE        (613),
		.IN_PKT_BURST_TYPE_H           (640),
		.IN_PKT_BURST_TYPE_L           (639),
		.IN_PKT_ORI_BURST_SIZE_L       (667),
		.IN_PKT_ORI_BURST_SIZE_H       (669),
		.IN_ST_DATA_W                  (670),
		.OUT_PKT_ADDR_H                (67),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (86),
		.OUT_PKT_BYTE_CNT_L            (74),
		.OUT_PKT_TRANS_COMPRESSED_READ (68),
		.OUT_PKT_BURST_SIZE_H          (98),
		.OUT_PKT_BURST_SIZE_L          (96),
		.OUT_PKT_RESPONSE_STATUS_H     (126),
		.OUT_PKT_RESPONSE_STATUS_L     (125),
		.OUT_PKT_TRANS_EXCLUSIVE       (73),
		.OUT_PKT_BURST_TYPE_H          (100),
		.OUT_PKT_BURST_TYPE_L          (99),
		.OUT_PKT_ORI_BURST_SIZE_L      (127),
		.OUT_PKT_ORI_BURST_SIZE_H      (129),
		.OUT_ST_DATA_W                 (130),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (1),
		.RESPONSE_PATH                 (1),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (1),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter (
		.clk                  (sys_ddr3_cntrl_emif_usr_clk_clk),                                                             //       clk.clk
		.reset                (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                      // clk_reset.reset
		.in_valid             (pipeline_stage_001_source0_valid),                                                            //      sink.valid
		.in_channel           (pipeline_stage_001_source0_channel),                                                          //          .channel
		.in_startofpacket     (pipeline_stage_001_source0_startofpacket),                                                    //          .startofpacket
		.in_endofpacket       (pipeline_stage_001_source0_endofpacket),                                                      //          .endofpacket
		.in_ready             (pipeline_stage_001_source0_ready),                                                            //          .ready
		.in_data              (pipeline_stage_001_source0_data),                                                             //          .data
		.out_endofpacket      (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter_src_data),          //          .data
		.out_channel          (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter_src_channel),       //          .channel
		.out_valid            (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter_src_valid),         //          .valid
		.out_ready            (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                       // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (607),
		.IN_PKT_ADDR_L                 (576),
		.IN_PKT_DATA_H                 (511),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (575),
		.IN_PKT_BYTEEN_L               (512),
		.IN_PKT_BYTE_CNT_H             (626),
		.IN_PKT_BYTE_CNT_L             (614),
		.IN_PKT_TRANS_COMPRESSED_READ  (608),
		.IN_PKT_TRANS_WRITE            (610),
		.IN_PKT_BURSTWRAP_H            (635),
		.IN_PKT_BURSTWRAP_L            (627),
		.IN_PKT_BURST_SIZE_H           (638),
		.IN_PKT_BURST_SIZE_L           (636),
		.IN_PKT_RESPONSE_STATUS_H      (666),
		.IN_PKT_RESPONSE_STATUS_L      (665),
		.IN_PKT_TRANS_EXCLUSIVE        (613),
		.IN_PKT_BURST_TYPE_H           (640),
		.IN_PKT_BURST_TYPE_L           (639),
		.IN_PKT_ORI_BURST_SIZE_L       (667),
		.IN_PKT_ORI_BURST_SIZE_H       (669),
		.IN_ST_DATA_W                  (670),
		.OUT_PKT_ADDR_H                (175),
		.OUT_PKT_ADDR_L                (144),
		.OUT_PKT_DATA_H                (127),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (143),
		.OUT_PKT_BYTEEN_L              (128),
		.OUT_PKT_BYTE_CNT_H            (194),
		.OUT_PKT_BYTE_CNT_L            (182),
		.OUT_PKT_TRANS_COMPRESSED_READ (176),
		.OUT_PKT_BURST_SIZE_H          (206),
		.OUT_PKT_BURST_SIZE_L          (204),
		.OUT_PKT_RESPONSE_STATUS_H     (234),
		.OUT_PKT_RESPONSE_STATUS_L     (233),
		.OUT_PKT_TRANS_EXCLUSIVE       (181),
		.OUT_PKT_BURST_TYPE_H          (208),
		.OUT_PKT_BURST_TYPE_L          (207),
		.OUT_PKT_ORI_BURST_SIZE_L      (235),
		.OUT_PKT_ORI_BURST_SIZE_H      (237),
		.OUT_ST_DATA_W                 (238),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (1),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (1),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter (
		.clk                  (sys_ddr3_cntrl_emif_usr_clk_clk),                                                               //       clk.clk
		.reset                (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                        // clk_reset.reset
		.in_valid             (pipeline_stage_002_source0_valid),                                                              //      sink.valid
		.in_channel           (pipeline_stage_002_source0_channel),                                                            //          .channel
		.in_startofpacket     (pipeline_stage_002_source0_startofpacket),                                                      //          .startofpacket
		.in_endofpacket       (pipeline_stage_002_source0_endofpacket),                                                        //          .endofpacket
		.in_ready             (pipeline_stage_002_source0_ready),                                                              //          .ready
		.in_data              (pipeline_stage_002_source0_data),                                                               //          .data
		.out_endofpacket      (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter_src_data),          //          .data
		.out_channel          (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter_src_channel),       //          .channel
		.out_valid            (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter_src_valid),         //          .valid
		.out_ready            (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                         // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (607),
		.IN_PKT_ADDR_L                 (576),
		.IN_PKT_DATA_H                 (511),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (575),
		.IN_PKT_BYTEEN_L               (512),
		.IN_PKT_BYTE_CNT_H             (626),
		.IN_PKT_BYTE_CNT_L             (614),
		.IN_PKT_TRANS_COMPRESSED_READ  (608),
		.IN_PKT_TRANS_WRITE            (610),
		.IN_PKT_BURSTWRAP_H            (635),
		.IN_PKT_BURSTWRAP_L            (627),
		.IN_PKT_BURST_SIZE_H           (638),
		.IN_PKT_BURST_SIZE_L           (636),
		.IN_PKT_RESPONSE_STATUS_H      (666),
		.IN_PKT_RESPONSE_STATUS_L      (665),
		.IN_PKT_TRANS_EXCLUSIVE        (613),
		.IN_PKT_BURST_TYPE_H           (640),
		.IN_PKT_BURST_TYPE_L           (639),
		.IN_PKT_ORI_BURST_SIZE_L       (667),
		.IN_PKT_ORI_BURST_SIZE_H       (669),
		.IN_ST_DATA_W                  (670),
		.OUT_PKT_ADDR_H                (175),
		.OUT_PKT_ADDR_L                (144),
		.OUT_PKT_DATA_H                (127),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (143),
		.OUT_PKT_BYTEEN_L              (128),
		.OUT_PKT_BYTE_CNT_H            (194),
		.OUT_PKT_BYTE_CNT_L            (182),
		.OUT_PKT_TRANS_COMPRESSED_READ (176),
		.OUT_PKT_BURST_SIZE_H          (206),
		.OUT_PKT_BURST_SIZE_L          (204),
		.OUT_PKT_RESPONSE_STATUS_H     (234),
		.OUT_PKT_RESPONSE_STATUS_L     (233),
		.OUT_PKT_TRANS_EXCLUSIVE       (181),
		.OUT_PKT_BURST_TYPE_H          (208),
		.OUT_PKT_BURST_TYPE_L          (207),
		.OUT_PKT_ORI_BURST_SIZE_L      (235),
		.OUT_PKT_ORI_BURST_SIZE_H      (237),
		.OUT_ST_DATA_W                 (238),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (1),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (1),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter (
		.clk                  (sys_ddr3_cntrl_emif_usr_clk_clk),                                                               //       clk.clk
		.reset                (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                        // clk_reset.reset
		.in_valid             (pipeline_stage_003_source0_valid),                                                              //      sink.valid
		.in_channel           (pipeline_stage_003_source0_channel),                                                            //          .channel
		.in_startofpacket     (pipeline_stage_003_source0_startofpacket),                                                      //          .startofpacket
		.in_endofpacket       (pipeline_stage_003_source0_endofpacket),                                                        //          .endofpacket
		.in_ready             (pipeline_stage_003_source0_ready),                                                              //          .ready
		.in_data              (pipeline_stage_003_source0_data),                                                               //          .data
		.out_endofpacket      (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter_src_data),          //          .data
		.out_channel          (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter_src_channel),       //          .channel
		.out_valid            (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter_src_valid),         //          .valid
		.out_ready            (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                         // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (607),
		.IN_PKT_ADDR_L                 (576),
		.IN_PKT_DATA_H                 (511),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (575),
		.IN_PKT_BYTEEN_L               (512),
		.IN_PKT_BYTE_CNT_H             (626),
		.IN_PKT_BYTE_CNT_L             (614),
		.IN_PKT_TRANS_COMPRESSED_READ  (608),
		.IN_PKT_TRANS_WRITE            (610),
		.IN_PKT_BURSTWRAP_H            (635),
		.IN_PKT_BURSTWRAP_L            (627),
		.IN_PKT_BURST_SIZE_H           (638),
		.IN_PKT_BURST_SIZE_L           (636),
		.IN_PKT_RESPONSE_STATUS_H      (666),
		.IN_PKT_RESPONSE_STATUS_L      (665),
		.IN_PKT_TRANS_EXCLUSIVE        (613),
		.IN_PKT_BURST_TYPE_H           (640),
		.IN_PKT_BURST_TYPE_L           (639),
		.IN_PKT_ORI_BURST_SIZE_L       (667),
		.IN_PKT_ORI_BURST_SIZE_H       (669),
		.IN_ST_DATA_W                  (670),
		.OUT_PKT_ADDR_H                (175),
		.OUT_PKT_ADDR_L                (144),
		.OUT_PKT_DATA_H                (127),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (143),
		.OUT_PKT_BYTEEN_L              (128),
		.OUT_PKT_BYTE_CNT_H            (194),
		.OUT_PKT_BYTE_CNT_L            (182),
		.OUT_PKT_TRANS_COMPRESSED_READ (176),
		.OUT_PKT_BURST_SIZE_H          (206),
		.OUT_PKT_BURST_SIZE_L          (204),
		.OUT_PKT_RESPONSE_STATUS_H     (234),
		.OUT_PKT_RESPONSE_STATUS_L     (233),
		.OUT_PKT_TRANS_EXCLUSIVE       (181),
		.OUT_PKT_BURST_TYPE_H          (208),
		.OUT_PKT_BURST_TYPE_L          (207),
		.OUT_PKT_ORI_BURST_SIZE_L      (235),
		.OUT_PKT_ORI_BURST_SIZE_H      (237),
		.OUT_ST_DATA_W                 (238),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (1),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (1),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter (
		.clk                  (sys_ddr3_cntrl_emif_usr_clk_clk),                                                              //       clk.clk
		.reset                (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                       // clk_reset.reset
		.in_valid             (pipeline_stage_004_source0_valid),                                                             //      sink.valid
		.in_channel           (pipeline_stage_004_source0_channel),                                                           //          .channel
		.in_startofpacket     (pipeline_stage_004_source0_startofpacket),                                                     //          .startofpacket
		.in_endofpacket       (pipeline_stage_004_source0_endofpacket),                                                       //          .endofpacket
		.in_ready             (pipeline_stage_004_source0_ready),                                                             //          .ready
		.in_data              (pipeline_stage_004_source0_data),                                                              //          .data
		.out_endofpacket      (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter_src_data),          //          .data
		.out_channel          (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter_src_channel),       //          .channel
		.out_valid            (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter_src_valid),         //          .valid
		.out_ready            (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                        // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (607),
		.IN_PKT_ADDR_L                 (576),
		.IN_PKT_DATA_H                 (511),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (575),
		.IN_PKT_BYTEEN_L               (512),
		.IN_PKT_BYTE_CNT_H             (626),
		.IN_PKT_BYTE_CNT_L             (614),
		.IN_PKT_TRANS_COMPRESSED_READ  (608),
		.IN_PKT_TRANS_WRITE            (610),
		.IN_PKT_BURSTWRAP_H            (635),
		.IN_PKT_BURSTWRAP_L            (627),
		.IN_PKT_BURST_SIZE_H           (638),
		.IN_PKT_BURST_SIZE_L           (636),
		.IN_PKT_RESPONSE_STATUS_H      (666),
		.IN_PKT_RESPONSE_STATUS_L      (665),
		.IN_PKT_TRANS_EXCLUSIVE        (613),
		.IN_PKT_BURST_TYPE_H           (640),
		.IN_PKT_BURST_TYPE_L           (639),
		.IN_PKT_ORI_BURST_SIZE_L       (667),
		.IN_PKT_ORI_BURST_SIZE_H       (669),
		.IN_ST_DATA_W                  (670),
		.OUT_PKT_ADDR_H                (175),
		.OUT_PKT_ADDR_L                (144),
		.OUT_PKT_DATA_H                (127),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (143),
		.OUT_PKT_BYTEEN_L              (128),
		.OUT_PKT_BYTE_CNT_H            (194),
		.OUT_PKT_BYTE_CNT_L            (182),
		.OUT_PKT_TRANS_COMPRESSED_READ (176),
		.OUT_PKT_BURST_SIZE_H          (206),
		.OUT_PKT_BURST_SIZE_L          (204),
		.OUT_PKT_RESPONSE_STATUS_H     (234),
		.OUT_PKT_RESPONSE_STATUS_L     (233),
		.OUT_PKT_TRANS_EXCLUSIVE       (181),
		.OUT_PKT_BURST_TYPE_H          (208),
		.OUT_PKT_BURST_TYPE_L          (207),
		.OUT_PKT_ORI_BURST_SIZE_L      (235),
		.OUT_PKT_ORI_BURST_SIZE_H      (237),
		.OUT_ST_DATA_W                 (238),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (1),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (1),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter (
		.clk                  (sys_ddr3_cntrl_emif_usr_clk_clk),                                                              //       clk.clk
		.reset                (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                       // clk_reset.reset
		.in_valid             (pipeline_stage_005_source0_valid),                                                             //      sink.valid
		.in_channel           (pipeline_stage_005_source0_channel),                                                           //          .channel
		.in_startofpacket     (pipeline_stage_005_source0_startofpacket),                                                     //          .startofpacket
		.in_endofpacket       (pipeline_stage_005_source0_endofpacket),                                                       //          .endofpacket
		.in_ready             (pipeline_stage_005_source0_ready),                                                             //          .ready
		.in_data              (pipeline_stage_005_source0_data),                                                              //          .data
		.out_endofpacket      (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter_src_data),          //          .data
		.out_channel          (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter_src_channel),       //          .channel
		.out_valid            (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter_src_valid),         //          .valid
		.out_ready            (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                        // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (607),
		.IN_PKT_ADDR_L                 (576),
		.IN_PKT_DATA_H                 (511),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (575),
		.IN_PKT_BYTEEN_L               (512),
		.IN_PKT_BYTE_CNT_H             (626),
		.IN_PKT_BYTE_CNT_L             (614),
		.IN_PKT_TRANS_COMPRESSED_READ  (608),
		.IN_PKT_TRANS_WRITE            (610),
		.IN_PKT_BURSTWRAP_H            (635),
		.IN_PKT_BURSTWRAP_L            (627),
		.IN_PKT_BURST_SIZE_H           (638),
		.IN_PKT_BURST_SIZE_L           (636),
		.IN_PKT_RESPONSE_STATUS_H      (666),
		.IN_PKT_RESPONSE_STATUS_L      (665),
		.IN_PKT_TRANS_EXCLUSIVE        (613),
		.IN_PKT_BURST_TYPE_H           (640),
		.IN_PKT_BURST_TYPE_L           (639),
		.IN_PKT_ORI_BURST_SIZE_L       (667),
		.IN_PKT_ORI_BURST_SIZE_H       (669),
		.IN_ST_DATA_W                  (670),
		.OUT_PKT_ADDR_H                (103),
		.OUT_PKT_ADDR_L                (72),
		.OUT_PKT_DATA_H                (63),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (71),
		.OUT_PKT_BYTEEN_L              (64),
		.OUT_PKT_BYTE_CNT_H            (122),
		.OUT_PKT_BYTE_CNT_L            (110),
		.OUT_PKT_TRANS_COMPRESSED_READ (104),
		.OUT_PKT_BURST_SIZE_H          (134),
		.OUT_PKT_BURST_SIZE_L          (132),
		.OUT_PKT_RESPONSE_STATUS_H     (162),
		.OUT_PKT_RESPONSE_STATUS_L     (161),
		.OUT_PKT_TRANS_EXCLUSIVE       (109),
		.OUT_PKT_BURST_TYPE_H          (136),
		.OUT_PKT_BURST_TYPE_L          (135),
		.OUT_PKT_ORI_BURST_SIZE_L      (163),
		.OUT_PKT_ORI_BURST_SIZE_H      (165),
		.OUT_ST_DATA_W                 (166),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (1),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (1),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter (
		.clk                  (sys_ddr3_cntrl_emif_usr_clk_clk),                                                              //       clk.clk
		.reset                (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                       // clk_reset.reset
		.in_valid             (pipeline_stage_006_source0_valid),                                                             //      sink.valid
		.in_channel           (pipeline_stage_006_source0_channel),                                                           //          .channel
		.in_startofpacket     (pipeline_stage_006_source0_startofpacket),                                                     //          .startofpacket
		.in_endofpacket       (pipeline_stage_006_source0_endofpacket),                                                       //          .endofpacket
		.in_ready             (pipeline_stage_006_source0_ready),                                                             //          .ready
		.in_data              (pipeline_stage_006_source0_data),                                                              //          .data
		.out_endofpacket      (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter_src_data),          //          .data
		.out_channel          (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter_src_channel),       //          .channel
		.out_valid            (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter_src_valid),         //          .valid
		.out_ready            (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                        // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (607),
		.IN_PKT_ADDR_L                 (576),
		.IN_PKT_DATA_H                 (511),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (575),
		.IN_PKT_BYTEEN_L               (512),
		.IN_PKT_BYTE_CNT_H             (626),
		.IN_PKT_BYTE_CNT_L             (614),
		.IN_PKT_TRANS_COMPRESSED_READ  (608),
		.IN_PKT_TRANS_WRITE            (610),
		.IN_PKT_BURSTWRAP_H            (635),
		.IN_PKT_BURSTWRAP_L            (627),
		.IN_PKT_BURST_SIZE_H           (638),
		.IN_PKT_BURST_SIZE_L           (636),
		.IN_PKT_RESPONSE_STATUS_H      (666),
		.IN_PKT_RESPONSE_STATUS_L      (665),
		.IN_PKT_TRANS_EXCLUSIVE        (613),
		.IN_PKT_BURST_TYPE_H           (640),
		.IN_PKT_BURST_TYPE_L           (639),
		.IN_PKT_ORI_BURST_SIZE_L       (667),
		.IN_PKT_ORI_BURST_SIZE_H       (669),
		.IN_ST_DATA_W                  (670),
		.OUT_PKT_ADDR_H                (103),
		.OUT_PKT_ADDR_L                (72),
		.OUT_PKT_DATA_H                (63),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (71),
		.OUT_PKT_BYTEEN_L              (64),
		.OUT_PKT_BYTE_CNT_H            (122),
		.OUT_PKT_BYTE_CNT_L            (110),
		.OUT_PKT_TRANS_COMPRESSED_READ (104),
		.OUT_PKT_BURST_SIZE_H          (134),
		.OUT_PKT_BURST_SIZE_L          (132),
		.OUT_PKT_RESPONSE_STATUS_H     (162),
		.OUT_PKT_RESPONSE_STATUS_L     (161),
		.OUT_PKT_TRANS_EXCLUSIVE       (109),
		.OUT_PKT_BURST_TYPE_H          (136),
		.OUT_PKT_BURST_TYPE_L          (135),
		.OUT_PKT_ORI_BURST_SIZE_L      (163),
		.OUT_PKT_ORI_BURST_SIZE_H      (165),
		.OUT_ST_DATA_W                 (166),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (0),
		.RESPONSE_PATH                 (1),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (1),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter (
		.clk                  (sys_ddr3_cntrl_emif_usr_clk_clk),                                                               //       clk.clk
		.reset                (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                        // clk_reset.reset
		.in_valid             (pipeline_stage_007_source0_valid),                                                              //      sink.valid
		.in_channel           (pipeline_stage_007_source0_channel),                                                            //          .channel
		.in_startofpacket     (pipeline_stage_007_source0_startofpacket),                                                      //          .startofpacket
		.in_endofpacket       (pipeline_stage_007_source0_endofpacket),                                                        //          .endofpacket
		.in_ready             (pipeline_stage_007_source0_ready),                                                              //          .ready
		.in_data              (pipeline_stage_007_source0_data),                                                               //          .data
		.out_endofpacket      (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter_src_data),          //          .data
		.out_channel          (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter_src_channel),       //          .channel
		.out_valid            (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter_src_valid),         //          .valid
		.out_ready            (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                         // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (319),
		.IN_PKT_ADDR_L                 (288),
		.IN_PKT_DATA_H                 (255),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (287),
		.IN_PKT_BYTEEN_L               (256),
		.IN_PKT_BYTE_CNT_H             (338),
		.IN_PKT_BYTE_CNT_L             (326),
		.IN_PKT_TRANS_COMPRESSED_READ  (320),
		.IN_PKT_TRANS_WRITE            (322),
		.IN_PKT_BURSTWRAP_H            (347),
		.IN_PKT_BURSTWRAP_L            (339),
		.IN_PKT_BURST_SIZE_H           (350),
		.IN_PKT_BURST_SIZE_L           (348),
		.IN_PKT_RESPONSE_STATUS_H      (378),
		.IN_PKT_RESPONSE_STATUS_L      (377),
		.IN_PKT_TRANS_EXCLUSIVE        (325),
		.IN_PKT_BURST_TYPE_H           (352),
		.IN_PKT_BURST_TYPE_L           (351),
		.IN_PKT_ORI_BURST_SIZE_L       (379),
		.IN_PKT_ORI_BURST_SIZE_H       (381),
		.IN_ST_DATA_W                  (382),
		.OUT_PKT_ADDR_H                (67),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (86),
		.OUT_PKT_BYTE_CNT_L            (74),
		.OUT_PKT_TRANS_COMPRESSED_READ (68),
		.OUT_PKT_BURST_SIZE_H          (98),
		.OUT_PKT_BURST_SIZE_L          (96),
		.OUT_PKT_RESPONSE_STATUS_H     (126),
		.OUT_PKT_RESPONSE_STATUS_L     (125),
		.OUT_PKT_TRANS_EXCLUSIVE       (73),
		.OUT_PKT_BURST_TYPE_H          (100),
		.OUT_PKT_BURST_TYPE_L          (99),
		.OUT_PKT_ORI_BURST_SIZE_L      (127),
		.OUT_PKT_ORI_BURST_SIZE_H      (129),
		.OUT_ST_DATA_W                 (130),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (1),
		.RESPONSE_PATH                 (1),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (1),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter (
		.clk                  (sys_clk_clk_clk),                                                                                 //       clk.clk
		.reset                (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                                          // clk_reset.reset
		.in_valid             (rsp_demux_023_src0_valid),                                                                        //      sink.valid
		.in_channel           (rsp_demux_023_src0_channel),                                                                      //          .channel
		.in_startofpacket     (rsp_demux_023_src0_startofpacket),                                                                //          .startofpacket
		.in_endofpacket       (rsp_demux_023_src0_endofpacket),                                                                  //          .endofpacket
		.in_ready             (rsp_demux_023_src0_ready),                                                                        //          .ready
		.in_data              (rsp_demux_023_src0_data),                                                                         //          .data
		.out_endofpacket      (sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_data),          //          .data
		.out_channel          (sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_channel),       //          .channel
		.out_valid            (sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_valid),         //          .valid
		.out_ready            (sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                           // (terminated)
	);

	altera_merlin_width_adapter #(
		.IN_PKT_ADDR_H                 (319),
		.IN_PKT_ADDR_L                 (288),
		.IN_PKT_DATA_H                 (255),
		.IN_PKT_DATA_L                 (0),
		.IN_PKT_BYTEEN_H               (287),
		.IN_PKT_BYTEEN_L               (256),
		.IN_PKT_BYTE_CNT_H             (338),
		.IN_PKT_BYTE_CNT_L             (326),
		.IN_PKT_TRANS_COMPRESSED_READ  (320),
		.IN_PKT_TRANS_WRITE            (322),
		.IN_PKT_BURSTWRAP_H            (347),
		.IN_PKT_BURSTWRAP_L            (339),
		.IN_PKT_BURST_SIZE_H           (350),
		.IN_PKT_BURST_SIZE_L           (348),
		.IN_PKT_RESPONSE_STATUS_H      (378),
		.IN_PKT_RESPONSE_STATUS_L      (377),
		.IN_PKT_TRANS_EXCLUSIVE        (325),
		.IN_PKT_BURST_TYPE_H           (352),
		.IN_PKT_BURST_TYPE_L           (351),
		.IN_PKT_ORI_BURST_SIZE_L       (379),
		.IN_PKT_ORI_BURST_SIZE_H       (381),
		.IN_ST_DATA_W                  (382),
		.OUT_PKT_ADDR_H                (67),
		.OUT_PKT_ADDR_L                (36),
		.OUT_PKT_DATA_H                (31),
		.OUT_PKT_DATA_L                (0),
		.OUT_PKT_BYTEEN_H              (35),
		.OUT_PKT_BYTEEN_L              (32),
		.OUT_PKT_BYTE_CNT_H            (86),
		.OUT_PKT_BYTE_CNT_L            (74),
		.OUT_PKT_TRANS_COMPRESSED_READ (68),
		.OUT_PKT_BURST_SIZE_H          (98),
		.OUT_PKT_BURST_SIZE_L          (96),
		.OUT_PKT_RESPONSE_STATUS_H     (126),
		.OUT_PKT_RESPONSE_STATUS_L     (125),
		.OUT_PKT_TRANS_EXCLUSIVE       (73),
		.OUT_PKT_BURST_TYPE_H          (100),
		.OUT_PKT_BURST_TYPE_L          (99),
		.OUT_PKT_ORI_BURST_SIZE_L      (127),
		.OUT_PKT_ORI_BURST_SIZE_H      (129),
		.OUT_ST_DATA_W                 (130),
		.ST_CHANNEL_W                  (45),
		.OPTIMIZE_FOR_RSP              (1),
		.RESPONSE_PATH                 (1),
		.CONSTANT_BURST_SIZE           (0),
		.PACKING                       (1),
		.ENABLE_ADDRESS_ALIGNMENT      (1)
	) sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter (
		.clk                  (sys_clk_clk_clk),                                                                                 //       clk.clk
		.reset                (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                                          // clk_reset.reset
		.in_valid             (rsp_demux_024_src0_valid),                                                                        //      sink.valid
		.in_channel           (rsp_demux_024_src0_channel),                                                                      //          .channel
		.in_startofpacket     (rsp_demux_024_src0_startofpacket),                                                                //          .startofpacket
		.in_endofpacket       (rsp_demux_024_src0_endofpacket),                                                                  //          .endofpacket
		.in_ready             (rsp_demux_024_src0_ready),                                                                        //          .ready
		.in_data              (rsp_demux_024_src0_data),                                                                         //          .data
		.out_endofpacket      (sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_endofpacket),   //       src.endofpacket
		.out_data             (sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_data),          //          .data
		.out_channel          (sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_channel),       //          .channel
		.out_valid            (sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_valid),         //          .valid
		.out_ready            (sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_ready),         //          .ready
		.out_startofpacket    (sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_command_size_data (3'b000)                                                                                           // (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (670),
		.BITS_PER_SYMBOL     (670),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (45),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser (
		.in_clk            (sys_clk_clk_clk),                                                                      //        in_clk.clk
		.in_reset          (sys_cpu_reset_reset_bridge_in_reset_reset),                                            //  in_clk_reset.reset
		.out_clk           (sys_ddr3_cntrl_emif_usr_clk_clk),                                                      //       out_clk.clk
		.out_reset         (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),               // out_clk_reset.reset
		.in_ready          (sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready),         //            in.ready
		.in_valid          (sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid),         //              .valid
		.in_startofpacket  (sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket), //              .startofpacket
		.in_endofpacket    (sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket),   //              .endofpacket
		.in_channel        (sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel),       //              .channel
		.in_data           (sys_cpu_data_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data),          //              .data
		.out_ready         (crosser_out_ready),                                                                    //           out.ready
		.out_valid         (crosser_out_valid),                                                                    //              .valid
		.out_startofpacket (crosser_out_startofpacket),                                                            //              .startofpacket
		.out_endofpacket   (crosser_out_endofpacket),                                                              //              .endofpacket
		.out_channel       (crosser_out_channel),                                                                  //              .channel
		.out_data          (crosser_out_data),                                                                     //              .data
		.in_empty          (1'b0),                                                                                 //   (terminated)
		.in_error          (1'b0),                                                                                 //   (terminated)
		.out_empty         (),                                                                                     //   (terminated)
		.out_error         ()                                                                                      //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (670),
		.BITS_PER_SYMBOL     (670),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (45),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_001 (
		.in_clk            (sys_clk_clk_clk),                                                                             //        in_clk.clk
		.in_reset          (sys_cpu_reset_reset_bridge_in_reset_reset),                                                   //  in_clk_reset.reset
		.out_clk           (sys_ddr3_cntrl_emif_usr_clk_clk),                                                             //       out_clk.clk
		.out_reset         (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                      // out_clk_reset.reset
		.in_ready          (sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready),         //            in.ready
		.in_valid          (sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid),         //              .valid
		.in_startofpacket  (sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket), //              .startofpacket
		.in_endofpacket    (sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket),   //              .endofpacket
		.in_channel        (sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel),       //              .channel
		.in_data           (sys_cpu_instruction_master_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data),          //              .data
		.out_ready         (crosser_001_out_ready),                                                                       //           out.ready
		.out_valid         (crosser_001_out_valid),                                                                       //              .valid
		.out_startofpacket (crosser_001_out_startofpacket),                                                               //              .startofpacket
		.out_endofpacket   (crosser_001_out_endofpacket),                                                                 //              .endofpacket
		.out_channel       (crosser_001_out_channel),                                                                     //              .channel
		.out_data          (crosser_001_out_data),                                                                        //              .data
		.in_empty          (1'b0),                                                                                        //   (terminated)
		.in_error          (1'b0),                                                                                        //   (terminated)
		.out_empty         (),                                                                                            //   (terminated)
		.out_error         ()                                                                                             //   (terminated)
	);

	altera_avalon_dc_fifo #(
		.SYMBOLS_PER_BEAT   (1),
		.BITS_PER_SYMBOL    (670),
		.FIFO_DEPTH         (8),
		.CHANNEL_WIDTH      (45),
		.ERROR_WIDTH        (0),
		.USE_PACKETS        (1),
		.USE_IN_FILL_LEVEL  (0),
		.USE_OUT_FILL_LEVEL (0),
		.WR_SYNC_DEPTH      (3),
		.RD_SYNC_DEPTH      (3)
	) async_fifo (
		.in_clk            (sys_dma_clk_clk_clk),                                                                           //        in_clk.clk
		.in_reset_n        (~axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset),                                  //  in_clk_reset.reset_n
		.out_clk           (sys_ddr3_cntrl_emif_usr_clk_clk),                                                               //       out_clk.clk
		.out_reset_n       (~sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                       // out_clk_reset.reset_n
		.in_data           (axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data),          //            in.data
		.in_valid          (axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid),         //              .valid
		.in_ready          (axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready),         //              .ready
		.in_startofpacket  (axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket), //              .startofpacket
		.in_endofpacket    (axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket),   //              .endofpacket
		.in_channel        (axi_ad9680_dma_m_dest_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel),       //              .channel
		.out_data          (async_fifo_out_data),                                                                           //           out.data
		.out_valid         (async_fifo_out_valid),                                                                          //              .valid
		.out_ready         (async_fifo_out_ready),                                                                          //              .ready
		.out_startofpacket (async_fifo_out_startofpacket),                                                                  //              .startofpacket
		.out_endofpacket   (async_fifo_out_endofpacket),                                                                    //              .endofpacket
		.out_channel       (async_fifo_out_channel),                                                                        //              .channel
		.in_csr_address    (1'b0),                                                                                          //   (terminated)
		.in_csr_read       (1'b0),                                                                                          //   (terminated)
		.in_csr_write      (1'b0),                                                                                          //   (terminated)
		.in_csr_readdata   (),                                                                                              //   (terminated)
		.in_csr_writedata  (32'b00000000000000000000000000000000),                                                          //   (terminated)
		.out_csr_address   (1'b0),                                                                                          //   (terminated)
		.out_csr_read      (1'b0),                                                                                          //   (terminated)
		.out_csr_write     (1'b0),                                                                                          //   (terminated)
		.out_csr_readdata  (),                                                                                              //   (terminated)
		.out_csr_writedata (32'b00000000000000000000000000000000),                                                          //   (terminated)
		.in_empty          (1'b0),                                                                                          //   (terminated)
		.out_empty         (),                                                                                              //   (terminated)
		.in_error          (1'b0),                                                                                          //   (terminated)
		.out_error         (),                                                                                              //   (terminated)
		.space_avail_data  ()                                                                                               //   (terminated)
	);

	altera_avalon_dc_fifo #(
		.SYMBOLS_PER_BEAT   (1),
		.BITS_PER_SYMBOL    (670),
		.FIFO_DEPTH         (8),
		.CHANNEL_WIDTH      (45),
		.ERROR_WIDTH        (0),
		.USE_PACKETS        (1),
		.USE_IN_FILL_LEVEL  (0),
		.USE_OUT_FILL_LEVEL (0),
		.WR_SYNC_DEPTH      (3),
		.RD_SYNC_DEPTH      (3)
	) async_fifo_001 (
		.in_clk            (sys_dma_clk_clk_clk),                                                                           //        in_clk.clk
		.in_reset_n        (~axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset),                                  //  in_clk_reset.reset_n
		.out_clk           (sys_ddr3_cntrl_emif_usr_clk_clk),                                                               //       out_clk.clk
		.out_reset_n       (~sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                       // out_clk_reset.reset_n
		.in_data           (axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data),          //            in.data
		.in_valid          (axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid),         //              .valid
		.in_ready          (axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready),         //              .ready
		.in_startofpacket  (axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket), //              .startofpacket
		.in_endofpacket    (axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket),   //              .endofpacket
		.in_channel        (axi_ad9680_dma_m_dest_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel),       //              .channel
		.out_data          (async_fifo_001_out_data),                                                                       //           out.data
		.out_valid         (async_fifo_001_out_valid),                                                                      //              .valid
		.out_ready         (async_fifo_001_out_ready),                                                                      //              .ready
		.out_startofpacket (async_fifo_001_out_startofpacket),                                                              //              .startofpacket
		.out_endofpacket   (async_fifo_001_out_endofpacket),                                                                //              .endofpacket
		.out_channel       (async_fifo_001_out_channel),                                                                    //              .channel
		.in_csr_address    (1'b0),                                                                                          //   (terminated)
		.in_csr_read       (1'b0),                                                                                          //   (terminated)
		.in_csr_write      (1'b0),                                                                                          //   (terminated)
		.in_csr_readdata   (),                                                                                              //   (terminated)
		.in_csr_writedata  (32'b00000000000000000000000000000000),                                                          //   (terminated)
		.out_csr_address   (1'b0),                                                                                          //   (terminated)
		.out_csr_read      (1'b0),                                                                                          //   (terminated)
		.out_csr_write     (1'b0),                                                                                          //   (terminated)
		.out_csr_readdata  (),                                                                                              //   (terminated)
		.out_csr_writedata (32'b00000000000000000000000000000000),                                                          //   (terminated)
		.in_empty          (1'b0),                                                                                          //   (terminated)
		.out_empty         (),                                                                                              //   (terminated)
		.in_error          (1'b0),                                                                                          //   (terminated)
		.out_error         (),                                                                                              //   (terminated)
		.space_avail_data  ()                                                                                               //   (terminated)
	);

	altera_avalon_dc_fifo #(
		.SYMBOLS_PER_BEAT   (1),
		.BITS_PER_SYMBOL    (670),
		.FIFO_DEPTH         (8),
		.CHANNEL_WIDTH      (45),
		.ERROR_WIDTH        (0),
		.USE_PACKETS        (1),
		.USE_IN_FILL_LEVEL  (0),
		.USE_OUT_FILL_LEVEL (0),
		.WR_SYNC_DEPTH      (3),
		.RD_SYNC_DEPTH      (3)
	) async_fifo_002 (
		.in_clk            (sys_dma_clk_clk_clk),                                                                          //        in_clk.clk
		.in_reset_n        (~axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset),                                 //  in_clk_reset.reset_n
		.out_clk           (sys_ddr3_cntrl_emif_usr_clk_clk),                                                              //       out_clk.clk
		.out_reset_n       (~sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                      // out_clk_reset.reset_n
		.in_data           (axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data),          //            in.data
		.in_valid          (axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid),         //              .valid
		.in_ready          (axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready),         //              .ready
		.in_startofpacket  (axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket), //              .startofpacket
		.in_endofpacket    (axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket),   //              .endofpacket
		.in_channel        (axi_ad9144_dma_m_src_axi_wr_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel),       //              .channel
		.out_data          (async_fifo_002_out_data),                                                                      //           out.data
		.out_valid         (async_fifo_002_out_valid),                                                                     //              .valid
		.out_ready         (async_fifo_002_out_ready),                                                                     //              .ready
		.out_startofpacket (async_fifo_002_out_startofpacket),                                                             //              .startofpacket
		.out_endofpacket   (async_fifo_002_out_endofpacket),                                                               //              .endofpacket
		.out_channel       (async_fifo_002_out_channel),                                                                   //              .channel
		.in_csr_address    (1'b0),                                                                                         //   (terminated)
		.in_csr_read       (1'b0),                                                                                         //   (terminated)
		.in_csr_write      (1'b0),                                                                                         //   (terminated)
		.in_csr_readdata   (),                                                                                             //   (terminated)
		.in_csr_writedata  (32'b00000000000000000000000000000000),                                                         //   (terminated)
		.out_csr_address   (1'b0),                                                                                         //   (terminated)
		.out_csr_read      (1'b0),                                                                                         //   (terminated)
		.out_csr_write     (1'b0),                                                                                         //   (terminated)
		.out_csr_readdata  (),                                                                                             //   (terminated)
		.out_csr_writedata (32'b00000000000000000000000000000000),                                                         //   (terminated)
		.in_empty          (1'b0),                                                                                         //   (terminated)
		.out_empty         (),                                                                                             //   (terminated)
		.in_error          (1'b0),                                                                                         //   (terminated)
		.out_error         (),                                                                                             //   (terminated)
		.space_avail_data  ()                                                                                              //   (terminated)
	);

	altera_avalon_dc_fifo #(
		.SYMBOLS_PER_BEAT   (1),
		.BITS_PER_SYMBOL    (670),
		.FIFO_DEPTH         (8),
		.CHANNEL_WIDTH      (45),
		.ERROR_WIDTH        (0),
		.USE_PACKETS        (1),
		.USE_IN_FILL_LEVEL  (0),
		.USE_OUT_FILL_LEVEL (0),
		.WR_SYNC_DEPTH      (3),
		.RD_SYNC_DEPTH      (3)
	) async_fifo_003 (
		.in_clk            (sys_dma_clk_clk_clk),                                                                          //        in_clk.clk
		.in_reset_n        (~axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset),                                 //  in_clk_reset.reset_n
		.out_clk           (sys_ddr3_cntrl_emif_usr_clk_clk),                                                              //       out_clk.clk
		.out_reset_n       (~sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                      // out_clk_reset.reset_n
		.in_data           (axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data),          //            in.data
		.in_valid          (axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid),         //              .valid
		.in_ready          (axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready),         //              .ready
		.in_startofpacket  (axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket), //              .startofpacket
		.in_endofpacket    (axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket),   //              .endofpacket
		.in_channel        (axi_ad9144_dma_m_src_axi_rd_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel),       //              .channel
		.out_data          (async_fifo_003_out_data),                                                                      //           out.data
		.out_valid         (async_fifo_003_out_valid),                                                                     //              .valid
		.out_ready         (async_fifo_003_out_ready),                                                                     //              .ready
		.out_startofpacket (async_fifo_003_out_startofpacket),                                                             //              .startofpacket
		.out_endofpacket   (async_fifo_003_out_endofpacket),                                                               //              .endofpacket
		.out_channel       (async_fifo_003_out_channel),                                                                   //              .channel
		.in_csr_address    (1'b0),                                                                                         //   (terminated)
		.in_csr_read       (1'b0),                                                                                         //   (terminated)
		.in_csr_write      (1'b0),                                                                                         //   (terminated)
		.in_csr_readdata   (),                                                                                             //   (terminated)
		.in_csr_writedata  (32'b00000000000000000000000000000000),                                                         //   (terminated)
		.out_csr_address   (1'b0),                                                                                         //   (terminated)
		.out_csr_read      (1'b0),                                                                                         //   (terminated)
		.out_csr_write     (1'b0),                                                                                         //   (terminated)
		.out_csr_readdata  (),                                                                                             //   (terminated)
		.out_csr_writedata (32'b00000000000000000000000000000000),                                                         //   (terminated)
		.in_empty          (1'b0),                                                                                         //   (terminated)
		.out_empty         (),                                                                                             //   (terminated)
		.in_error          (1'b0),                                                                                         //   (terminated)
		.out_error         (),                                                                                             //   (terminated)
		.space_avail_data  ()                                                                                              //   (terminated)
	);

	altera_avalon_dc_fifo #(
		.SYMBOLS_PER_BEAT   (1),
		.BITS_PER_SYMBOL    (670),
		.FIFO_DEPTH         (8),
		.CHANNEL_WIDTH      (45),
		.ERROR_WIDTH        (0),
		.USE_PACKETS        (1),
		.USE_IN_FILL_LEVEL  (0),
		.USE_OUT_FILL_LEVEL (0),
		.WR_SYNC_DEPTH      (3),
		.RD_SYNC_DEPTH      (3)
	) async_fifo_004 (
		.in_clk            (sys_clk_clk_clk),                                                                              //        in_clk.clk
		.in_reset_n        (~axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                                      //  in_clk_reset.reset_n
		.out_clk           (sys_ddr3_cntrl_emif_usr_clk_clk),                                                              //       out_clk.clk
		.out_reset_n       (~sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                      // out_clk_reset.reset_n
		.in_data           (sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data),          //            in.data
		.in_valid          (sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid),         //              .valid
		.in_ready          (sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready),         //              .ready
		.in_startofpacket  (sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket), //              .startofpacket
		.in_endofpacket    (sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket),   //              .endofpacket
		.in_channel        (sys_ethernet_dma_tx_mm_read_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel),       //              .channel
		.out_data          (async_fifo_004_out_data),                                                                      //           out.data
		.out_valid         (async_fifo_004_out_valid),                                                                     //              .valid
		.out_ready         (async_fifo_004_out_ready),                                                                     //              .ready
		.out_startofpacket (async_fifo_004_out_startofpacket),                                                             //              .startofpacket
		.out_endofpacket   (async_fifo_004_out_endofpacket),                                                               //              .endofpacket
		.out_channel       (async_fifo_004_out_channel),                                                                   //              .channel
		.in_csr_address    (1'b0),                                                                                         //   (terminated)
		.in_csr_read       (1'b0),                                                                                         //   (terminated)
		.in_csr_write      (1'b0),                                                                                         //   (terminated)
		.in_csr_readdata   (),                                                                                             //   (terminated)
		.in_csr_writedata  (32'b00000000000000000000000000000000),                                                         //   (terminated)
		.out_csr_address   (1'b0),                                                                                         //   (terminated)
		.out_csr_read      (1'b0),                                                                                         //   (terminated)
		.out_csr_write     (1'b0),                                                                                         //   (terminated)
		.out_csr_readdata  (),                                                                                             //   (terminated)
		.out_csr_writedata (32'b00000000000000000000000000000000),                                                         //   (terminated)
		.in_empty          (1'b0),                                                                                         //   (terminated)
		.out_empty         (),                                                                                             //   (terminated)
		.in_error          (1'b0),                                                                                         //   (terminated)
		.out_error         (),                                                                                             //   (terminated)
		.space_avail_data  ()                                                                                              //   (terminated)
	);

	altera_avalon_dc_fifo #(
		.SYMBOLS_PER_BEAT   (1),
		.BITS_PER_SYMBOL    (670),
		.FIFO_DEPTH         (8),
		.CHANNEL_WIDTH      (45),
		.ERROR_WIDTH        (0),
		.USE_PACKETS        (1),
		.USE_IN_FILL_LEVEL  (0),
		.USE_OUT_FILL_LEVEL (0),
		.WR_SYNC_DEPTH      (3),
		.RD_SYNC_DEPTH      (3)
	) async_fifo_005 (
		.in_clk            (sys_clk_clk_clk),                                                                               //        in_clk.clk
		.in_reset_n        (~axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                                       //  in_clk_reset.reset_n
		.out_clk           (sys_ddr3_cntrl_emif_usr_clk_clk),                                                               //       out_clk.clk
		.out_reset_n       (~sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                       // out_clk_reset.reset_n
		.in_data           (sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_data),          //            in.data
		.in_valid          (sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_valid),         //              .valid
		.in_ready          (sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_ready),         //              .ready
		.in_startofpacket  (sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_startofpacket), //              .startofpacket
		.in_endofpacket    (sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_endofpacket),   //              .endofpacket
		.in_channel        (sys_ethernet_dma_rx_mm_write_to_sys_ddr3_cntrl_ctrl_amm_0_cmd_width_adapter_src_channel),       //              .channel
		.out_data          (async_fifo_005_out_data),                                                                       //           out.data
		.out_valid         (async_fifo_005_out_valid),                                                                      //              .valid
		.out_ready         (async_fifo_005_out_ready),                                                                      //              .ready
		.out_startofpacket (async_fifo_005_out_startofpacket),                                                              //              .startofpacket
		.out_endofpacket   (async_fifo_005_out_endofpacket),                                                                //              .endofpacket
		.out_channel       (async_fifo_005_out_channel),                                                                    //              .channel
		.in_csr_address    (1'b0),                                                                                          //   (terminated)
		.in_csr_read       (1'b0),                                                                                          //   (terminated)
		.in_csr_write      (1'b0),                                                                                          //   (terminated)
		.in_csr_readdata   (),                                                                                              //   (terminated)
		.in_csr_writedata  (32'b00000000000000000000000000000000),                                                          //   (terminated)
		.out_csr_address   (1'b0),                                                                                          //   (terminated)
		.out_csr_read      (1'b0),                                                                                          //   (terminated)
		.out_csr_write     (1'b0),                                                                                          //   (terminated)
		.out_csr_readdata  (),                                                                                              //   (terminated)
		.out_csr_writedata (32'b00000000000000000000000000000000),                                                          //   (terminated)
		.in_empty          (1'b0),                                                                                          //   (terminated)
		.out_empty         (),                                                                                              //   (terminated)
		.in_error          (1'b0),                                                                                          //   (terminated)
		.out_error         (),                                                                                              //   (terminated)
		.space_avail_data  ()                                                                                               //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (130),
		.BITS_PER_SYMBOL     (130),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (45),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_002 (
		.in_clk            (sys_ddr3_cntrl_emif_usr_clk_clk),                                                      //        in_clk.clk
		.in_reset          (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),               //  in_clk_reset.reset
		.out_clk           (sys_clk_clk_clk),                                                                      //       out_clk.clk
		.out_reset         (sys_cpu_reset_reset_bridge_in_reset_reset),                                            // out_clk_reset.reset
		.in_ready          (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter_src_ready),         //            in.ready
		.in_valid          (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter_src_valid),         //              .valid
		.in_startofpacket  (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter_src_startofpacket), //              .startofpacket
		.in_endofpacket    (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter_src_endofpacket),   //              .endofpacket
		.in_channel        (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter_src_channel),       //              .channel
		.in_data           (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_data_master_rsp_width_adapter_src_data),          //              .data
		.out_ready         (crosser_002_out_ready),                                                                //           out.ready
		.out_valid         (crosser_002_out_valid),                                                                //              .valid
		.out_startofpacket (crosser_002_out_startofpacket),                                                        //              .startofpacket
		.out_endofpacket   (crosser_002_out_endofpacket),                                                          //              .endofpacket
		.out_channel       (crosser_002_out_channel),                                                              //              .channel
		.out_data          (crosser_002_out_data),                                                                 //              .data
		.in_empty          (1'b0),                                                                                 //   (terminated)
		.in_error          (1'b0),                                                                                 //   (terminated)
		.out_empty         (),                                                                                     //   (terminated)
		.out_error         ()                                                                                      //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (130),
		.BITS_PER_SYMBOL     (130),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (45),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_003 (
		.in_clk            (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //        in_clk.clk
		.in_reset          (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), //  in_clk_reset.reset
		.out_clk           (sys_clk_clk_clk),                                                        //       out_clk.clk
		.out_reset         (sys_cpu_reset_reset_bridge_in_reset_reset),                              // out_clk_reset.reset
		.in_ready          (pipeline_stage_012_source0_ready),                                       //            in.ready
		.in_valid          (pipeline_stage_012_source0_valid),                                       //              .valid
		.in_startofpacket  (pipeline_stage_012_source0_startofpacket),                               //              .startofpacket
		.in_endofpacket    (pipeline_stage_012_source0_endofpacket),                                 //              .endofpacket
		.in_channel        (pipeline_stage_012_source0_channel),                                     //              .channel
		.in_data           (pipeline_stage_012_source0_data),                                        //              .data
		.out_ready         (crosser_003_out_ready),                                                  //           out.ready
		.out_valid         (crosser_003_out_valid),                                                  //              .valid
		.out_startofpacket (crosser_003_out_startofpacket),                                          //              .startofpacket
		.out_endofpacket   (crosser_003_out_endofpacket),                                            //              .endofpacket
		.out_channel       (crosser_003_out_channel),                                                //              .channel
		.out_data          (crosser_003_out_data),                                                   //              .data
		.in_empty          (1'b0),                                                                   //   (terminated)
		.in_error          (1'b0),                                                                   //   (terminated)
		.out_empty         (),                                                                       //   (terminated)
		.out_error         ()                                                                        //   (terminated)
	);

	altera_avalon_dc_fifo #(
		.SYMBOLS_PER_BEAT   (1),
		.BITS_PER_SYMBOL    (238),
		.FIFO_DEPTH         (8),
		.CHANNEL_WIDTH      (45),
		.ERROR_WIDTH        (0),
		.USE_PACKETS        (1),
		.USE_IN_FILL_LEVEL  (0),
		.USE_OUT_FILL_LEVEL (0),
		.WR_SYNC_DEPTH      (3),
		.RD_SYNC_DEPTH      (3)
	) async_fifo_006 (
		.in_clk            (sys_ddr3_cntrl_emif_usr_clk_clk),                                         //        in_clk.clk
		.in_reset_n        (~sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), //  in_clk_reset.reset_n
		.out_clk           (sys_dma_clk_clk_clk),                                                     //       out_clk.clk
		.out_reset_n       (~axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset),            // out_clk_reset.reset_n
		.in_data           (pipeline_stage_011_source0_data),                                         //            in.data
		.in_valid          (pipeline_stage_011_source0_valid),                                        //              .valid
		.in_ready          (pipeline_stage_011_source0_ready),                                        //              .ready
		.in_startofpacket  (pipeline_stage_011_source0_startofpacket),                                //              .startofpacket
		.in_endofpacket    (pipeline_stage_011_source0_endofpacket),                                  //              .endofpacket
		.in_channel        (pipeline_stage_011_source0_channel),                                      //              .channel
		.out_data          (async_fifo_006_out_data),                                                 //           out.data
		.out_valid         (async_fifo_006_out_valid),                                                //              .valid
		.out_ready         (async_fifo_006_out_ready),                                                //              .ready
		.out_startofpacket (async_fifo_006_out_startofpacket),                                        //              .startofpacket
		.out_endofpacket   (async_fifo_006_out_endofpacket),                                          //              .endofpacket
		.out_channel       (async_fifo_006_out_channel),                                              //              .channel
		.in_csr_address    (1'b0),                                                                    //   (terminated)
		.in_csr_read       (1'b0),                                                                    //   (terminated)
		.in_csr_write      (1'b0),                                                                    //   (terminated)
		.in_csr_readdata   (),                                                                        //   (terminated)
		.in_csr_writedata  (32'b00000000000000000000000000000000),                                    //   (terminated)
		.out_csr_address   (1'b0),                                                                    //   (terminated)
		.out_csr_read      (1'b0),                                                                    //   (terminated)
		.out_csr_write     (1'b0),                                                                    //   (terminated)
		.out_csr_readdata  (),                                                                        //   (terminated)
		.out_csr_writedata (32'b00000000000000000000000000000000),                                    //   (terminated)
		.in_empty          (1'b0),                                                                    //   (terminated)
		.out_empty         (),                                                                        //   (terminated)
		.in_error          (1'b0),                                                                    //   (terminated)
		.out_error         (),                                                                        //   (terminated)
		.space_avail_data  ()                                                                         //   (terminated)
	);

	altera_avalon_dc_fifo #(
		.SYMBOLS_PER_BEAT   (1),
		.BITS_PER_SYMBOL    (238),
		.FIFO_DEPTH         (8),
		.CHANNEL_WIDTH      (45),
		.ERROR_WIDTH        (0),
		.USE_PACKETS        (1),
		.USE_IN_FILL_LEVEL  (0),
		.USE_OUT_FILL_LEVEL (0),
		.WR_SYNC_DEPTH      (3),
		.RD_SYNC_DEPTH      (3)
	) async_fifo_007 (
		.in_clk            (sys_ddr3_cntrl_emif_usr_clk_clk),                                         //        in_clk.clk
		.in_reset_n        (~sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), //  in_clk_reset.reset_n
		.out_clk           (sys_dma_clk_clk_clk),                                                     //       out_clk.clk
		.out_reset_n       (~axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset),            // out_clk_reset.reset_n
		.in_data           (pipeline_stage_010_source0_data),                                         //            in.data
		.in_valid          (pipeline_stage_010_source0_valid),                                        //              .valid
		.in_ready          (pipeline_stage_010_source0_ready),                                        //              .ready
		.in_startofpacket  (pipeline_stage_010_source0_startofpacket),                                //              .startofpacket
		.in_endofpacket    (pipeline_stage_010_source0_endofpacket),                                  //              .endofpacket
		.in_channel        (pipeline_stage_010_source0_channel),                                      //              .channel
		.out_data          (async_fifo_007_out_data),                                                 //           out.data
		.out_valid         (async_fifo_007_out_valid),                                                //              .valid
		.out_ready         (async_fifo_007_out_ready),                                                //              .ready
		.out_startofpacket (async_fifo_007_out_startofpacket),                                        //              .startofpacket
		.out_endofpacket   (async_fifo_007_out_endofpacket),                                          //              .endofpacket
		.out_channel       (async_fifo_007_out_channel),                                              //              .channel
		.in_csr_address    (1'b0),                                                                    //   (terminated)
		.in_csr_read       (1'b0),                                                                    //   (terminated)
		.in_csr_write      (1'b0),                                                                    //   (terminated)
		.in_csr_readdata   (),                                                                        //   (terminated)
		.in_csr_writedata  (32'b00000000000000000000000000000000),                                    //   (terminated)
		.out_csr_address   (1'b0),                                                                    //   (terminated)
		.out_csr_read      (1'b0),                                                                    //   (terminated)
		.out_csr_write     (1'b0),                                                                    //   (terminated)
		.out_csr_readdata  (),                                                                        //   (terminated)
		.out_csr_writedata (32'b00000000000000000000000000000000),                                    //   (terminated)
		.in_empty          (1'b0),                                                                    //   (terminated)
		.out_empty         (),                                                                        //   (terminated)
		.in_error          (1'b0),                                                                    //   (terminated)
		.out_error         (),                                                                        //   (terminated)
		.space_avail_data  ()                                                                         //   (terminated)
	);

	altera_avalon_dc_fifo #(
		.SYMBOLS_PER_BEAT   (1),
		.BITS_PER_SYMBOL    (238),
		.FIFO_DEPTH         (8),
		.CHANNEL_WIDTH      (45),
		.ERROR_WIDTH        (0),
		.USE_PACKETS        (1),
		.USE_IN_FILL_LEVEL  (0),
		.USE_OUT_FILL_LEVEL (0),
		.WR_SYNC_DEPTH      (3),
		.RD_SYNC_DEPTH      (3)
	) async_fifo_008 (
		.in_clk            (sys_ddr3_cntrl_emif_usr_clk_clk),                                         //        in_clk.clk
		.in_reset_n        (~sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), //  in_clk_reset.reset_n
		.out_clk           (sys_dma_clk_clk_clk),                                                     //       out_clk.clk
		.out_reset_n       (~axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset),            // out_clk_reset.reset_n
		.in_data           (pipeline_stage_009_source0_data),                                         //            in.data
		.in_valid          (pipeline_stage_009_source0_valid),                                        //              .valid
		.in_ready          (pipeline_stage_009_source0_ready),                                        //              .ready
		.in_startofpacket  (pipeline_stage_009_source0_startofpacket),                                //              .startofpacket
		.in_endofpacket    (pipeline_stage_009_source0_endofpacket),                                  //              .endofpacket
		.in_channel        (pipeline_stage_009_source0_channel),                                      //              .channel
		.out_data          (async_fifo_008_out_data),                                                 //           out.data
		.out_valid         (async_fifo_008_out_valid),                                                //              .valid
		.out_ready         (async_fifo_008_out_ready),                                                //              .ready
		.out_startofpacket (async_fifo_008_out_startofpacket),                                        //              .startofpacket
		.out_endofpacket   (async_fifo_008_out_endofpacket),                                          //              .endofpacket
		.out_channel       (async_fifo_008_out_channel),                                              //              .channel
		.in_csr_address    (1'b0),                                                                    //   (terminated)
		.in_csr_read       (1'b0),                                                                    //   (terminated)
		.in_csr_write      (1'b0),                                                                    //   (terminated)
		.in_csr_readdata   (),                                                                        //   (terminated)
		.in_csr_writedata  (32'b00000000000000000000000000000000),                                    //   (terminated)
		.out_csr_address   (1'b0),                                                                    //   (terminated)
		.out_csr_read      (1'b0),                                                                    //   (terminated)
		.out_csr_write     (1'b0),                                                                    //   (terminated)
		.out_csr_readdata  (),                                                                        //   (terminated)
		.out_csr_writedata (32'b00000000000000000000000000000000),                                    //   (terminated)
		.in_empty          (1'b0),                                                                    //   (terminated)
		.out_empty         (),                                                                        //   (terminated)
		.in_error          (1'b0),                                                                    //   (terminated)
		.out_error         (),                                                                        //   (terminated)
		.space_avail_data  ()                                                                         //   (terminated)
	);

	altera_avalon_dc_fifo #(
		.SYMBOLS_PER_BEAT   (1),
		.BITS_PER_SYMBOL    (238),
		.FIFO_DEPTH         (8),
		.CHANNEL_WIDTH      (45),
		.ERROR_WIDTH        (0),
		.USE_PACKETS        (1),
		.USE_IN_FILL_LEVEL  (0),
		.USE_OUT_FILL_LEVEL (0),
		.WR_SYNC_DEPTH      (3),
		.RD_SYNC_DEPTH      (3)
	) async_fifo_009 (
		.in_clk            (sys_ddr3_cntrl_emif_usr_clk_clk),                                         //        in_clk.clk
		.in_reset_n        (~sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), //  in_clk_reset.reset_n
		.out_clk           (sys_dma_clk_clk_clk),                                                     //       out_clk.clk
		.out_reset_n       (~axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset),            // out_clk_reset.reset_n
		.in_data           (pipeline_stage_008_source0_data),                                         //            in.data
		.in_valid          (pipeline_stage_008_source0_valid),                                        //              .valid
		.in_ready          (pipeline_stage_008_source0_ready),                                        //              .ready
		.in_startofpacket  (pipeline_stage_008_source0_startofpacket),                                //              .startofpacket
		.in_endofpacket    (pipeline_stage_008_source0_endofpacket),                                  //              .endofpacket
		.in_channel        (pipeline_stage_008_source0_channel),                                      //              .channel
		.out_data          (async_fifo_009_out_data),                                                 //           out.data
		.out_valid         (async_fifo_009_out_valid),                                                //              .valid
		.out_ready         (async_fifo_009_out_ready),                                                //              .ready
		.out_startofpacket (async_fifo_009_out_startofpacket),                                        //              .startofpacket
		.out_endofpacket   (async_fifo_009_out_endofpacket),                                          //              .endofpacket
		.out_channel       (async_fifo_009_out_channel),                                              //              .channel
		.in_csr_address    (1'b0),                                                                    //   (terminated)
		.in_csr_read       (1'b0),                                                                    //   (terminated)
		.in_csr_write      (1'b0),                                                                    //   (terminated)
		.in_csr_readdata   (),                                                                        //   (terminated)
		.in_csr_writedata  (32'b00000000000000000000000000000000),                                    //   (terminated)
		.out_csr_address   (1'b0),                                                                    //   (terminated)
		.out_csr_read      (1'b0),                                                                    //   (terminated)
		.out_csr_write     (1'b0),                                                                    //   (terminated)
		.out_csr_readdata  (),                                                                        //   (terminated)
		.out_csr_writedata (32'b00000000000000000000000000000000),                                    //   (terminated)
		.in_empty          (1'b0),                                                                    //   (terminated)
		.out_empty         (),                                                                        //   (terminated)
		.in_error          (1'b0),                                                                    //   (terminated)
		.out_error         (),                                                                        //   (terminated)
		.space_avail_data  ()                                                                         //   (terminated)
	);

	altera_avalon_dc_fifo #(
		.SYMBOLS_PER_BEAT   (1),
		.BITS_PER_SYMBOL    (166),
		.FIFO_DEPTH         (8),
		.CHANNEL_WIDTH      (45),
		.ERROR_WIDTH        (0),
		.USE_PACKETS        (1),
		.USE_IN_FILL_LEVEL  (0),
		.USE_OUT_FILL_LEVEL (0),
		.WR_SYNC_DEPTH      (3),
		.RD_SYNC_DEPTH      (3)
	) async_fifo_010 (
		.in_clk            (sys_ddr3_cntrl_emif_usr_clk_clk),                                         //        in_clk.clk
		.in_reset_n        (~sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), //  in_clk_reset.reset_n
		.out_clk           (sys_clk_clk_clk),                                                         //       out_clk.clk
		.out_reset_n       (~axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                 // out_clk_reset.reset_n
		.in_data           (pipeline_stage_014_source0_data),                                         //            in.data
		.in_valid          (pipeline_stage_014_source0_valid),                                        //              .valid
		.in_ready          (pipeline_stage_014_source0_ready),                                        //              .ready
		.in_startofpacket  (pipeline_stage_014_source0_startofpacket),                                //              .startofpacket
		.in_endofpacket    (pipeline_stage_014_source0_endofpacket),                                  //              .endofpacket
		.in_channel        (pipeline_stage_014_source0_channel),                                      //              .channel
		.out_data          (async_fifo_010_out_data),                                                 //           out.data
		.out_valid         (async_fifo_010_out_valid),                                                //              .valid
		.out_ready         (async_fifo_010_out_ready),                                                //              .ready
		.out_startofpacket (async_fifo_010_out_startofpacket),                                        //              .startofpacket
		.out_endofpacket   (async_fifo_010_out_endofpacket),                                          //              .endofpacket
		.out_channel       (async_fifo_010_out_channel),                                              //              .channel
		.in_csr_address    (1'b0),                                                                    //   (terminated)
		.in_csr_read       (1'b0),                                                                    //   (terminated)
		.in_csr_write      (1'b0),                                                                    //   (terminated)
		.in_csr_readdata   (),                                                                        //   (terminated)
		.in_csr_writedata  (32'b00000000000000000000000000000000),                                    //   (terminated)
		.out_csr_address   (1'b0),                                                                    //   (terminated)
		.out_csr_read      (1'b0),                                                                    //   (terminated)
		.out_csr_write     (1'b0),                                                                    //   (terminated)
		.out_csr_readdata  (),                                                                        //   (terminated)
		.out_csr_writedata (32'b00000000000000000000000000000000),                                    //   (terminated)
		.in_empty          (1'b0),                                                                    //   (terminated)
		.out_empty         (),                                                                        //   (terminated)
		.in_error          (1'b0),                                                                    //   (terminated)
		.out_error         (),                                                                        //   (terminated)
		.space_avail_data  ()                                                                         //   (terminated)
	);

	altera_avalon_dc_fifo #(
		.SYMBOLS_PER_BEAT   (1),
		.BITS_PER_SYMBOL    (166),
		.FIFO_DEPTH         (8),
		.CHANNEL_WIDTH      (45),
		.ERROR_WIDTH        (0),
		.USE_PACKETS        (1),
		.USE_IN_FILL_LEVEL  (0),
		.USE_OUT_FILL_LEVEL (0),
		.WR_SYNC_DEPTH      (3),
		.RD_SYNC_DEPTH      (3)
	) async_fifo_011 (
		.in_clk            (sys_ddr3_cntrl_emif_usr_clk_clk),                                         //        in_clk.clk
		.in_reset_n        (~sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), //  in_clk_reset.reset_n
		.out_clk           (sys_clk_clk_clk),                                                         //       out_clk.clk
		.out_reset_n       (~axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                 // out_clk_reset.reset_n
		.in_data           (pipeline_stage_013_source0_data),                                         //            in.data
		.in_valid          (pipeline_stage_013_source0_valid),                                        //              .valid
		.in_ready          (pipeline_stage_013_source0_ready),                                        //              .ready
		.in_startofpacket  (pipeline_stage_013_source0_startofpacket),                                //              .startofpacket
		.in_endofpacket    (pipeline_stage_013_source0_endofpacket),                                  //              .endofpacket
		.in_channel        (pipeline_stage_013_source0_channel),                                      //              .channel
		.out_data          (async_fifo_011_out_data),                                                 //           out.data
		.out_valid         (async_fifo_011_out_valid),                                                //              .valid
		.out_ready         (async_fifo_011_out_ready),                                                //              .ready
		.out_startofpacket (async_fifo_011_out_startofpacket),                                        //              .startofpacket
		.out_endofpacket   (async_fifo_011_out_endofpacket),                                          //              .endofpacket
		.out_channel       (async_fifo_011_out_channel),                                              //              .channel
		.in_csr_address    (1'b0),                                                                    //   (terminated)
		.in_csr_read       (1'b0),                                                                    //   (terminated)
		.in_csr_write      (1'b0),                                                                    //   (terminated)
		.in_csr_readdata   (),                                                                        //   (terminated)
		.in_csr_writedata  (32'b00000000000000000000000000000000),                                    //   (terminated)
		.out_csr_address   (1'b0),                                                                    //   (terminated)
		.out_csr_read      (1'b0),                                                                    //   (terminated)
		.out_csr_write     (1'b0),                                                                    //   (terminated)
		.out_csr_readdata  (),                                                                        //   (terminated)
		.out_csr_writedata (32'b00000000000000000000000000000000),                                    //   (terminated)
		.in_empty          (1'b0),                                                                    //   (terminated)
		.out_empty         (),                                                                        //   (terminated)
		.in_error          (1'b0),                                                                    //   (terminated)
		.out_error         (),                                                                        //   (terminated)
		.space_avail_data  ()                                                                         //   (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) limiter_pipeline (
		.clk               (sys_clk_clk_clk),                                   //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset),         // cr0_reset.reset
		.in_ready          (sys_cpu_data_master_limiter_cmd_src_ready),         //     sink0.ready
		.in_valid          (sys_cpu_data_master_limiter_cmd_src_valid),         //          .valid
		.in_startofpacket  (sys_cpu_data_master_limiter_cmd_src_startofpacket), //          .startofpacket
		.in_endofpacket    (sys_cpu_data_master_limiter_cmd_src_endofpacket),   //          .endofpacket
		.in_data           (sys_cpu_data_master_limiter_cmd_src_data),          //          .data
		.in_channel        (sys_cpu_data_master_limiter_cmd_src_channel),       //          .channel
		.out_ready         (limiter_pipeline_source0_ready),                    //   source0.ready
		.out_valid         (limiter_pipeline_source0_valid),                    //          .valid
		.out_startofpacket (limiter_pipeline_source0_startofpacket),            //          .startofpacket
		.out_endofpacket   (limiter_pipeline_source0_endofpacket),              //          .endofpacket
		.out_data          (limiter_pipeline_source0_data),                     //          .data
		.out_channel       (limiter_pipeline_source0_channel),                  //          .channel
		.in_empty          (1'b0),                                              // (terminated)
		.out_empty         (),                                                  // (terminated)
		.out_error         (),                                                  // (terminated)
		.in_error          (1'b0)                                               // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) limiter_pipeline_001 (
		.clk               (sys_clk_clk_clk),                            //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset),  // cr0_reset.reset
		.in_ready          (rsp_mux_src_ready),                          //     sink0.ready
		.in_valid          (rsp_mux_src_valid),                          //          .valid
		.in_startofpacket  (rsp_mux_src_startofpacket),                  //          .startofpacket
		.in_endofpacket    (rsp_mux_src_endofpacket),                    //          .endofpacket
		.in_data           (rsp_mux_src_data),                           //          .data
		.in_channel        (rsp_mux_src_channel),                        //          .channel
		.out_ready         (limiter_pipeline_001_source0_ready),         //   source0.ready
		.out_valid         (limiter_pipeline_001_source0_valid),         //          .valid
		.out_startofpacket (limiter_pipeline_001_source0_startofpacket), //          .startofpacket
		.out_endofpacket   (limiter_pipeline_001_source0_endofpacket),   //          .endofpacket
		.out_data          (limiter_pipeline_001_source0_data),          //          .data
		.out_channel       (limiter_pipeline_001_source0_channel),       //          .channel
		.in_empty          (1'b0),                                       // (terminated)
		.out_empty         (),                                           // (terminated)
		.out_error         (),                                           // (terminated)
		.in_error          (1'b0)                                        // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) limiter_pipeline_002 (
		.clk               (sys_clk_clk_clk),                                          //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset),                // cr0_reset.reset
		.in_ready          (sys_cpu_instruction_master_limiter_cmd_src_ready),         //     sink0.ready
		.in_valid          (sys_cpu_instruction_master_limiter_cmd_src_valid),         //          .valid
		.in_startofpacket  (sys_cpu_instruction_master_limiter_cmd_src_startofpacket), //          .startofpacket
		.in_endofpacket    (sys_cpu_instruction_master_limiter_cmd_src_endofpacket),   //          .endofpacket
		.in_data           (sys_cpu_instruction_master_limiter_cmd_src_data),          //          .data
		.in_channel        (sys_cpu_instruction_master_limiter_cmd_src_channel),       //          .channel
		.out_ready         (limiter_pipeline_002_source0_ready),                       //   source0.ready
		.out_valid         (limiter_pipeline_002_source0_valid),                       //          .valid
		.out_startofpacket (limiter_pipeline_002_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (limiter_pipeline_002_source0_endofpacket),                 //          .endofpacket
		.out_data          (limiter_pipeline_002_source0_data),                        //          .data
		.out_channel       (limiter_pipeline_002_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                     // (terminated)
		.out_empty         (),                                                         // (terminated)
		.out_error         (),                                                         // (terminated)
		.in_error          (1'b0)                                                      // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) limiter_pipeline_003 (
		.clk               (sys_clk_clk_clk),                            //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset),  // cr0_reset.reset
		.in_ready          (rsp_mux_001_src_ready),                      //     sink0.ready
		.in_valid          (rsp_mux_001_src_valid),                      //          .valid
		.in_startofpacket  (rsp_mux_001_src_startofpacket),              //          .startofpacket
		.in_endofpacket    (rsp_mux_001_src_endofpacket),                //          .endofpacket
		.in_data           (rsp_mux_001_src_data),                       //          .data
		.in_channel        (rsp_mux_001_src_channel),                    //          .channel
		.out_ready         (limiter_pipeline_003_source0_ready),         //   source0.ready
		.out_valid         (limiter_pipeline_003_source0_valid),         //          .valid
		.out_startofpacket (limiter_pipeline_003_source0_startofpacket), //          .startofpacket
		.out_endofpacket   (limiter_pipeline_003_source0_endofpacket),   //          .endofpacket
		.out_data          (limiter_pipeline_003_source0_data),          //          .data
		.out_channel       (limiter_pipeline_003_source0_channel),       //          .channel
		.in_empty          (1'b0),                                       // (terminated)
		.out_empty         (),                                           // (terminated)
		.out_error         (),                                           // (terminated)
		.in_error          (1'b0)                                        // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_src_ready),                                      //     sink0.ready
		.in_valid          (cmd_mux_src_valid),                                      //          .valid
		.in_startofpacket  (cmd_mux_src_startofpacket),                              //          .startofpacket
		.in_endofpacket    (cmd_mux_src_endofpacket),                                //          .endofpacket
		.in_data           (cmd_mux_src_data),                                       //          .data
		.in_channel        (cmd_mux_src_channel),                                    //          .channel
		.out_ready         (agent_pipeline_source0_ready),                           //   source0.ready
		.out_valid         (agent_pipeline_source0_valid),                           //          .valid
		.out_startofpacket (agent_pipeline_source0_startofpacket),                   //          .startofpacket
		.out_endofpacket   (agent_pipeline_source0_endofpacket),                     //          .endofpacket
		.out_data          (agent_pipeline_source0_data),                            //          .data
		.out_channel       (agent_pipeline_source0_channel),                         //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_001 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_001_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_001_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_001_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_001_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_001_src_data),                                   //          .data
		.in_channel        (cmd_mux_001_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_001_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_001_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_001_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_001_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_001_source0_data),                        //          .data
		.out_channel       (agent_pipeline_001_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_002 (
		.clk               (sys_clk_clk_clk),                                             //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),      // cr0_reset.reset
		.in_ready          (ad9144_jesd204_link_management_agent_write_rp_ready),         //     sink0.ready
		.in_valid          (ad9144_jesd204_link_management_agent_write_rp_valid),         //          .valid
		.in_startofpacket  (ad9144_jesd204_link_management_agent_write_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (ad9144_jesd204_link_management_agent_write_rp_endofpacket),   //          .endofpacket
		.in_data           (ad9144_jesd204_link_management_agent_write_rp_data),          //          .data
		.out_ready         (agent_pipeline_002_source0_ready),                            //   source0.ready
		.out_valid         (agent_pipeline_002_source0_valid),                            //          .valid
		.out_startofpacket (agent_pipeline_002_source0_startofpacket),                    //          .startofpacket
		.out_endofpacket   (agent_pipeline_002_source0_endofpacket),                      //          .endofpacket
		.out_data          (agent_pipeline_002_source0_data),                             //          .data
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0),                                                        // (terminated)
		.out_channel       (),                                                            // (terminated)
		.in_channel        (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_003 (
		.clk               (sys_clk_clk_clk),                                            //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),     // cr0_reset.reset
		.in_ready          (ad9144_jesd204_link_management_agent_read_rp_ready),         //     sink0.ready
		.in_valid          (ad9144_jesd204_link_management_agent_read_rp_valid),         //          .valid
		.in_startofpacket  (ad9144_jesd204_link_management_agent_read_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (ad9144_jesd204_link_management_agent_read_rp_endofpacket),   //          .endofpacket
		.in_data           (ad9144_jesd204_link_management_agent_read_rp_data),          //          .data
		.out_ready         (agent_pipeline_003_source0_ready),                           //   source0.ready
		.out_valid         (agent_pipeline_003_source0_valid),                           //          .valid
		.out_startofpacket (agent_pipeline_003_source0_startofpacket),                   //          .startofpacket
		.out_endofpacket   (agent_pipeline_003_source0_endofpacket),                     //          .endofpacket
		.out_data          (agent_pipeline_003_source0_data),                            //          .data
		.in_empty          (1'b0),                                                       // (terminated)
		.out_empty         (),                                                           // (terminated)
		.out_error         (),                                                           // (terminated)
		.in_error          (1'b0),                                                       // (terminated)
		.out_channel       (),                                                           // (terminated)
		.in_channel        (1'b0)                                                        // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_004 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_002_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_002_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_002_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_002_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_002_src_data),                                   //          .data
		.in_channel        (cmd_mux_002_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_004_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_004_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_004_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_004_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_004_source0_data),                        //          .data
		.out_channel       (agent_pipeline_004_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_005 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_003_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_003_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_003_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_003_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_003_src_data),                                   //          .data
		.in_channel        (cmd_mux_003_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_005_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_005_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_005_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_005_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_005_source0_data),                        //          .data
		.out_channel       (agent_pipeline_005_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_006 (
		.clk               (sys_clk_clk_clk),                                             //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),      // cr0_reset.reset
		.in_ready          (ad9680_jesd204_link_management_agent_write_rp_ready),         //     sink0.ready
		.in_valid          (ad9680_jesd204_link_management_agent_write_rp_valid),         //          .valid
		.in_startofpacket  (ad9680_jesd204_link_management_agent_write_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (ad9680_jesd204_link_management_agent_write_rp_endofpacket),   //          .endofpacket
		.in_data           (ad9680_jesd204_link_management_agent_write_rp_data),          //          .data
		.out_ready         (agent_pipeline_006_source0_ready),                            //   source0.ready
		.out_valid         (agent_pipeline_006_source0_valid),                            //          .valid
		.out_startofpacket (agent_pipeline_006_source0_startofpacket),                    //          .startofpacket
		.out_endofpacket   (agent_pipeline_006_source0_endofpacket),                      //          .endofpacket
		.out_data          (agent_pipeline_006_source0_data),                             //          .data
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0),                                                        // (terminated)
		.out_channel       (),                                                            // (terminated)
		.in_channel        (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_007 (
		.clk               (sys_clk_clk_clk),                                            //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),     // cr0_reset.reset
		.in_ready          (ad9680_jesd204_link_management_agent_read_rp_ready),         //     sink0.ready
		.in_valid          (ad9680_jesd204_link_management_agent_read_rp_valid),         //          .valid
		.in_startofpacket  (ad9680_jesd204_link_management_agent_read_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (ad9680_jesd204_link_management_agent_read_rp_endofpacket),   //          .endofpacket
		.in_data           (ad9680_jesd204_link_management_agent_read_rp_data),          //          .data
		.out_ready         (agent_pipeline_007_source0_ready),                           //   source0.ready
		.out_valid         (agent_pipeline_007_source0_valid),                           //          .valid
		.out_startofpacket (agent_pipeline_007_source0_startofpacket),                   //          .startofpacket
		.out_endofpacket   (agent_pipeline_007_source0_endofpacket),                     //          .endofpacket
		.out_data          (agent_pipeline_007_source0_data),                            //          .data
		.in_empty          (1'b0),                                                       // (terminated)
		.out_empty         (),                                                           // (terminated)
		.out_error         (),                                                           // (terminated)
		.in_error          (1'b0),                                                       // (terminated)
		.out_channel       (),                                                           // (terminated)
		.in_channel        (1'b0)                                                        // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_008 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_004_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_004_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_004_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_004_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_004_src_data),                                   //          .data
		.in_channel        (cmd_mux_004_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_008_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_008_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_008_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_008_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_008_source0_data),                        //          .data
		.out_channel       (agent_pipeline_008_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_009 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_005_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_005_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_005_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_005_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_005_src_data),                                   //          .data
		.in_channel        (cmd_mux_005_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_009_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_009_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_009_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_009_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_009_source0_data),                        //          .data
		.out_channel       (agent_pipeline_009_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_010 (
		.clk               (sys_clk_clk_clk),                                           //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),    // cr0_reset.reset
		.in_ready          (ad9144_jesd204_link_reconfig_agent_write_rp_ready),         //     sink0.ready
		.in_valid          (ad9144_jesd204_link_reconfig_agent_write_rp_valid),         //          .valid
		.in_startofpacket  (ad9144_jesd204_link_reconfig_agent_write_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (ad9144_jesd204_link_reconfig_agent_write_rp_endofpacket),   //          .endofpacket
		.in_data           (ad9144_jesd204_link_reconfig_agent_write_rp_data),          //          .data
		.out_ready         (agent_pipeline_010_source0_ready),                          //   source0.ready
		.out_valid         (agent_pipeline_010_source0_valid),                          //          .valid
		.out_startofpacket (agent_pipeline_010_source0_startofpacket),                  //          .startofpacket
		.out_endofpacket   (agent_pipeline_010_source0_endofpacket),                    //          .endofpacket
		.out_data          (agent_pipeline_010_source0_data),                           //          .data
		.in_empty          (1'b0),                                                      // (terminated)
		.out_empty         (),                                                          // (terminated)
		.out_error         (),                                                          // (terminated)
		.in_error          (1'b0),                                                      // (terminated)
		.out_channel       (),                                                          // (terminated)
		.in_channel        (1'b0)                                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_011 (
		.clk               (sys_clk_clk_clk),                                          //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),   // cr0_reset.reset
		.in_ready          (ad9144_jesd204_link_reconfig_agent_read_rp_ready),         //     sink0.ready
		.in_valid          (ad9144_jesd204_link_reconfig_agent_read_rp_valid),         //          .valid
		.in_startofpacket  (ad9144_jesd204_link_reconfig_agent_read_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (ad9144_jesd204_link_reconfig_agent_read_rp_endofpacket),   //          .endofpacket
		.in_data           (ad9144_jesd204_link_reconfig_agent_read_rp_data),          //          .data
		.out_ready         (agent_pipeline_011_source0_ready),                         //   source0.ready
		.out_valid         (agent_pipeline_011_source0_valid),                         //          .valid
		.out_startofpacket (agent_pipeline_011_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (agent_pipeline_011_source0_endofpacket),                   //          .endofpacket
		.out_data          (agent_pipeline_011_source0_data),                          //          .data
		.in_empty          (1'b0),                                                     // (terminated)
		.out_empty         (),                                                         // (terminated)
		.out_error         (),                                                         // (terminated)
		.in_error          (1'b0),                                                     // (terminated)
		.out_channel       (),                                                         // (terminated)
		.in_channel        (1'b0)                                                      // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_012 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_006_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_006_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_006_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_006_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_006_src_data),                                   //          .data
		.in_channel        (cmd_mux_006_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_012_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_012_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_012_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_012_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_012_source0_data),                        //          .data
		.out_channel       (agent_pipeline_012_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_013 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_007_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_007_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_007_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_007_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_007_src_data),                                   //          .data
		.in_channel        (cmd_mux_007_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_013_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_013_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_013_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_013_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_013_source0_data),                        //          .data
		.out_channel       (agent_pipeline_013_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_014 (
		.clk               (sys_clk_clk_clk),                                           //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),    // cr0_reset.reset
		.in_ready          (ad9680_jesd204_link_reconfig_agent_write_rp_ready),         //     sink0.ready
		.in_valid          (ad9680_jesd204_link_reconfig_agent_write_rp_valid),         //          .valid
		.in_startofpacket  (ad9680_jesd204_link_reconfig_agent_write_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (ad9680_jesd204_link_reconfig_agent_write_rp_endofpacket),   //          .endofpacket
		.in_data           (ad9680_jesd204_link_reconfig_agent_write_rp_data),          //          .data
		.out_ready         (agent_pipeline_014_source0_ready),                          //   source0.ready
		.out_valid         (agent_pipeline_014_source0_valid),                          //          .valid
		.out_startofpacket (agent_pipeline_014_source0_startofpacket),                  //          .startofpacket
		.out_endofpacket   (agent_pipeline_014_source0_endofpacket),                    //          .endofpacket
		.out_data          (agent_pipeline_014_source0_data),                           //          .data
		.in_empty          (1'b0),                                                      // (terminated)
		.out_empty         (),                                                          // (terminated)
		.out_error         (),                                                          // (terminated)
		.in_error          (1'b0),                                                      // (terminated)
		.out_channel       (),                                                          // (terminated)
		.in_channel        (1'b0)                                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_015 (
		.clk               (sys_clk_clk_clk),                                          //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),   // cr0_reset.reset
		.in_ready          (ad9680_jesd204_link_reconfig_agent_read_rp_ready),         //     sink0.ready
		.in_valid          (ad9680_jesd204_link_reconfig_agent_read_rp_valid),         //          .valid
		.in_startofpacket  (ad9680_jesd204_link_reconfig_agent_read_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (ad9680_jesd204_link_reconfig_agent_read_rp_endofpacket),   //          .endofpacket
		.in_data           (ad9680_jesd204_link_reconfig_agent_read_rp_data),          //          .data
		.out_ready         (agent_pipeline_015_source0_ready),                         //   source0.ready
		.out_valid         (agent_pipeline_015_source0_valid),                         //          .valid
		.out_startofpacket (agent_pipeline_015_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (agent_pipeline_015_source0_endofpacket),                   //          .endofpacket
		.out_data          (agent_pipeline_015_source0_data),                          //          .data
		.in_empty          (1'b0),                                                     // (terminated)
		.out_empty         (),                                                         // (terminated)
		.out_error         (),                                                         // (terminated)
		.in_error          (1'b0),                                                     // (terminated)
		.out_channel       (),                                                         // (terminated)
		.in_channel        (1'b0)                                                      // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_016 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_008_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_008_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_008_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_008_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_008_src_data),                                   //          .data
		.in_channel        (cmd_mux_008_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_016_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_016_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_016_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_016_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_016_source0_data),                        //          .data
		.out_channel       (agent_pipeline_016_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_017 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_009_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_009_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_009_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_009_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_009_src_data),                                   //          .data
		.in_channel        (cmd_mux_009_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_017_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_017_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_017_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_017_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_017_source0_data),                        //          .data
		.out_channel       (agent_pipeline_017_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_018 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (axi_ad9144_dma_s_axi_agent_write_rp_ready),              //     sink0.ready
		.in_valid          (axi_ad9144_dma_s_axi_agent_write_rp_valid),              //          .valid
		.in_startofpacket  (axi_ad9144_dma_s_axi_agent_write_rp_startofpacket),      //          .startofpacket
		.in_endofpacket    (axi_ad9144_dma_s_axi_agent_write_rp_endofpacket),        //          .endofpacket
		.in_data           (axi_ad9144_dma_s_axi_agent_write_rp_data),               //          .data
		.out_ready         (agent_pipeline_018_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_018_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_018_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_018_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_018_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_019 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (axi_ad9144_dma_s_axi_agent_read_rp_ready),               //     sink0.ready
		.in_valid          (axi_ad9144_dma_s_axi_agent_read_rp_valid),               //          .valid
		.in_startofpacket  (axi_ad9144_dma_s_axi_agent_read_rp_startofpacket),       //          .startofpacket
		.in_endofpacket    (axi_ad9144_dma_s_axi_agent_read_rp_endofpacket),         //          .endofpacket
		.in_data           (axi_ad9144_dma_s_axi_agent_read_rp_data),                //          .data
		.out_ready         (agent_pipeline_019_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_019_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_019_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_019_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_019_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_020 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_010_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_010_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_010_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_010_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_010_src_data),                                   //          .data
		.in_channel        (cmd_mux_010_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_020_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_020_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_020_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_020_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_020_source0_data),                        //          .data
		.out_channel       (agent_pipeline_020_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_021 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_011_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_011_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_011_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_011_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_011_src_data),                                   //          .data
		.in_channel        (cmd_mux_011_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_021_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_021_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_021_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_021_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_021_source0_data),                        //          .data
		.out_channel       (agent_pipeline_021_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_022 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (axi_ad9144_core_s_axi_agent_write_rp_ready),             //     sink0.ready
		.in_valid          (axi_ad9144_core_s_axi_agent_write_rp_valid),             //          .valid
		.in_startofpacket  (axi_ad9144_core_s_axi_agent_write_rp_startofpacket),     //          .startofpacket
		.in_endofpacket    (axi_ad9144_core_s_axi_agent_write_rp_endofpacket),       //          .endofpacket
		.in_data           (axi_ad9144_core_s_axi_agent_write_rp_data),              //          .data
		.out_ready         (agent_pipeline_022_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_022_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_022_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_022_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_022_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_023 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (axi_ad9144_core_s_axi_agent_read_rp_ready),              //     sink0.ready
		.in_valid          (axi_ad9144_core_s_axi_agent_read_rp_valid),              //          .valid
		.in_startofpacket  (axi_ad9144_core_s_axi_agent_read_rp_startofpacket),      //          .startofpacket
		.in_endofpacket    (axi_ad9144_core_s_axi_agent_read_rp_endofpacket),        //          .endofpacket
		.in_data           (axi_ad9144_core_s_axi_agent_read_rp_data),               //          .data
		.out_ready         (agent_pipeline_023_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_023_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_023_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_023_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_023_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_024 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_012_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_012_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_012_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_012_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_012_src_data),                                   //          .data
		.in_channel        (cmd_mux_012_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_024_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_024_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_024_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_024_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_024_source0_data),                        //          .data
		.out_channel       (agent_pipeline_024_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_025 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_013_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_013_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_013_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_013_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_013_src_data),                                   //          .data
		.in_channel        (cmd_mux_013_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_025_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_025_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_025_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_025_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_025_source0_data),                        //          .data
		.out_channel       (agent_pipeline_025_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_026 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (axi_ad9680_dma_s_axi_agent_write_rp_ready),              //     sink0.ready
		.in_valid          (axi_ad9680_dma_s_axi_agent_write_rp_valid),              //          .valid
		.in_startofpacket  (axi_ad9680_dma_s_axi_agent_write_rp_startofpacket),      //          .startofpacket
		.in_endofpacket    (axi_ad9680_dma_s_axi_agent_write_rp_endofpacket),        //          .endofpacket
		.in_data           (axi_ad9680_dma_s_axi_agent_write_rp_data),               //          .data
		.out_ready         (agent_pipeline_026_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_026_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_026_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_026_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_026_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_027 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (axi_ad9680_dma_s_axi_agent_read_rp_ready),               //     sink0.ready
		.in_valid          (axi_ad9680_dma_s_axi_agent_read_rp_valid),               //          .valid
		.in_startofpacket  (axi_ad9680_dma_s_axi_agent_read_rp_startofpacket),       //          .startofpacket
		.in_endofpacket    (axi_ad9680_dma_s_axi_agent_read_rp_endofpacket),         //          .endofpacket
		.in_data           (axi_ad9680_dma_s_axi_agent_read_rp_data),                //          .data
		.out_ready         (agent_pipeline_027_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_027_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_027_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_027_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_027_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_028 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_014_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_014_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_014_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_014_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_014_src_data),                                   //          .data
		.in_channel        (cmd_mux_014_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_028_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_028_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_028_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_028_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_028_source0_data),                        //          .data
		.out_channel       (agent_pipeline_028_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_029 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_015_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_015_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_015_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_015_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_015_src_data),                                   //          .data
		.in_channel        (cmd_mux_015_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_029_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_029_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_029_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_029_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_029_source0_data),                        //          .data
		.out_channel       (agent_pipeline_029_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_030 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (axi_ad9680_core_s_axi_agent_write_rp_ready),             //     sink0.ready
		.in_valid          (axi_ad9680_core_s_axi_agent_write_rp_valid),             //          .valid
		.in_startofpacket  (axi_ad9680_core_s_axi_agent_write_rp_startofpacket),     //          .startofpacket
		.in_endofpacket    (axi_ad9680_core_s_axi_agent_write_rp_endofpacket),       //          .endofpacket
		.in_data           (axi_ad9680_core_s_axi_agent_write_rp_data),              //          .data
		.out_ready         (agent_pipeline_030_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_030_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_030_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_030_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_030_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_031 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (axi_ad9680_core_s_axi_agent_read_rp_ready),              //     sink0.ready
		.in_valid          (axi_ad9680_core_s_axi_agent_read_rp_valid),              //          .valid
		.in_startofpacket  (axi_ad9680_core_s_axi_agent_read_rp_startofpacket),      //          .startofpacket
		.in_endofpacket    (axi_ad9680_core_s_axi_agent_read_rp_endofpacket),        //          .endofpacket
		.in_data           (axi_ad9680_core_s_axi_agent_read_rp_data),               //          .data
		.out_ready         (agent_pipeline_031_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_031_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_031_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_031_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_031_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_032 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_016_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_016_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_016_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_016_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_016_src_data),                                   //          .data
		.in_channel        (cmd_mux_016_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_032_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_032_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_032_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_032_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_032_source0_data),                        //          .data
		.out_channel       (agent_pipeline_032_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_033 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (sys_uart_avalon_jtag_slave_agent_rp_ready),              //     sink0.ready
		.in_valid          (sys_uart_avalon_jtag_slave_agent_rp_valid),              //          .valid
		.in_startofpacket  (sys_uart_avalon_jtag_slave_agent_rp_startofpacket),      //          .startofpacket
		.in_endofpacket    (sys_uart_avalon_jtag_slave_agent_rp_endofpacket),        //          .endofpacket
		.in_data           (sys_uart_avalon_jtag_slave_agent_rp_data),               //          .data
		.out_ready         (agent_pipeline_033_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_033_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_033_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_033_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_033_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_034 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_017_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_017_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_017_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_017_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_017_src_data),                                   //          .data
		.in_channel        (cmd_mux_017_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_034_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_034_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_034_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_034_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_034_source0_data),                        //          .data
		.out_channel       (agent_pipeline_034_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_035 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (sys_ethernet_control_port_agent_rp_ready),               //     sink0.ready
		.in_valid          (sys_ethernet_control_port_agent_rp_valid),               //          .valid
		.in_startofpacket  (sys_ethernet_control_port_agent_rp_startofpacket),       //          .startofpacket
		.in_endofpacket    (sys_ethernet_control_port_agent_rp_endofpacket),         //          .endofpacket
		.in_data           (sys_ethernet_control_port_agent_rp_data),                //          .data
		.out_ready         (agent_pipeline_035_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_035_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_035_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_035_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_035_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_036 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_018_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_018_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_018_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_018_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_018_src_data),                                   //          .data
		.in_channel        (cmd_mux_018_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_036_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_036_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_036_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_036_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_036_source0_data),                        //          .data
		.out_channel       (agent_pipeline_036_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_037 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (sys_id_control_slave_agent_rp_ready),                    //     sink0.ready
		.in_valid          (sys_id_control_slave_agent_rp_valid),                    //          .valid
		.in_startofpacket  (sys_id_control_slave_agent_rp_startofpacket),            //          .startofpacket
		.in_endofpacket    (sys_id_control_slave_agent_rp_endofpacket),              //          .endofpacket
		.in_data           (sys_id_control_slave_agent_rp_data),                     //          .data
		.out_ready         (agent_pipeline_037_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_037_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_037_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_037_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_037_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_038 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_019_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_019_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_019_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_019_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_019_src_data),                                   //          .data
		.in_channel        (cmd_mux_019_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_038_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_038_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_038_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_038_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_038_source0_data),                        //          .data
		.out_channel       (agent_pipeline_038_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_039 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (sys_ethernet_dma_rx_csr_agent_rp_ready),                 //     sink0.ready
		.in_valid          (sys_ethernet_dma_rx_csr_agent_rp_valid),                 //          .valid
		.in_startofpacket  (sys_ethernet_dma_rx_csr_agent_rp_startofpacket),         //          .startofpacket
		.in_endofpacket    (sys_ethernet_dma_rx_csr_agent_rp_endofpacket),           //          .endofpacket
		.in_data           (sys_ethernet_dma_rx_csr_agent_rp_data),                  //          .data
		.out_ready         (agent_pipeline_039_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_039_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_039_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_039_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_039_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_040 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_020_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_020_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_020_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_020_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_020_src_data),                                   //          .data
		.in_channel        (cmd_mux_020_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_040_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_040_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_040_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_040_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_040_source0_data),                        //          .data
		.out_channel       (agent_pipeline_040_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_041 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (sys_ethernet_dma_tx_csr_agent_rp_ready),                 //     sink0.ready
		.in_valid          (sys_ethernet_dma_tx_csr_agent_rp_valid),                 //          .valid
		.in_startofpacket  (sys_ethernet_dma_tx_csr_agent_rp_startofpacket),         //          .startofpacket
		.in_endofpacket    (sys_ethernet_dma_tx_csr_agent_rp_endofpacket),           //          .endofpacket
		.in_data           (sys_ethernet_dma_tx_csr_agent_rp_data),                  //          .data
		.out_ready         (agent_pipeline_041_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_041_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_041_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_041_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_041_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (670),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_042 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (sys_ddr3_cntrl_ctrl_amm_0_burst_adapter_source0_ready),                  //     sink0.ready
		.in_valid          (sys_ddr3_cntrl_ctrl_amm_0_burst_adapter_source0_valid),                  //          .valid
		.in_startofpacket  (sys_ddr3_cntrl_ctrl_amm_0_burst_adapter_source0_startofpacket),          //          .startofpacket
		.in_endofpacket    (sys_ddr3_cntrl_ctrl_amm_0_burst_adapter_source0_endofpacket),            //          .endofpacket
		.in_data           (sys_ddr3_cntrl_ctrl_amm_0_burst_adapter_source0_data),                   //          .data
		.in_channel        (sys_ddr3_cntrl_ctrl_amm_0_burst_adapter_source0_channel),                //          .channel
		.out_ready         (agent_pipeline_042_source0_ready),                                       //   source0.ready
		.out_valid         (agent_pipeline_042_source0_valid),                                       //          .valid
		.out_startofpacket (agent_pipeline_042_source0_startofpacket),                               //          .startofpacket
		.out_endofpacket   (agent_pipeline_042_source0_endofpacket),                                 //          .endofpacket
		.out_data          (agent_pipeline_042_source0_data),                                        //          .data
		.out_channel       (agent_pipeline_042_source0_channel),                                     //          .channel
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_error          (1'b0)                                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (670),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_043 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (sys_ddr3_cntrl_ctrl_amm_0_agent_rp_ready),                               //     sink0.ready
		.in_valid          (sys_ddr3_cntrl_ctrl_amm_0_agent_rp_valid),                               //          .valid
		.in_startofpacket  (sys_ddr3_cntrl_ctrl_amm_0_agent_rp_startofpacket),                       //          .startofpacket
		.in_endofpacket    (sys_ddr3_cntrl_ctrl_amm_0_agent_rp_endofpacket),                         //          .endofpacket
		.in_data           (sys_ddr3_cntrl_ctrl_amm_0_agent_rp_data),                                //          .data
		.out_ready         (agent_pipeline_043_source0_ready),                                       //   source0.ready
		.out_valid         (agent_pipeline_043_source0_valid),                                       //          .valid
		.out_startofpacket (agent_pipeline_043_source0_startofpacket),                               //          .startofpacket
		.out_endofpacket   (agent_pipeline_043_source0_endofpacket),                                 //          .endofpacket
		.out_data          (agent_pipeline_043_source0_data),                                        //          .data
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_error          (1'b0),                                                                   // (terminated)
		.out_channel       (),                                                                       // (terminated)
		.in_channel        (1'b0)                                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_044 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_022_src_ready),                     //     sink0.ready
		.in_valid          (cmd_mux_022_src_valid),                     //          .valid
		.in_startofpacket  (cmd_mux_022_src_startofpacket),             //          .startofpacket
		.in_endofpacket    (cmd_mux_022_src_endofpacket),               //          .endofpacket
		.in_data           (cmd_mux_022_src_data),                      //          .data
		.in_channel        (cmd_mux_022_src_channel),                   //          .channel
		.out_ready         (agent_pipeline_044_source0_ready),          //   source0.ready
		.out_valid         (agent_pipeline_044_source0_valid),          //          .valid
		.out_startofpacket (agent_pipeline_044_source0_startofpacket),  //          .startofpacket
		.out_endofpacket   (agent_pipeline_044_source0_endofpacket),    //          .endofpacket
		.out_data          (agent_pipeline_044_source0_data),           //          .data
		.out_channel       (agent_pipeline_044_source0_channel),        //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_045 (
		.clk               (sys_clk_clk_clk),                                //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset),      // cr0_reset.reset
		.in_ready          (sys_cpu_debug_mem_slave_agent_rp_ready),         //     sink0.ready
		.in_valid          (sys_cpu_debug_mem_slave_agent_rp_valid),         //          .valid
		.in_startofpacket  (sys_cpu_debug_mem_slave_agent_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (sys_cpu_debug_mem_slave_agent_rp_endofpacket),   //          .endofpacket
		.in_data           (sys_cpu_debug_mem_slave_agent_rp_data),          //          .data
		.out_ready         (agent_pipeline_045_source0_ready),               //   source0.ready
		.out_valid         (agent_pipeline_045_source0_valid),               //          .valid
		.out_startofpacket (agent_pipeline_045_source0_startofpacket),       //          .startofpacket
		.out_endofpacket   (agent_pipeline_045_source0_endofpacket),         //          .endofpacket
		.out_data          (agent_pipeline_045_source0_data),                //          .data
		.in_empty          (1'b0),                                           // (terminated)
		.out_empty         (),                                               // (terminated)
		.out_error         (),                                               // (terminated)
		.in_error          (1'b0),                                           // (terminated)
		.out_channel       (),                                               // (terminated)
		.in_channel        (1'b0)                                            // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (382),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_046 (
		.clk               (sys_clk_clk_clk),                                                          //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                   // cr0_reset.reset
		.in_ready          (sys_ethernet_dma_rx_descriptor_slave_burst_adapter_source0_ready),         //     sink0.ready
		.in_valid          (sys_ethernet_dma_rx_descriptor_slave_burst_adapter_source0_valid),         //          .valid
		.in_startofpacket  (sys_ethernet_dma_rx_descriptor_slave_burst_adapter_source0_startofpacket), //          .startofpacket
		.in_endofpacket    (sys_ethernet_dma_rx_descriptor_slave_burst_adapter_source0_endofpacket),   //          .endofpacket
		.in_data           (sys_ethernet_dma_rx_descriptor_slave_burst_adapter_source0_data),          //          .data
		.in_channel        (sys_ethernet_dma_rx_descriptor_slave_burst_adapter_source0_channel),       //          .channel
		.out_ready         (agent_pipeline_046_source0_ready),                                         //   source0.ready
		.out_valid         (agent_pipeline_046_source0_valid),                                         //          .valid
		.out_startofpacket (agent_pipeline_046_source0_startofpacket),                                 //          .startofpacket
		.out_endofpacket   (agent_pipeline_046_source0_endofpacket),                                   //          .endofpacket
		.out_data          (agent_pipeline_046_source0_data),                                          //          .data
		.out_channel       (agent_pipeline_046_source0_channel),                                       //          .channel
		.in_empty          (1'b0),                                                                     // (terminated)
		.out_empty         (),                                                                         // (terminated)
		.out_error         (),                                                                         // (terminated)
		.in_error          (1'b0)                                                                      // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (382),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_047 (
		.clk               (sys_clk_clk_clk),                                             //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),      // cr0_reset.reset
		.in_ready          (sys_ethernet_dma_rx_descriptor_slave_agent_rp_ready),         //     sink0.ready
		.in_valid          (sys_ethernet_dma_rx_descriptor_slave_agent_rp_valid),         //          .valid
		.in_startofpacket  (sys_ethernet_dma_rx_descriptor_slave_agent_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (sys_ethernet_dma_rx_descriptor_slave_agent_rp_endofpacket),   //          .endofpacket
		.in_data           (sys_ethernet_dma_rx_descriptor_slave_agent_rp_data),          //          .data
		.out_ready         (agent_pipeline_047_source0_ready),                            //   source0.ready
		.out_valid         (agent_pipeline_047_source0_valid),                            //          .valid
		.out_startofpacket (agent_pipeline_047_source0_startofpacket),                    //          .startofpacket
		.out_endofpacket   (agent_pipeline_047_source0_endofpacket),                      //          .endofpacket
		.out_data          (agent_pipeline_047_source0_data),                             //          .data
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0),                                                        // (terminated)
		.out_channel       (),                                                            // (terminated)
		.in_channel        (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (382),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_048 (
		.clk               (sys_clk_clk_clk),                                                          //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                   // cr0_reset.reset
		.in_ready          (sys_ethernet_dma_tx_descriptor_slave_burst_adapter_source0_ready),         //     sink0.ready
		.in_valid          (sys_ethernet_dma_tx_descriptor_slave_burst_adapter_source0_valid),         //          .valid
		.in_startofpacket  (sys_ethernet_dma_tx_descriptor_slave_burst_adapter_source0_startofpacket), //          .startofpacket
		.in_endofpacket    (sys_ethernet_dma_tx_descriptor_slave_burst_adapter_source0_endofpacket),   //          .endofpacket
		.in_data           (sys_ethernet_dma_tx_descriptor_slave_burst_adapter_source0_data),          //          .data
		.in_channel        (sys_ethernet_dma_tx_descriptor_slave_burst_adapter_source0_channel),       //          .channel
		.out_ready         (agent_pipeline_048_source0_ready),                                         //   source0.ready
		.out_valid         (agent_pipeline_048_source0_valid),                                         //          .valid
		.out_startofpacket (agent_pipeline_048_source0_startofpacket),                                 //          .startofpacket
		.out_endofpacket   (agent_pipeline_048_source0_endofpacket),                                   //          .endofpacket
		.out_data          (agent_pipeline_048_source0_data),                                          //          .data
		.out_channel       (agent_pipeline_048_source0_channel),                                       //          .channel
		.in_empty          (1'b0),                                                                     // (terminated)
		.out_empty         (),                                                                         // (terminated)
		.out_error         (),                                                                         // (terminated)
		.in_error          (1'b0)                                                                      // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (382),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_049 (
		.clk               (sys_clk_clk_clk),                                             //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),      // cr0_reset.reset
		.in_ready          (sys_ethernet_dma_tx_descriptor_slave_agent_rp_ready),         //     sink0.ready
		.in_valid          (sys_ethernet_dma_tx_descriptor_slave_agent_rp_valid),         //          .valid
		.in_startofpacket  (sys_ethernet_dma_tx_descriptor_slave_agent_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (sys_ethernet_dma_tx_descriptor_slave_agent_rp_endofpacket),   //          .endofpacket
		.in_data           (sys_ethernet_dma_tx_descriptor_slave_agent_rp_data),          //          .data
		.out_ready         (agent_pipeline_049_source0_ready),                            //   source0.ready
		.out_valid         (agent_pipeline_049_source0_valid),                            //          .valid
		.out_startofpacket (agent_pipeline_049_source0_startofpacket),                    //          .startofpacket
		.out_endofpacket   (agent_pipeline_049_source0_endofpacket),                      //          .endofpacket
		.out_data          (agent_pipeline_049_source0_data),                             //          .data
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0),                                                        // (terminated)
		.out_channel       (),                                                            // (terminated)
		.in_channel        (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_050 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_025_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_025_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_025_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_025_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_025_src_data),                                   //          .data
		.in_channel        (cmd_mux_025_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_050_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_050_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_050_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_050_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_050_source0_data),                        //          .data
		.out_channel       (agent_pipeline_050_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_051 (
		.clk               (sys_clk_clk_clk),                                         //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),  // cr0_reset.reset
		.in_ready          (ad9144_jesd204_lane_pll_reconfig_agent_rp_ready),         //     sink0.ready
		.in_valid          (ad9144_jesd204_lane_pll_reconfig_agent_rp_valid),         //          .valid
		.in_startofpacket  (ad9144_jesd204_lane_pll_reconfig_agent_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (ad9144_jesd204_lane_pll_reconfig_agent_rp_endofpacket),   //          .endofpacket
		.in_data           (ad9144_jesd204_lane_pll_reconfig_agent_rp_data),          //          .data
		.out_ready         (agent_pipeline_051_source0_ready),                        //   source0.ready
		.out_valid         (agent_pipeline_051_source0_valid),                        //          .valid
		.out_startofpacket (agent_pipeline_051_source0_startofpacket),                //          .startofpacket
		.out_endofpacket   (agent_pipeline_051_source0_endofpacket),                  //          .endofpacket
		.out_data          (agent_pipeline_051_source0_data),                         //          .data
		.in_empty          (1'b0),                                                    // (terminated)
		.out_empty         (),                                                        // (terminated)
		.out_error         (),                                                        // (terminated)
		.in_error          (1'b0),                                                    // (terminated)
		.out_channel       (),                                                        // (terminated)
		.in_channel        (1'b0)                                                     // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_052 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_026_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_026_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_026_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_026_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_026_src_data),                                   //          .data
		.in_channel        (cmd_mux_026_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_052_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_052_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_052_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_052_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_052_source0_data),                        //          .data
		.out_channel       (agent_pipeline_052_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_053 (
		.clk               (sys_clk_clk_clk),                                         //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),  // cr0_reset.reset
		.in_ready          (ad9144_jesd204_link_pll_reconfig_agent_rp_ready),         //     sink0.ready
		.in_valid          (ad9144_jesd204_link_pll_reconfig_agent_rp_valid),         //          .valid
		.in_startofpacket  (ad9144_jesd204_link_pll_reconfig_agent_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (ad9144_jesd204_link_pll_reconfig_agent_rp_endofpacket),   //          .endofpacket
		.in_data           (ad9144_jesd204_link_pll_reconfig_agent_rp_data),          //          .data
		.out_ready         (agent_pipeline_053_source0_ready),                        //   source0.ready
		.out_valid         (agent_pipeline_053_source0_valid),                        //          .valid
		.out_startofpacket (agent_pipeline_053_source0_startofpacket),                //          .startofpacket
		.out_endofpacket   (agent_pipeline_053_source0_endofpacket),                  //          .endofpacket
		.out_data          (agent_pipeline_053_source0_data),                         //          .data
		.in_empty          (1'b0),                                                    // (terminated)
		.out_empty         (),                                                        // (terminated)
		.out_error         (),                                                        // (terminated)
		.in_error          (1'b0),                                                    // (terminated)
		.out_channel       (),                                                        // (terminated)
		.in_channel        (1'b0)                                                     // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_054 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_027_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_027_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_027_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_027_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_027_src_data),                                   //          .data
		.in_channel        (cmd_mux_027_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_054_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_054_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_054_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_054_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_054_source0_data),                        //          .data
		.out_channel       (agent_pipeline_054_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_055 (
		.clk               (sys_clk_clk_clk),                                         //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),  // cr0_reset.reset
		.in_ready          (ad9680_jesd204_link_pll_reconfig_agent_rp_ready),         //     sink0.ready
		.in_valid          (ad9680_jesd204_link_pll_reconfig_agent_rp_valid),         //          .valid
		.in_startofpacket  (ad9680_jesd204_link_pll_reconfig_agent_rp_startofpacket), //          .startofpacket
		.in_endofpacket    (ad9680_jesd204_link_pll_reconfig_agent_rp_endofpacket),   //          .endofpacket
		.in_data           (ad9680_jesd204_link_pll_reconfig_agent_rp_data),          //          .data
		.out_ready         (agent_pipeline_055_source0_ready),                        //   source0.ready
		.out_valid         (agent_pipeline_055_source0_valid),                        //          .valid
		.out_startofpacket (agent_pipeline_055_source0_startofpacket),                //          .startofpacket
		.out_endofpacket   (agent_pipeline_055_source0_endofpacket),                  //          .endofpacket
		.out_data          (agent_pipeline_055_source0_data),                         //          .data
		.in_empty          (1'b0),                                                    // (terminated)
		.out_empty         (),                                                        // (terminated)
		.out_error         (),                                                        // (terminated)
		.in_error          (1'b0),                                                    // (terminated)
		.out_channel       (),                                                        // (terminated)
		.in_channel        (1'b0)                                                     // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_056 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_028_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_028_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_028_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_028_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_028_src_data),                                   //          .data
		.in_channel        (cmd_mux_028_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_056_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_056_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_056_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_056_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_056_source0_data),                        //          .data
		.out_channel       (agent_pipeline_056_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_057 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (avl_adxcfg_0_rcfg_s0_agent_rp_ready),                    //     sink0.ready
		.in_valid          (avl_adxcfg_0_rcfg_s0_agent_rp_valid),                    //          .valid
		.in_startofpacket  (avl_adxcfg_0_rcfg_s0_agent_rp_startofpacket),            //          .startofpacket
		.in_endofpacket    (avl_adxcfg_0_rcfg_s0_agent_rp_endofpacket),              //          .endofpacket
		.in_data           (avl_adxcfg_0_rcfg_s0_agent_rp_data),                     //          .data
		.out_ready         (agent_pipeline_057_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_057_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_057_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_057_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_057_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_058 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_029_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_029_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_029_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_029_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_029_src_data),                                   //          .data
		.in_channel        (cmd_mux_029_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_058_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_058_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_058_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_058_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_058_source0_data),                        //          .data
		.out_channel       (agent_pipeline_058_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_059 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (avl_adxcfg_1_rcfg_s0_agent_rp_ready),                    //     sink0.ready
		.in_valid          (avl_adxcfg_1_rcfg_s0_agent_rp_valid),                    //          .valid
		.in_startofpacket  (avl_adxcfg_1_rcfg_s0_agent_rp_startofpacket),            //          .startofpacket
		.in_endofpacket    (avl_adxcfg_1_rcfg_s0_agent_rp_endofpacket),              //          .endofpacket
		.in_data           (avl_adxcfg_1_rcfg_s0_agent_rp_data),                     //          .data
		.out_ready         (agent_pipeline_059_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_059_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_059_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_059_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_059_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_060 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_030_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_030_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_030_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_030_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_030_src_data),                                   //          .data
		.in_channel        (cmd_mux_030_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_060_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_060_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_060_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_060_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_060_source0_data),                        //          .data
		.out_channel       (agent_pipeline_060_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_061 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (avl_adxcfg_2_rcfg_s0_agent_rp_ready),                    //     sink0.ready
		.in_valid          (avl_adxcfg_2_rcfg_s0_agent_rp_valid),                    //          .valid
		.in_startofpacket  (avl_adxcfg_2_rcfg_s0_agent_rp_startofpacket),            //          .startofpacket
		.in_endofpacket    (avl_adxcfg_2_rcfg_s0_agent_rp_endofpacket),              //          .endofpacket
		.in_data           (avl_adxcfg_2_rcfg_s0_agent_rp_data),                     //          .data
		.out_ready         (agent_pipeline_061_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_061_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_061_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_061_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_061_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_062 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_031_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_031_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_031_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_031_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_031_src_data),                                   //          .data
		.in_channel        (cmd_mux_031_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_062_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_062_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_062_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_062_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_062_source0_data),                        //          .data
		.out_channel       (agent_pipeline_062_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_063 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (avl_adxcfg_3_rcfg_s0_agent_rp_ready),                    //     sink0.ready
		.in_valid          (avl_adxcfg_3_rcfg_s0_agent_rp_valid),                    //          .valid
		.in_startofpacket  (avl_adxcfg_3_rcfg_s0_agent_rp_startofpacket),            //          .startofpacket
		.in_endofpacket    (avl_adxcfg_3_rcfg_s0_agent_rp_endofpacket),              //          .endofpacket
		.in_data           (avl_adxcfg_3_rcfg_s0_agent_rp_data),                     //          .data
		.out_ready         (agent_pipeline_063_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_063_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_063_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_063_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_063_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_064 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_032_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_032_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_032_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_032_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_032_src_data),                                   //          .data
		.in_channel        (cmd_mux_032_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_064_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_064_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_064_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_064_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_064_source0_data),                        //          .data
		.out_channel       (agent_pipeline_064_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_065 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (avl_adxcfg_0_rcfg_s1_agent_rp_ready),                    //     sink0.ready
		.in_valid          (avl_adxcfg_0_rcfg_s1_agent_rp_valid),                    //          .valid
		.in_startofpacket  (avl_adxcfg_0_rcfg_s1_agent_rp_startofpacket),            //          .startofpacket
		.in_endofpacket    (avl_adxcfg_0_rcfg_s1_agent_rp_endofpacket),              //          .endofpacket
		.in_data           (avl_adxcfg_0_rcfg_s1_agent_rp_data),                     //          .data
		.out_ready         (agent_pipeline_065_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_065_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_065_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_065_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_065_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_066 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_033_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_033_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_033_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_033_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_033_src_data),                                   //          .data
		.in_channel        (cmd_mux_033_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_066_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_066_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_066_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_066_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_066_source0_data),                        //          .data
		.out_channel       (agent_pipeline_066_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_067 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (avl_adxcfg_1_rcfg_s1_agent_rp_ready),                    //     sink0.ready
		.in_valid          (avl_adxcfg_1_rcfg_s1_agent_rp_valid),                    //          .valid
		.in_startofpacket  (avl_adxcfg_1_rcfg_s1_agent_rp_startofpacket),            //          .startofpacket
		.in_endofpacket    (avl_adxcfg_1_rcfg_s1_agent_rp_endofpacket),              //          .endofpacket
		.in_data           (avl_adxcfg_1_rcfg_s1_agent_rp_data),                     //          .data
		.out_ready         (agent_pipeline_067_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_067_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_067_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_067_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_067_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_068 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_034_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_034_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_034_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_034_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_034_src_data),                                   //          .data
		.in_channel        (cmd_mux_034_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_068_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_068_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_068_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_068_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_068_source0_data),                        //          .data
		.out_channel       (agent_pipeline_068_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_069 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (avl_adxcfg_2_rcfg_s1_agent_rp_ready),                    //     sink0.ready
		.in_valid          (avl_adxcfg_2_rcfg_s1_agent_rp_valid),                    //          .valid
		.in_startofpacket  (avl_adxcfg_2_rcfg_s1_agent_rp_startofpacket),            //          .startofpacket
		.in_endofpacket    (avl_adxcfg_2_rcfg_s1_agent_rp_endofpacket),              //          .endofpacket
		.in_data           (avl_adxcfg_2_rcfg_s1_agent_rp_data),                     //          .data
		.out_ready         (agent_pipeline_069_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_069_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_069_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_069_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_069_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_070 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_035_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_035_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_035_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_035_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_035_src_data),                                   //          .data
		.in_channel        (cmd_mux_035_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_070_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_070_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_070_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_070_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_070_source0_data),                        //          .data
		.out_channel       (agent_pipeline_070_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_071 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (avl_adxcfg_3_rcfg_s1_agent_rp_ready),                    //     sink0.ready
		.in_valid          (avl_adxcfg_3_rcfg_s1_agent_rp_valid),                    //          .valid
		.in_startofpacket  (avl_adxcfg_3_rcfg_s1_agent_rp_startofpacket),            //          .startofpacket
		.in_endofpacket    (avl_adxcfg_3_rcfg_s1_agent_rp_endofpacket),              //          .endofpacket
		.in_data           (avl_adxcfg_3_rcfg_s1_agent_rp_data),                     //          .data
		.out_ready         (agent_pipeline_071_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_071_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_071_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_071_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_071_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_072 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_036_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_036_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_036_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_036_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_036_src_data),                                   //          .data
		.in_channel        (cmd_mux_036_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_072_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_072_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_072_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_072_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_072_source0_data),                        //          .data
		.out_channel       (agent_pipeline_072_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_073 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (sys_ethernet_dma_rx_response_agent_rp_ready),            //     sink0.ready
		.in_valid          (sys_ethernet_dma_rx_response_agent_rp_valid),            //          .valid
		.in_startofpacket  (sys_ethernet_dma_rx_response_agent_rp_startofpacket),    //          .startofpacket
		.in_endofpacket    (sys_ethernet_dma_rx_response_agent_rp_endofpacket),      //          .endofpacket
		.in_data           (sys_ethernet_dma_rx_response_agent_rp_data),             //          .data
		.out_ready         (agent_pipeline_073_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_073_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_073_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_073_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_073_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_074 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_037_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_037_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_037_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_037_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_037_src_data),                                   //          .data
		.in_channel        (cmd_mux_037_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_074_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_074_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_074_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_074_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_074_source0_data),                        //          .data
		.out_channel       (agent_pipeline_074_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_075 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (sys_int_mem_s1_agent_rp_ready),                          //     sink0.ready
		.in_valid          (sys_int_mem_s1_agent_rp_valid),                          //          .valid
		.in_startofpacket  (sys_int_mem_s1_agent_rp_startofpacket),                  //          .startofpacket
		.in_endofpacket    (sys_int_mem_s1_agent_rp_endofpacket),                    //          .endofpacket
		.in_data           (sys_int_mem_s1_agent_rp_data),                           //          .data
		.out_ready         (agent_pipeline_075_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_075_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_075_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_075_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_075_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_076 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_038_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_038_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_038_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_038_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_038_src_data),                                   //          .data
		.in_channel        (cmd_mux_038_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_076_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_076_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_076_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_076_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_076_source0_data),                        //          .data
		.out_channel       (agent_pipeline_076_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_077 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (sys_timer_1_s1_agent_rp_ready),                          //     sink0.ready
		.in_valid          (sys_timer_1_s1_agent_rp_valid),                          //          .valid
		.in_startofpacket  (sys_timer_1_s1_agent_rp_startofpacket),                  //          .startofpacket
		.in_endofpacket    (sys_timer_1_s1_agent_rp_endofpacket),                    //          .endofpacket
		.in_data           (sys_timer_1_s1_agent_rp_data),                           //          .data
		.out_ready         (agent_pipeline_077_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_077_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_077_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_077_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_077_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_078 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_039_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_039_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_039_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_039_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_039_src_data),                                   //          .data
		.in_channel        (cmd_mux_039_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_078_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_078_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_078_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_078_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_078_source0_data),                        //          .data
		.out_channel       (agent_pipeline_078_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_079 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (sys_timer_2_s1_agent_rp_ready),                          //     sink0.ready
		.in_valid          (sys_timer_2_s1_agent_rp_valid),                          //          .valid
		.in_startofpacket  (sys_timer_2_s1_agent_rp_startofpacket),                  //          .startofpacket
		.in_endofpacket    (sys_timer_2_s1_agent_rp_endofpacket),                    //          .endofpacket
		.in_data           (sys_timer_2_s1_agent_rp_data),                           //          .data
		.out_ready         (agent_pipeline_079_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_079_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_079_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_079_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_079_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_080 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_040_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_040_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_040_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_040_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_040_src_data),                                   //          .data
		.in_channel        (cmd_mux_040_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_080_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_080_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_080_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_080_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_080_source0_data),                        //          .data
		.out_channel       (agent_pipeline_080_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_081 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (sys_gpio_bd_s1_agent_rp_ready),                          //     sink0.ready
		.in_valid          (sys_gpio_bd_s1_agent_rp_valid),                          //          .valid
		.in_startofpacket  (sys_gpio_bd_s1_agent_rp_startofpacket),                  //          .startofpacket
		.in_endofpacket    (sys_gpio_bd_s1_agent_rp_endofpacket),                    //          .endofpacket
		.in_data           (sys_gpio_bd_s1_agent_rp_data),                           //          .data
		.out_ready         (agent_pipeline_081_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_081_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_081_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_081_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_081_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_082 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_041_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_041_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_041_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_041_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_041_src_data),                                   //          .data
		.in_channel        (cmd_mux_041_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_082_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_082_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_082_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_082_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_082_source0_data),                        //          .data
		.out_channel       (agent_pipeline_082_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_083 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (sys_gpio_in_s1_agent_rp_ready),                          //     sink0.ready
		.in_valid          (sys_gpio_in_s1_agent_rp_valid),                          //          .valid
		.in_startofpacket  (sys_gpio_in_s1_agent_rp_startofpacket),                  //          .startofpacket
		.in_endofpacket    (sys_gpio_in_s1_agent_rp_endofpacket),                    //          .endofpacket
		.in_data           (sys_gpio_in_s1_agent_rp_data),                           //          .data
		.out_ready         (agent_pipeline_083_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_083_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_083_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_083_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_083_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_084 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_042_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_042_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_042_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_042_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_042_src_data),                                   //          .data
		.in_channel        (cmd_mux_042_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_084_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_084_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_084_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_084_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_084_source0_data),                        //          .data
		.out_channel       (agent_pipeline_084_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_085 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (sys_gpio_out_s1_agent_rp_ready),                         //     sink0.ready
		.in_valid          (sys_gpio_out_s1_agent_rp_valid),                         //          .valid
		.in_startofpacket  (sys_gpio_out_s1_agent_rp_startofpacket),                 //          .startofpacket
		.in_endofpacket    (sys_gpio_out_s1_agent_rp_endofpacket),                   //          .endofpacket
		.in_data           (sys_gpio_out_s1_agent_rp_data),                          //          .data
		.out_ready         (agent_pipeline_085_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_085_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_085_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_085_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_085_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_086 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_043_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_043_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_043_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_043_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_043_src_data),                                   //          .data
		.in_channel        (cmd_mux_043_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_086_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_086_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_086_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_086_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_086_source0_data),                        //          .data
		.out_channel       (agent_pipeline_086_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_087 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (sys_spi_spi_control_port_agent_rp_ready),                //     sink0.ready
		.in_valid          (sys_spi_spi_control_port_agent_rp_valid),                //          .valid
		.in_startofpacket  (sys_spi_spi_control_port_agent_rp_startofpacket),        //          .startofpacket
		.in_endofpacket    (sys_spi_spi_control_port_agent_rp_endofpacket),          //          .endofpacket
		.in_data           (sys_spi_spi_control_port_agent_rp_data),                 //          .data
		.out_ready         (agent_pipeline_087_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_087_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_087_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_087_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_087_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_088 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_044_src_ready),                                  //     sink0.ready
		.in_valid          (cmd_mux_044_src_valid),                                  //          .valid
		.in_startofpacket  (cmd_mux_044_src_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_mux_044_src_endofpacket),                            //          .endofpacket
		.in_data           (cmd_mux_044_src_data),                                   //          .data
		.in_channel        (cmd_mux_044_src_channel),                                //          .channel
		.out_ready         (agent_pipeline_088_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_088_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_088_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_088_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_088_source0_data),                        //          .data
		.out_channel       (agent_pipeline_088_source0_channel),                     //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_089 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (sys_flash_uas_agent_rp_ready),                           //     sink0.ready
		.in_valid          (sys_flash_uas_agent_rp_valid),                           //          .valid
		.in_startofpacket  (sys_flash_uas_agent_rp_startofpacket),                   //          .startofpacket
		.in_endofpacket    (sys_flash_uas_agent_rp_endofpacket),                     //          .endofpacket
		.in_data           (sys_flash_uas_agent_rp_data),                            //          .data
		.out_ready         (agent_pipeline_089_source0_ready),                       //   source0.ready
		.out_valid         (agent_pipeline_089_source0_valid),                       //          .valid
		.out_startofpacket (agent_pipeline_089_source0_startofpacket),               //          .startofpacket
		.out_endofpacket   (agent_pipeline_089_source0_endofpacket),                 //          .endofpacket
		.out_data          (agent_pipeline_089_source0_data),                        //          .data
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0),                                                   // (terminated)
		.out_channel       (),                                                       // (terminated)
		.in_channel        (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src0_ready),                                   //     sink0.ready
		.in_valid          (cmd_demux_src0_valid),                                   //          .valid
		.in_startofpacket  (cmd_demux_src0_startofpacket),                           //          .startofpacket
		.in_endofpacket    (cmd_demux_src0_endofpacket),                             //          .endofpacket
		.in_data           (cmd_demux_src0_data),                                    //          .data
		.in_channel        (cmd_demux_src0_channel),                                 //          .channel
		.out_ready         (mux_pipeline_source0_ready),                             //   source0.ready
		.out_valid         (mux_pipeline_source0_valid),                             //          .valid
		.out_startofpacket (mux_pipeline_source0_startofpacket),                     //          .startofpacket
		.out_endofpacket   (mux_pipeline_source0_endofpacket),                       //          .endofpacket
		.out_data          (mux_pipeline_source0_data),                              //          .data
		.out_channel       (mux_pipeline_source0_channel),                           //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_001 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src1_ready),                                   //     sink0.ready
		.in_valid          (cmd_demux_src1_valid),                                   //          .valid
		.in_startofpacket  (cmd_demux_src1_startofpacket),                           //          .startofpacket
		.in_endofpacket    (cmd_demux_src1_endofpacket),                             //          .endofpacket
		.in_data           (cmd_demux_src1_data),                                    //          .data
		.in_channel        (cmd_demux_src1_channel),                                 //          .channel
		.out_ready         (mux_pipeline_001_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_001_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_001_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_001_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_001_source0_data),                          //          .data
		.out_channel       (mux_pipeline_001_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_002 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src2_ready),                                   //     sink0.ready
		.in_valid          (cmd_demux_src2_valid),                                   //          .valid
		.in_startofpacket  (cmd_demux_src2_startofpacket),                           //          .startofpacket
		.in_endofpacket    (cmd_demux_src2_endofpacket),                             //          .endofpacket
		.in_data           (cmd_demux_src2_data),                                    //          .data
		.in_channel        (cmd_demux_src2_channel),                                 //          .channel
		.out_ready         (mux_pipeline_002_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_002_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_002_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_002_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_002_source0_data),                          //          .data
		.out_channel       (mux_pipeline_002_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_003 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src3_ready),                                   //     sink0.ready
		.in_valid          (cmd_demux_src3_valid),                                   //          .valid
		.in_startofpacket  (cmd_demux_src3_startofpacket),                           //          .startofpacket
		.in_endofpacket    (cmd_demux_src3_endofpacket),                             //          .endofpacket
		.in_data           (cmd_demux_src3_data),                                    //          .data
		.in_channel        (cmd_demux_src3_channel),                                 //          .channel
		.out_ready         (mux_pipeline_003_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_003_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_003_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_003_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_003_source0_data),                          //          .data
		.out_channel       (mux_pipeline_003_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_004 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src4_ready),                                   //     sink0.ready
		.in_valid          (cmd_demux_src4_valid),                                   //          .valid
		.in_startofpacket  (cmd_demux_src4_startofpacket),                           //          .startofpacket
		.in_endofpacket    (cmd_demux_src4_endofpacket),                             //          .endofpacket
		.in_data           (cmd_demux_src4_data),                                    //          .data
		.in_channel        (cmd_demux_src4_channel),                                 //          .channel
		.out_ready         (mux_pipeline_004_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_004_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_004_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_004_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_004_source0_data),                          //          .data
		.out_channel       (mux_pipeline_004_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_005 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src5_ready),                                   //     sink0.ready
		.in_valid          (cmd_demux_src5_valid),                                   //          .valid
		.in_startofpacket  (cmd_demux_src5_startofpacket),                           //          .startofpacket
		.in_endofpacket    (cmd_demux_src5_endofpacket),                             //          .endofpacket
		.in_data           (cmd_demux_src5_data),                                    //          .data
		.in_channel        (cmd_demux_src5_channel),                                 //          .channel
		.out_ready         (mux_pipeline_005_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_005_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_005_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_005_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_005_source0_data),                          //          .data
		.out_channel       (mux_pipeline_005_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_006 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src6_ready),                                   //     sink0.ready
		.in_valid          (cmd_demux_src6_valid),                                   //          .valid
		.in_startofpacket  (cmd_demux_src6_startofpacket),                           //          .startofpacket
		.in_endofpacket    (cmd_demux_src6_endofpacket),                             //          .endofpacket
		.in_data           (cmd_demux_src6_data),                                    //          .data
		.in_channel        (cmd_demux_src6_channel),                                 //          .channel
		.out_ready         (mux_pipeline_006_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_006_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_006_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_006_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_006_source0_data),                          //          .data
		.out_channel       (mux_pipeline_006_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_007 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src7_ready),                                   //     sink0.ready
		.in_valid          (cmd_demux_src7_valid),                                   //          .valid
		.in_startofpacket  (cmd_demux_src7_startofpacket),                           //          .startofpacket
		.in_endofpacket    (cmd_demux_src7_endofpacket),                             //          .endofpacket
		.in_data           (cmd_demux_src7_data),                                    //          .data
		.in_channel        (cmd_demux_src7_channel),                                 //          .channel
		.out_ready         (mux_pipeline_007_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_007_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_007_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_007_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_007_source0_data),                          //          .data
		.out_channel       (mux_pipeline_007_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_008 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src8_ready),                                   //     sink0.ready
		.in_valid          (cmd_demux_src8_valid),                                   //          .valid
		.in_startofpacket  (cmd_demux_src8_startofpacket),                           //          .startofpacket
		.in_endofpacket    (cmd_demux_src8_endofpacket),                             //          .endofpacket
		.in_data           (cmd_demux_src8_data),                                    //          .data
		.in_channel        (cmd_demux_src8_channel),                                 //          .channel
		.out_ready         (mux_pipeline_008_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_008_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_008_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_008_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_008_source0_data),                          //          .data
		.out_channel       (mux_pipeline_008_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_009 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src9_ready),                                   //     sink0.ready
		.in_valid          (cmd_demux_src9_valid),                                   //          .valid
		.in_startofpacket  (cmd_demux_src9_startofpacket),                           //          .startofpacket
		.in_endofpacket    (cmd_demux_src9_endofpacket),                             //          .endofpacket
		.in_data           (cmd_demux_src9_data),                                    //          .data
		.in_channel        (cmd_demux_src9_channel),                                 //          .channel
		.out_ready         (mux_pipeline_009_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_009_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_009_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_009_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_009_source0_data),                          //          .data
		.out_channel       (mux_pipeline_009_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_010 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src10_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src10_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src10_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src10_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src10_data),                                   //          .data
		.in_channel        (cmd_demux_src10_channel),                                //          .channel
		.out_ready         (mux_pipeline_010_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_010_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_010_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_010_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_010_source0_data),                          //          .data
		.out_channel       (mux_pipeline_010_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_011 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src11_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src11_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src11_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src11_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src11_data),                                   //          .data
		.in_channel        (cmd_demux_src11_channel),                                //          .channel
		.out_ready         (mux_pipeline_011_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_011_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_011_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_011_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_011_source0_data),                          //          .data
		.out_channel       (mux_pipeline_011_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_012 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src12_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src12_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src12_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src12_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src12_data),                                   //          .data
		.in_channel        (cmd_demux_src12_channel),                                //          .channel
		.out_ready         (mux_pipeline_012_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_012_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_012_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_012_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_012_source0_data),                          //          .data
		.out_channel       (mux_pipeline_012_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_013 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src13_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src13_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src13_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src13_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src13_data),                                   //          .data
		.in_channel        (cmd_demux_src13_channel),                                //          .channel
		.out_ready         (mux_pipeline_013_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_013_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_013_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_013_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_013_source0_data),                          //          .data
		.out_channel       (mux_pipeline_013_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_014 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src14_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src14_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src14_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src14_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src14_data),                                   //          .data
		.in_channel        (cmd_demux_src14_channel),                                //          .channel
		.out_ready         (mux_pipeline_014_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_014_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_014_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_014_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_014_source0_data),                          //          .data
		.out_channel       (mux_pipeline_014_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_015 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src15_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src15_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src15_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src15_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src15_data),                                   //          .data
		.in_channel        (cmd_demux_src15_channel),                                //          .channel
		.out_ready         (mux_pipeline_015_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_015_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_015_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_015_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_015_source0_data),                          //          .data
		.out_channel       (mux_pipeline_015_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_016 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src16_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src16_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src16_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src16_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src16_data),                                   //          .data
		.in_channel        (cmd_demux_src16_channel),                                //          .channel
		.out_ready         (mux_pipeline_016_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_016_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_016_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_016_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_016_source0_data),                          //          .data
		.out_channel       (mux_pipeline_016_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_017 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src17_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src17_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src17_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src17_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src17_data),                                   //          .data
		.in_channel        (cmd_demux_src17_channel),                                //          .channel
		.out_ready         (mux_pipeline_017_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_017_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_017_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_017_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_017_source0_data),                          //          .data
		.out_channel       (mux_pipeline_017_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_018 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src18_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src18_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src18_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src18_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src18_data),                                   //          .data
		.in_channel        (cmd_demux_src18_channel),                                //          .channel
		.out_ready         (mux_pipeline_018_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_018_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_018_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_018_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_018_source0_data),                          //          .data
		.out_channel       (mux_pipeline_018_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_019 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src19_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src19_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src19_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src19_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src19_data),                                   //          .data
		.in_channel        (cmd_demux_src19_channel),                                //          .channel
		.out_ready         (mux_pipeline_019_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_019_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_019_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_019_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_019_source0_data),                          //          .data
		.out_channel       (mux_pipeline_019_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_020 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src20_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src20_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src20_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src20_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src20_data),                                   //          .data
		.in_channel        (cmd_demux_src20_channel),                                //          .channel
		.out_ready         (mux_pipeline_020_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_020_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_020_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_020_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_020_source0_data),                          //          .data
		.out_channel       (mux_pipeline_020_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (670),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_021 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (crosser_out_ready),                                                      //     sink0.ready
		.in_valid          (crosser_out_valid),                                                      //          .valid
		.in_startofpacket  (crosser_out_startofpacket),                                              //          .startofpacket
		.in_endofpacket    (crosser_out_endofpacket),                                                //          .endofpacket
		.in_data           (crosser_out_data),                                                       //          .data
		.in_channel        (crosser_out_channel),                                                    //          .channel
		.out_ready         (mux_pipeline_021_source0_ready),                                         //   source0.ready
		.out_valid         (mux_pipeline_021_source0_valid),                                         //          .valid
		.out_startofpacket (mux_pipeline_021_source0_startofpacket),                                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_021_source0_endofpacket),                                   //          .endofpacket
		.out_data          (mux_pipeline_021_source0_data),                                          //          .data
		.out_channel       (mux_pipeline_021_source0_channel),                                       //          .channel
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_error          (1'b0)                                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (670),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_022 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (crosser_001_out_ready),                                                  //     sink0.ready
		.in_valid          (crosser_001_out_valid),                                                  //          .valid
		.in_startofpacket  (crosser_001_out_startofpacket),                                          //          .startofpacket
		.in_endofpacket    (crosser_001_out_endofpacket),                                            //          .endofpacket
		.in_data           (crosser_001_out_data),                                                   //          .data
		.in_channel        (crosser_001_out_channel),                                                //          .channel
		.out_ready         (mux_pipeline_022_source0_ready),                                         //   source0.ready
		.out_valid         (mux_pipeline_022_source0_valid),                                         //          .valid
		.out_startofpacket (mux_pipeline_022_source0_startofpacket),                                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_022_source0_endofpacket),                                   //          .endofpacket
		.out_data          (mux_pipeline_022_source0_data),                                          //          .data
		.out_channel       (mux_pipeline_022_source0_channel),                                       //          .channel
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_error          (1'b0)                                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (670),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_023 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (async_fifo_out_ready),                                                   //     sink0.ready
		.in_valid          (async_fifo_out_valid),                                                   //          .valid
		.in_startofpacket  (async_fifo_out_startofpacket),                                           //          .startofpacket
		.in_endofpacket    (async_fifo_out_endofpacket),                                             //          .endofpacket
		.in_data           (async_fifo_out_data),                                                    //          .data
		.in_channel        (async_fifo_out_channel),                                                 //          .channel
		.out_ready         (mux_pipeline_023_source0_ready),                                         //   source0.ready
		.out_valid         (mux_pipeline_023_source0_valid),                                         //          .valid
		.out_startofpacket (mux_pipeline_023_source0_startofpacket),                                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_023_source0_endofpacket),                                   //          .endofpacket
		.out_data          (mux_pipeline_023_source0_data),                                          //          .data
		.out_channel       (mux_pipeline_023_source0_channel),                                       //          .channel
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_error          (1'b0)                                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (670),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_024 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (async_fifo_001_out_ready),                                               //     sink0.ready
		.in_valid          (async_fifo_001_out_valid),                                               //          .valid
		.in_startofpacket  (async_fifo_001_out_startofpacket),                                       //          .startofpacket
		.in_endofpacket    (async_fifo_001_out_endofpacket),                                         //          .endofpacket
		.in_data           (async_fifo_001_out_data),                                                //          .data
		.in_channel        (async_fifo_001_out_channel),                                             //          .channel
		.out_ready         (mux_pipeline_024_source0_ready),                                         //   source0.ready
		.out_valid         (mux_pipeline_024_source0_valid),                                         //          .valid
		.out_startofpacket (mux_pipeline_024_source0_startofpacket),                                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_024_source0_endofpacket),                                   //          .endofpacket
		.out_data          (mux_pipeline_024_source0_data),                                          //          .data
		.out_channel       (mux_pipeline_024_source0_channel),                                       //          .channel
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_error          (1'b0)                                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (670),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_025 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (async_fifo_002_out_ready),                                               //     sink0.ready
		.in_valid          (async_fifo_002_out_valid),                                               //          .valid
		.in_startofpacket  (async_fifo_002_out_startofpacket),                                       //          .startofpacket
		.in_endofpacket    (async_fifo_002_out_endofpacket),                                         //          .endofpacket
		.in_data           (async_fifo_002_out_data),                                                //          .data
		.in_channel        (async_fifo_002_out_channel),                                             //          .channel
		.out_ready         (mux_pipeline_025_source0_ready),                                         //   source0.ready
		.out_valid         (mux_pipeline_025_source0_valid),                                         //          .valid
		.out_startofpacket (mux_pipeline_025_source0_startofpacket),                                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_025_source0_endofpacket),                                   //          .endofpacket
		.out_data          (mux_pipeline_025_source0_data),                                          //          .data
		.out_channel       (mux_pipeline_025_source0_channel),                                       //          .channel
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_error          (1'b0)                                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (670),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_026 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (async_fifo_003_out_ready),                                               //     sink0.ready
		.in_valid          (async_fifo_003_out_valid),                                               //          .valid
		.in_startofpacket  (async_fifo_003_out_startofpacket),                                       //          .startofpacket
		.in_endofpacket    (async_fifo_003_out_endofpacket),                                         //          .endofpacket
		.in_data           (async_fifo_003_out_data),                                                //          .data
		.in_channel        (async_fifo_003_out_channel),                                             //          .channel
		.out_ready         (mux_pipeline_026_source0_ready),                                         //   source0.ready
		.out_valid         (mux_pipeline_026_source0_valid),                                         //          .valid
		.out_startofpacket (mux_pipeline_026_source0_startofpacket),                                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_026_source0_endofpacket),                                   //          .endofpacket
		.out_data          (mux_pipeline_026_source0_data),                                          //          .data
		.out_channel       (mux_pipeline_026_source0_channel),                                       //          .channel
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_error          (1'b0)                                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (670),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_027 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (async_fifo_004_out_ready),                                               //     sink0.ready
		.in_valid          (async_fifo_004_out_valid),                                               //          .valid
		.in_startofpacket  (async_fifo_004_out_startofpacket),                                       //          .startofpacket
		.in_endofpacket    (async_fifo_004_out_endofpacket),                                         //          .endofpacket
		.in_data           (async_fifo_004_out_data),                                                //          .data
		.in_channel        (async_fifo_004_out_channel),                                             //          .channel
		.out_ready         (mux_pipeline_027_source0_ready),                                         //   source0.ready
		.out_valid         (mux_pipeline_027_source0_valid),                                         //          .valid
		.out_startofpacket (mux_pipeline_027_source0_startofpacket),                                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_027_source0_endofpacket),                                   //          .endofpacket
		.out_data          (mux_pipeline_027_source0_data),                                          //          .data
		.out_channel       (mux_pipeline_027_source0_channel),                                       //          .channel
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_error          (1'b0)                                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (670),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_028 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (async_fifo_005_out_ready),                                               //     sink0.ready
		.in_valid          (async_fifo_005_out_valid),                                               //          .valid
		.in_startofpacket  (async_fifo_005_out_startofpacket),                                       //          .startofpacket
		.in_endofpacket    (async_fifo_005_out_endofpacket),                                         //          .endofpacket
		.in_data           (async_fifo_005_out_data),                                                //          .data
		.in_channel        (async_fifo_005_out_channel),                                             //          .channel
		.out_ready         (mux_pipeline_028_source0_ready),                                         //   source0.ready
		.out_valid         (mux_pipeline_028_source0_valid),                                         //          .valid
		.out_startofpacket (mux_pipeline_028_source0_startofpacket),                                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_028_source0_endofpacket),                                   //          .endofpacket
		.out_data          (mux_pipeline_028_source0_data),                                          //          .data
		.out_channel       (mux_pipeline_028_source0_channel),                                       //          .channel
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_error          (1'b0)                                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_029 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src22_ready),                     //     sink0.ready
		.in_valid          (cmd_demux_src22_valid),                     //          .valid
		.in_startofpacket  (cmd_demux_src22_startofpacket),             //          .startofpacket
		.in_endofpacket    (cmd_demux_src22_endofpacket),               //          .endofpacket
		.in_data           (cmd_demux_src22_data),                      //          .data
		.in_channel        (cmd_demux_src22_channel),                   //          .channel
		.out_ready         (mux_pipeline_029_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_029_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_029_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_029_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_029_source0_data),             //          .data
		.out_channel       (mux_pipeline_029_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_030 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_001_src1_ready),                  //     sink0.ready
		.in_valid          (cmd_demux_001_src1_valid),                  //          .valid
		.in_startofpacket  (cmd_demux_001_src1_startofpacket),          //          .startofpacket
		.in_endofpacket    (cmd_demux_001_src1_endofpacket),            //          .endofpacket
		.in_data           (cmd_demux_001_src1_data),                   //          .data
		.in_channel        (cmd_demux_001_src1_channel),                //          .channel
		.out_ready         (mux_pipeline_030_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_030_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_030_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_030_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_030_source0_data),             //          .data
		.out_channel       (mux_pipeline_030_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (382),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_031 (
		.clk               (sys_clk_clk_clk),                                                                                 //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                                          // cr0_reset.reset
		.in_ready          (sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter_src_ready),         //     sink0.ready
		.in_valid          (sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter_src_valid),         //          .valid
		.in_startofpacket  (sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter_src_startofpacket), //          .startofpacket
		.in_endofpacket    (sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter_src_endofpacket),   //          .endofpacket
		.in_data           (sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter_src_data),          //          .data
		.in_channel        (sys_cpu_data_master_to_sys_ethernet_dma_rx_descriptor_slave_cmd_width_adapter_src_channel),       //          .channel
		.out_ready         (mux_pipeline_031_source0_ready),                                                                  //   source0.ready
		.out_valid         (mux_pipeline_031_source0_valid),                                                                  //          .valid
		.out_startofpacket (mux_pipeline_031_source0_startofpacket),                                                          //          .startofpacket
		.out_endofpacket   (mux_pipeline_031_source0_endofpacket),                                                            //          .endofpacket
		.out_data          (mux_pipeline_031_source0_data),                                                                   //          .data
		.out_channel       (mux_pipeline_031_source0_channel),                                                                //          .channel
		.in_empty          (1'b0),                                                                                            // (terminated)
		.out_empty         (),                                                                                                // (terminated)
		.out_error         (),                                                                                                // (terminated)
		.in_error          (1'b0)                                                                                             // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (382),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_032 (
		.clk               (sys_clk_clk_clk),                                                                                 //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),                                          // cr0_reset.reset
		.in_ready          (sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter_src_ready),         //     sink0.ready
		.in_valid          (sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter_src_valid),         //          .valid
		.in_startofpacket  (sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter_src_startofpacket), //          .startofpacket
		.in_endofpacket    (sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter_src_endofpacket),   //          .endofpacket
		.in_data           (sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter_src_data),          //          .data
		.in_channel        (sys_cpu_data_master_to_sys_ethernet_dma_tx_descriptor_slave_cmd_width_adapter_src_channel),       //          .channel
		.out_ready         (mux_pipeline_032_source0_ready),                                                                  //   source0.ready
		.out_valid         (mux_pipeline_032_source0_valid),                                                                  //          .valid
		.out_startofpacket (mux_pipeline_032_source0_startofpacket),                                                          //          .startofpacket
		.out_endofpacket   (mux_pipeline_032_source0_endofpacket),                                                            //          .endofpacket
		.out_data          (mux_pipeline_032_source0_data),                                                                   //          .data
		.out_channel       (mux_pipeline_032_source0_channel),                                                                //          .channel
		.in_empty          (1'b0),                                                                                            // (terminated)
		.out_empty         (),                                                                                                // (terminated)
		.out_error         (),                                                                                                // (terminated)
		.in_error          (1'b0)                                                                                             // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_033 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src25_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src25_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src25_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src25_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src25_data),                                   //          .data
		.in_channel        (cmd_demux_src25_channel),                                //          .channel
		.out_ready         (mux_pipeline_033_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_033_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_033_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_033_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_033_source0_data),                          //          .data
		.out_channel       (mux_pipeline_033_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_034 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src26_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src26_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src26_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src26_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src26_data),                                   //          .data
		.in_channel        (cmd_demux_src26_channel),                                //          .channel
		.out_ready         (mux_pipeline_034_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_034_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_034_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_034_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_034_source0_data),                          //          .data
		.out_channel       (mux_pipeline_034_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_035 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src27_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src27_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src27_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src27_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src27_data),                                   //          .data
		.in_channel        (cmd_demux_src27_channel),                                //          .channel
		.out_ready         (mux_pipeline_035_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_035_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_035_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_035_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_035_source0_data),                          //          .data
		.out_channel       (mux_pipeline_035_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_036 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src28_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src28_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src28_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src28_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src28_data),                                   //          .data
		.in_channel        (cmd_demux_src28_channel),                                //          .channel
		.out_ready         (mux_pipeline_036_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_036_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_036_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_036_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_036_source0_data),                          //          .data
		.out_channel       (mux_pipeline_036_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_037 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src29_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src29_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src29_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src29_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src29_data),                                   //          .data
		.in_channel        (cmd_demux_src29_channel),                                //          .channel
		.out_ready         (mux_pipeline_037_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_037_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_037_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_037_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_037_source0_data),                          //          .data
		.out_channel       (mux_pipeline_037_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_038 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src30_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src30_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src30_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src30_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src30_data),                                   //          .data
		.in_channel        (cmd_demux_src30_channel),                                //          .channel
		.out_ready         (mux_pipeline_038_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_038_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_038_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_038_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_038_source0_data),                          //          .data
		.out_channel       (mux_pipeline_038_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_039 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src31_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src31_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src31_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src31_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src31_data),                                   //          .data
		.in_channel        (cmd_demux_src31_channel),                                //          .channel
		.out_ready         (mux_pipeline_039_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_039_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_039_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_039_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_039_source0_data),                          //          .data
		.out_channel       (mux_pipeline_039_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_040 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src32_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src32_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src32_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src32_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src32_data),                                   //          .data
		.in_channel        (cmd_demux_src32_channel),                                //          .channel
		.out_ready         (mux_pipeline_040_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_040_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_040_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_040_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_040_source0_data),                          //          .data
		.out_channel       (mux_pipeline_040_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_041 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src33_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src33_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src33_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src33_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src33_data),                                   //          .data
		.in_channel        (cmd_demux_src33_channel),                                //          .channel
		.out_ready         (mux_pipeline_041_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_041_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_041_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_041_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_041_source0_data),                          //          .data
		.out_channel       (mux_pipeline_041_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_042 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src34_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src34_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src34_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src34_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src34_data),                                   //          .data
		.in_channel        (cmd_demux_src34_channel),                                //          .channel
		.out_ready         (mux_pipeline_042_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_042_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_042_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_042_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_042_source0_data),                          //          .data
		.out_channel       (mux_pipeline_042_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_043 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src35_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src35_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src35_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src35_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src35_data),                                   //          .data
		.in_channel        (cmd_demux_src35_channel),                                //          .channel
		.out_ready         (mux_pipeline_043_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_043_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_043_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_043_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_043_source0_data),                          //          .data
		.out_channel       (mux_pipeline_043_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_044 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src36_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src36_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src36_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src36_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src36_data),                                   //          .data
		.in_channel        (cmd_demux_src36_channel),                                //          .channel
		.out_ready         (mux_pipeline_044_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_044_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_044_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_044_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_044_source0_data),                          //          .data
		.out_channel       (mux_pipeline_044_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_045 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src37_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src37_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src37_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src37_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src37_data),                                   //          .data
		.in_channel        (cmd_demux_src37_channel),                                //          .channel
		.out_ready         (mux_pipeline_045_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_045_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_045_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_045_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_045_source0_data),                          //          .data
		.out_channel       (mux_pipeline_045_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_046 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_001_src2_ready),                               //     sink0.ready
		.in_valid          (cmd_demux_001_src2_valid),                               //          .valid
		.in_startofpacket  (cmd_demux_001_src2_startofpacket),                       //          .startofpacket
		.in_endofpacket    (cmd_demux_001_src2_endofpacket),                         //          .endofpacket
		.in_data           (cmd_demux_001_src2_data),                                //          .data
		.in_channel        (cmd_demux_001_src2_channel),                             //          .channel
		.out_ready         (mux_pipeline_046_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_046_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_046_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_046_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_046_source0_data),                          //          .data
		.out_channel       (mux_pipeline_046_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_047 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src38_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src38_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src38_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src38_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src38_data),                                   //          .data
		.in_channel        (cmd_demux_src38_channel),                                //          .channel
		.out_ready         (mux_pipeline_047_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_047_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_047_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_047_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_047_source0_data),                          //          .data
		.out_channel       (mux_pipeline_047_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_048 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src39_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src39_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src39_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src39_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src39_data),                                   //          .data
		.in_channel        (cmd_demux_src39_channel),                                //          .channel
		.out_ready         (mux_pipeline_048_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_048_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_048_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_048_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_048_source0_data),                          //          .data
		.out_channel       (mux_pipeline_048_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_049 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src40_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src40_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src40_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src40_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src40_data),                                   //          .data
		.in_channel        (cmd_demux_src40_channel),                                //          .channel
		.out_ready         (mux_pipeline_049_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_049_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_049_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_049_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_049_source0_data),                          //          .data
		.out_channel       (mux_pipeline_049_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_050 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src41_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src41_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src41_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src41_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src41_data),                                   //          .data
		.in_channel        (cmd_demux_src41_channel),                                //          .channel
		.out_ready         (mux_pipeline_050_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_050_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_050_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_050_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_050_source0_data),                          //          .data
		.out_channel       (mux_pipeline_050_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_051 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src42_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src42_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src42_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src42_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src42_data),                                   //          .data
		.in_channel        (cmd_demux_src42_channel),                                //          .channel
		.out_ready         (mux_pipeline_051_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_051_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_051_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_051_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_051_source0_data),                          //          .data
		.out_channel       (mux_pipeline_051_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_052 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src43_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src43_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src43_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src43_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src43_data),                                   //          .data
		.in_channel        (cmd_demux_src43_channel),                                //          .channel
		.out_ready         (mux_pipeline_052_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_052_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_052_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_052_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_052_source0_data),                          //          .data
		.out_channel       (mux_pipeline_052_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_053 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src44_ready),                                  //     sink0.ready
		.in_valid          (cmd_demux_src44_valid),                                  //          .valid
		.in_startofpacket  (cmd_demux_src44_startofpacket),                          //          .startofpacket
		.in_endofpacket    (cmd_demux_src44_endofpacket),                            //          .endofpacket
		.in_data           (cmd_demux_src44_data),                                   //          .data
		.in_channel        (cmd_demux_src44_channel),                                //          .channel
		.out_ready         (mux_pipeline_053_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_053_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_053_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_053_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_053_source0_data),                          //          .data
		.out_channel       (mux_pipeline_053_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_054 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_001_src3_ready),                               //     sink0.ready
		.in_valid          (cmd_demux_001_src3_valid),                               //          .valid
		.in_startofpacket  (cmd_demux_001_src3_startofpacket),                       //          .startofpacket
		.in_endofpacket    (cmd_demux_001_src3_endofpacket),                         //          .endofpacket
		.in_data           (cmd_demux_001_src3_data),                                //          .data
		.in_channel        (cmd_demux_001_src3_channel),                             //          .channel
		.out_ready         (mux_pipeline_054_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_054_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_054_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_054_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_054_source0_data),                          //          .data
		.out_channel       (mux_pipeline_054_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_055 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_src0_ready),                      //     sink0.ready
		.in_valid          (rsp_demux_src0_valid),                      //          .valid
		.in_startofpacket  (rsp_demux_src0_startofpacket),              //          .startofpacket
		.in_endofpacket    (rsp_demux_src0_endofpacket),                //          .endofpacket
		.in_data           (rsp_demux_src0_data),                       //          .data
		.in_channel        (rsp_demux_src0_channel),                    //          .channel
		.out_ready         (mux_pipeline_055_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_055_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_055_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_055_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_055_source0_data),             //          .data
		.out_channel       (mux_pipeline_055_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_056 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_001_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_001_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_001_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_001_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_001_src0_data),                   //          .data
		.in_channel        (rsp_demux_001_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_056_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_056_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_056_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_056_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_056_source0_data),             //          .data
		.out_channel       (mux_pipeline_056_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_057 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_002_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_002_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_002_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_002_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_002_src0_data),                   //          .data
		.in_channel        (rsp_demux_002_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_057_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_057_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_057_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_057_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_057_source0_data),             //          .data
		.out_channel       (mux_pipeline_057_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_058 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_003_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_003_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_003_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_003_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_003_src0_data),                   //          .data
		.in_channel        (rsp_demux_003_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_058_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_058_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_058_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_058_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_058_source0_data),             //          .data
		.out_channel       (mux_pipeline_058_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_059 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_004_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_004_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_004_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_004_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_004_src0_data),                   //          .data
		.in_channel        (rsp_demux_004_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_059_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_059_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_059_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_059_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_059_source0_data),             //          .data
		.out_channel       (mux_pipeline_059_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_060 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_005_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_005_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_005_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_005_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_005_src0_data),                   //          .data
		.in_channel        (rsp_demux_005_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_060_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_060_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_060_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_060_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_060_source0_data),             //          .data
		.out_channel       (mux_pipeline_060_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_061 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_006_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_006_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_006_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_006_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_006_src0_data),                   //          .data
		.in_channel        (rsp_demux_006_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_061_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_061_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_061_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_061_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_061_source0_data),             //          .data
		.out_channel       (mux_pipeline_061_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_062 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_007_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_007_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_007_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_007_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_007_src0_data),                   //          .data
		.in_channel        (rsp_demux_007_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_062_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_062_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_062_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_062_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_062_source0_data),             //          .data
		.out_channel       (mux_pipeline_062_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_063 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_008_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_008_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_008_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_008_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_008_src0_data),                   //          .data
		.in_channel        (rsp_demux_008_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_063_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_063_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_063_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_063_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_063_source0_data),             //          .data
		.out_channel       (mux_pipeline_063_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_064 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_009_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_009_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_009_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_009_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_009_src0_data),                   //          .data
		.in_channel        (rsp_demux_009_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_064_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_064_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_064_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_064_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_064_source0_data),             //          .data
		.out_channel       (mux_pipeline_064_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_065 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_010_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_010_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_010_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_010_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_010_src0_data),                   //          .data
		.in_channel        (rsp_demux_010_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_065_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_065_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_065_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_065_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_065_source0_data),             //          .data
		.out_channel       (mux_pipeline_065_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_066 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_011_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_011_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_011_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_011_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_011_src0_data),                   //          .data
		.in_channel        (rsp_demux_011_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_066_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_066_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_066_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_066_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_066_source0_data),             //          .data
		.out_channel       (mux_pipeline_066_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_067 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_012_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_012_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_012_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_012_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_012_src0_data),                   //          .data
		.in_channel        (rsp_demux_012_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_067_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_067_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_067_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_067_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_067_source0_data),             //          .data
		.out_channel       (mux_pipeline_067_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_068 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_013_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_013_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_013_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_013_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_013_src0_data),                   //          .data
		.in_channel        (rsp_demux_013_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_068_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_068_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_068_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_068_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_068_source0_data),             //          .data
		.out_channel       (mux_pipeline_068_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_069 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_014_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_014_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_014_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_014_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_014_src0_data),                   //          .data
		.in_channel        (rsp_demux_014_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_069_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_069_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_069_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_069_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_069_source0_data),             //          .data
		.out_channel       (mux_pipeline_069_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_070 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_015_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_015_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_015_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_015_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_015_src0_data),                   //          .data
		.in_channel        (rsp_demux_015_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_070_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_070_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_070_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_070_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_070_source0_data),             //          .data
		.out_channel       (mux_pipeline_070_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_071 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_016_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_016_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_016_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_016_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_016_src0_data),                   //          .data
		.in_channel        (rsp_demux_016_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_071_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_071_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_071_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_071_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_071_source0_data),             //          .data
		.out_channel       (mux_pipeline_071_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_072 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_017_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_017_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_017_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_017_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_017_src0_data),                   //          .data
		.in_channel        (rsp_demux_017_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_072_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_072_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_072_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_072_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_072_source0_data),             //          .data
		.out_channel       (mux_pipeline_072_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_073 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_018_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_018_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_018_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_018_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_018_src0_data),                   //          .data
		.in_channel        (rsp_demux_018_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_073_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_073_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_073_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_073_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_073_source0_data),             //          .data
		.out_channel       (mux_pipeline_073_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_074 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_019_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_019_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_019_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_019_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_019_src0_data),                   //          .data
		.in_channel        (rsp_demux_019_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_074_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_074_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_074_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_074_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_074_source0_data),             //          .data
		.out_channel       (mux_pipeline_074_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_075 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_020_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_020_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_020_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_020_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_020_src0_data),                   //          .data
		.in_channel        (rsp_demux_020_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_075_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_075_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_075_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_075_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_075_source0_data),             //          .data
		.out_channel       (mux_pipeline_075_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_076 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (crosser_002_out_ready),                     //     sink0.ready
		.in_valid          (crosser_002_out_valid),                     //          .valid
		.in_startofpacket  (crosser_002_out_startofpacket),             //          .startofpacket
		.in_endofpacket    (crosser_002_out_endofpacket),               //          .endofpacket
		.in_data           (crosser_002_out_data),                      //          .data
		.in_channel        (crosser_002_out_channel),                   //          .channel
		.out_ready         (mux_pipeline_076_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_076_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_076_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_076_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_076_source0_data),             //          .data
		.out_channel       (mux_pipeline_076_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_077 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_022_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_022_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_022_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_022_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_022_src0_data),                   //          .data
		.in_channel        (rsp_demux_022_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_077_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_077_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_077_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_077_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_077_source0_data),             //          .data
		.out_channel       (mux_pipeline_077_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_078 (
		.clk               (sys_clk_clk_clk),                                                                                 //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset),                                                       // cr0_reset.reset
		.in_ready          (sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_ready),         //     sink0.ready
		.in_valid          (sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_valid),         //          .valid
		.in_startofpacket  (sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_endofpacket    (sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_endofpacket),   //          .endofpacket
		.in_data           (sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_data),          //          .data
		.in_channel        (sys_ethernet_dma_rx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_channel),       //          .channel
		.out_ready         (mux_pipeline_078_source0_ready),                                                                  //   source0.ready
		.out_valid         (mux_pipeline_078_source0_valid),                                                                  //          .valid
		.out_startofpacket (mux_pipeline_078_source0_startofpacket),                                                          //          .startofpacket
		.out_endofpacket   (mux_pipeline_078_source0_endofpacket),                                                            //          .endofpacket
		.out_data          (mux_pipeline_078_source0_data),                                                                   //          .data
		.out_channel       (mux_pipeline_078_source0_channel),                                                                //          .channel
		.in_empty          (1'b0),                                                                                            // (terminated)
		.out_empty         (),                                                                                                // (terminated)
		.out_error         (),                                                                                                // (terminated)
		.in_error          (1'b0)                                                                                             // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_079 (
		.clk               (sys_clk_clk_clk),                                                                                 //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset),                                                       // cr0_reset.reset
		.in_ready          (sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_ready),         //     sink0.ready
		.in_valid          (sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_valid),         //          .valid
		.in_startofpacket  (sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_endofpacket    (sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_endofpacket),   //          .endofpacket
		.in_data           (sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_data),          //          .data
		.in_channel        (sys_ethernet_dma_tx_descriptor_slave_to_sys_cpu_data_master_rsp_width_adapter_src_channel),       //          .channel
		.out_ready         (mux_pipeline_079_source0_ready),                                                                  //   source0.ready
		.out_valid         (mux_pipeline_079_source0_valid),                                                                  //          .valid
		.out_startofpacket (mux_pipeline_079_source0_startofpacket),                                                          //          .startofpacket
		.out_endofpacket   (mux_pipeline_079_source0_endofpacket),                                                            //          .endofpacket
		.out_data          (mux_pipeline_079_source0_data),                                                                   //          .data
		.out_channel       (mux_pipeline_079_source0_channel),                                                                //          .channel
		.in_empty          (1'b0),                                                                                            // (terminated)
		.out_empty         (),                                                                                                // (terminated)
		.out_error         (),                                                                                                // (terminated)
		.in_error          (1'b0)                                                                                             // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_080 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_025_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_025_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_025_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_025_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_025_src0_data),                   //          .data
		.in_channel        (rsp_demux_025_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_080_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_080_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_080_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_080_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_080_source0_data),             //          .data
		.out_channel       (mux_pipeline_080_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_081 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_026_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_026_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_026_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_026_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_026_src0_data),                   //          .data
		.in_channel        (rsp_demux_026_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_081_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_081_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_081_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_081_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_081_source0_data),             //          .data
		.out_channel       (mux_pipeline_081_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_082 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_027_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_027_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_027_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_027_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_027_src0_data),                   //          .data
		.in_channel        (rsp_demux_027_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_082_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_082_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_082_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_082_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_082_source0_data),             //          .data
		.out_channel       (mux_pipeline_082_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_083 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_028_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_028_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_028_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_028_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_028_src0_data),                   //          .data
		.in_channel        (rsp_demux_028_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_083_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_083_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_083_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_083_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_083_source0_data),             //          .data
		.out_channel       (mux_pipeline_083_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_084 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_029_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_029_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_029_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_029_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_029_src0_data),                   //          .data
		.in_channel        (rsp_demux_029_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_084_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_084_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_084_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_084_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_084_source0_data),             //          .data
		.out_channel       (mux_pipeline_084_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_085 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_030_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_030_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_030_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_030_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_030_src0_data),                   //          .data
		.in_channel        (rsp_demux_030_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_085_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_085_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_085_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_085_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_085_source0_data),             //          .data
		.out_channel       (mux_pipeline_085_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_086 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_031_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_031_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_031_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_031_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_031_src0_data),                   //          .data
		.in_channel        (rsp_demux_031_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_086_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_086_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_086_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_086_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_086_source0_data),             //          .data
		.out_channel       (mux_pipeline_086_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_087 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_032_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_032_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_032_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_032_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_032_src0_data),                   //          .data
		.in_channel        (rsp_demux_032_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_087_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_087_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_087_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_087_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_087_source0_data),             //          .data
		.out_channel       (mux_pipeline_087_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_088 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_033_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_033_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_033_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_033_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_033_src0_data),                   //          .data
		.in_channel        (rsp_demux_033_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_088_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_088_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_088_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_088_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_088_source0_data),             //          .data
		.out_channel       (mux_pipeline_088_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_089 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_034_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_034_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_034_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_034_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_034_src0_data),                   //          .data
		.in_channel        (rsp_demux_034_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_089_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_089_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_089_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_089_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_089_source0_data),             //          .data
		.out_channel       (mux_pipeline_089_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_090 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_035_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_035_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_035_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_035_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_035_src0_data),                   //          .data
		.in_channel        (rsp_demux_035_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_090_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_090_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_090_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_090_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_090_source0_data),             //          .data
		.out_channel       (mux_pipeline_090_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_091 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_036_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_036_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_036_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_036_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_036_src0_data),                   //          .data
		.in_channel        (rsp_demux_036_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_091_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_091_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_091_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_091_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_091_source0_data),             //          .data
		.out_channel       (mux_pipeline_091_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_092 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_037_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_037_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_037_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_037_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_037_src0_data),                   //          .data
		.in_channel        (rsp_demux_037_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_092_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_092_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_092_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_092_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_092_source0_data),             //          .data
		.out_channel       (mux_pipeline_092_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_093 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_038_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_038_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_038_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_038_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_038_src0_data),                   //          .data
		.in_channel        (rsp_demux_038_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_093_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_093_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_093_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_093_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_093_source0_data),             //          .data
		.out_channel       (mux_pipeline_093_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_094 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_039_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_039_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_039_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_039_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_039_src0_data),                   //          .data
		.in_channel        (rsp_demux_039_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_094_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_094_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_094_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_094_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_094_source0_data),             //          .data
		.out_channel       (mux_pipeline_094_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_095 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_040_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_040_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_040_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_040_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_040_src0_data),                   //          .data
		.in_channel        (rsp_demux_040_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_095_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_095_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_095_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_095_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_095_source0_data),             //          .data
		.out_channel       (mux_pipeline_095_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_096 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_041_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_041_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_041_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_041_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_041_src0_data),                   //          .data
		.in_channel        (rsp_demux_041_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_096_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_096_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_096_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_096_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_096_source0_data),             //          .data
		.out_channel       (mux_pipeline_096_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_097 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_042_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_042_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_042_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_042_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_042_src0_data),                   //          .data
		.in_channel        (rsp_demux_042_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_097_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_097_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_097_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_097_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_097_source0_data),             //          .data
		.out_channel       (mux_pipeline_097_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_098 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_043_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_043_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_043_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_043_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_043_src0_data),                   //          .data
		.in_channel        (rsp_demux_043_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_098_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_098_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_098_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_098_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_098_source0_data),             //          .data
		.out_channel       (mux_pipeline_098_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_099 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_044_src0_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_044_src0_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_044_src0_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_044_src0_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_044_src0_data),                   //          .data
		.in_channel        (rsp_demux_044_src0_channel),                //          .channel
		.out_ready         (mux_pipeline_099_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_099_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_099_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_099_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_099_source0_data),             //          .data
		.out_channel       (mux_pipeline_099_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_100 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (crosser_003_out_ready),                     //     sink0.ready
		.in_valid          (crosser_003_out_valid),                     //          .valid
		.in_startofpacket  (crosser_003_out_startofpacket),             //          .startofpacket
		.in_endofpacket    (crosser_003_out_endofpacket),               //          .endofpacket
		.in_data           (crosser_003_out_data),                      //          .data
		.in_channel        (crosser_003_out_channel),                   //          .channel
		.out_ready         (mux_pipeline_100_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_100_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_100_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_100_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_100_source0_data),             //          .data
		.out_channel       (mux_pipeline_100_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_101 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_022_src1_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_022_src1_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_022_src1_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_022_src1_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_022_src1_data),                   //          .data
		.in_channel        (rsp_demux_022_src1_channel),                //          .channel
		.out_ready         (mux_pipeline_101_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_101_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_101_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_101_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_101_source0_data),             //          .data
		.out_channel       (mux_pipeline_101_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_102 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_037_src1_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_037_src1_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_037_src1_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_037_src1_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_037_src1_data),                   //          .data
		.in_channel        (rsp_demux_037_src1_channel),                //          .channel
		.out_ready         (mux_pipeline_102_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_102_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_102_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_102_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_102_source0_data),             //          .data
		.out_channel       (mux_pipeline_102_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_103 (
		.clk               (sys_clk_clk_clk),                           //       cr0.clk
		.reset             (sys_cpu_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_044_src1_ready),                  //     sink0.ready
		.in_valid          (rsp_demux_044_src1_valid),                  //          .valid
		.in_startofpacket  (rsp_demux_044_src1_startofpacket),          //          .startofpacket
		.in_endofpacket    (rsp_demux_044_src1_endofpacket),            //          .endofpacket
		.in_data           (rsp_demux_044_src1_data),                   //          .data
		.in_channel        (rsp_demux_044_src1_channel),                //          .channel
		.out_ready         (mux_pipeline_103_source0_ready),            //   source0.ready
		.out_valid         (mux_pipeline_103_source0_valid),            //          .valid
		.out_startofpacket (mux_pipeline_103_source0_startofpacket),    //          .startofpacket
		.out_endofpacket   (mux_pipeline_103_source0_endofpacket),      //          .endofpacket
		.out_data          (mux_pipeline_103_source0_data),             //          .data
		.out_channel       (mux_pipeline_103_source0_channel),          //          .channel
		.in_empty          (1'b0),                                      // (terminated)
		.out_empty         (),                                          // (terminated)
		.out_error         (),                                          // (terminated)
		.in_error          (1'b0)                                       // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (238),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_104 (
		.clk               (sys_dma_clk_clk_clk),                                         //       cr0.clk
		.reset             (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (async_fifo_006_out_ready),                                    //     sink0.ready
		.in_valid          (async_fifo_006_out_valid),                                    //          .valid
		.in_startofpacket  (async_fifo_006_out_startofpacket),                            //          .startofpacket
		.in_endofpacket    (async_fifo_006_out_endofpacket),                              //          .endofpacket
		.in_data           (async_fifo_006_out_data),                                     //          .data
		.in_channel        (async_fifo_006_out_channel),                                  //          .channel
		.out_ready         (mux_pipeline_104_source0_ready),                              //   source0.ready
		.out_valid         (mux_pipeline_104_source0_valid),                              //          .valid
		.out_startofpacket (mux_pipeline_104_source0_startofpacket),                      //          .startofpacket
		.out_endofpacket   (mux_pipeline_104_source0_endofpacket),                        //          .endofpacket
		.out_data          (mux_pipeline_104_source0_data),                               //          .data
		.out_channel       (mux_pipeline_104_source0_channel),                            //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (238),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_105 (
		.clk               (sys_dma_clk_clk_clk),                                         //       cr0.clk
		.reset             (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (async_fifo_007_out_ready),                                    //     sink0.ready
		.in_valid          (async_fifo_007_out_valid),                                    //          .valid
		.in_startofpacket  (async_fifo_007_out_startofpacket),                            //          .startofpacket
		.in_endofpacket    (async_fifo_007_out_endofpacket),                              //          .endofpacket
		.in_data           (async_fifo_007_out_data),                                     //          .data
		.in_channel        (async_fifo_007_out_channel),                                  //          .channel
		.out_ready         (mux_pipeline_105_source0_ready),                              //   source0.ready
		.out_valid         (mux_pipeline_105_source0_valid),                              //          .valid
		.out_startofpacket (mux_pipeline_105_source0_startofpacket),                      //          .startofpacket
		.out_endofpacket   (mux_pipeline_105_source0_endofpacket),                        //          .endofpacket
		.out_data          (mux_pipeline_105_source0_data),                               //          .data
		.out_channel       (mux_pipeline_105_source0_channel),                            //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (238),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_106 (
		.clk               (sys_dma_clk_clk_clk),                                         //       cr0.clk
		.reset             (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (async_fifo_008_out_ready),                                    //     sink0.ready
		.in_valid          (async_fifo_008_out_valid),                                    //          .valid
		.in_startofpacket  (async_fifo_008_out_startofpacket),                            //          .startofpacket
		.in_endofpacket    (async_fifo_008_out_endofpacket),                              //          .endofpacket
		.in_data           (async_fifo_008_out_data),                                     //          .data
		.in_channel        (async_fifo_008_out_channel),                                  //          .channel
		.out_ready         (mux_pipeline_106_source0_ready),                              //   source0.ready
		.out_valid         (mux_pipeline_106_source0_valid),                              //          .valid
		.out_startofpacket (mux_pipeline_106_source0_startofpacket),                      //          .startofpacket
		.out_endofpacket   (mux_pipeline_106_source0_endofpacket),                        //          .endofpacket
		.out_data          (mux_pipeline_106_source0_data),                               //          .data
		.out_channel       (mux_pipeline_106_source0_channel),                            //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (238),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_107 (
		.clk               (sys_dma_clk_clk_clk),                                         //       cr0.clk
		.reset             (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (async_fifo_009_out_ready),                                    //     sink0.ready
		.in_valid          (async_fifo_009_out_valid),                                    //          .valid
		.in_startofpacket  (async_fifo_009_out_startofpacket),                            //          .startofpacket
		.in_endofpacket    (async_fifo_009_out_endofpacket),                              //          .endofpacket
		.in_data           (async_fifo_009_out_data),                                     //          .data
		.in_channel        (async_fifo_009_out_channel),                                  //          .channel
		.out_ready         (mux_pipeline_107_source0_ready),                              //   source0.ready
		.out_valid         (mux_pipeline_107_source0_valid),                              //          .valid
		.out_startofpacket (mux_pipeline_107_source0_startofpacket),                      //          .startofpacket
		.out_endofpacket   (mux_pipeline_107_source0_endofpacket),                        //          .endofpacket
		.out_data          (mux_pipeline_107_source0_data),                               //          .data
		.out_channel       (mux_pipeline_107_source0_channel),                            //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (166),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_108 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (async_fifo_010_out_ready),                               //     sink0.ready
		.in_valid          (async_fifo_010_out_valid),                               //          .valid
		.in_startofpacket  (async_fifo_010_out_startofpacket),                       //          .startofpacket
		.in_endofpacket    (async_fifo_010_out_endofpacket),                         //          .endofpacket
		.in_data           (async_fifo_010_out_data),                                //          .data
		.in_channel        (async_fifo_010_out_channel),                             //          .channel
		.out_ready         (mux_pipeline_108_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_108_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_108_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_108_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_108_source0_data),                          //          .data
		.out_channel       (mux_pipeline_108_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (166),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_109 (
		.clk               (sys_clk_clk_clk),                                        //       cr0.clk
		.reset             (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (async_fifo_011_out_ready),                               //     sink0.ready
		.in_valid          (async_fifo_011_out_valid),                               //          .valid
		.in_startofpacket  (async_fifo_011_out_startofpacket),                       //          .startofpacket
		.in_endofpacket    (async_fifo_011_out_endofpacket),                         //          .endofpacket
		.in_data           (async_fifo_011_out_data),                                //          .data
		.in_channel        (async_fifo_011_out_channel),                             //          .channel
		.out_ready         (mux_pipeline_109_source0_ready),                         //   source0.ready
		.out_valid         (mux_pipeline_109_source0_valid),                         //          .valid
		.out_startofpacket (mux_pipeline_109_source0_startofpacket),                 //          .startofpacket
		.out_endofpacket   (mux_pipeline_109_source0_endofpacket),                   //          .endofpacket
		.out_data          (mux_pipeline_109_source0_data),                          //          .data
		.out_channel       (mux_pipeline_109_source0_channel),                       //          .channel
		.in_empty          (1'b0),                                                   // (terminated)
		.out_empty         (),                                                       // (terminated)
		.out_error         (),                                                       // (terminated)
		.in_error          (1'b0)                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (670),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_021_src0_ready),                                               //     sink0.ready
		.in_valid          (rsp_demux_021_src0_valid),                                               //          .valid
		.in_startofpacket  (rsp_demux_021_src0_startofpacket),                                       //          .startofpacket
		.in_endofpacket    (rsp_demux_021_src0_endofpacket),                                         //          .endofpacket
		.in_data           (rsp_demux_021_src0_data),                                                //          .data
		.in_channel        (rsp_demux_021_src0_channel),                                             //          .channel
		.out_ready         (pipeline_stage_source0_ready),                                           //   source0.ready
		.out_valid         (pipeline_stage_source0_valid),                                           //          .valid
		.out_startofpacket (pipeline_stage_source0_startofpacket),                                   //          .startofpacket
		.out_endofpacket   (pipeline_stage_source0_endofpacket),                                     //          .endofpacket
		.out_data          (pipeline_stage_source0_data),                                            //          .data
		.out_channel       (pipeline_stage_source0_channel),                                         //          .channel
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_error          (1'b0)                                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (670),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage_001 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_021_src1_ready),                                               //     sink0.ready
		.in_valid          (rsp_demux_021_src1_valid),                                               //          .valid
		.in_startofpacket  (rsp_demux_021_src1_startofpacket),                                       //          .startofpacket
		.in_endofpacket    (rsp_demux_021_src1_endofpacket),                                         //          .endofpacket
		.in_data           (rsp_demux_021_src1_data),                                                //          .data
		.in_channel        (rsp_demux_021_src1_channel),                                             //          .channel
		.out_ready         (pipeline_stage_001_source0_ready),                                       //   source0.ready
		.out_valid         (pipeline_stage_001_source0_valid),                                       //          .valid
		.out_startofpacket (pipeline_stage_001_source0_startofpacket),                               //          .startofpacket
		.out_endofpacket   (pipeline_stage_001_source0_endofpacket),                                 //          .endofpacket
		.out_data          (pipeline_stage_001_source0_data),                                        //          .data
		.out_channel       (pipeline_stage_001_source0_channel),                                     //          .channel
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_error          (1'b0)                                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (670),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage_002 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_021_src2_ready),                                               //     sink0.ready
		.in_valid          (rsp_demux_021_src2_valid),                                               //          .valid
		.in_startofpacket  (rsp_demux_021_src2_startofpacket),                                       //          .startofpacket
		.in_endofpacket    (rsp_demux_021_src2_endofpacket),                                         //          .endofpacket
		.in_data           (rsp_demux_021_src2_data),                                                //          .data
		.in_channel        (rsp_demux_021_src2_channel),                                             //          .channel
		.out_ready         (pipeline_stage_002_source0_ready),                                       //   source0.ready
		.out_valid         (pipeline_stage_002_source0_valid),                                       //          .valid
		.out_startofpacket (pipeline_stage_002_source0_startofpacket),                               //          .startofpacket
		.out_endofpacket   (pipeline_stage_002_source0_endofpacket),                                 //          .endofpacket
		.out_data          (pipeline_stage_002_source0_data),                                        //          .data
		.out_channel       (pipeline_stage_002_source0_channel),                                     //          .channel
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_error          (1'b0)                                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (670),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage_003 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_021_src3_ready),                                               //     sink0.ready
		.in_valid          (rsp_demux_021_src3_valid),                                               //          .valid
		.in_startofpacket  (rsp_demux_021_src3_startofpacket),                                       //          .startofpacket
		.in_endofpacket    (rsp_demux_021_src3_endofpacket),                                         //          .endofpacket
		.in_data           (rsp_demux_021_src3_data),                                                //          .data
		.in_channel        (rsp_demux_021_src3_channel),                                             //          .channel
		.out_ready         (pipeline_stage_003_source0_ready),                                       //   source0.ready
		.out_valid         (pipeline_stage_003_source0_valid),                                       //          .valid
		.out_startofpacket (pipeline_stage_003_source0_startofpacket),                               //          .startofpacket
		.out_endofpacket   (pipeline_stage_003_source0_endofpacket),                                 //          .endofpacket
		.out_data          (pipeline_stage_003_source0_data),                                        //          .data
		.out_channel       (pipeline_stage_003_source0_channel),                                     //          .channel
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_error          (1'b0)                                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (670),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage_004 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_021_src4_ready),                                               //     sink0.ready
		.in_valid          (rsp_demux_021_src4_valid),                                               //          .valid
		.in_startofpacket  (rsp_demux_021_src4_startofpacket),                                       //          .startofpacket
		.in_endofpacket    (rsp_demux_021_src4_endofpacket),                                         //          .endofpacket
		.in_data           (rsp_demux_021_src4_data),                                                //          .data
		.in_channel        (rsp_demux_021_src4_channel),                                             //          .channel
		.out_ready         (pipeline_stage_004_source0_ready),                                       //   source0.ready
		.out_valid         (pipeline_stage_004_source0_valid),                                       //          .valid
		.out_startofpacket (pipeline_stage_004_source0_startofpacket),                               //          .startofpacket
		.out_endofpacket   (pipeline_stage_004_source0_endofpacket),                                 //          .endofpacket
		.out_data          (pipeline_stage_004_source0_data),                                        //          .data
		.out_channel       (pipeline_stage_004_source0_channel),                                     //          .channel
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_error          (1'b0)                                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (670),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage_005 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_021_src5_ready),                                               //     sink0.ready
		.in_valid          (rsp_demux_021_src5_valid),                                               //          .valid
		.in_startofpacket  (rsp_demux_021_src5_startofpacket),                                       //          .startofpacket
		.in_endofpacket    (rsp_demux_021_src5_endofpacket),                                         //          .endofpacket
		.in_data           (rsp_demux_021_src5_data),                                                //          .data
		.in_channel        (rsp_demux_021_src5_channel),                                             //          .channel
		.out_ready         (pipeline_stage_005_source0_ready),                                       //   source0.ready
		.out_valid         (pipeline_stage_005_source0_valid),                                       //          .valid
		.out_startofpacket (pipeline_stage_005_source0_startofpacket),                               //          .startofpacket
		.out_endofpacket   (pipeline_stage_005_source0_endofpacket),                                 //          .endofpacket
		.out_data          (pipeline_stage_005_source0_data),                                        //          .data
		.out_channel       (pipeline_stage_005_source0_channel),                                     //          .channel
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_error          (1'b0)                                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (670),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage_006 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_021_src6_ready),                                               //     sink0.ready
		.in_valid          (rsp_demux_021_src6_valid),                                               //          .valid
		.in_startofpacket  (rsp_demux_021_src6_startofpacket),                                       //          .startofpacket
		.in_endofpacket    (rsp_demux_021_src6_endofpacket),                                         //          .endofpacket
		.in_data           (rsp_demux_021_src6_data),                                                //          .data
		.in_channel        (rsp_demux_021_src6_channel),                                             //          .channel
		.out_ready         (pipeline_stage_006_source0_ready),                                       //   source0.ready
		.out_valid         (pipeline_stage_006_source0_valid),                                       //          .valid
		.out_startofpacket (pipeline_stage_006_source0_startofpacket),                               //          .startofpacket
		.out_endofpacket   (pipeline_stage_006_source0_endofpacket),                                 //          .endofpacket
		.out_data          (pipeline_stage_006_source0_data),                                        //          .data
		.out_channel       (pipeline_stage_006_source0_channel),                                     //          .channel
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_error          (1'b0)                                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (670),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage_007 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                        //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_021_src7_ready),                                               //     sink0.ready
		.in_valid          (rsp_demux_021_src7_valid),                                               //          .valid
		.in_startofpacket  (rsp_demux_021_src7_startofpacket),                                       //          .startofpacket
		.in_endofpacket    (rsp_demux_021_src7_endofpacket),                                         //          .endofpacket
		.in_data           (rsp_demux_021_src7_data),                                                //          .data
		.in_channel        (rsp_demux_021_src7_channel),                                             //          .channel
		.out_ready         (pipeline_stage_007_source0_ready),                                       //   source0.ready
		.out_valid         (pipeline_stage_007_source0_valid),                                       //          .valid
		.out_startofpacket (pipeline_stage_007_source0_startofpacket),                               //          .startofpacket
		.out_endofpacket   (pipeline_stage_007_source0_endofpacket),                                 //          .endofpacket
		.out_data          (pipeline_stage_007_source0_data),                                        //          .data
		.out_channel       (pipeline_stage_007_source0_channel),                                     //          .channel
		.in_empty          (1'b0),                                                                   // (terminated)
		.out_empty         (),                                                                       // (terminated)
		.out_error         (),                                                                       // (terminated)
		.in_error          (1'b0)                                                                    // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (238),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage_008 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                                              //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                       // cr0_reset.reset
		.in_ready          (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter_src_ready),         //     sink0.ready
		.in_valid          (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter_src_valid),         //          .valid
		.in_startofpacket  (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_endofpacket    (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter_src_endofpacket),   //          .endofpacket
		.in_data           (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter_src_data),          //          .data
		.in_channel        (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_rd_rsp_width_adapter_src_channel),       //          .channel
		.out_ready         (pipeline_stage_008_source0_ready),                                                             //   source0.ready
		.out_valid         (pipeline_stage_008_source0_valid),                                                             //          .valid
		.out_startofpacket (pipeline_stage_008_source0_startofpacket),                                                     //          .startofpacket
		.out_endofpacket   (pipeline_stage_008_source0_endofpacket),                                                       //          .endofpacket
		.out_data          (pipeline_stage_008_source0_data),                                                              //          .data
		.out_channel       (pipeline_stage_008_source0_channel),                                                           //          .channel
		.in_empty          (1'b0),                                                                                         // (terminated)
		.out_empty         (),                                                                                             // (terminated)
		.out_error         (),                                                                                             // (terminated)
		.in_error          (1'b0)                                                                                          // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (238),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage_009 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                                              //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                       // cr0_reset.reset
		.in_ready          (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter_src_ready),         //     sink0.ready
		.in_valid          (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter_src_valid),         //          .valid
		.in_startofpacket  (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_endofpacket    (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter_src_endofpacket),   //          .endofpacket
		.in_data           (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter_src_data),          //          .data
		.in_channel        (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9144_dma_m_src_axi_wr_rsp_width_adapter_src_channel),       //          .channel
		.out_ready         (pipeline_stage_009_source0_ready),                                                             //   source0.ready
		.out_valid         (pipeline_stage_009_source0_valid),                                                             //          .valid
		.out_startofpacket (pipeline_stage_009_source0_startofpacket),                                                     //          .startofpacket
		.out_endofpacket   (pipeline_stage_009_source0_endofpacket),                                                       //          .endofpacket
		.out_data          (pipeline_stage_009_source0_data),                                                              //          .data
		.out_channel       (pipeline_stage_009_source0_channel),                                                           //          .channel
		.in_empty          (1'b0),                                                                                         // (terminated)
		.out_empty         (),                                                                                             // (terminated)
		.out_error         (),                                                                                             // (terminated)
		.in_error          (1'b0)                                                                                          // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (238),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage_010 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                                               //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                        // cr0_reset.reset
		.in_ready          (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter_src_ready),         //     sink0.ready
		.in_valid          (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter_src_valid),         //          .valid
		.in_startofpacket  (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_endofpacket    (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter_src_endofpacket),   //          .endofpacket
		.in_data           (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter_src_data),          //          .data
		.in_channel        (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_rd_rsp_width_adapter_src_channel),       //          .channel
		.out_ready         (pipeline_stage_010_source0_ready),                                                              //   source0.ready
		.out_valid         (pipeline_stage_010_source0_valid),                                                              //          .valid
		.out_startofpacket (pipeline_stage_010_source0_startofpacket),                                                      //          .startofpacket
		.out_endofpacket   (pipeline_stage_010_source0_endofpacket),                                                        //          .endofpacket
		.out_data          (pipeline_stage_010_source0_data),                                                               //          .data
		.out_channel       (pipeline_stage_010_source0_channel),                                                            //          .channel
		.in_empty          (1'b0),                                                                                          // (terminated)
		.out_empty         (),                                                                                              // (terminated)
		.out_error         (),                                                                                              // (terminated)
		.in_error          (1'b0)                                                                                           // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (238),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage_011 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                                               //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                        // cr0_reset.reset
		.in_ready          (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter_src_ready),         //     sink0.ready
		.in_valid          (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter_src_valid),         //          .valid
		.in_startofpacket  (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_endofpacket    (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter_src_endofpacket),   //          .endofpacket
		.in_data           (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter_src_data),          //          .data
		.in_channel        (sys_ddr3_cntrl_ctrl_amm_0_to_axi_ad9680_dma_m_dest_axi_wr_rsp_width_adapter_src_channel),       //          .channel
		.out_ready         (pipeline_stage_011_source0_ready),                                                              //   source0.ready
		.out_valid         (pipeline_stage_011_source0_valid),                                                              //          .valid
		.out_startofpacket (pipeline_stage_011_source0_startofpacket),                                                      //          .startofpacket
		.out_endofpacket   (pipeline_stage_011_source0_endofpacket),                                                        //          .endofpacket
		.out_data          (pipeline_stage_011_source0_data),                                                               //          .data
		.out_channel       (pipeline_stage_011_source0_channel),                                                            //          .channel
		.in_empty          (1'b0),                                                                                          // (terminated)
		.out_empty         (),                                                                                              // (terminated)
		.out_error         (),                                                                                              // (terminated)
		.in_error          (1'b0)                                                                                           // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (130),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage_012 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                                             //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                      // cr0_reset.reset
		.in_ready          (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter_src_ready),         //     sink0.ready
		.in_valid          (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter_src_valid),         //          .valid
		.in_startofpacket  (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_endofpacket    (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter_src_endofpacket),   //          .endofpacket
		.in_data           (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter_src_data),          //          .data
		.in_channel        (sys_ddr3_cntrl_ctrl_amm_0_to_sys_cpu_instruction_master_rsp_width_adapter_src_channel),       //          .channel
		.out_ready         (pipeline_stage_012_source0_ready),                                                            //   source0.ready
		.out_valid         (pipeline_stage_012_source0_valid),                                                            //          .valid
		.out_startofpacket (pipeline_stage_012_source0_startofpacket),                                                    //          .startofpacket
		.out_endofpacket   (pipeline_stage_012_source0_endofpacket),                                                      //          .endofpacket
		.out_data          (pipeline_stage_012_source0_data),                                                             //          .data
		.out_channel       (pipeline_stage_012_source0_channel),                                                          //          .channel
		.in_empty          (1'b0),                                                                                        // (terminated)
		.out_empty         (),                                                                                            // (terminated)
		.out_error         (),                                                                                            // (terminated)
		.in_error          (1'b0)                                                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (166),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage_013 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                                               //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                        // cr0_reset.reset
		.in_ready          (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter_src_ready),         //     sink0.ready
		.in_valid          (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter_src_valid),         //          .valid
		.in_startofpacket  (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_endofpacket    (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter_src_endofpacket),   //          .endofpacket
		.in_data           (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter_src_data),          //          .data
		.in_channel        (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_rx_mm_write_rsp_width_adapter_src_channel),       //          .channel
		.out_ready         (pipeline_stage_013_source0_ready),                                                              //   source0.ready
		.out_valid         (pipeline_stage_013_source0_valid),                                                              //          .valid
		.out_startofpacket (pipeline_stage_013_source0_startofpacket),                                                      //          .startofpacket
		.out_endofpacket   (pipeline_stage_013_source0_endofpacket),                                                        //          .endofpacket
		.out_data          (pipeline_stage_013_source0_data),                                                               //          .data
		.out_channel       (pipeline_stage_013_source0_channel),                                                            //          .channel
		.in_empty          (1'b0),                                                                                          // (terminated)
		.out_empty         (),                                                                                              // (terminated)
		.out_error         (),                                                                                              // (terminated)
		.in_error          (1'b0)                                                                                           // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (166),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (45),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) pipeline_stage_014 (
		.clk               (sys_ddr3_cntrl_emif_usr_clk_clk),                                                              //       cr0.clk
		.reset             (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset),                       // cr0_reset.reset
		.in_ready          (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter_src_ready),         //     sink0.ready
		.in_valid          (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter_src_valid),         //          .valid
		.in_startofpacket  (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter_src_startofpacket), //          .startofpacket
		.in_endofpacket    (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter_src_endofpacket),   //          .endofpacket
		.in_data           (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter_src_data),          //          .data
		.in_channel        (sys_ddr3_cntrl_ctrl_amm_0_to_sys_ethernet_dma_tx_mm_read_rsp_width_adapter_src_channel),       //          .channel
		.out_ready         (pipeline_stage_014_source0_ready),                                                             //   source0.ready
		.out_valid         (pipeline_stage_014_source0_valid),                                                             //          .valid
		.out_startofpacket (pipeline_stage_014_source0_startofpacket),                                                     //          .startofpacket
		.out_endofpacket   (pipeline_stage_014_source0_endofpacket),                                                       //          .endofpacket
		.out_data          (pipeline_stage_014_source0_data),                                                              //          .data
		.out_channel       (pipeline_stage_014_source0_channel),                                                           //          .channel
		.in_empty          (1'b0),                                                                                         // (terminated)
		.out_empty         (),                                                                                             // (terminated)
		.out_error         (),                                                                                             // (terminated)
		.in_error          (1'b0)                                                                                          // (terminated)
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (sys_uart_avalon_jtag_slave_agent_rdata_fifo_out_data),   //     in_0.data
		.in_0_valid     (sys_uart_avalon_jtag_slave_agent_rdata_fifo_out_valid),  //         .valid
		.in_0_ready     (sys_uart_avalon_jtag_slave_agent_rdata_fifo_out_ready),  //         .ready
		.out_0_data     (avalon_st_adapter_out_0_data),                           //    out_0.data
		.out_0_valid    (avalon_st_adapter_out_0_valid),                          //         .valid
		.out_0_ready    (avalon_st_adapter_out_0_ready),                          //         .ready
		.out_0_error    (avalon_st_adapter_out_0_error)                           //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_001 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (sys_ethernet_control_port_agent_rdata_fifo_out_data),    //     in_0.data
		.in_0_valid     (sys_ethernet_control_port_agent_rdata_fifo_out_valid),   //         .valid
		.in_0_ready     (sys_ethernet_control_port_agent_rdata_fifo_out_ready),   //         .ready
		.out_0_data     (avalon_st_adapter_001_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_001_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_001_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_001_out_0_error)                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_002 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (sys_id_control_slave_agent_rdata_fifo_out_data),         //     in_0.data
		.in_0_valid     (sys_id_control_slave_agent_rdata_fifo_out_valid),        //         .valid
		.in_0_ready     (sys_id_control_slave_agent_rdata_fifo_out_ready),        //         .ready
		.out_0_data     (avalon_st_adapter_002_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_002_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_002_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_002_out_0_error)                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_003 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (sys_ethernet_dma_rx_csr_agent_rdata_fifo_out_data),      //     in_0.data
		.in_0_valid     (sys_ethernet_dma_rx_csr_agent_rdata_fifo_out_valid),     //         .valid
		.in_0_ready     (sys_ethernet_dma_rx_csr_agent_rdata_fifo_out_ready),     //         .ready
		.out_0_data     (avalon_st_adapter_003_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_003_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_003_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_003_out_0_error)                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_004 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (sys_ethernet_dma_tx_csr_agent_rdata_fifo_out_data),      //     in_0.data
		.in_0_valid     (sys_ethernet_dma_tx_csr_agent_rdata_fifo_out_valid),     //         .valid
		.in_0_ready     (sys_ethernet_dma_tx_csr_agent_rdata_fifo_out_ready),     //         .ready
		.out_0_data     (avalon_st_adapter_004_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_004_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_004_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_004_out_0_error)                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_hmqkkwi #(
		.inBitsPerSymbol (514),
		.inUsePackets    (0),
		.inDataWidth     (514),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (514),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_005 (
		.in_clk_0_clk   (sys_ddr3_cntrl_emif_usr_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (sys_ddr3_cntrl_ctrl_amm_0_translator_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo_out_data),                    //     in_0.data
		.in_0_valid     (sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo_out_valid),                   //         .valid
		.in_0_ready     (sys_ddr3_cntrl_ctrl_amm_0_agent_rdata_fifo_out_ready),                   //         .ready
		.out_0_data     (avalon_st_adapter_005_out_0_data),                                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_005_out_0_valid),                                      //         .valid
		.out_0_ready    (avalon_st_adapter_005_out_0_ready),                                      //         .ready
		.out_0_error    (avalon_st_adapter_005_out_0_error)                                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_006 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                    // in_clk_0.clk
		.in_rst_0_reset (sys_cpu_reset_reset_bridge_in_reset_reset),          // in_rst_0.reset
		.in_0_data      (sys_cpu_debug_mem_slave_agent_rdata_fifo_out_data),  //     in_0.data
		.in_0_valid     (sys_cpu_debug_mem_slave_agent_rdata_fifo_out_valid), //         .valid
		.in_0_ready     (sys_cpu_debug_mem_slave_agent_rdata_fifo_out_ready), //         .ready
		.out_0_data     (avalon_st_adapter_006_out_0_data),                   //    out_0.data
		.out_0_valid    (avalon_st_adapter_006_out_0_valid),                  //         .valid
		.out_0_ready    (avalon_st_adapter_006_out_0_ready),                  //         .ready
		.out_0_error    (avalon_st_adapter_006_out_0_error)                   //         .error
	);

	system_bd_altera_avalon_st_adapter_181_e7v4oka #(
		.inBitsPerSymbol (258),
		.inUsePackets    (0),
		.inDataWidth     (258),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (258),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_007 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                                 // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),          // in_rst_0.reset
		.in_0_data      (sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo_out_data),  //     in_0.data
		.in_0_valid     (sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo_out_valid), //         .valid
		.in_0_ready     (sys_ethernet_dma_rx_descriptor_slave_agent_rdata_fifo_out_ready), //         .ready
		.out_0_data     (avalon_st_adapter_007_out_0_data),                                //    out_0.data
		.out_0_valid    (avalon_st_adapter_007_out_0_valid),                               //         .valid
		.out_0_ready    (avalon_st_adapter_007_out_0_ready),                               //         .ready
		.out_0_error    (avalon_st_adapter_007_out_0_error)                                //         .error
	);

	system_bd_altera_avalon_st_adapter_181_e7v4oka #(
		.inBitsPerSymbol (258),
		.inUsePackets    (0),
		.inDataWidth     (258),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (258),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_008 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                                 // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),          // in_rst_0.reset
		.in_0_data      (sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo_out_data),  //     in_0.data
		.in_0_valid     (sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo_out_valid), //         .valid
		.in_0_ready     (sys_ethernet_dma_tx_descriptor_slave_agent_rdata_fifo_out_ready), //         .ready
		.out_0_data     (avalon_st_adapter_008_out_0_data),                                //    out_0.data
		.out_0_valid    (avalon_st_adapter_008_out_0_valid),                               //         .valid
		.out_0_ready    (avalon_st_adapter_008_out_0_ready),                               //         .ready
		.out_0_error    (avalon_st_adapter_008_out_0_error)                                //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_009 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                             // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),      // in_rst_0.reset
		.in_0_data      (ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo_out_data),  //     in_0.data
		.in_0_valid     (ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo_out_valid), //         .valid
		.in_0_ready     (ad9144_jesd204_lane_pll_reconfig_agent_rdata_fifo_out_ready), //         .ready
		.out_0_data     (avalon_st_adapter_009_out_0_data),                            //    out_0.data
		.out_0_valid    (avalon_st_adapter_009_out_0_valid),                           //         .valid
		.out_0_ready    (avalon_st_adapter_009_out_0_ready),                           //         .ready
		.out_0_error    (avalon_st_adapter_009_out_0_error)                            //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_010 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                             // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),      // in_rst_0.reset
		.in_0_data      (ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo_out_data),  //     in_0.data
		.in_0_valid     (ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo_out_valid), //         .valid
		.in_0_ready     (ad9144_jesd204_link_pll_reconfig_agent_rdata_fifo_out_ready), //         .ready
		.out_0_data     (avalon_st_adapter_010_out_0_data),                            //    out_0.data
		.out_0_valid    (avalon_st_adapter_010_out_0_valid),                           //         .valid
		.out_0_ready    (avalon_st_adapter_010_out_0_ready),                           //         .ready
		.out_0_error    (avalon_st_adapter_010_out_0_error)                            //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_011 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                             // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),      // in_rst_0.reset
		.in_0_data      (ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo_out_data),  //     in_0.data
		.in_0_valid     (ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo_out_valid), //         .valid
		.in_0_ready     (ad9680_jesd204_link_pll_reconfig_agent_rdata_fifo_out_ready), //         .ready
		.out_0_data     (avalon_st_adapter_011_out_0_data),                            //    out_0.data
		.out_0_valid    (avalon_st_adapter_011_out_0_valid),                           //         .valid
		.out_0_ready    (avalon_st_adapter_011_out_0_ready),                           //         .ready
		.out_0_error    (avalon_st_adapter_011_out_0_error)                            //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_012 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (avl_adxcfg_0_rcfg_s0_agent_rdata_fifo_out_data),         //     in_0.data
		.in_0_valid     (avl_adxcfg_0_rcfg_s0_agent_rdata_fifo_out_valid),        //         .valid
		.in_0_ready     (avl_adxcfg_0_rcfg_s0_agent_rdata_fifo_out_ready),        //         .ready
		.out_0_data     (avalon_st_adapter_012_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_012_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_012_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_012_out_0_error)                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_013 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (avl_adxcfg_1_rcfg_s0_agent_rdata_fifo_out_data),         //     in_0.data
		.in_0_valid     (avl_adxcfg_1_rcfg_s0_agent_rdata_fifo_out_valid),        //         .valid
		.in_0_ready     (avl_adxcfg_1_rcfg_s0_agent_rdata_fifo_out_ready),        //         .ready
		.out_0_data     (avalon_st_adapter_013_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_013_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_013_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_013_out_0_error)                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_014 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (avl_adxcfg_2_rcfg_s0_agent_rdata_fifo_out_data),         //     in_0.data
		.in_0_valid     (avl_adxcfg_2_rcfg_s0_agent_rdata_fifo_out_valid),        //         .valid
		.in_0_ready     (avl_adxcfg_2_rcfg_s0_agent_rdata_fifo_out_ready),        //         .ready
		.out_0_data     (avalon_st_adapter_014_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_014_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_014_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_014_out_0_error)                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_015 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (avl_adxcfg_3_rcfg_s0_agent_rdata_fifo_out_data),         //     in_0.data
		.in_0_valid     (avl_adxcfg_3_rcfg_s0_agent_rdata_fifo_out_valid),        //         .valid
		.in_0_ready     (avl_adxcfg_3_rcfg_s0_agent_rdata_fifo_out_ready),        //         .ready
		.out_0_data     (avalon_st_adapter_015_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_015_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_015_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_015_out_0_error)                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_016 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (avl_adxcfg_0_rcfg_s1_agent_rdata_fifo_out_data),         //     in_0.data
		.in_0_valid     (avl_adxcfg_0_rcfg_s1_agent_rdata_fifo_out_valid),        //         .valid
		.in_0_ready     (avl_adxcfg_0_rcfg_s1_agent_rdata_fifo_out_ready),        //         .ready
		.out_0_data     (avalon_st_adapter_016_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_016_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_016_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_016_out_0_error)                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_017 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (avl_adxcfg_1_rcfg_s1_agent_rdata_fifo_out_data),         //     in_0.data
		.in_0_valid     (avl_adxcfg_1_rcfg_s1_agent_rdata_fifo_out_valid),        //         .valid
		.in_0_ready     (avl_adxcfg_1_rcfg_s1_agent_rdata_fifo_out_ready),        //         .ready
		.out_0_data     (avalon_st_adapter_017_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_017_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_017_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_017_out_0_error)                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_018 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (avl_adxcfg_2_rcfg_s1_agent_rdata_fifo_out_data),         //     in_0.data
		.in_0_valid     (avl_adxcfg_2_rcfg_s1_agent_rdata_fifo_out_valid),        //         .valid
		.in_0_ready     (avl_adxcfg_2_rcfg_s1_agent_rdata_fifo_out_ready),        //         .ready
		.out_0_data     (avalon_st_adapter_018_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_018_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_018_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_018_out_0_error)                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_019 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (avl_adxcfg_3_rcfg_s1_agent_rdata_fifo_out_data),         //     in_0.data
		.in_0_valid     (avl_adxcfg_3_rcfg_s1_agent_rdata_fifo_out_valid),        //         .valid
		.in_0_ready     (avl_adxcfg_3_rcfg_s1_agent_rdata_fifo_out_ready),        //         .ready
		.out_0_data     (avalon_st_adapter_019_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_019_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_019_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_019_out_0_error)                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_020 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                         // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset),  // in_rst_0.reset
		.in_0_data      (sys_ethernet_dma_rx_response_agent_rdata_fifo_out_data),  //     in_0.data
		.in_0_valid     (sys_ethernet_dma_rx_response_agent_rdata_fifo_out_valid), //         .valid
		.in_0_ready     (sys_ethernet_dma_rx_response_agent_rdata_fifo_out_ready), //         .ready
		.out_0_data     (avalon_st_adapter_020_out_0_data),                        //    out_0.data
		.out_0_valid    (avalon_st_adapter_020_out_0_valid),                       //         .valid
		.out_0_ready    (avalon_st_adapter_020_out_0_ready),                       //         .ready
		.out_0_error    (avalon_st_adapter_020_out_0_error)                        //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_021 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (sys_int_mem_s1_agent_rdata_fifo_out_data),               //     in_0.data
		.in_0_valid     (sys_int_mem_s1_agent_rdata_fifo_out_valid),              //         .valid
		.in_0_ready     (sys_int_mem_s1_agent_rdata_fifo_out_ready),              //         .ready
		.out_0_data     (avalon_st_adapter_021_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_021_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_021_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_021_out_0_error)                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_022 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (sys_timer_1_s1_agent_rdata_fifo_out_data),               //     in_0.data
		.in_0_valid     (sys_timer_1_s1_agent_rdata_fifo_out_valid),              //         .valid
		.in_0_ready     (sys_timer_1_s1_agent_rdata_fifo_out_ready),              //         .ready
		.out_0_data     (avalon_st_adapter_022_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_022_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_022_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_022_out_0_error)                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_023 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (sys_timer_2_s1_agent_rdata_fifo_out_data),               //     in_0.data
		.in_0_valid     (sys_timer_2_s1_agent_rdata_fifo_out_valid),              //         .valid
		.in_0_ready     (sys_timer_2_s1_agent_rdata_fifo_out_ready),              //         .ready
		.out_0_data     (avalon_st_adapter_023_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_023_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_023_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_023_out_0_error)                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_024 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (sys_gpio_bd_s1_agent_rdata_fifo_out_data),               //     in_0.data
		.in_0_valid     (sys_gpio_bd_s1_agent_rdata_fifo_out_valid),              //         .valid
		.in_0_ready     (sys_gpio_bd_s1_agent_rdata_fifo_out_ready),              //         .ready
		.out_0_data     (avalon_st_adapter_024_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_024_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_024_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_024_out_0_error)                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_025 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (sys_gpio_in_s1_agent_rdata_fifo_out_data),               //     in_0.data
		.in_0_valid     (sys_gpio_in_s1_agent_rdata_fifo_out_valid),              //         .valid
		.in_0_ready     (sys_gpio_in_s1_agent_rdata_fifo_out_ready),              //         .ready
		.out_0_data     (avalon_st_adapter_025_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_025_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_025_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_025_out_0_error)                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_026 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (sys_gpio_out_s1_agent_rdata_fifo_out_data),              //     in_0.data
		.in_0_valid     (sys_gpio_out_s1_agent_rdata_fifo_out_valid),             //         .valid
		.in_0_ready     (sys_gpio_out_s1_agent_rdata_fifo_out_ready),             //         .ready
		.out_0_data     (avalon_st_adapter_026_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_026_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_026_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_026_out_0_error)                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_027 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (sys_spi_spi_control_port_agent_rdata_fifo_out_data),     //     in_0.data
		.in_0_valid     (sys_spi_spi_control_port_agent_rdata_fifo_out_valid),    //         .valid
		.in_0_ready     (sys_spi_spi_control_port_agent_rdata_fifo_out_ready),    //         .ready
		.out_0_data     (avalon_st_adapter_027_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_027_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_027_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_027_out_0_error)                       //         .error
	);

	system_bd_altera_avalon_st_adapter_181_25xtenq #(
		.inBitsPerSymbol (34),
		.inUsePackets    (0),
		.inDataWidth     (34),
		.inChannelWidth  (0),
		.inErrorWidth    (0),
		.inUseEmptyPort  (0),
		.inUseValid      (1),
		.inUseReady      (1),
		.inReadyLatency  (0),
		.outDataWidth    (34),
		.outChannelWidth (0),
		.outErrorWidth   (1),
		.outUseEmptyPort (0),
		.outUseValid     (1),
		.outUseReady     (1),
		.outReadyLatency (0)
	) avalon_st_adapter_028 (
		.in_clk_0_clk   (sys_clk_clk_clk),                                        // in_clk_0.clk
		.in_rst_0_reset (axi_ad9680_dma_s_axi_reset_reset_bridge_in_reset_reset), // in_rst_0.reset
		.in_0_data      (sys_flash_uas_agent_rdata_fifo_out_data),                //     in_0.data
		.in_0_valid     (sys_flash_uas_agent_rdata_fifo_out_valid),               //         .valid
		.in_0_ready     (sys_flash_uas_agent_rdata_fifo_out_ready),               //         .ready
		.out_0_data     (avalon_st_adapter_028_out_0_data),                       //    out_0.data
		.out_0_valid    (avalon_st_adapter_028_out_0_valid),                      //         .valid
		.out_0_ready    (avalon_st_adapter_028_out_0_ready),                      //         .ready
		.out_0_error    (avalon_st_adapter_028_out_0_error)                       //         .error
	);

endmodule
