// system_bd_altera_mm_interconnect_181_jfe3fkq.v

// This file was auto-generated from altera_mm_interconnect_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 18.1 625

`timescale 1 ps / 1 ps
module system_bd_altera_mm_interconnect_181_jfe3fkq (
		input  wire [0:0]   axi_ad9144_dma_m_src_axi_awid,                               //                              axi_ad9144_dma_m_src_axi.awid
		input  wire [31:0]  axi_ad9144_dma_m_src_axi_awaddr,                             //                                                      .awaddr
		input  wire [3:0]   axi_ad9144_dma_m_src_axi_awlen,                              //                                                      .awlen
		input  wire [2:0]   axi_ad9144_dma_m_src_axi_awsize,                             //                                                      .awsize
		input  wire [1:0]   axi_ad9144_dma_m_src_axi_awburst,                            //                                                      .awburst
		input  wire [1:0]   axi_ad9144_dma_m_src_axi_awlock,                             //                                                      .awlock
		input  wire [3:0]   axi_ad9144_dma_m_src_axi_awcache,                            //                                                      .awcache
		input  wire [2:0]   axi_ad9144_dma_m_src_axi_awprot,                             //                                                      .awprot
		input  wire         axi_ad9144_dma_m_src_axi_awvalid,                            //                                                      .awvalid
		output wire         axi_ad9144_dma_m_src_axi_awready,                            //                                                      .awready
		input  wire [0:0]   axi_ad9144_dma_m_src_axi_wid,                                //                                                      .wid
		input  wire [127:0] axi_ad9144_dma_m_src_axi_wdata,                              //                                                      .wdata
		input  wire [15:0]  axi_ad9144_dma_m_src_axi_wstrb,                              //                                                      .wstrb
		input  wire         axi_ad9144_dma_m_src_axi_wlast,                              //                                                      .wlast
		input  wire         axi_ad9144_dma_m_src_axi_wvalid,                             //                                                      .wvalid
		output wire         axi_ad9144_dma_m_src_axi_wready,                             //                                                      .wready
		output wire [0:0]   axi_ad9144_dma_m_src_axi_bid,                                //                                                      .bid
		output wire [1:0]   axi_ad9144_dma_m_src_axi_bresp,                              //                                                      .bresp
		output wire         axi_ad9144_dma_m_src_axi_bvalid,                             //                                                      .bvalid
		input  wire         axi_ad9144_dma_m_src_axi_bready,                             //                                                      .bready
		input  wire [0:0]   axi_ad9144_dma_m_src_axi_arid,                               //                                                      .arid
		input  wire [31:0]  axi_ad9144_dma_m_src_axi_araddr,                             //                                                      .araddr
		input  wire [3:0]   axi_ad9144_dma_m_src_axi_arlen,                              //                                                      .arlen
		input  wire [2:0]   axi_ad9144_dma_m_src_axi_arsize,                             //                                                      .arsize
		input  wire [1:0]   axi_ad9144_dma_m_src_axi_arburst,                            //                                                      .arburst
		input  wire [1:0]   axi_ad9144_dma_m_src_axi_arlock,                             //                                                      .arlock
		input  wire [3:0]   axi_ad9144_dma_m_src_axi_arcache,                            //                                                      .arcache
		input  wire [2:0]   axi_ad9144_dma_m_src_axi_arprot,                             //                                                      .arprot
		input  wire         axi_ad9144_dma_m_src_axi_arvalid,                            //                                                      .arvalid
		output wire         axi_ad9144_dma_m_src_axi_arready,                            //                                                      .arready
		output wire [0:0]   axi_ad9144_dma_m_src_axi_rid,                                //                                                      .rid
		output wire [127:0] axi_ad9144_dma_m_src_axi_rdata,                              //                                                      .rdata
		output wire [1:0]   axi_ad9144_dma_m_src_axi_rresp,                              //                                                      .rresp
		output wire         axi_ad9144_dma_m_src_axi_rlast,                              //                                                      .rlast
		output wire         axi_ad9144_dma_m_src_axi_rvalid,                             //                                                      .rvalid
		input  wire         axi_ad9144_dma_m_src_axi_rready,                             //                                                      .rready
		input  wire [0:0]   axi_ad9680_dma_m_dest_axi_awid,                              //                             axi_ad9680_dma_m_dest_axi.awid
		input  wire [31:0]  axi_ad9680_dma_m_dest_axi_awaddr,                            //                                                      .awaddr
		input  wire [3:0]   axi_ad9680_dma_m_dest_axi_awlen,                             //                                                      .awlen
		input  wire [2:0]   axi_ad9680_dma_m_dest_axi_awsize,                            //                                                      .awsize
		input  wire [1:0]   axi_ad9680_dma_m_dest_axi_awburst,                           //                                                      .awburst
		input  wire [1:0]   axi_ad9680_dma_m_dest_axi_awlock,                            //                                                      .awlock
		input  wire [3:0]   axi_ad9680_dma_m_dest_axi_awcache,                           //                                                      .awcache
		input  wire [2:0]   axi_ad9680_dma_m_dest_axi_awprot,                            //                                                      .awprot
		input  wire         axi_ad9680_dma_m_dest_axi_awvalid,                           //                                                      .awvalid
		output wire         axi_ad9680_dma_m_dest_axi_awready,                           //                                                      .awready
		input  wire [0:0]   axi_ad9680_dma_m_dest_axi_wid,                               //                                                      .wid
		input  wire [127:0] axi_ad9680_dma_m_dest_axi_wdata,                             //                                                      .wdata
		input  wire [15:0]  axi_ad9680_dma_m_dest_axi_wstrb,                             //                                                      .wstrb
		input  wire         axi_ad9680_dma_m_dest_axi_wlast,                             //                                                      .wlast
		input  wire         axi_ad9680_dma_m_dest_axi_wvalid,                            //                                                      .wvalid
		output wire         axi_ad9680_dma_m_dest_axi_wready,                            //                                                      .wready
		output wire [0:0]   axi_ad9680_dma_m_dest_axi_bid,                               //                                                      .bid
		output wire [1:0]   axi_ad9680_dma_m_dest_axi_bresp,                             //                                                      .bresp
		output wire         axi_ad9680_dma_m_dest_axi_bvalid,                            //                                                      .bvalid
		input  wire         axi_ad9680_dma_m_dest_axi_bready,                            //                                                      .bready
		input  wire [0:0]   axi_ad9680_dma_m_dest_axi_arid,                              //                                                      .arid
		input  wire [31:0]  axi_ad9680_dma_m_dest_axi_araddr,                            //                                                      .araddr
		input  wire [3:0]   axi_ad9680_dma_m_dest_axi_arlen,                             //                                                      .arlen
		input  wire [2:0]   axi_ad9680_dma_m_dest_axi_arsize,                            //                                                      .arsize
		input  wire [1:0]   axi_ad9680_dma_m_dest_axi_arburst,                           //                                                      .arburst
		input  wire [1:0]   axi_ad9680_dma_m_dest_axi_arlock,                            //                                                      .arlock
		input  wire [3:0]   axi_ad9680_dma_m_dest_axi_arcache,                           //                                                      .arcache
		input  wire [2:0]   axi_ad9680_dma_m_dest_axi_arprot,                            //                                                      .arprot
		input  wire         axi_ad9680_dma_m_dest_axi_arvalid,                           //                                                      .arvalid
		output wire         axi_ad9680_dma_m_dest_axi_arready,                           //                                                      .arready
		output wire [0:0]   axi_ad9680_dma_m_dest_axi_rid,                               //                                                      .rid
		output wire [127:0] axi_ad9680_dma_m_dest_axi_rdata,                             //                                                      .rdata
		output wire [1:0]   axi_ad9680_dma_m_dest_axi_rresp,                             //                                                      .rresp
		output wire         axi_ad9680_dma_m_dest_axi_rlast,                             //                                                      .rlast
		output wire         axi_ad9680_dma_m_dest_axi_rvalid,                            //                                                      .rvalid
		input  wire         axi_ad9680_dma_m_dest_axi_rready,                            //                                                      .rready
		output wire [3:0]   sys_hps_f2sdram0_data_awid,                                  //                                 sys_hps_f2sdram0_data.awid
		output wire [31:0]  sys_hps_f2sdram0_data_awaddr,                                //                                                      .awaddr
		output wire [3:0]   sys_hps_f2sdram0_data_awlen,                                 //                                                      .awlen
		output wire [2:0]   sys_hps_f2sdram0_data_awsize,                                //                                                      .awsize
		output wire [1:0]   sys_hps_f2sdram0_data_awburst,                               //                                                      .awburst
		output wire [1:0]   sys_hps_f2sdram0_data_awlock,                                //                                                      .awlock
		output wire [3:0]   sys_hps_f2sdram0_data_awcache,                               //                                                      .awcache
		output wire [2:0]   sys_hps_f2sdram0_data_awprot,                                //                                                      .awprot
		output wire [4:0]   sys_hps_f2sdram0_data_awuser,                                //                                                      .awuser
		output wire         sys_hps_f2sdram0_data_awvalid,                               //                                                      .awvalid
		input  wire         sys_hps_f2sdram0_data_awready,                               //                                                      .awready
		output wire [3:0]   sys_hps_f2sdram0_data_wid,                                   //                                                      .wid
		output wire [127:0] sys_hps_f2sdram0_data_wdata,                                 //                                                      .wdata
		output wire [15:0]  sys_hps_f2sdram0_data_wstrb,                                 //                                                      .wstrb
		output wire         sys_hps_f2sdram0_data_wlast,                                 //                                                      .wlast
		output wire         sys_hps_f2sdram0_data_wvalid,                                //                                                      .wvalid
		input  wire         sys_hps_f2sdram0_data_wready,                                //                                                      .wready
		input  wire [3:0]   sys_hps_f2sdram0_data_bid,                                   //                                                      .bid
		input  wire [1:0]   sys_hps_f2sdram0_data_bresp,                                 //                                                      .bresp
		input  wire         sys_hps_f2sdram0_data_bvalid,                                //                                                      .bvalid
		output wire         sys_hps_f2sdram0_data_bready,                                //                                                      .bready
		output wire [3:0]   sys_hps_f2sdram0_data_arid,                                  //                                                      .arid
		output wire [31:0]  sys_hps_f2sdram0_data_araddr,                                //                                                      .araddr
		output wire [3:0]   sys_hps_f2sdram0_data_arlen,                                 //                                                      .arlen
		output wire [2:0]   sys_hps_f2sdram0_data_arsize,                                //                                                      .arsize
		output wire [1:0]   sys_hps_f2sdram0_data_arburst,                               //                                                      .arburst
		output wire [1:0]   sys_hps_f2sdram0_data_arlock,                                //                                                      .arlock
		output wire [3:0]   sys_hps_f2sdram0_data_arcache,                               //                                                      .arcache
		output wire [2:0]   sys_hps_f2sdram0_data_arprot,                                //                                                      .arprot
		output wire [4:0]   sys_hps_f2sdram0_data_aruser,                                //                                                      .aruser
		output wire         sys_hps_f2sdram0_data_arvalid,                               //                                                      .arvalid
		input  wire         sys_hps_f2sdram0_data_arready,                               //                                                      .arready
		input  wire [3:0]   sys_hps_f2sdram0_data_rid,                                   //                                                      .rid
		input  wire [127:0] sys_hps_f2sdram0_data_rdata,                                 //                                                      .rdata
		input  wire [1:0]   sys_hps_f2sdram0_data_rresp,                                 //                                                      .rresp
		input  wire         sys_hps_f2sdram0_data_rlast,                                 //                                                      .rlast
		input  wire         sys_hps_f2sdram0_data_rvalid,                                //                                                      .rvalid
		output wire         sys_hps_f2sdram0_data_rready,                                //                                                      .rready
		input  wire         sys_dma_clk_clk_clk,                                         //                                       sys_dma_clk_clk.clk
		input  wire         axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset  // axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset.reset
	);

	wire          rsp_mux_src_valid;                                      // rsp_mux:src_valid -> axi_ad9680_dma_m_dest_axi_agent:write_rp_valid
	wire  [227:0] rsp_mux_src_data;                                       // rsp_mux:src_data -> axi_ad9680_dma_m_dest_axi_agent:write_rp_data
	wire          rsp_mux_src_ready;                                      // axi_ad9680_dma_m_dest_axi_agent:write_rp_ready -> rsp_mux:src_ready
	wire    [3:0] rsp_mux_src_channel;                                    // rsp_mux:src_channel -> axi_ad9680_dma_m_dest_axi_agent:write_rp_channel
	wire          rsp_mux_src_startofpacket;                              // rsp_mux:src_startofpacket -> axi_ad9680_dma_m_dest_axi_agent:write_rp_startofpacket
	wire          rsp_mux_src_endofpacket;                                // rsp_mux:src_endofpacket -> axi_ad9680_dma_m_dest_axi_agent:write_rp_endofpacket
	wire          rsp_mux_001_src_valid;                                  // rsp_mux_001:src_valid -> axi_ad9680_dma_m_dest_axi_agent:read_rp_valid
	wire  [227:0] rsp_mux_001_src_data;                                   // rsp_mux_001:src_data -> axi_ad9680_dma_m_dest_axi_agent:read_rp_data
	wire          rsp_mux_001_src_ready;                                  // axi_ad9680_dma_m_dest_axi_agent:read_rp_ready -> rsp_mux_001:src_ready
	wire    [3:0] rsp_mux_001_src_channel;                                // rsp_mux_001:src_channel -> axi_ad9680_dma_m_dest_axi_agent:read_rp_channel
	wire          rsp_mux_001_src_startofpacket;                          // rsp_mux_001:src_startofpacket -> axi_ad9680_dma_m_dest_axi_agent:read_rp_startofpacket
	wire          rsp_mux_001_src_endofpacket;                            // rsp_mux_001:src_endofpacket -> axi_ad9680_dma_m_dest_axi_agent:read_rp_endofpacket
	wire          rsp_mux_002_src_valid;                                  // rsp_mux_002:src_valid -> axi_ad9144_dma_m_src_axi_agent:write_rp_valid
	wire  [227:0] rsp_mux_002_src_data;                                   // rsp_mux_002:src_data -> axi_ad9144_dma_m_src_axi_agent:write_rp_data
	wire          rsp_mux_002_src_ready;                                  // axi_ad9144_dma_m_src_axi_agent:write_rp_ready -> rsp_mux_002:src_ready
	wire    [3:0] rsp_mux_002_src_channel;                                // rsp_mux_002:src_channel -> axi_ad9144_dma_m_src_axi_agent:write_rp_channel
	wire          rsp_mux_002_src_startofpacket;                          // rsp_mux_002:src_startofpacket -> axi_ad9144_dma_m_src_axi_agent:write_rp_startofpacket
	wire          rsp_mux_002_src_endofpacket;                            // rsp_mux_002:src_endofpacket -> axi_ad9144_dma_m_src_axi_agent:write_rp_endofpacket
	wire          rsp_mux_003_src_valid;                                  // rsp_mux_003:src_valid -> axi_ad9144_dma_m_src_axi_agent:read_rp_valid
	wire  [227:0] rsp_mux_003_src_data;                                   // rsp_mux_003:src_data -> axi_ad9144_dma_m_src_axi_agent:read_rp_data
	wire          rsp_mux_003_src_ready;                                  // axi_ad9144_dma_m_src_axi_agent:read_rp_ready -> rsp_mux_003:src_ready
	wire    [3:0] rsp_mux_003_src_channel;                                // rsp_mux_003:src_channel -> axi_ad9144_dma_m_src_axi_agent:read_rp_channel
	wire          rsp_mux_003_src_startofpacket;                          // rsp_mux_003:src_startofpacket -> axi_ad9144_dma_m_src_axi_agent:read_rp_startofpacket
	wire          rsp_mux_003_src_endofpacket;                            // rsp_mux_003:src_endofpacket -> axi_ad9144_dma_m_src_axi_agent:read_rp_endofpacket
	wire          axi_ad9680_dma_m_dest_axi_agent_write_cp_valid;         // axi_ad9680_dma_m_dest_axi_agent:write_cp_valid -> router:sink_valid
	wire  [227:0] axi_ad9680_dma_m_dest_axi_agent_write_cp_data;          // axi_ad9680_dma_m_dest_axi_agent:write_cp_data -> router:sink_data
	wire          axi_ad9680_dma_m_dest_axi_agent_write_cp_ready;         // router:sink_ready -> axi_ad9680_dma_m_dest_axi_agent:write_cp_ready
	wire          axi_ad9680_dma_m_dest_axi_agent_write_cp_startofpacket; // axi_ad9680_dma_m_dest_axi_agent:write_cp_startofpacket -> router:sink_startofpacket
	wire          axi_ad9680_dma_m_dest_axi_agent_write_cp_endofpacket;   // axi_ad9680_dma_m_dest_axi_agent:write_cp_endofpacket -> router:sink_endofpacket
	wire          router_src_valid;                                       // router:src_valid -> cmd_demux:sink_valid
	wire  [227:0] router_src_data;                                        // router:src_data -> cmd_demux:sink_data
	wire          router_src_ready;                                       // cmd_demux:sink_ready -> router:src_ready
	wire    [3:0] router_src_channel;                                     // router:src_channel -> cmd_demux:sink_channel
	wire          router_src_startofpacket;                               // router:src_startofpacket -> cmd_demux:sink_startofpacket
	wire          router_src_endofpacket;                                 // router:src_endofpacket -> cmd_demux:sink_endofpacket
	wire          axi_ad9680_dma_m_dest_axi_agent_read_cp_valid;          // axi_ad9680_dma_m_dest_axi_agent:read_cp_valid -> router_001:sink_valid
	wire  [227:0] axi_ad9680_dma_m_dest_axi_agent_read_cp_data;           // axi_ad9680_dma_m_dest_axi_agent:read_cp_data -> router_001:sink_data
	wire          axi_ad9680_dma_m_dest_axi_agent_read_cp_ready;          // router_001:sink_ready -> axi_ad9680_dma_m_dest_axi_agent:read_cp_ready
	wire          axi_ad9680_dma_m_dest_axi_agent_read_cp_startofpacket;  // axi_ad9680_dma_m_dest_axi_agent:read_cp_startofpacket -> router_001:sink_startofpacket
	wire          axi_ad9680_dma_m_dest_axi_agent_read_cp_endofpacket;    // axi_ad9680_dma_m_dest_axi_agent:read_cp_endofpacket -> router_001:sink_endofpacket
	wire          router_001_src_valid;                                   // router_001:src_valid -> cmd_demux_001:sink_valid
	wire  [227:0] router_001_src_data;                                    // router_001:src_data -> cmd_demux_001:sink_data
	wire          router_001_src_ready;                                   // cmd_demux_001:sink_ready -> router_001:src_ready
	wire    [3:0] router_001_src_channel;                                 // router_001:src_channel -> cmd_demux_001:sink_channel
	wire          router_001_src_startofpacket;                           // router_001:src_startofpacket -> cmd_demux_001:sink_startofpacket
	wire          router_001_src_endofpacket;                             // router_001:src_endofpacket -> cmd_demux_001:sink_endofpacket
	wire          axi_ad9144_dma_m_src_axi_agent_write_cp_valid;          // axi_ad9144_dma_m_src_axi_agent:write_cp_valid -> router_002:sink_valid
	wire  [227:0] axi_ad9144_dma_m_src_axi_agent_write_cp_data;           // axi_ad9144_dma_m_src_axi_agent:write_cp_data -> router_002:sink_data
	wire          axi_ad9144_dma_m_src_axi_agent_write_cp_ready;          // router_002:sink_ready -> axi_ad9144_dma_m_src_axi_agent:write_cp_ready
	wire          axi_ad9144_dma_m_src_axi_agent_write_cp_startofpacket;  // axi_ad9144_dma_m_src_axi_agent:write_cp_startofpacket -> router_002:sink_startofpacket
	wire          axi_ad9144_dma_m_src_axi_agent_write_cp_endofpacket;    // axi_ad9144_dma_m_src_axi_agent:write_cp_endofpacket -> router_002:sink_endofpacket
	wire          router_002_src_valid;                                   // router_002:src_valid -> cmd_demux_002:sink_valid
	wire  [227:0] router_002_src_data;                                    // router_002:src_data -> cmd_demux_002:sink_data
	wire          router_002_src_ready;                                   // cmd_demux_002:sink_ready -> router_002:src_ready
	wire    [3:0] router_002_src_channel;                                 // router_002:src_channel -> cmd_demux_002:sink_channel
	wire          router_002_src_startofpacket;                           // router_002:src_startofpacket -> cmd_demux_002:sink_startofpacket
	wire          router_002_src_endofpacket;                             // router_002:src_endofpacket -> cmd_demux_002:sink_endofpacket
	wire          axi_ad9144_dma_m_src_axi_agent_read_cp_valid;           // axi_ad9144_dma_m_src_axi_agent:read_cp_valid -> router_003:sink_valid
	wire  [227:0] axi_ad9144_dma_m_src_axi_agent_read_cp_data;            // axi_ad9144_dma_m_src_axi_agent:read_cp_data -> router_003:sink_data
	wire          axi_ad9144_dma_m_src_axi_agent_read_cp_ready;           // router_003:sink_ready -> axi_ad9144_dma_m_src_axi_agent:read_cp_ready
	wire          axi_ad9144_dma_m_src_axi_agent_read_cp_startofpacket;   // axi_ad9144_dma_m_src_axi_agent:read_cp_startofpacket -> router_003:sink_startofpacket
	wire          axi_ad9144_dma_m_src_axi_agent_read_cp_endofpacket;     // axi_ad9144_dma_m_src_axi_agent:read_cp_endofpacket -> router_003:sink_endofpacket
	wire          router_003_src_valid;                                   // router_003:src_valid -> cmd_demux_003:sink_valid
	wire  [227:0] router_003_src_data;                                    // router_003:src_data -> cmd_demux_003:sink_data
	wire          router_003_src_ready;                                   // cmd_demux_003:sink_ready -> router_003:src_ready
	wire    [3:0] router_003_src_channel;                                 // router_003:src_channel -> cmd_demux_003:sink_channel
	wire          router_003_src_startofpacket;                           // router_003:src_startofpacket -> cmd_demux_003:sink_startofpacket
	wire          router_003_src_endofpacket;                             // router_003:src_endofpacket -> cmd_demux_003:sink_endofpacket
	wire          router_004_src_valid;                                   // router_004:src_valid -> rsp_demux:sink_valid
	wire  [227:0] router_004_src_data;                                    // router_004:src_data -> rsp_demux:sink_data
	wire          router_004_src_ready;                                   // rsp_demux:sink_ready -> router_004:src_ready
	wire    [3:0] router_004_src_channel;                                 // router_004:src_channel -> rsp_demux:sink_channel
	wire          router_004_src_startofpacket;                           // router_004:src_startofpacket -> rsp_demux:sink_startofpacket
	wire          router_004_src_endofpacket;                             // router_004:src_endofpacket -> rsp_demux:sink_endofpacket
	wire          router_005_src_valid;                                   // router_005:src_valid -> rsp_demux_001:sink_valid
	wire  [227:0] router_005_src_data;                                    // router_005:src_data -> rsp_demux_001:sink_data
	wire          router_005_src_ready;                                   // rsp_demux_001:sink_ready -> router_005:src_ready
	wire    [3:0] router_005_src_channel;                                 // router_005:src_channel -> rsp_demux_001:sink_channel
	wire          router_005_src_startofpacket;                           // router_005:src_startofpacket -> rsp_demux_001:sink_startofpacket
	wire          router_005_src_endofpacket;                             // router_005:src_endofpacket -> rsp_demux_001:sink_endofpacket
	wire          cmd_mux_src_valid;                                      // cmd_mux:src_valid -> agent_pipeline:in_valid
	wire  [227:0] cmd_mux_src_data;                                       // cmd_mux:src_data -> agent_pipeline:in_data
	wire          cmd_mux_src_ready;                                      // agent_pipeline:in_ready -> cmd_mux:src_ready
	wire    [3:0] cmd_mux_src_channel;                                    // cmd_mux:src_channel -> agent_pipeline:in_channel
	wire          cmd_mux_src_startofpacket;                              // cmd_mux:src_startofpacket -> agent_pipeline:in_startofpacket
	wire          cmd_mux_src_endofpacket;                                // cmd_mux:src_endofpacket -> agent_pipeline:in_endofpacket
	wire          agent_pipeline_source0_valid;                           // agent_pipeline:out_valid -> sys_hps_f2sdram0_data_agent:write_cp_valid
	wire  [227:0] agent_pipeline_source0_data;                            // agent_pipeline:out_data -> sys_hps_f2sdram0_data_agent:write_cp_data
	wire          agent_pipeline_source0_ready;                           // sys_hps_f2sdram0_data_agent:write_cp_ready -> agent_pipeline:out_ready
	wire    [3:0] agent_pipeline_source0_channel;                         // agent_pipeline:out_channel -> sys_hps_f2sdram0_data_agent:write_cp_channel
	wire          agent_pipeline_source0_startofpacket;                   // agent_pipeline:out_startofpacket -> sys_hps_f2sdram0_data_agent:write_cp_startofpacket
	wire          agent_pipeline_source0_endofpacket;                     // agent_pipeline:out_endofpacket -> sys_hps_f2sdram0_data_agent:write_cp_endofpacket
	wire          cmd_mux_001_src_valid;                                  // cmd_mux_001:src_valid -> agent_pipeline_001:in_valid
	wire  [227:0] cmd_mux_001_src_data;                                   // cmd_mux_001:src_data -> agent_pipeline_001:in_data
	wire          cmd_mux_001_src_ready;                                  // agent_pipeline_001:in_ready -> cmd_mux_001:src_ready
	wire    [3:0] cmd_mux_001_src_channel;                                // cmd_mux_001:src_channel -> agent_pipeline_001:in_channel
	wire          cmd_mux_001_src_startofpacket;                          // cmd_mux_001:src_startofpacket -> agent_pipeline_001:in_startofpacket
	wire          cmd_mux_001_src_endofpacket;                            // cmd_mux_001:src_endofpacket -> agent_pipeline_001:in_endofpacket
	wire          agent_pipeline_001_source0_valid;                       // agent_pipeline_001:out_valid -> sys_hps_f2sdram0_data_agent:read_cp_valid
	wire  [227:0] agent_pipeline_001_source0_data;                        // agent_pipeline_001:out_data -> sys_hps_f2sdram0_data_agent:read_cp_data
	wire          agent_pipeline_001_source0_ready;                       // sys_hps_f2sdram0_data_agent:read_cp_ready -> agent_pipeline_001:out_ready
	wire    [3:0] agent_pipeline_001_source0_channel;                     // agent_pipeline_001:out_channel -> sys_hps_f2sdram0_data_agent:read_cp_channel
	wire          agent_pipeline_001_source0_startofpacket;               // agent_pipeline_001:out_startofpacket -> sys_hps_f2sdram0_data_agent:read_cp_startofpacket
	wire          agent_pipeline_001_source0_endofpacket;                 // agent_pipeline_001:out_endofpacket -> sys_hps_f2sdram0_data_agent:read_cp_endofpacket
	wire          sys_hps_f2sdram0_data_agent_write_rp_valid;             // sys_hps_f2sdram0_data_agent:write_rp_valid -> agent_pipeline_002:in_valid
	wire  [227:0] sys_hps_f2sdram0_data_agent_write_rp_data;              // sys_hps_f2sdram0_data_agent:write_rp_data -> agent_pipeline_002:in_data
	wire          sys_hps_f2sdram0_data_agent_write_rp_ready;             // agent_pipeline_002:in_ready -> sys_hps_f2sdram0_data_agent:write_rp_ready
	wire          sys_hps_f2sdram0_data_agent_write_rp_startofpacket;     // sys_hps_f2sdram0_data_agent:write_rp_startofpacket -> agent_pipeline_002:in_startofpacket
	wire          sys_hps_f2sdram0_data_agent_write_rp_endofpacket;       // sys_hps_f2sdram0_data_agent:write_rp_endofpacket -> agent_pipeline_002:in_endofpacket
	wire          agent_pipeline_002_source0_valid;                       // agent_pipeline_002:out_valid -> router_004:sink_valid
	wire  [227:0] agent_pipeline_002_source0_data;                        // agent_pipeline_002:out_data -> router_004:sink_data
	wire          agent_pipeline_002_source0_ready;                       // router_004:sink_ready -> agent_pipeline_002:out_ready
	wire          agent_pipeline_002_source0_startofpacket;               // agent_pipeline_002:out_startofpacket -> router_004:sink_startofpacket
	wire          agent_pipeline_002_source0_endofpacket;                 // agent_pipeline_002:out_endofpacket -> router_004:sink_endofpacket
	wire          sys_hps_f2sdram0_data_agent_read_rp_valid;              // sys_hps_f2sdram0_data_agent:read_rp_valid -> agent_pipeline_003:in_valid
	wire  [227:0] sys_hps_f2sdram0_data_agent_read_rp_data;               // sys_hps_f2sdram0_data_agent:read_rp_data -> agent_pipeline_003:in_data
	wire          sys_hps_f2sdram0_data_agent_read_rp_ready;              // agent_pipeline_003:in_ready -> sys_hps_f2sdram0_data_agent:read_rp_ready
	wire          sys_hps_f2sdram0_data_agent_read_rp_startofpacket;      // sys_hps_f2sdram0_data_agent:read_rp_startofpacket -> agent_pipeline_003:in_startofpacket
	wire          sys_hps_f2sdram0_data_agent_read_rp_endofpacket;        // sys_hps_f2sdram0_data_agent:read_rp_endofpacket -> agent_pipeline_003:in_endofpacket
	wire          agent_pipeline_003_source0_valid;                       // agent_pipeline_003:out_valid -> router_005:sink_valid
	wire  [227:0] agent_pipeline_003_source0_data;                        // agent_pipeline_003:out_data -> router_005:sink_data
	wire          agent_pipeline_003_source0_ready;                       // router_005:sink_ready -> agent_pipeline_003:out_ready
	wire          agent_pipeline_003_source0_startofpacket;               // agent_pipeline_003:out_startofpacket -> router_005:sink_startofpacket
	wire          agent_pipeline_003_source0_endofpacket;                 // agent_pipeline_003:out_endofpacket -> router_005:sink_endofpacket
	wire          cmd_demux_src0_valid;                                   // cmd_demux:src0_valid -> mux_pipeline:in_valid
	wire  [227:0] cmd_demux_src0_data;                                    // cmd_demux:src0_data -> mux_pipeline:in_data
	wire          cmd_demux_src0_ready;                                   // mux_pipeline:in_ready -> cmd_demux:src0_ready
	wire    [3:0] cmd_demux_src0_channel;                                 // cmd_demux:src0_channel -> mux_pipeline:in_channel
	wire          cmd_demux_src0_startofpacket;                           // cmd_demux:src0_startofpacket -> mux_pipeline:in_startofpacket
	wire          cmd_demux_src0_endofpacket;                             // cmd_demux:src0_endofpacket -> mux_pipeline:in_endofpacket
	wire          mux_pipeline_source0_valid;                             // mux_pipeline:out_valid -> cmd_mux:sink0_valid
	wire  [227:0] mux_pipeline_source0_data;                              // mux_pipeline:out_data -> cmd_mux:sink0_data
	wire          mux_pipeline_source0_ready;                             // cmd_mux:sink0_ready -> mux_pipeline:out_ready
	wire    [3:0] mux_pipeline_source0_channel;                           // mux_pipeline:out_channel -> cmd_mux:sink0_channel
	wire          mux_pipeline_source0_startofpacket;                     // mux_pipeline:out_startofpacket -> cmd_mux:sink0_startofpacket
	wire          mux_pipeline_source0_endofpacket;                       // mux_pipeline:out_endofpacket -> cmd_mux:sink0_endofpacket
	wire          cmd_demux_002_src0_valid;                               // cmd_demux_002:src0_valid -> mux_pipeline_001:in_valid
	wire  [227:0] cmd_demux_002_src0_data;                                // cmd_demux_002:src0_data -> mux_pipeline_001:in_data
	wire          cmd_demux_002_src0_ready;                               // mux_pipeline_001:in_ready -> cmd_demux_002:src0_ready
	wire    [3:0] cmd_demux_002_src0_channel;                             // cmd_demux_002:src0_channel -> mux_pipeline_001:in_channel
	wire          cmd_demux_002_src0_startofpacket;                       // cmd_demux_002:src0_startofpacket -> mux_pipeline_001:in_startofpacket
	wire          cmd_demux_002_src0_endofpacket;                         // cmd_demux_002:src0_endofpacket -> mux_pipeline_001:in_endofpacket
	wire          mux_pipeline_001_source0_valid;                         // mux_pipeline_001:out_valid -> cmd_mux:sink1_valid
	wire  [227:0] mux_pipeline_001_source0_data;                          // mux_pipeline_001:out_data -> cmd_mux:sink1_data
	wire          mux_pipeline_001_source0_ready;                         // cmd_mux:sink1_ready -> mux_pipeline_001:out_ready
	wire    [3:0] mux_pipeline_001_source0_channel;                       // mux_pipeline_001:out_channel -> cmd_mux:sink1_channel
	wire          mux_pipeline_001_source0_startofpacket;                 // mux_pipeline_001:out_startofpacket -> cmd_mux:sink1_startofpacket
	wire          mux_pipeline_001_source0_endofpacket;                   // mux_pipeline_001:out_endofpacket -> cmd_mux:sink1_endofpacket
	wire          cmd_demux_001_src0_valid;                               // cmd_demux_001:src0_valid -> mux_pipeline_002:in_valid
	wire  [227:0] cmd_demux_001_src0_data;                                // cmd_demux_001:src0_data -> mux_pipeline_002:in_data
	wire          cmd_demux_001_src0_ready;                               // mux_pipeline_002:in_ready -> cmd_demux_001:src0_ready
	wire    [3:0] cmd_demux_001_src0_channel;                             // cmd_demux_001:src0_channel -> mux_pipeline_002:in_channel
	wire          cmd_demux_001_src0_startofpacket;                       // cmd_demux_001:src0_startofpacket -> mux_pipeline_002:in_startofpacket
	wire          cmd_demux_001_src0_endofpacket;                         // cmd_demux_001:src0_endofpacket -> mux_pipeline_002:in_endofpacket
	wire          mux_pipeline_002_source0_valid;                         // mux_pipeline_002:out_valid -> cmd_mux_001:sink0_valid
	wire  [227:0] mux_pipeline_002_source0_data;                          // mux_pipeline_002:out_data -> cmd_mux_001:sink0_data
	wire          mux_pipeline_002_source0_ready;                         // cmd_mux_001:sink0_ready -> mux_pipeline_002:out_ready
	wire    [3:0] mux_pipeline_002_source0_channel;                       // mux_pipeline_002:out_channel -> cmd_mux_001:sink0_channel
	wire          mux_pipeline_002_source0_startofpacket;                 // mux_pipeline_002:out_startofpacket -> cmd_mux_001:sink0_startofpacket
	wire          mux_pipeline_002_source0_endofpacket;                   // mux_pipeline_002:out_endofpacket -> cmd_mux_001:sink0_endofpacket
	wire          cmd_demux_003_src0_valid;                               // cmd_demux_003:src0_valid -> mux_pipeline_003:in_valid
	wire  [227:0] cmd_demux_003_src0_data;                                // cmd_demux_003:src0_data -> mux_pipeline_003:in_data
	wire          cmd_demux_003_src0_ready;                               // mux_pipeline_003:in_ready -> cmd_demux_003:src0_ready
	wire    [3:0] cmd_demux_003_src0_channel;                             // cmd_demux_003:src0_channel -> mux_pipeline_003:in_channel
	wire          cmd_demux_003_src0_startofpacket;                       // cmd_demux_003:src0_startofpacket -> mux_pipeline_003:in_startofpacket
	wire          cmd_demux_003_src0_endofpacket;                         // cmd_demux_003:src0_endofpacket -> mux_pipeline_003:in_endofpacket
	wire          mux_pipeline_003_source0_valid;                         // mux_pipeline_003:out_valid -> cmd_mux_001:sink1_valid
	wire  [227:0] mux_pipeline_003_source0_data;                          // mux_pipeline_003:out_data -> cmd_mux_001:sink1_data
	wire          mux_pipeline_003_source0_ready;                         // cmd_mux_001:sink1_ready -> mux_pipeline_003:out_ready
	wire    [3:0] mux_pipeline_003_source0_channel;                       // mux_pipeline_003:out_channel -> cmd_mux_001:sink1_channel
	wire          mux_pipeline_003_source0_startofpacket;                 // mux_pipeline_003:out_startofpacket -> cmd_mux_001:sink1_startofpacket
	wire          mux_pipeline_003_source0_endofpacket;                   // mux_pipeline_003:out_endofpacket -> cmd_mux_001:sink1_endofpacket
	wire          rsp_demux_src0_valid;                                   // rsp_demux:src0_valid -> mux_pipeline_004:in_valid
	wire  [227:0] rsp_demux_src0_data;                                    // rsp_demux:src0_data -> mux_pipeline_004:in_data
	wire          rsp_demux_src0_ready;                                   // mux_pipeline_004:in_ready -> rsp_demux:src0_ready
	wire    [3:0] rsp_demux_src0_channel;                                 // rsp_demux:src0_channel -> mux_pipeline_004:in_channel
	wire          rsp_demux_src0_startofpacket;                           // rsp_demux:src0_startofpacket -> mux_pipeline_004:in_startofpacket
	wire          rsp_demux_src0_endofpacket;                             // rsp_demux:src0_endofpacket -> mux_pipeline_004:in_endofpacket
	wire          mux_pipeline_004_source0_valid;                         // mux_pipeline_004:out_valid -> rsp_mux:sink0_valid
	wire  [227:0] mux_pipeline_004_source0_data;                          // mux_pipeline_004:out_data -> rsp_mux:sink0_data
	wire          mux_pipeline_004_source0_ready;                         // rsp_mux:sink0_ready -> mux_pipeline_004:out_ready
	wire    [3:0] mux_pipeline_004_source0_channel;                       // mux_pipeline_004:out_channel -> rsp_mux:sink0_channel
	wire          mux_pipeline_004_source0_startofpacket;                 // mux_pipeline_004:out_startofpacket -> rsp_mux:sink0_startofpacket
	wire          mux_pipeline_004_source0_endofpacket;                   // mux_pipeline_004:out_endofpacket -> rsp_mux:sink0_endofpacket
	wire          rsp_demux_001_src0_valid;                               // rsp_demux_001:src0_valid -> mux_pipeline_005:in_valid
	wire  [227:0] rsp_demux_001_src0_data;                                // rsp_demux_001:src0_data -> mux_pipeline_005:in_data
	wire          rsp_demux_001_src0_ready;                               // mux_pipeline_005:in_ready -> rsp_demux_001:src0_ready
	wire    [3:0] rsp_demux_001_src0_channel;                             // rsp_demux_001:src0_channel -> mux_pipeline_005:in_channel
	wire          rsp_demux_001_src0_startofpacket;                       // rsp_demux_001:src0_startofpacket -> mux_pipeline_005:in_startofpacket
	wire          rsp_demux_001_src0_endofpacket;                         // rsp_demux_001:src0_endofpacket -> mux_pipeline_005:in_endofpacket
	wire          mux_pipeline_005_source0_valid;                         // mux_pipeline_005:out_valid -> rsp_mux_001:sink0_valid
	wire  [227:0] mux_pipeline_005_source0_data;                          // mux_pipeline_005:out_data -> rsp_mux_001:sink0_data
	wire          mux_pipeline_005_source0_ready;                         // rsp_mux_001:sink0_ready -> mux_pipeline_005:out_ready
	wire    [3:0] mux_pipeline_005_source0_channel;                       // mux_pipeline_005:out_channel -> rsp_mux_001:sink0_channel
	wire          mux_pipeline_005_source0_startofpacket;                 // mux_pipeline_005:out_startofpacket -> rsp_mux_001:sink0_startofpacket
	wire          mux_pipeline_005_source0_endofpacket;                   // mux_pipeline_005:out_endofpacket -> rsp_mux_001:sink0_endofpacket
	wire          rsp_demux_src1_valid;                                   // rsp_demux:src1_valid -> mux_pipeline_006:in_valid
	wire  [227:0] rsp_demux_src1_data;                                    // rsp_demux:src1_data -> mux_pipeline_006:in_data
	wire          rsp_demux_src1_ready;                                   // mux_pipeline_006:in_ready -> rsp_demux:src1_ready
	wire    [3:0] rsp_demux_src1_channel;                                 // rsp_demux:src1_channel -> mux_pipeline_006:in_channel
	wire          rsp_demux_src1_startofpacket;                           // rsp_demux:src1_startofpacket -> mux_pipeline_006:in_startofpacket
	wire          rsp_demux_src1_endofpacket;                             // rsp_demux:src1_endofpacket -> mux_pipeline_006:in_endofpacket
	wire          mux_pipeline_006_source0_valid;                         // mux_pipeline_006:out_valid -> rsp_mux_002:sink0_valid
	wire  [227:0] mux_pipeline_006_source0_data;                          // mux_pipeline_006:out_data -> rsp_mux_002:sink0_data
	wire          mux_pipeline_006_source0_ready;                         // rsp_mux_002:sink0_ready -> mux_pipeline_006:out_ready
	wire    [3:0] mux_pipeline_006_source0_channel;                       // mux_pipeline_006:out_channel -> rsp_mux_002:sink0_channel
	wire          mux_pipeline_006_source0_startofpacket;                 // mux_pipeline_006:out_startofpacket -> rsp_mux_002:sink0_startofpacket
	wire          mux_pipeline_006_source0_endofpacket;                   // mux_pipeline_006:out_endofpacket -> rsp_mux_002:sink0_endofpacket
	wire          rsp_demux_001_src1_valid;                               // rsp_demux_001:src1_valid -> mux_pipeline_007:in_valid
	wire  [227:0] rsp_demux_001_src1_data;                                // rsp_demux_001:src1_data -> mux_pipeline_007:in_data
	wire          rsp_demux_001_src1_ready;                               // mux_pipeline_007:in_ready -> rsp_demux_001:src1_ready
	wire    [3:0] rsp_demux_001_src1_channel;                             // rsp_demux_001:src1_channel -> mux_pipeline_007:in_channel
	wire          rsp_demux_001_src1_startofpacket;                       // rsp_demux_001:src1_startofpacket -> mux_pipeline_007:in_startofpacket
	wire          rsp_demux_001_src1_endofpacket;                         // rsp_demux_001:src1_endofpacket -> mux_pipeline_007:in_endofpacket
	wire          mux_pipeline_007_source0_valid;                         // mux_pipeline_007:out_valid -> rsp_mux_003:sink0_valid
	wire  [227:0] mux_pipeline_007_source0_data;                          // mux_pipeline_007:out_data -> rsp_mux_003:sink0_data
	wire          mux_pipeline_007_source0_ready;                         // rsp_mux_003:sink0_ready -> mux_pipeline_007:out_ready
	wire    [3:0] mux_pipeline_007_source0_channel;                       // mux_pipeline_007:out_channel -> rsp_mux_003:sink0_channel
	wire          mux_pipeline_007_source0_startofpacket;                 // mux_pipeline_007:out_startofpacket -> rsp_mux_003:sink0_startofpacket
	wire          mux_pipeline_007_source0_endofpacket;                   // mux_pipeline_007:out_endofpacket -> rsp_mux_003:sink0_endofpacket

	altera_merlin_axi_master_ni #(
		.ID_WIDTH                  (1),
		.ADDR_WIDTH                (32),
		.RDATA_WIDTH               (128),
		.WDATA_WIDTH               (128),
		.ADDR_USER_WIDTH           (1),
		.DATA_USER_WIDTH           (1),
		.AXI_BURST_LENGTH_WIDTH    (4),
		.AXI_LOCK_WIDTH            (2),
		.AXI_VERSION               ("AXI3"),
		.WRITE_ISSUING_CAPABILITY  (8),
		.READ_ISSUING_CAPABILITY   (1),
		.PKT_BEGIN_BURST           (211),
		.PKT_CACHE_H               (222),
		.PKT_CACHE_L               (219),
		.PKT_ADDR_SIDEBAND_H       (209),
		.PKT_ADDR_SIDEBAND_L       (205),
		.PKT_PROTECTION_H          (218),
		.PKT_PROTECTION_L          (216),
		.PKT_BURST_SIZE_H          (202),
		.PKT_BURST_SIZE_L          (200),
		.PKT_BURST_TYPE_H          (204),
		.PKT_BURST_TYPE_L          (203),
		.PKT_RESPONSE_STATUS_L     (223),
		.PKT_RESPONSE_STATUS_H     (224),
		.PKT_BURSTWRAP_H           (199),
		.PKT_BURSTWRAP_L           (191),
		.PKT_BYTE_CNT_H            (190),
		.PKT_BYTE_CNT_L            (182),
		.PKT_ADDR_H                (175),
		.PKT_ADDR_L                (144),
		.PKT_TRANS_EXCLUSIVE       (181),
		.PKT_TRANS_LOCK            (180),
		.PKT_TRANS_COMPRESSED_READ (176),
		.PKT_TRANS_POSTED          (177),
		.PKT_TRANS_WRITE           (178),
		.PKT_TRANS_READ            (179),
		.PKT_DATA_H                (127),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (143),
		.PKT_BYTEEN_L              (128),
		.PKT_SRC_ID_H              (213),
		.PKT_SRC_ID_L              (213),
		.PKT_DEST_ID_H             (214),
		.PKT_DEST_ID_L             (214),
		.PKT_THREAD_ID_H           (215),
		.PKT_THREAD_ID_L           (215),
		.PKT_QOS_L                 (212),
		.PKT_QOS_H                 (212),
		.PKT_ORI_BURST_SIZE_L      (225),
		.PKT_ORI_BURST_SIZE_H      (227),
		.PKT_DATA_SIDEBAND_H       (210),
		.PKT_DATA_SIDEBAND_L       (210),
		.ST_DATA_W                 (228),
		.ST_CHANNEL_W              (4),
		.ID                        (1)
	) axi_ad9680_dma_m_dest_axi_agent (
		.aclk                   (sys_dma_clk_clk_clk),                                          //              clk.clk
		.aresetn                (~axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), //        clk_reset.reset_n
		.write_cp_valid         (axi_ad9680_dma_m_dest_axi_agent_write_cp_valid),               //         write_cp.valid
		.write_cp_data          (axi_ad9680_dma_m_dest_axi_agent_write_cp_data),                //                 .data
		.write_cp_startofpacket (axi_ad9680_dma_m_dest_axi_agent_write_cp_startofpacket),       //                 .startofpacket
		.write_cp_endofpacket   (axi_ad9680_dma_m_dest_axi_agent_write_cp_endofpacket),         //                 .endofpacket
		.write_cp_ready         (axi_ad9680_dma_m_dest_axi_agent_write_cp_ready),               //                 .ready
		.write_rp_valid         (rsp_mux_src_valid),                                            //         write_rp.valid
		.write_rp_data          (rsp_mux_src_data),                                             //                 .data
		.write_rp_channel       (rsp_mux_src_channel),                                          //                 .channel
		.write_rp_startofpacket (rsp_mux_src_startofpacket),                                    //                 .startofpacket
		.write_rp_endofpacket   (rsp_mux_src_endofpacket),                                      //                 .endofpacket
		.write_rp_ready         (rsp_mux_src_ready),                                            //                 .ready
		.read_cp_valid          (axi_ad9680_dma_m_dest_axi_agent_read_cp_valid),                //          read_cp.valid
		.read_cp_data           (axi_ad9680_dma_m_dest_axi_agent_read_cp_data),                 //                 .data
		.read_cp_startofpacket  (axi_ad9680_dma_m_dest_axi_agent_read_cp_startofpacket),        //                 .startofpacket
		.read_cp_endofpacket    (axi_ad9680_dma_m_dest_axi_agent_read_cp_endofpacket),          //                 .endofpacket
		.read_cp_ready          (axi_ad9680_dma_m_dest_axi_agent_read_cp_ready),                //                 .ready
		.read_rp_valid          (rsp_mux_001_src_valid),                                        //          read_rp.valid
		.read_rp_data           (rsp_mux_001_src_data),                                         //                 .data
		.read_rp_channel        (rsp_mux_001_src_channel),                                      //                 .channel
		.read_rp_startofpacket  (rsp_mux_001_src_startofpacket),                                //                 .startofpacket
		.read_rp_endofpacket    (rsp_mux_001_src_endofpacket),                                  //                 .endofpacket
		.read_rp_ready          (rsp_mux_001_src_ready),                                        //                 .ready
		.awid                   (axi_ad9680_dma_m_dest_axi_awid),                               // altera_axi_slave.awid
		.awaddr                 (axi_ad9680_dma_m_dest_axi_awaddr),                             //                 .awaddr
		.awlen                  (axi_ad9680_dma_m_dest_axi_awlen),                              //                 .awlen
		.awsize                 (axi_ad9680_dma_m_dest_axi_awsize),                             //                 .awsize
		.awburst                (axi_ad9680_dma_m_dest_axi_awburst),                            //                 .awburst
		.awlock                 (axi_ad9680_dma_m_dest_axi_awlock),                             //                 .awlock
		.awcache                (axi_ad9680_dma_m_dest_axi_awcache),                            //                 .awcache
		.awprot                 (axi_ad9680_dma_m_dest_axi_awprot),                             //                 .awprot
		.awvalid                (axi_ad9680_dma_m_dest_axi_awvalid),                            //                 .awvalid
		.awready                (axi_ad9680_dma_m_dest_axi_awready),                            //                 .awready
		.wid                    (axi_ad9680_dma_m_dest_axi_wid),                                //                 .wid
		.wdata                  (axi_ad9680_dma_m_dest_axi_wdata),                              //                 .wdata
		.wstrb                  (axi_ad9680_dma_m_dest_axi_wstrb),                              //                 .wstrb
		.wlast                  (axi_ad9680_dma_m_dest_axi_wlast),                              //                 .wlast
		.wvalid                 (axi_ad9680_dma_m_dest_axi_wvalid),                             //                 .wvalid
		.wready                 (axi_ad9680_dma_m_dest_axi_wready),                             //                 .wready
		.bid                    (axi_ad9680_dma_m_dest_axi_bid),                                //                 .bid
		.bresp                  (axi_ad9680_dma_m_dest_axi_bresp),                              //                 .bresp
		.bvalid                 (axi_ad9680_dma_m_dest_axi_bvalid),                             //                 .bvalid
		.bready                 (axi_ad9680_dma_m_dest_axi_bready),                             //                 .bready
		.arid                   (axi_ad9680_dma_m_dest_axi_arid),                               //                 .arid
		.araddr                 (axi_ad9680_dma_m_dest_axi_araddr),                             //                 .araddr
		.arlen                  (axi_ad9680_dma_m_dest_axi_arlen),                              //                 .arlen
		.arsize                 (axi_ad9680_dma_m_dest_axi_arsize),                             //                 .arsize
		.arburst                (axi_ad9680_dma_m_dest_axi_arburst),                            //                 .arburst
		.arlock                 (axi_ad9680_dma_m_dest_axi_arlock),                             //                 .arlock
		.arcache                (axi_ad9680_dma_m_dest_axi_arcache),                            //                 .arcache
		.arprot                 (axi_ad9680_dma_m_dest_axi_arprot),                             //                 .arprot
		.arvalid                (axi_ad9680_dma_m_dest_axi_arvalid),                            //                 .arvalid
		.arready                (axi_ad9680_dma_m_dest_axi_arready),                            //                 .arready
		.rid                    (axi_ad9680_dma_m_dest_axi_rid),                                //                 .rid
		.rdata                  (axi_ad9680_dma_m_dest_axi_rdata),                              //                 .rdata
		.rresp                  (axi_ad9680_dma_m_dest_axi_rresp),                              //                 .rresp
		.rlast                  (axi_ad9680_dma_m_dest_axi_rlast),                              //                 .rlast
		.rvalid                 (axi_ad9680_dma_m_dest_axi_rvalid),                             //                 .rvalid
		.rready                 (axi_ad9680_dma_m_dest_axi_rready),                             //                 .rready
		.awuser                 (1'b0),                                                         //      (terminated)
		.aruser                 (1'b0),                                                         //      (terminated)
		.awqos                  (4'b0000),                                                      //      (terminated)
		.arqos                  (4'b0000),                                                      //      (terminated)
		.awregion               (4'b0000),                                                      //      (terminated)
		.arregion               (4'b0000),                                                      //      (terminated)
		.wuser                  (1'b0),                                                         //      (terminated)
		.ruser                  (),                                                             //      (terminated)
		.buser                  ()                                                              //      (terminated)
	);

	altera_merlin_axi_master_ni #(
		.ID_WIDTH                  (1),
		.ADDR_WIDTH                (32),
		.RDATA_WIDTH               (128),
		.WDATA_WIDTH               (128),
		.ADDR_USER_WIDTH           (1),
		.DATA_USER_WIDTH           (1),
		.AXI_BURST_LENGTH_WIDTH    (4),
		.AXI_LOCK_WIDTH            (2),
		.AXI_VERSION               ("AXI3"),
		.WRITE_ISSUING_CAPABILITY  (1),
		.READ_ISSUING_CAPABILITY   (16),
		.PKT_BEGIN_BURST           (211),
		.PKT_CACHE_H               (222),
		.PKT_CACHE_L               (219),
		.PKT_ADDR_SIDEBAND_H       (209),
		.PKT_ADDR_SIDEBAND_L       (205),
		.PKT_PROTECTION_H          (218),
		.PKT_PROTECTION_L          (216),
		.PKT_BURST_SIZE_H          (202),
		.PKT_BURST_SIZE_L          (200),
		.PKT_BURST_TYPE_H          (204),
		.PKT_BURST_TYPE_L          (203),
		.PKT_RESPONSE_STATUS_L     (223),
		.PKT_RESPONSE_STATUS_H     (224),
		.PKT_BURSTWRAP_H           (199),
		.PKT_BURSTWRAP_L           (191),
		.PKT_BYTE_CNT_H            (190),
		.PKT_BYTE_CNT_L            (182),
		.PKT_ADDR_H                (175),
		.PKT_ADDR_L                (144),
		.PKT_TRANS_EXCLUSIVE       (181),
		.PKT_TRANS_LOCK            (180),
		.PKT_TRANS_COMPRESSED_READ (176),
		.PKT_TRANS_POSTED          (177),
		.PKT_TRANS_WRITE           (178),
		.PKT_TRANS_READ            (179),
		.PKT_DATA_H                (127),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (143),
		.PKT_BYTEEN_L              (128),
		.PKT_SRC_ID_H              (213),
		.PKT_SRC_ID_L              (213),
		.PKT_DEST_ID_H             (214),
		.PKT_DEST_ID_L             (214),
		.PKT_THREAD_ID_H           (215),
		.PKT_THREAD_ID_L           (215),
		.PKT_QOS_L                 (212),
		.PKT_QOS_H                 (212),
		.PKT_ORI_BURST_SIZE_L      (225),
		.PKT_ORI_BURST_SIZE_H      (227),
		.PKT_DATA_SIDEBAND_H       (210),
		.PKT_DATA_SIDEBAND_L       (210),
		.ST_DATA_W                 (228),
		.ST_CHANNEL_W              (4),
		.ID                        (0)
	) axi_ad9144_dma_m_src_axi_agent (
		.aclk                   (sys_dma_clk_clk_clk),                                          //              clk.clk
		.aresetn                (~axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), //        clk_reset.reset_n
		.write_cp_valid         (axi_ad9144_dma_m_src_axi_agent_write_cp_valid),                //         write_cp.valid
		.write_cp_data          (axi_ad9144_dma_m_src_axi_agent_write_cp_data),                 //                 .data
		.write_cp_startofpacket (axi_ad9144_dma_m_src_axi_agent_write_cp_startofpacket),        //                 .startofpacket
		.write_cp_endofpacket   (axi_ad9144_dma_m_src_axi_agent_write_cp_endofpacket),          //                 .endofpacket
		.write_cp_ready         (axi_ad9144_dma_m_src_axi_agent_write_cp_ready),                //                 .ready
		.write_rp_valid         (rsp_mux_002_src_valid),                                        //         write_rp.valid
		.write_rp_data          (rsp_mux_002_src_data),                                         //                 .data
		.write_rp_channel       (rsp_mux_002_src_channel),                                      //                 .channel
		.write_rp_startofpacket (rsp_mux_002_src_startofpacket),                                //                 .startofpacket
		.write_rp_endofpacket   (rsp_mux_002_src_endofpacket),                                  //                 .endofpacket
		.write_rp_ready         (rsp_mux_002_src_ready),                                        //                 .ready
		.read_cp_valid          (axi_ad9144_dma_m_src_axi_agent_read_cp_valid),                 //          read_cp.valid
		.read_cp_data           (axi_ad9144_dma_m_src_axi_agent_read_cp_data),                  //                 .data
		.read_cp_startofpacket  (axi_ad9144_dma_m_src_axi_agent_read_cp_startofpacket),         //                 .startofpacket
		.read_cp_endofpacket    (axi_ad9144_dma_m_src_axi_agent_read_cp_endofpacket),           //                 .endofpacket
		.read_cp_ready          (axi_ad9144_dma_m_src_axi_agent_read_cp_ready),                 //                 .ready
		.read_rp_valid          (rsp_mux_003_src_valid),                                        //          read_rp.valid
		.read_rp_data           (rsp_mux_003_src_data),                                         //                 .data
		.read_rp_channel        (rsp_mux_003_src_channel),                                      //                 .channel
		.read_rp_startofpacket  (rsp_mux_003_src_startofpacket),                                //                 .startofpacket
		.read_rp_endofpacket    (rsp_mux_003_src_endofpacket),                                  //                 .endofpacket
		.read_rp_ready          (rsp_mux_003_src_ready),                                        //                 .ready
		.awid                   (axi_ad9144_dma_m_src_axi_awid),                                // altera_axi_slave.awid
		.awaddr                 (axi_ad9144_dma_m_src_axi_awaddr),                              //                 .awaddr
		.awlen                  (axi_ad9144_dma_m_src_axi_awlen),                               //                 .awlen
		.awsize                 (axi_ad9144_dma_m_src_axi_awsize),                              //                 .awsize
		.awburst                (axi_ad9144_dma_m_src_axi_awburst),                             //                 .awburst
		.awlock                 (axi_ad9144_dma_m_src_axi_awlock),                              //                 .awlock
		.awcache                (axi_ad9144_dma_m_src_axi_awcache),                             //                 .awcache
		.awprot                 (axi_ad9144_dma_m_src_axi_awprot),                              //                 .awprot
		.awvalid                (axi_ad9144_dma_m_src_axi_awvalid),                             //                 .awvalid
		.awready                (axi_ad9144_dma_m_src_axi_awready),                             //                 .awready
		.wid                    (axi_ad9144_dma_m_src_axi_wid),                                 //                 .wid
		.wdata                  (axi_ad9144_dma_m_src_axi_wdata),                               //                 .wdata
		.wstrb                  (axi_ad9144_dma_m_src_axi_wstrb),                               //                 .wstrb
		.wlast                  (axi_ad9144_dma_m_src_axi_wlast),                               //                 .wlast
		.wvalid                 (axi_ad9144_dma_m_src_axi_wvalid),                              //                 .wvalid
		.wready                 (axi_ad9144_dma_m_src_axi_wready),                              //                 .wready
		.bid                    (axi_ad9144_dma_m_src_axi_bid),                                 //                 .bid
		.bresp                  (axi_ad9144_dma_m_src_axi_bresp),                               //                 .bresp
		.bvalid                 (axi_ad9144_dma_m_src_axi_bvalid),                              //                 .bvalid
		.bready                 (axi_ad9144_dma_m_src_axi_bready),                              //                 .bready
		.arid                   (axi_ad9144_dma_m_src_axi_arid),                                //                 .arid
		.araddr                 (axi_ad9144_dma_m_src_axi_araddr),                              //                 .araddr
		.arlen                  (axi_ad9144_dma_m_src_axi_arlen),                               //                 .arlen
		.arsize                 (axi_ad9144_dma_m_src_axi_arsize),                              //                 .arsize
		.arburst                (axi_ad9144_dma_m_src_axi_arburst),                             //                 .arburst
		.arlock                 (axi_ad9144_dma_m_src_axi_arlock),                              //                 .arlock
		.arcache                (axi_ad9144_dma_m_src_axi_arcache),                             //                 .arcache
		.arprot                 (axi_ad9144_dma_m_src_axi_arprot),                              //                 .arprot
		.arvalid                (axi_ad9144_dma_m_src_axi_arvalid),                             //                 .arvalid
		.arready                (axi_ad9144_dma_m_src_axi_arready),                             //                 .arready
		.rid                    (axi_ad9144_dma_m_src_axi_rid),                                 //                 .rid
		.rdata                  (axi_ad9144_dma_m_src_axi_rdata),                               //                 .rdata
		.rresp                  (axi_ad9144_dma_m_src_axi_rresp),                               //                 .rresp
		.rlast                  (axi_ad9144_dma_m_src_axi_rlast),                               //                 .rlast
		.rvalid                 (axi_ad9144_dma_m_src_axi_rvalid),                              //                 .rvalid
		.rready                 (axi_ad9144_dma_m_src_axi_rready),                              //                 .rready
		.awuser                 (1'b0),                                                         //      (terminated)
		.aruser                 (1'b0),                                                         //      (terminated)
		.awqos                  (4'b0000),                                                      //      (terminated)
		.arqos                  (4'b0000),                                                      //      (terminated)
		.awregion               (4'b0000),                                                      //      (terminated)
		.arregion               (4'b0000),                                                      //      (terminated)
		.wuser                  (1'b0),                                                         //      (terminated)
		.ruser                  (),                                                             //      (terminated)
		.buser                  ()                                                              //      (terminated)
	);

	altera_merlin_axi_slave_ni #(
		.PKT_QOS_H                   (212),
		.PKT_QOS_L                   (212),
		.PKT_THREAD_ID_H             (215),
		.PKT_THREAD_ID_L             (215),
		.PKT_RESPONSE_STATUS_H       (224),
		.PKT_RESPONSE_STATUS_L       (223),
		.PKT_BEGIN_BURST             (211),
		.PKT_CACHE_H                 (222),
		.PKT_CACHE_L                 (219),
		.PKT_DATA_SIDEBAND_H         (210),
		.PKT_DATA_SIDEBAND_L         (210),
		.PKT_ADDR_SIDEBAND_H         (209),
		.PKT_ADDR_SIDEBAND_L         (205),
		.PKT_BURST_TYPE_H            (204),
		.PKT_BURST_TYPE_L            (203),
		.PKT_PROTECTION_H            (218),
		.PKT_PROTECTION_L            (216),
		.PKT_BURST_SIZE_H            (202),
		.PKT_BURST_SIZE_L            (200),
		.PKT_BURSTWRAP_H             (199),
		.PKT_BURSTWRAP_L             (191),
		.PKT_BYTE_CNT_H              (190),
		.PKT_BYTE_CNT_L              (182),
		.PKT_ADDR_H                  (175),
		.PKT_ADDR_L                  (144),
		.PKT_TRANS_EXCLUSIVE         (181),
		.PKT_TRANS_LOCK              (180),
		.PKT_TRANS_COMPRESSED_READ   (176),
		.PKT_TRANS_POSTED            (177),
		.PKT_TRANS_WRITE             (178),
		.PKT_TRANS_READ              (179),
		.PKT_DATA_H                  (127),
		.PKT_DATA_L                  (0),
		.PKT_BYTEEN_H                (143),
		.PKT_BYTEEN_L                (128),
		.PKT_SRC_ID_H                (213),
		.PKT_SRC_ID_L                (213),
		.PKT_DEST_ID_H               (214),
		.PKT_DEST_ID_L               (214),
		.PKT_ORI_BURST_SIZE_L        (225),
		.PKT_ORI_BURST_SIZE_H        (227),
		.ADDR_USER_WIDTH             (5),
		.DATA_USER_WIDTH             (1),
		.ST_DATA_W                   (228),
		.ADDR_WIDTH                  (32),
		.RDATA_WIDTH                 (128),
		.WDATA_WIDTH                 (128),
		.ST_CHANNEL_W                (4),
		.AXI_SLAVE_ID_W              (4),
		.PASS_ID_TO_SLAVE            (0),
		.AXI_VERSION                 ("AXI3"),
		.WRITE_ACCEPTANCE_CAPABILITY (8),
		.READ_ACCEPTANCE_CAPABILITY  (8)
	) sys_hps_f2sdram0_data_agent (
		.aclk                   (sys_dma_clk_clk_clk),                                          //        clock_sink.clk
		.aresetn                (~axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), //        reset_sink.reset_n
		.read_cp_valid          (agent_pipeline_001_source0_valid),                             //           read_cp.valid
		.read_cp_ready          (agent_pipeline_001_source0_ready),                             //                  .ready
		.read_cp_data           (agent_pipeline_001_source0_data),                              //                  .data
		.read_cp_channel        (agent_pipeline_001_source0_channel),                           //                  .channel
		.read_cp_startofpacket  (agent_pipeline_001_source0_startofpacket),                     //                  .startofpacket
		.read_cp_endofpacket    (agent_pipeline_001_source0_endofpacket),                       //                  .endofpacket
		.write_cp_ready         (agent_pipeline_source0_ready),                                 //          write_cp.ready
		.write_cp_valid         (agent_pipeline_source0_valid),                                 //                  .valid
		.write_cp_data          (agent_pipeline_source0_data),                                  //                  .data
		.write_cp_channel       (agent_pipeline_source0_channel),                               //                  .channel
		.write_cp_startofpacket (agent_pipeline_source0_startofpacket),                         //                  .startofpacket
		.write_cp_endofpacket   (agent_pipeline_source0_endofpacket),                           //                  .endofpacket
		.read_rp_ready          (sys_hps_f2sdram0_data_agent_read_rp_ready),                    //           read_rp.ready
		.read_rp_valid          (sys_hps_f2sdram0_data_agent_read_rp_valid),                    //                  .valid
		.read_rp_data           (sys_hps_f2sdram0_data_agent_read_rp_data),                     //                  .data
		.read_rp_startofpacket  (sys_hps_f2sdram0_data_agent_read_rp_startofpacket),            //                  .startofpacket
		.read_rp_endofpacket    (sys_hps_f2sdram0_data_agent_read_rp_endofpacket),              //                  .endofpacket
		.write_rp_ready         (sys_hps_f2sdram0_data_agent_write_rp_ready),                   //          write_rp.ready
		.write_rp_valid         (sys_hps_f2sdram0_data_agent_write_rp_valid),                   //                  .valid
		.write_rp_data          (sys_hps_f2sdram0_data_agent_write_rp_data),                    //                  .data
		.write_rp_startofpacket (sys_hps_f2sdram0_data_agent_write_rp_startofpacket),           //                  .startofpacket
		.write_rp_endofpacket   (sys_hps_f2sdram0_data_agent_write_rp_endofpacket),             //                  .endofpacket
		.awid                   (sys_hps_f2sdram0_data_awid),                                   // altera_axi_master.awid
		.awaddr                 (sys_hps_f2sdram0_data_awaddr),                                 //                  .awaddr
		.awlen                  (sys_hps_f2sdram0_data_awlen),                                  //                  .awlen
		.awsize                 (sys_hps_f2sdram0_data_awsize),                                 //                  .awsize
		.awburst                (sys_hps_f2sdram0_data_awburst),                                //                  .awburst
		.awlock                 (sys_hps_f2sdram0_data_awlock),                                 //                  .awlock
		.awcache                (sys_hps_f2sdram0_data_awcache),                                //                  .awcache
		.awprot                 (sys_hps_f2sdram0_data_awprot),                                 //                  .awprot
		.awuser                 (sys_hps_f2sdram0_data_awuser),                                 //                  .awuser
		.awvalid                (sys_hps_f2sdram0_data_awvalid),                                //                  .awvalid
		.awready                (sys_hps_f2sdram0_data_awready),                                //                  .awready
		.wid                    (sys_hps_f2sdram0_data_wid),                                    //                  .wid
		.wdata                  (sys_hps_f2sdram0_data_wdata),                                  //                  .wdata
		.wstrb                  (sys_hps_f2sdram0_data_wstrb),                                  //                  .wstrb
		.wlast                  (sys_hps_f2sdram0_data_wlast),                                  //                  .wlast
		.wvalid                 (sys_hps_f2sdram0_data_wvalid),                                 //                  .wvalid
		.wready                 (sys_hps_f2sdram0_data_wready),                                 //                  .wready
		.bid                    (sys_hps_f2sdram0_data_bid),                                    //                  .bid
		.bresp                  (sys_hps_f2sdram0_data_bresp),                                  //                  .bresp
		.bvalid                 (sys_hps_f2sdram0_data_bvalid),                                 //                  .bvalid
		.bready                 (sys_hps_f2sdram0_data_bready),                                 //                  .bready
		.arid                   (sys_hps_f2sdram0_data_arid),                                   //                  .arid
		.araddr                 (sys_hps_f2sdram0_data_araddr),                                 //                  .araddr
		.arlen                  (sys_hps_f2sdram0_data_arlen),                                  //                  .arlen
		.arsize                 (sys_hps_f2sdram0_data_arsize),                                 //                  .arsize
		.arburst                (sys_hps_f2sdram0_data_arburst),                                //                  .arburst
		.arlock                 (sys_hps_f2sdram0_data_arlock),                                 //                  .arlock
		.arcache                (sys_hps_f2sdram0_data_arcache),                                //                  .arcache
		.arprot                 (sys_hps_f2sdram0_data_arprot),                                 //                  .arprot
		.aruser                 (sys_hps_f2sdram0_data_aruser),                                 //                  .aruser
		.arvalid                (sys_hps_f2sdram0_data_arvalid),                                //                  .arvalid
		.arready                (sys_hps_f2sdram0_data_arready),                                //                  .arready
		.rid                    (sys_hps_f2sdram0_data_rid),                                    //                  .rid
		.rdata                  (sys_hps_f2sdram0_data_rdata),                                  //                  .rdata
		.rresp                  (sys_hps_f2sdram0_data_rresp),                                  //                  .rresp
		.rlast                  (sys_hps_f2sdram0_data_rlast),                                  //                  .rlast
		.rvalid                 (sys_hps_f2sdram0_data_rvalid),                                 //                  .rvalid
		.rready                 (sys_hps_f2sdram0_data_rready)                                  //                  .rready
	);

	system_bd_altera_merlin_router_181_u6yp66a router (
		.sink_ready         (axi_ad9680_dma_m_dest_axi_agent_write_cp_ready),              //      sink.ready
		.sink_valid         (axi_ad9680_dma_m_dest_axi_agent_write_cp_valid),              //          .valid
		.sink_data          (axi_ad9680_dma_m_dest_axi_agent_write_cp_data),               //          .data
		.sink_startofpacket (axi_ad9680_dma_m_dest_axi_agent_write_cp_startofpacket),      //          .startofpacket
		.sink_endofpacket   (axi_ad9680_dma_m_dest_axi_agent_write_cp_endofpacket),        //          .endofpacket
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_src_ready),                                            //       src.ready
		.src_valid          (router_src_valid),                                            //          .valid
		.src_data           (router_src_data),                                             //          .data
		.src_channel        (router_src_channel),                                          //          .channel
		.src_startofpacket  (router_src_startofpacket),                                    //          .startofpacket
		.src_endofpacket    (router_src_endofpacket)                                       //          .endofpacket
	);

	system_bd_altera_merlin_router_181_a3opjsa router_001 (
		.sink_ready         (axi_ad9680_dma_m_dest_axi_agent_read_cp_ready),               //      sink.ready
		.sink_valid         (axi_ad9680_dma_m_dest_axi_agent_read_cp_valid),               //          .valid
		.sink_data          (axi_ad9680_dma_m_dest_axi_agent_read_cp_data),                //          .data
		.sink_startofpacket (axi_ad9680_dma_m_dest_axi_agent_read_cp_startofpacket),       //          .startofpacket
		.sink_endofpacket   (axi_ad9680_dma_m_dest_axi_agent_read_cp_endofpacket),         //          .endofpacket
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_001_src_ready),                                        //       src.ready
		.src_valid          (router_001_src_valid),                                        //          .valid
		.src_data           (router_001_src_data),                                         //          .data
		.src_channel        (router_001_src_channel),                                      //          .channel
		.src_startofpacket  (router_001_src_startofpacket),                                //          .startofpacket
		.src_endofpacket    (router_001_src_endofpacket)                                   //          .endofpacket
	);

	system_bd_altera_merlin_router_181_u6yp66a router_002 (
		.sink_ready         (axi_ad9144_dma_m_src_axi_agent_write_cp_ready),               //      sink.ready
		.sink_valid         (axi_ad9144_dma_m_src_axi_agent_write_cp_valid),               //          .valid
		.sink_data          (axi_ad9144_dma_m_src_axi_agent_write_cp_data),                //          .data
		.sink_startofpacket (axi_ad9144_dma_m_src_axi_agent_write_cp_startofpacket),       //          .startofpacket
		.sink_endofpacket   (axi_ad9144_dma_m_src_axi_agent_write_cp_endofpacket),         //          .endofpacket
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_002_src_ready),                                        //       src.ready
		.src_valid          (router_002_src_valid),                                        //          .valid
		.src_data           (router_002_src_data),                                         //          .data
		.src_channel        (router_002_src_channel),                                      //          .channel
		.src_startofpacket  (router_002_src_startofpacket),                                //          .startofpacket
		.src_endofpacket    (router_002_src_endofpacket)                                   //          .endofpacket
	);

	system_bd_altera_merlin_router_181_a3opjsa router_003 (
		.sink_ready         (axi_ad9144_dma_m_src_axi_agent_read_cp_ready),                //      sink.ready
		.sink_valid         (axi_ad9144_dma_m_src_axi_agent_read_cp_valid),                //          .valid
		.sink_data          (axi_ad9144_dma_m_src_axi_agent_read_cp_data),                 //          .data
		.sink_startofpacket (axi_ad9144_dma_m_src_axi_agent_read_cp_startofpacket),        //          .startofpacket
		.sink_endofpacket   (axi_ad9144_dma_m_src_axi_agent_read_cp_endofpacket),          //          .endofpacket
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_003_src_ready),                                        //       src.ready
		.src_valid          (router_003_src_valid),                                        //          .valid
		.src_data           (router_003_src_data),                                         //          .data
		.src_channel        (router_003_src_channel),                                      //          .channel
		.src_startofpacket  (router_003_src_startofpacket),                                //          .startofpacket
		.src_endofpacket    (router_003_src_endofpacket)                                   //          .endofpacket
	);

	system_bd_altera_merlin_router_181_vd7rmzq router_004 (
		.sink_ready         (agent_pipeline_002_source0_ready),                            //      sink.ready
		.sink_valid         (agent_pipeline_002_source0_valid),                            //          .valid
		.sink_data          (agent_pipeline_002_source0_data),                             //          .data
		.sink_startofpacket (agent_pipeline_002_source0_startofpacket),                    //          .startofpacket
		.sink_endofpacket   (agent_pipeline_002_source0_endofpacket),                      //          .endofpacket
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_004_src_ready),                                        //       src.ready
		.src_valid          (router_004_src_valid),                                        //          .valid
		.src_data           (router_004_src_data),                                         //          .data
		.src_channel        (router_004_src_channel),                                      //          .channel
		.src_startofpacket  (router_004_src_startofpacket),                                //          .startofpacket
		.src_endofpacket    (router_004_src_endofpacket)                                   //          .endofpacket
	);

	system_bd_altera_merlin_router_181_se6h4cq router_005 (
		.sink_ready         (agent_pipeline_003_source0_ready),                            //      sink.ready
		.sink_valid         (agent_pipeline_003_source0_valid),                            //          .valid
		.sink_data          (agent_pipeline_003_source0_data),                             //          .data
		.sink_startofpacket (agent_pipeline_003_source0_startofpacket),                    //          .startofpacket
		.sink_endofpacket   (agent_pipeline_003_source0_endofpacket),                      //          .endofpacket
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_005_src_ready),                                        //       src.ready
		.src_valid          (router_005_src_valid),                                        //          .valid
		.src_data           (router_005_src_data),                                         //          .data
		.src_channel        (router_005_src_channel),                                      //          .channel
		.src_startofpacket  (router_005_src_startofpacket),                                //          .startofpacket
		.src_endofpacket    (router_005_src_endofpacket)                                   //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_xc6jyli cmd_demux (
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_src_ready),                                            //      sink.ready
		.sink_channel       (router_src_channel),                                          //          .channel
		.sink_data          (router_src_data),                                             //          .data
		.sink_startofpacket (router_src_startofpacket),                                    //          .startofpacket
		.sink_endofpacket   (router_src_endofpacket),                                      //          .endofpacket
		.sink_valid         (router_src_valid),                                            //          .valid
		.src0_ready         (cmd_demux_src0_ready),                                        //      src0.ready
		.src0_valid         (cmd_demux_src0_valid),                                        //          .valid
		.src0_data          (cmd_demux_src0_data),                                         //          .data
		.src0_channel       (cmd_demux_src0_channel),                                      //          .channel
		.src0_startofpacket (cmd_demux_src0_startofpacket),                                //          .startofpacket
		.src0_endofpacket   (cmd_demux_src0_endofpacket)                                   //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_xc6jyli cmd_demux_001 (
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_001_src_ready),                                        //      sink.ready
		.sink_channel       (router_001_src_channel),                                      //          .channel
		.sink_data          (router_001_src_data),                                         //          .data
		.sink_startofpacket (router_001_src_startofpacket),                                //          .startofpacket
		.sink_endofpacket   (router_001_src_endofpacket),                                  //          .endofpacket
		.sink_valid         (router_001_src_valid),                                        //          .valid
		.src0_ready         (cmd_demux_001_src0_ready),                                    //      src0.ready
		.src0_valid         (cmd_demux_001_src0_valid),                                    //          .valid
		.src0_data          (cmd_demux_001_src0_data),                                     //          .data
		.src0_channel       (cmd_demux_001_src0_channel),                                  //          .channel
		.src0_startofpacket (cmd_demux_001_src0_startofpacket),                            //          .startofpacket
		.src0_endofpacket   (cmd_demux_001_src0_endofpacket)                               //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_xc6jyli cmd_demux_002 (
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_002_src_ready),                                        //      sink.ready
		.sink_channel       (router_002_src_channel),                                      //          .channel
		.sink_data          (router_002_src_data),                                         //          .data
		.sink_startofpacket (router_002_src_startofpacket),                                //          .startofpacket
		.sink_endofpacket   (router_002_src_endofpacket),                                  //          .endofpacket
		.sink_valid         (router_002_src_valid),                                        //          .valid
		.src0_ready         (cmd_demux_002_src0_ready),                                    //      src0.ready
		.src0_valid         (cmd_demux_002_src0_valid),                                    //          .valid
		.src0_data          (cmd_demux_002_src0_data),                                     //          .data
		.src0_channel       (cmd_demux_002_src0_channel),                                  //          .channel
		.src0_startofpacket (cmd_demux_002_src0_startofpacket),                            //          .startofpacket
		.src0_endofpacket   (cmd_demux_002_src0_endofpacket)                               //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_xc6jyli cmd_demux_003 (
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_003_src_ready),                                        //      sink.ready
		.sink_channel       (router_003_src_channel),                                      //          .channel
		.sink_data          (router_003_src_data),                                         //          .data
		.sink_startofpacket (router_003_src_startofpacket),                                //          .startofpacket
		.sink_endofpacket   (router_003_src_endofpacket),                                  //          .endofpacket
		.sink_valid         (router_003_src_valid),                                        //          .valid
		.src0_ready         (cmd_demux_003_src0_ready),                                    //      src0.ready
		.src0_valid         (cmd_demux_003_src0_valid),                                    //          .valid
		.src0_data          (cmd_demux_003_src0_data),                                     //          .data
		.src0_channel       (cmd_demux_003_src0_channel),                                  //          .channel
		.src0_startofpacket (cmd_demux_003_src0_startofpacket),                            //          .startofpacket
		.src0_endofpacket   (cmd_demux_003_src0_endofpacket)                               //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_54dmmfa cmd_mux (
		.clk                 (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset               (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_src_ready),                                           //       src.ready
		.src_valid           (cmd_mux_src_valid),                                           //          .valid
		.src_data            (cmd_mux_src_data),                                            //          .data
		.src_channel         (cmd_mux_src_channel),                                         //          .channel
		.src_startofpacket   (cmd_mux_src_startofpacket),                                   //          .startofpacket
		.src_endofpacket     (cmd_mux_src_endofpacket),                                     //          .endofpacket
		.sink0_ready         (mux_pipeline_source0_ready),                                  //     sink0.ready
		.sink0_valid         (mux_pipeline_source0_valid),                                  //          .valid
		.sink0_channel       (mux_pipeline_source0_channel),                                //          .channel
		.sink0_data          (mux_pipeline_source0_data),                                   //          .data
		.sink0_startofpacket (mux_pipeline_source0_startofpacket),                          //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_source0_endofpacket),                            //          .endofpacket
		.sink1_ready         (mux_pipeline_001_source0_ready),                              //     sink1.ready
		.sink1_valid         (mux_pipeline_001_source0_valid),                              //          .valid
		.sink1_channel       (mux_pipeline_001_source0_channel),                            //          .channel
		.sink1_data          (mux_pipeline_001_source0_data),                               //          .data
		.sink1_startofpacket (mux_pipeline_001_source0_startofpacket),                      //          .startofpacket
		.sink1_endofpacket   (mux_pipeline_001_source0_endofpacket)                         //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_54dmmfa cmd_mux_001 (
		.clk                 (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset               (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_001_src_ready),                                       //       src.ready
		.src_valid           (cmd_mux_001_src_valid),                                       //          .valid
		.src_data            (cmd_mux_001_src_data),                                        //          .data
		.src_channel         (cmd_mux_001_src_channel),                                     //          .channel
		.src_startofpacket   (cmd_mux_001_src_startofpacket),                               //          .startofpacket
		.src_endofpacket     (cmd_mux_001_src_endofpacket),                                 //          .endofpacket
		.sink0_ready         (mux_pipeline_002_source0_ready),                              //     sink0.ready
		.sink0_valid         (mux_pipeline_002_source0_valid),                              //          .valid
		.sink0_channel       (mux_pipeline_002_source0_channel),                            //          .channel
		.sink0_data          (mux_pipeline_002_source0_data),                               //          .data
		.sink0_startofpacket (mux_pipeline_002_source0_startofpacket),                      //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_002_source0_endofpacket),                        //          .endofpacket
		.sink1_ready         (mux_pipeline_003_source0_ready),                              //     sink1.ready
		.sink1_valid         (mux_pipeline_003_source0_valid),                              //          .valid
		.sink1_channel       (mux_pipeline_003_source0_channel),                            //          .channel
		.sink1_data          (mux_pipeline_003_source0_data),                               //          .data
		.sink1_startofpacket (mux_pipeline_003_source0_startofpacket),                      //          .startofpacket
		.sink1_endofpacket   (mux_pipeline_003_source0_endofpacket)                         //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_m5jixwa rsp_demux (
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_004_src_ready),                                        //      sink.ready
		.sink_channel       (router_004_src_channel),                                      //          .channel
		.sink_data          (router_004_src_data),                                         //          .data
		.sink_startofpacket (router_004_src_startofpacket),                                //          .startofpacket
		.sink_endofpacket   (router_004_src_endofpacket),                                  //          .endofpacket
		.sink_valid         (router_004_src_valid),                                        //          .valid
		.src0_ready         (rsp_demux_src0_ready),                                        //      src0.ready
		.src0_valid         (rsp_demux_src0_valid),                                        //          .valid
		.src0_data          (rsp_demux_src0_data),                                         //          .data
		.src0_channel       (rsp_demux_src0_channel),                                      //          .channel
		.src0_startofpacket (rsp_demux_src0_startofpacket),                                //          .startofpacket
		.src0_endofpacket   (rsp_demux_src0_endofpacket),                                  //          .endofpacket
		.src1_ready         (rsp_demux_src1_ready),                                        //      src1.ready
		.src1_valid         (rsp_demux_src1_valid),                                        //          .valid
		.src1_data          (rsp_demux_src1_data),                                         //          .data
		.src1_channel       (rsp_demux_src1_channel),                                      //          .channel
		.src1_startofpacket (rsp_demux_src1_startofpacket),                                //          .startofpacket
		.src1_endofpacket   (rsp_demux_src1_endofpacket)                                   //          .endofpacket
	);

	system_bd_altera_merlin_demultiplexer_181_m5jixwa rsp_demux_001 (
		.clk                (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset              (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_005_src_ready),                                        //      sink.ready
		.sink_channel       (router_005_src_channel),                                      //          .channel
		.sink_data          (router_005_src_data),                                         //          .data
		.sink_startofpacket (router_005_src_startofpacket),                                //          .startofpacket
		.sink_endofpacket   (router_005_src_endofpacket),                                  //          .endofpacket
		.sink_valid         (router_005_src_valid),                                        //          .valid
		.src0_ready         (rsp_demux_001_src0_ready),                                    //      src0.ready
		.src0_valid         (rsp_demux_001_src0_valid),                                    //          .valid
		.src0_data          (rsp_demux_001_src0_data),                                     //          .data
		.src0_channel       (rsp_demux_001_src0_channel),                                  //          .channel
		.src0_startofpacket (rsp_demux_001_src0_startofpacket),                            //          .startofpacket
		.src0_endofpacket   (rsp_demux_001_src0_endofpacket),                              //          .endofpacket
		.src1_ready         (rsp_demux_001_src1_ready),                                    //      src1.ready
		.src1_valid         (rsp_demux_001_src1_valid),                                    //          .valid
		.src1_data          (rsp_demux_001_src1_data),                                     //          .data
		.src1_channel       (rsp_demux_001_src1_channel),                                  //          .channel
		.src1_startofpacket (rsp_demux_001_src1_startofpacket),                            //          .startofpacket
		.src1_endofpacket   (rsp_demux_001_src1_endofpacket)                               //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_6j3q3si rsp_mux (
		.clk                 (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset               (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_src_ready),                                           //       src.ready
		.src_valid           (rsp_mux_src_valid),                                           //          .valid
		.src_data            (rsp_mux_src_data),                                            //          .data
		.src_channel         (rsp_mux_src_channel),                                         //          .channel
		.src_startofpacket   (rsp_mux_src_startofpacket),                                   //          .startofpacket
		.src_endofpacket     (rsp_mux_src_endofpacket),                                     //          .endofpacket
		.sink0_ready         (mux_pipeline_004_source0_ready),                              //     sink0.ready
		.sink0_valid         (mux_pipeline_004_source0_valid),                              //          .valid
		.sink0_channel       (mux_pipeline_004_source0_channel),                            //          .channel
		.sink0_data          (mux_pipeline_004_source0_data),                               //          .data
		.sink0_startofpacket (mux_pipeline_004_source0_startofpacket),                      //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_004_source0_endofpacket)                         //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_6j3q3si rsp_mux_001 (
		.clk                 (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset               (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_001_src_ready),                                       //       src.ready
		.src_valid           (rsp_mux_001_src_valid),                                       //          .valid
		.src_data            (rsp_mux_001_src_data),                                        //          .data
		.src_channel         (rsp_mux_001_src_channel),                                     //          .channel
		.src_startofpacket   (rsp_mux_001_src_startofpacket),                               //          .startofpacket
		.src_endofpacket     (rsp_mux_001_src_endofpacket),                                 //          .endofpacket
		.sink0_ready         (mux_pipeline_005_source0_ready),                              //     sink0.ready
		.sink0_valid         (mux_pipeline_005_source0_valid),                              //          .valid
		.sink0_channel       (mux_pipeline_005_source0_channel),                            //          .channel
		.sink0_data          (mux_pipeline_005_source0_data),                               //          .data
		.sink0_startofpacket (mux_pipeline_005_source0_startofpacket),                      //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_005_source0_endofpacket)                         //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_6j3q3si rsp_mux_002 (
		.clk                 (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset               (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_002_src_ready),                                       //       src.ready
		.src_valid           (rsp_mux_002_src_valid),                                       //          .valid
		.src_data            (rsp_mux_002_src_data),                                        //          .data
		.src_channel         (rsp_mux_002_src_channel),                                     //          .channel
		.src_startofpacket   (rsp_mux_002_src_startofpacket),                               //          .startofpacket
		.src_endofpacket     (rsp_mux_002_src_endofpacket),                                 //          .endofpacket
		.sink0_ready         (mux_pipeline_006_source0_ready),                              //     sink0.ready
		.sink0_valid         (mux_pipeline_006_source0_valid),                              //          .valid
		.sink0_channel       (mux_pipeline_006_source0_channel),                            //          .channel
		.sink0_data          (mux_pipeline_006_source0_data),                               //          .data
		.sink0_startofpacket (mux_pipeline_006_source0_startofpacket),                      //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_006_source0_endofpacket)                         //          .endofpacket
	);

	system_bd_altera_merlin_multiplexer_181_6j3q3si rsp_mux_003 (
		.clk                 (sys_dma_clk_clk_clk),                                         //       clk.clk
		.reset               (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_003_src_ready),                                       //       src.ready
		.src_valid           (rsp_mux_003_src_valid),                                       //          .valid
		.src_data            (rsp_mux_003_src_data),                                        //          .data
		.src_channel         (rsp_mux_003_src_channel),                                     //          .channel
		.src_startofpacket   (rsp_mux_003_src_startofpacket),                               //          .startofpacket
		.src_endofpacket     (rsp_mux_003_src_endofpacket),                                 //          .endofpacket
		.sink0_ready         (mux_pipeline_007_source0_ready),                              //     sink0.ready
		.sink0_valid         (mux_pipeline_007_source0_valid),                              //          .valid
		.sink0_channel       (mux_pipeline_007_source0_channel),                            //          .channel
		.sink0_data          (mux_pipeline_007_source0_data),                               //          .data
		.sink0_startofpacket (mux_pipeline_007_source0_startofpacket),                      //          .startofpacket
		.sink0_endofpacket   (mux_pipeline_007_source0_endofpacket)                         //          .endofpacket
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (228),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (4),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline (
		.clk               (sys_dma_clk_clk_clk),                                         //       cr0.clk
		.reset             (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_src_ready),                                           //     sink0.ready
		.in_valid          (cmd_mux_src_valid),                                           //          .valid
		.in_startofpacket  (cmd_mux_src_startofpacket),                                   //          .startofpacket
		.in_endofpacket    (cmd_mux_src_endofpacket),                                     //          .endofpacket
		.in_data           (cmd_mux_src_data),                                            //          .data
		.in_channel        (cmd_mux_src_channel),                                         //          .channel
		.out_ready         (agent_pipeline_source0_ready),                                //   source0.ready
		.out_valid         (agent_pipeline_source0_valid),                                //          .valid
		.out_startofpacket (agent_pipeline_source0_startofpacket),                        //          .startofpacket
		.out_endofpacket   (agent_pipeline_source0_endofpacket),                          //          .endofpacket
		.out_data          (agent_pipeline_source0_data),                                 //          .data
		.out_channel       (agent_pipeline_source0_channel),                              //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (228),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (4),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_001 (
		.clk               (sys_dma_clk_clk_clk),                                         //       cr0.clk
		.reset             (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_mux_001_src_ready),                                       //     sink0.ready
		.in_valid          (cmd_mux_001_src_valid),                                       //          .valid
		.in_startofpacket  (cmd_mux_001_src_startofpacket),                               //          .startofpacket
		.in_endofpacket    (cmd_mux_001_src_endofpacket),                                 //          .endofpacket
		.in_data           (cmd_mux_001_src_data),                                        //          .data
		.in_channel        (cmd_mux_001_src_channel),                                     //          .channel
		.out_ready         (agent_pipeline_001_source0_ready),                            //   source0.ready
		.out_valid         (agent_pipeline_001_source0_valid),                            //          .valid
		.out_startofpacket (agent_pipeline_001_source0_startofpacket),                    //          .startofpacket
		.out_endofpacket   (agent_pipeline_001_source0_endofpacket),                      //          .endofpacket
		.out_data          (agent_pipeline_001_source0_data),                             //          .data
		.out_channel       (agent_pipeline_001_source0_channel),                          //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (228),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_002 (
		.clk               (sys_dma_clk_clk_clk),                                         //       cr0.clk
		.reset             (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (sys_hps_f2sdram0_data_agent_write_rp_ready),                  //     sink0.ready
		.in_valid          (sys_hps_f2sdram0_data_agent_write_rp_valid),                  //          .valid
		.in_startofpacket  (sys_hps_f2sdram0_data_agent_write_rp_startofpacket),          //          .startofpacket
		.in_endofpacket    (sys_hps_f2sdram0_data_agent_write_rp_endofpacket),            //          .endofpacket
		.in_data           (sys_hps_f2sdram0_data_agent_write_rp_data),                   //          .data
		.out_ready         (agent_pipeline_002_source0_ready),                            //   source0.ready
		.out_valid         (agent_pipeline_002_source0_valid),                            //          .valid
		.out_startofpacket (agent_pipeline_002_source0_startofpacket),                    //          .startofpacket
		.out_endofpacket   (agent_pipeline_002_source0_endofpacket),                      //          .endofpacket
		.out_data          (agent_pipeline_002_source0_data),                             //          .data
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0),                                                        // (terminated)
		.out_channel       (),                                                            // (terminated)
		.in_channel        (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (228),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (0),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) agent_pipeline_003 (
		.clk               (sys_dma_clk_clk_clk),                                         //       cr0.clk
		.reset             (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (sys_hps_f2sdram0_data_agent_read_rp_ready),                   //     sink0.ready
		.in_valid          (sys_hps_f2sdram0_data_agent_read_rp_valid),                   //          .valid
		.in_startofpacket  (sys_hps_f2sdram0_data_agent_read_rp_startofpacket),           //          .startofpacket
		.in_endofpacket    (sys_hps_f2sdram0_data_agent_read_rp_endofpacket),             //          .endofpacket
		.in_data           (sys_hps_f2sdram0_data_agent_read_rp_data),                    //          .data
		.out_ready         (agent_pipeline_003_source0_ready),                            //   source0.ready
		.out_valid         (agent_pipeline_003_source0_valid),                            //          .valid
		.out_startofpacket (agent_pipeline_003_source0_startofpacket),                    //          .startofpacket
		.out_endofpacket   (agent_pipeline_003_source0_endofpacket),                      //          .endofpacket
		.out_data          (agent_pipeline_003_source0_data),                             //          .data
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0),                                                        // (terminated)
		.out_channel       (),                                                            // (terminated)
		.in_channel        (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (228),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (4),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline (
		.clk               (sys_dma_clk_clk_clk),                                         //       cr0.clk
		.reset             (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_src0_ready),                                        //     sink0.ready
		.in_valid          (cmd_demux_src0_valid),                                        //          .valid
		.in_startofpacket  (cmd_demux_src0_startofpacket),                                //          .startofpacket
		.in_endofpacket    (cmd_demux_src0_endofpacket),                                  //          .endofpacket
		.in_data           (cmd_demux_src0_data),                                         //          .data
		.in_channel        (cmd_demux_src0_channel),                                      //          .channel
		.out_ready         (mux_pipeline_source0_ready),                                  //   source0.ready
		.out_valid         (mux_pipeline_source0_valid),                                  //          .valid
		.out_startofpacket (mux_pipeline_source0_startofpacket),                          //          .startofpacket
		.out_endofpacket   (mux_pipeline_source0_endofpacket),                            //          .endofpacket
		.out_data          (mux_pipeline_source0_data),                                   //          .data
		.out_channel       (mux_pipeline_source0_channel),                                //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (228),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (4),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_001 (
		.clk               (sys_dma_clk_clk_clk),                                         //       cr0.clk
		.reset             (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_002_src0_ready),                                    //     sink0.ready
		.in_valid          (cmd_demux_002_src0_valid),                                    //          .valid
		.in_startofpacket  (cmd_demux_002_src0_startofpacket),                            //          .startofpacket
		.in_endofpacket    (cmd_demux_002_src0_endofpacket),                              //          .endofpacket
		.in_data           (cmd_demux_002_src0_data),                                     //          .data
		.in_channel        (cmd_demux_002_src0_channel),                                  //          .channel
		.out_ready         (mux_pipeline_001_source0_ready),                              //   source0.ready
		.out_valid         (mux_pipeline_001_source0_valid),                              //          .valid
		.out_startofpacket (mux_pipeline_001_source0_startofpacket),                      //          .startofpacket
		.out_endofpacket   (mux_pipeline_001_source0_endofpacket),                        //          .endofpacket
		.out_data          (mux_pipeline_001_source0_data),                               //          .data
		.out_channel       (mux_pipeline_001_source0_channel),                            //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (228),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (4),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_002 (
		.clk               (sys_dma_clk_clk_clk),                                         //       cr0.clk
		.reset             (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_001_src0_ready),                                    //     sink0.ready
		.in_valid          (cmd_demux_001_src0_valid),                                    //          .valid
		.in_startofpacket  (cmd_demux_001_src0_startofpacket),                            //          .startofpacket
		.in_endofpacket    (cmd_demux_001_src0_endofpacket),                              //          .endofpacket
		.in_data           (cmd_demux_001_src0_data),                                     //          .data
		.in_channel        (cmd_demux_001_src0_channel),                                  //          .channel
		.out_ready         (mux_pipeline_002_source0_ready),                              //   source0.ready
		.out_valid         (mux_pipeline_002_source0_valid),                              //          .valid
		.out_startofpacket (mux_pipeline_002_source0_startofpacket),                      //          .startofpacket
		.out_endofpacket   (mux_pipeline_002_source0_endofpacket),                        //          .endofpacket
		.out_data          (mux_pipeline_002_source0_data),                               //          .data
		.out_channel       (mux_pipeline_002_source0_channel),                            //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (228),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (4),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_003 (
		.clk               (sys_dma_clk_clk_clk),                                         //       cr0.clk
		.reset             (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (cmd_demux_003_src0_ready),                                    //     sink0.ready
		.in_valid          (cmd_demux_003_src0_valid),                                    //          .valid
		.in_startofpacket  (cmd_demux_003_src0_startofpacket),                            //          .startofpacket
		.in_endofpacket    (cmd_demux_003_src0_endofpacket),                              //          .endofpacket
		.in_data           (cmd_demux_003_src0_data),                                     //          .data
		.in_channel        (cmd_demux_003_src0_channel),                                  //          .channel
		.out_ready         (mux_pipeline_003_source0_ready),                              //   source0.ready
		.out_valid         (mux_pipeline_003_source0_valid),                              //          .valid
		.out_startofpacket (mux_pipeline_003_source0_startofpacket),                      //          .startofpacket
		.out_endofpacket   (mux_pipeline_003_source0_endofpacket),                        //          .endofpacket
		.out_data          (mux_pipeline_003_source0_data),                               //          .data
		.out_channel       (mux_pipeline_003_source0_channel),                            //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (228),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (4),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_004 (
		.clk               (sys_dma_clk_clk_clk),                                         //       cr0.clk
		.reset             (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_src0_ready),                                        //     sink0.ready
		.in_valid          (rsp_demux_src0_valid),                                        //          .valid
		.in_startofpacket  (rsp_demux_src0_startofpacket),                                //          .startofpacket
		.in_endofpacket    (rsp_demux_src0_endofpacket),                                  //          .endofpacket
		.in_data           (rsp_demux_src0_data),                                         //          .data
		.in_channel        (rsp_demux_src0_channel),                                      //          .channel
		.out_ready         (mux_pipeline_004_source0_ready),                              //   source0.ready
		.out_valid         (mux_pipeline_004_source0_valid),                              //          .valid
		.out_startofpacket (mux_pipeline_004_source0_startofpacket),                      //          .startofpacket
		.out_endofpacket   (mux_pipeline_004_source0_endofpacket),                        //          .endofpacket
		.out_data          (mux_pipeline_004_source0_data),                               //          .data
		.out_channel       (mux_pipeline_004_source0_channel),                            //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (228),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (4),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_005 (
		.clk               (sys_dma_clk_clk_clk),                                         //       cr0.clk
		.reset             (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_001_src0_ready),                                    //     sink0.ready
		.in_valid          (rsp_demux_001_src0_valid),                                    //          .valid
		.in_startofpacket  (rsp_demux_001_src0_startofpacket),                            //          .startofpacket
		.in_endofpacket    (rsp_demux_001_src0_endofpacket),                              //          .endofpacket
		.in_data           (rsp_demux_001_src0_data),                                     //          .data
		.in_channel        (rsp_demux_001_src0_channel),                                  //          .channel
		.out_ready         (mux_pipeline_005_source0_ready),                              //   source0.ready
		.out_valid         (mux_pipeline_005_source0_valid),                              //          .valid
		.out_startofpacket (mux_pipeline_005_source0_startofpacket),                      //          .startofpacket
		.out_endofpacket   (mux_pipeline_005_source0_endofpacket),                        //          .endofpacket
		.out_data          (mux_pipeline_005_source0_data),                               //          .data
		.out_channel       (mux_pipeline_005_source0_channel),                            //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (228),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (4),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_006 (
		.clk               (sys_dma_clk_clk_clk),                                         //       cr0.clk
		.reset             (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_src1_ready),                                        //     sink0.ready
		.in_valid          (rsp_demux_src1_valid),                                        //          .valid
		.in_startofpacket  (rsp_demux_src1_startofpacket),                                //          .startofpacket
		.in_endofpacket    (rsp_demux_src1_endofpacket),                                  //          .endofpacket
		.in_data           (rsp_demux_src1_data),                                         //          .data
		.in_channel        (rsp_demux_src1_channel),                                      //          .channel
		.out_ready         (mux_pipeline_006_source0_ready),                              //   source0.ready
		.out_valid         (mux_pipeline_006_source0_valid),                              //          .valid
		.out_startofpacket (mux_pipeline_006_source0_startofpacket),                      //          .startofpacket
		.out_endofpacket   (mux_pipeline_006_source0_endofpacket),                        //          .endofpacket
		.out_data          (mux_pipeline_006_source0_data),                               //          .data
		.out_channel       (mux_pipeline_006_source0_channel),                            //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

	altera_avalon_st_pipeline_stage #(
		.SYMBOLS_PER_BEAT (1),
		.BITS_PER_SYMBOL  (228),
		.USE_PACKETS      (1),
		.USE_EMPTY        (0),
		.EMPTY_WIDTH      (0),
		.CHANNEL_WIDTH    (4),
		.PACKET_WIDTH     (2),
		.ERROR_WIDTH      (0),
		.PIPELINE_READY   (1)
	) mux_pipeline_007 (
		.clk               (sys_dma_clk_clk_clk),                                         //       cr0.clk
		.reset             (axi_ad9680_dma_m_dest_axi_reset_reset_bridge_in_reset_reset), // cr0_reset.reset
		.in_ready          (rsp_demux_001_src1_ready),                                    //     sink0.ready
		.in_valid          (rsp_demux_001_src1_valid),                                    //          .valid
		.in_startofpacket  (rsp_demux_001_src1_startofpacket),                            //          .startofpacket
		.in_endofpacket    (rsp_demux_001_src1_endofpacket),                              //          .endofpacket
		.in_data           (rsp_demux_001_src1_data),                                     //          .data
		.in_channel        (rsp_demux_001_src1_channel),                                  //          .channel
		.out_ready         (mux_pipeline_007_source0_ready),                              //   source0.ready
		.out_valid         (mux_pipeline_007_source0_valid),                              //          .valid
		.out_startofpacket (mux_pipeline_007_source0_startofpacket),                      //          .startofpacket
		.out_endofpacket   (mux_pipeline_007_source0_endofpacket),                        //          .endofpacket
		.out_data          (mux_pipeline_007_source0_data),                               //          .data
		.out_channel       (mux_pipeline_007_source0_channel),                            //          .channel
		.in_empty          (1'b0),                                                        // (terminated)
		.out_empty         (),                                                            // (terminated)
		.out_error         (),                                                            // (terminated)
		.in_error          (1'b0)                                                         // (terminated)
	);

endmodule
